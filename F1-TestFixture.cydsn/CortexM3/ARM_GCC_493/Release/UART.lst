ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_initVar
  19              		.bss
  20              		.type	UART_initVar, %object
  21              		.size	UART_initVar, 1
  22              	UART_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.UART_Start,"ax",%progbits
  25              		.align	2
  26              		.global	UART_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	UART_Start, %function
  30              	UART_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\UART.c"
   1:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC5/UART.c **** * Version 2.50
   4:.\Generated_Source\PSoC5/UART.c **** *
   5:.\Generated_Source\PSoC5/UART.c **** * Description:
   6:.\Generated_Source\PSoC5/UART.c **** *  This file provides all API functionality of the UART component
   7:.\Generated_Source\PSoC5/UART.c **** *
   8:.\Generated_Source\PSoC5/UART.c **** * Note:
   9:.\Generated_Source\PSoC5/UART.c **** *
  10:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART.c **** 
  17:.\Generated_Source\PSoC5/UART.c **** #include "UART.h"
  18:.\Generated_Source\PSoC5/UART.c **** #if (UART_INTERNAL_CLOCK_USED)
  19:.\Generated_Source\PSoC5/UART.c ****     #include "UART_IntClock.h"
  20:.\Generated_Source\PSoC5/UART.c **** #endif /* End UART_INTERNAL_CLOCK_USED */
  21:.\Generated_Source\PSoC5/UART.c **** 
  22:.\Generated_Source\PSoC5/UART.c **** 
  23:.\Generated_Source\PSoC5/UART.c **** /***************************************
  24:.\Generated_Source\PSoC5/UART.c **** * Global data allocation
  25:.\Generated_Source\PSoC5/UART.c **** ***************************************/
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 2


  26:.\Generated_Source\PSoC5/UART.c **** 
  27:.\Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  28:.\Generated_Source\PSoC5/UART.c **** 
  29:.\Generated_Source\PSoC5/UART.c **** #if (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED)
  30:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBuffer[UART_TX_BUFFER_SIZE];
  31:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_txBufferRead = 0u;
  32:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_txBufferWrite = 0u;
  33:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_TX_INTERRUPT_ENABLED && UART_TX_ENABLED) */
  34:.\Generated_Source\PSoC5/UART.c **** 
  35:.\Generated_Source\PSoC5/UART.c **** #if (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED))
  36:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_errorStatus = 0u;
  37:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBuffer[UART_RX_BUFFER_SIZE];
  38:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferRead  = 0u;
  39:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferWrite = 0u;
  40:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferLoopDetect = 0u;
  41:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_rxBufferOverflow   = 0u;
  42:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RXHW_ADDRESS_ENABLED)
  43:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressMode = UART_RX_ADDRESS_MODE;
  44:.\Generated_Source\PSoC5/UART.c ****         volatile uint8 UART_rxAddressDetected = 0u;
  45:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RXHW_ADDRESS_ENABLED) */
  46:.\Generated_Source\PSoC5/UART.c **** #endif /* (UART_RX_INTERRUPT_ENABLED && (UART_RX_ENABLED || UART_HD_ENABLED)) */
  47:.\Generated_Source\PSoC5/UART.c **** 
  48:.\Generated_Source\PSoC5/UART.c **** 
  49:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  50:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  51:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  52:.\Generated_Source\PSoC5/UART.c **** *
  53:.\Generated_Source\PSoC5/UART.c **** * Summary:
  54:.\Generated_Source\PSoC5/UART.c **** *  This is the preferred method to begin component operation.
  55:.\Generated_Source\PSoC5/UART.c **** *  UART_Start() sets the initVar variable, calls the
  56:.\Generated_Source\PSoC5/UART.c **** *  UART_Init() function, and then calls the
  57:.\Generated_Source\PSoC5/UART.c **** *  UART_Enable() function.
  58:.\Generated_Source\PSoC5/UART.c **** *
  59:.\Generated_Source\PSoC5/UART.c **** * Parameters:
  60:.\Generated_Source\PSoC5/UART.c **** *  None.
  61:.\Generated_Source\PSoC5/UART.c **** *
  62:.\Generated_Source\PSoC5/UART.c **** * Return:
  63:.\Generated_Source\PSoC5/UART.c **** *  None.
  64:.\Generated_Source\PSoC5/UART.c **** *
  65:.\Generated_Source\PSoC5/UART.c **** * Global variables:
  66:.\Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
  67:.\Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:.\Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called. This
  69:.\Generated_Source\PSoC5/UART.c **** *  allows for component initialization without re-initialization in all
  70:.\Generated_Source\PSoC5/UART.c **** *  subsequent calls to the UART_Start() routine.
  71:.\Generated_Source\PSoC5/UART.c **** *
  72:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
  73:.\Generated_Source\PSoC5/UART.c **** *  No.
  74:.\Generated_Source\PSoC5/UART.c **** *
  75:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  76:.\Generated_Source\PSoC5/UART.c **** void UART_Start(void) 
  77:.\Generated_Source\PSoC5/UART.c **** {
  33              		.loc 1 77 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 3


  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  78:.\Generated_Source\PSoC5/UART.c ****     /* If not initialized then initialize all required hardware and software */
  79:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  43              		.loc 1 79 0
  44 0004 054B     		ldr	r3, .L3
  45 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  46 0008 002B     		cmp	r3, #0
  47 000a 04D1     		bne	.L2
  80:.\Generated_Source\PSoC5/UART.c ****     {
  81:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
  48              		.loc 1 81 0
  49 000c FFF7FEFF 		bl	UART_Init
  82:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  50              		.loc 1 82 0
  51 0010 024B     		ldr	r3, .L3
  52 0012 0122     		movs	r2, #1
  53 0014 1A70     		strb	r2, [r3]
  54              	.L2:
  83:.\Generated_Source\PSoC5/UART.c ****     }
  84:.\Generated_Source\PSoC5/UART.c **** 
  85:.\Generated_Source\PSoC5/UART.c ****     UART_Enable();
  55              		.loc 1 85 0
  56 0016 FFF7FEFF 		bl	UART_Enable
  86:.\Generated_Source\PSoC5/UART.c **** }
  57              		.loc 1 86 0
  58 001a 80BD     		pop	{r7, pc}
  59              	.L4:
  60              		.align	2
  61              	.L3:
  62 001c 00000000 		.word	UART_initVar
  63              		.cfi_endproc
  64              	.LFE0:
  65              		.size	UART_Start, .-UART_Start
  66              		.section	.text.UART_Init,"ax",%progbits
  67              		.align	2
  68              		.global	UART_Init
  69              		.thumb
  70              		.thumb_func
  71              		.type	UART_Init, %function
  72              	UART_Init:
  73              	.LFB1:
  87:.\Generated_Source\PSoC5/UART.c **** 
  88:.\Generated_Source\PSoC5/UART.c **** 
  89:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  90:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
  91:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  92:.\Generated_Source\PSoC5/UART.c **** *
  93:.\Generated_Source\PSoC5/UART.c **** * Summary:
  94:.\Generated_Source\PSoC5/UART.c **** *  Initializes or restores the component according to the customizer Configure
  95:.\Generated_Source\PSoC5/UART.c **** *  dialog settings. It is not necessary to call UART_Init() because
  96:.\Generated_Source\PSoC5/UART.c **** *  the UART_Start() API calls this function and is the preferred
  97:.\Generated_Source\PSoC5/UART.c **** *  method to begin component operation.
  98:.\Generated_Source\PSoC5/UART.c **** *
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 4


  99:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 100:.\Generated_Source\PSoC5/UART.c **** *  None.
 101:.\Generated_Source\PSoC5/UART.c **** *
 102:.\Generated_Source\PSoC5/UART.c **** * Return:
 103:.\Generated_Source\PSoC5/UART.c **** *  None.
 104:.\Generated_Source\PSoC5/UART.c **** *
 105:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 106:.\Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 107:.\Generated_Source\PSoC5/UART.c **** {
  74              		.loc 1 107 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 0
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78              		@ link register save eliminated.
  79 0000 80B4     		push	{r7}
  80              		.cfi_def_cfa_offset 4
  81              		.cfi_offset 7, -4
  82 0002 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
 108:.\Generated_Source\PSoC5/UART.c ****     #if(UART_RX_ENABLED || UART_HD_ENABLED)
 109:.\Generated_Source\PSoC5/UART.c **** 
 110:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 111:.\Generated_Source\PSoC5/UART.c ****             /* Set RX interrupt vector and priority */
 112:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_RX_VECT_NUM, &UART_RXISR);
 113:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_RX_VECT_NUM, UART_RX_PRIOR_NUM);
 114:.\Generated_Source\PSoC5/UART.c ****             UART_errorStatus = 0u;
 115:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 116:.\Generated_Source\PSoC5/UART.c **** 
 117:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RXHW_ADDRESS_ENABLED)
 118:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddressMode(UART_RX_ADDRESS_MODE);
 119:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress1(UART_RX_HW_ADDRESS1);
 120:.\Generated_Source\PSoC5/UART.c ****             UART_SetRxAddress2(UART_RX_HW_ADDRESS2);
 121:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 122:.\Generated_Source\PSoC5/UART.c **** 
 123:.\Generated_Source\PSoC5/UART.c ****         /* Init Count7 period */
 124:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_PERIOD_REG = UART_RXBITCTR_INIT;
  84              		.loc 1 124 0
  85 0004 044B     		ldr	r3, .L6
  86 0006 7222     		movs	r2, #114
  87 0008 1A70     		strb	r2, [r3]
 125:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial RX interrupt mask */
 126:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = UART_INIT_RX_INTERRUPTS_MASK;
  88              		.loc 1 126 0
  89 000a 044B     		ldr	r3, .L6+4
  90 000c 2022     		movs	r2, #32
  91 000e 1A70     		strb	r2, [r3]
 127:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_RX_ENABLED || UART_HD_ENABLED*/
 128:.\Generated_Source\PSoC5/UART.c **** 
 129:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 130:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 131:.\Generated_Source\PSoC5/UART.c ****             /* Set TX interrupt vector and priority */
 132:.\Generated_Source\PSoC5/UART.c ****             (void) CyIntSetVector(UART_TX_VECT_NUM, &UART_TXISR);
 133:.\Generated_Source\PSoC5/UART.c ****             CyIntSetPriority(UART_TX_VECT_NUM, UART_TX_PRIOR_NUM);
 134:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 135:.\Generated_Source\PSoC5/UART.c **** 
 136:.\Generated_Source\PSoC5/UART.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TXCLKGEN_DP)
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 5


 138:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKGEN_CTR_REG = UART_BIT_CENTER;
 139:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCLKTX_COMPLETE_REG = ((UART_NUMBER_OF_DATA_BITS +
 140:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_COUNT) - 1u;
 141:.\Generated_Source\PSoC5/UART.c ****         #else
 142:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_PERIOD_REG = ((UART_NUMBER_OF_DATA_BITS +
 143:.\Generated_Source\PSoC5/UART.c ****                         UART_NUMBER_OF_START_BIT) * UART_OVER_SAMPLE_8) - 1u;
 144:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 145:.\Generated_Source\PSoC5/UART.c **** 
 146:.\Generated_Source\PSoC5/UART.c ****         /* Configure the Initial TX interrupt mask */
 147:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 148:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_TX_STS_FIFO_EMPTY;
 149:.\Generated_Source\PSoC5/UART.c ****         #else
 150:.\Generated_Source\PSoC5/UART.c ****             UART_TXSTATUS_MASK_REG = UART_INIT_TX_INTERRUPTS_MASK;
 151:.\Generated_Source\PSoC5/UART.c ****         #endif /*End UART_TX_INTERRUPT_ENABLED*/
 152:.\Generated_Source\PSoC5/UART.c **** 
 153:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_TX_ENABLED */
 154:.\Generated_Source\PSoC5/UART.c **** 
 155:.\Generated_Source\PSoC5/UART.c ****     #if(UART_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:.\Generated_Source\PSoC5/UART.c ****         UART_WriteControlRegister( \
 157:.\Generated_Source\PSoC5/UART.c ****             (UART_ReadControlRegister() & (uint8)~UART_CTRL_PARITY_TYPE_MASK) | \
 158:.\Generated_Source\PSoC5/UART.c ****             (uint8)(UART_PARITY_TYPE << UART_CTRL_PARITY_TYPE0_SHIFT) );
 159:.\Generated_Source\PSoC5/UART.c ****     #endif /* End UART_PARITY_TYPE_SW */
 160:.\Generated_Source\PSoC5/UART.c **** }
  92              		.loc 1 160 0
  93 0010 BD46     		mov	sp, r7
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 0012 5DF8047B 		ldr	r7, [sp], #4
  97              		.cfi_restore 7
  98              		.cfi_def_cfa_offset 0
  99 0016 7047     		bx	lr
 100              	.L7:
 101              		.align	2
 102              	.L6:
 103 0018 88640040 		.word	1073767560
 104 001c 8B650040 		.word	1073767819
 105              		.cfi_endproc
 106              	.LFE1:
 107              		.size	UART_Init, .-UART_Init
 108              		.section	.text.UART_Enable,"ax",%progbits
 109              		.align	2
 110              		.global	UART_Enable
 111              		.thumb
 112              		.thumb_func
 113              		.type	UART_Enable, %function
 114              	UART_Enable:
 115              	.LFB2:
 161:.\Generated_Source\PSoC5/UART.c **** 
 162:.\Generated_Source\PSoC5/UART.c **** 
 163:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 164:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Enable
 165:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 166:.\Generated_Source\PSoC5/UART.c **** *
 167:.\Generated_Source\PSoC5/UART.c **** * Summary:
 168:.\Generated_Source\PSoC5/UART.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:.\Generated_Source\PSoC5/UART.c **** *  to call UART_Enable() because the UART_Start() API
 170:.\Generated_Source\PSoC5/UART.c **** *  calls this function, which is the preferred method to begin component
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 6


 171:.\Generated_Source\PSoC5/UART.c **** *  operation.
 172:.\Generated_Source\PSoC5/UART.c **** 
 173:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 174:.\Generated_Source\PSoC5/UART.c **** *  None.
 175:.\Generated_Source\PSoC5/UART.c **** *
 176:.\Generated_Source\PSoC5/UART.c **** * Return:
 177:.\Generated_Source\PSoC5/UART.c **** *  None.
 178:.\Generated_Source\PSoC5/UART.c **** *
 179:.\Generated_Source\PSoC5/UART.c **** * Global Variables:
 180:.\Generated_Source\PSoC5/UART.c **** *  UART_rxAddressDetected - set to initial state (0).
 181:.\Generated_Source\PSoC5/UART.c **** *
 182:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART.c **** void UART_Enable(void) 
 184:.\Generated_Source\PSoC5/UART.c **** {
 116              		.loc 1 184 0
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 8
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120 0000 80B5     		push	{r7, lr}
 121              		.cfi_def_cfa_offset 8
 122              		.cfi_offset 7, -8
 123              		.cfi_offset 14, -4
 124 0002 82B0     		sub	sp, sp, #8
 125              		.cfi_def_cfa_offset 16
 126 0004 00AF     		add	r7, sp, #0
 127              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 186:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 128              		.loc 1 186 0
 129 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 130 000a 0346     		mov	r3, r0
 131 000c FB71     		strb	r3, [r7, #7]
 187:.\Generated_Source\PSoC5/UART.c **** 
 188:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 189:.\Generated_Source\PSoC5/UART.c ****         /* RX Counter (Count7) Enable */
 190:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 132              		.loc 1 190 0
 133 000e 0C4A     		ldr	r2, .L9
 134 0010 0B4B     		ldr	r3, .L9
 135 0012 1B78     		ldrb	r3, [r3]
 136 0014 DBB2     		uxtb	r3, r3
 137 0016 43F02003 		orr	r3, r3, #32
 138 001a DBB2     		uxtb	r3, r3
 139 001c 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/UART.c **** 
 192:.\Generated_Source\PSoC5/UART.c ****         /* Enable the RX Interrupt */
 193:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  |= UART_INT_ENABLE;
 140              		.loc 1 193 0
 141 001e 094A     		ldr	r2, .L9+4
 142 0020 084B     		ldr	r3, .L9+4
 143 0022 1B78     		ldrb	r3, [r3]
 144 0024 DBB2     		uxtb	r3, r3
 145 0026 43F01003 		orr	r3, r3, #16
 146 002a DBB2     		uxtb	r3, r3
 147 002c 1370     		strb	r3, [r2]
 194:.\Generated_Source\PSoC5/UART.c **** 
 195:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 7


 196:.\Generated_Source\PSoC5/UART.c ****             UART_EnableRxInt();
 197:.\Generated_Source\PSoC5/UART.c **** 
 198:.\Generated_Source\PSoC5/UART.c ****             #if (UART_RXHW_ADDRESS_ENABLED)
 199:.\Generated_Source\PSoC5/UART.c ****                 UART_rxAddressDetected = 0u;
 200:.\Generated_Source\PSoC5/UART.c ****             #endif /* (UART_RXHW_ADDRESS_ENABLED) */
 201:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 202:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 203:.\Generated_Source\PSoC5/UART.c **** 
 204:.\Generated_Source\PSoC5/UART.c ****     #if(UART_TX_ENABLED)
 205:.\Generated_Source\PSoC5/UART.c ****         /* TX Counter (DP/Count7) Enable */
 206:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 207:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG |= UART_CNTR_ENABLE;
 208:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_TXCLKGEN_DP */
 209:.\Generated_Source\PSoC5/UART.c **** 
 210:.\Generated_Source\PSoC5/UART.c ****         /* Enable the TX Interrupt */
 211:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG |= UART_INT_ENABLE;
 212:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 213:.\Generated_Source\PSoC5/UART.c ****             UART_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 214:.\Generated_Source\PSoC5/UART.c ****             UART_EnableTxInt();
 215:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 216:.\Generated_Source\PSoC5/UART.c ****      #endif /* (UART_TX_INTERRUPT_ENABLED) */
 217:.\Generated_Source\PSoC5/UART.c **** 
 218:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
 219:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Start();  /* Enable the clock */
 148              		.loc 1 219 0
 149 002e FFF7FEFF 		bl	UART_IntClock_Start
 220:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 221:.\Generated_Source\PSoC5/UART.c **** 
 222:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 150              		.loc 1 222 0
 151 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 152 0034 1846     		mov	r0, r3
 153 0036 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/UART.c **** }
 154              		.loc 1 223 0
 155 003a 0837     		adds	r7, r7, #8
 156              		.cfi_def_cfa_offset 8
 157 003c BD46     		mov	sp, r7
 158              		.cfi_def_cfa_register 13
 159              		@ sp needed
 160 003e 80BD     		pop	{r7, pc}
 161              	.L10:
 162              		.align	2
 163              	.L9:
 164 0040 98640040 		.word	1073767576
 165 0044 9B650040 		.word	1073767835
 166              		.cfi_endproc
 167              	.LFE2:
 168              		.size	UART_Enable, .-UART_Enable
 169              		.section	.text.UART_Stop,"ax",%progbits
 170              		.align	2
 171              		.global	UART_Stop
 172              		.thumb
 173              		.thumb_func
 174              		.type	UART_Stop, %function
 175              	UART_Stop:
 176              	.LFB3:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 8


 224:.\Generated_Source\PSoC5/UART.c **** 
 225:.\Generated_Source\PSoC5/UART.c **** 
 226:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 227:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 228:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 229:.\Generated_Source\PSoC5/UART.c **** *
 230:.\Generated_Source\PSoC5/UART.c **** * Summary:
 231:.\Generated_Source\PSoC5/UART.c **** *  Disables the UART operation.
 232:.\Generated_Source\PSoC5/UART.c **** *
 233:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 234:.\Generated_Source\PSoC5/UART.c **** *  None.
 235:.\Generated_Source\PSoC5/UART.c **** *
 236:.\Generated_Source\PSoC5/UART.c **** * Return:
 237:.\Generated_Source\PSoC5/UART.c **** *  None.
 238:.\Generated_Source\PSoC5/UART.c **** *
 239:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 240:.\Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 241:.\Generated_Source\PSoC5/UART.c **** {
 177              		.loc 1 241 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 8
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181 0000 80B5     		push	{r7, lr}
 182              		.cfi_def_cfa_offset 8
 183              		.cfi_offset 7, -8
 184              		.cfi_offset 14, -4
 185 0002 82B0     		sub	sp, sp, #8
 186              		.cfi_def_cfa_offset 16
 187 0004 00AF     		add	r7, sp, #0
 188              		.cfi_def_cfa_register 7
 242:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 243:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
 189              		.loc 1 243 0
 190 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 191 000a 0346     		mov	r3, r0
 192 000c FB71     		strb	r3, [r7, #7]
 244:.\Generated_Source\PSoC5/UART.c **** 
 245:.\Generated_Source\PSoC5/UART.c ****     /* Write Bit Counter Disable */
 246:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 247:.\Generated_Source\PSoC5/UART.c ****         UART_RXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 193              		.loc 1 247 0
 194 000e 0C4A     		ldr	r2, .L12
 195 0010 0B4B     		ldr	r3, .L12
 196 0012 1B78     		ldrb	r3, [r3]
 197 0014 DBB2     		uxtb	r3, r3
 198 0016 23F02003 		bic	r3, r3, #32
 199 001a DBB2     		uxtb	r3, r3
 200 001c 1370     		strb	r3, [r2]
 248:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 249:.\Generated_Source\PSoC5/UART.c **** 
 250:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 251:.\Generated_Source\PSoC5/UART.c ****         #if(!UART_TXCLKGEN_DP)
 252:.\Generated_Source\PSoC5/UART.c ****             UART_TXBITCTR_CONTROL_REG &= (uint8) ~UART_CNTR_ENABLE;
 253:.\Generated_Source\PSoC5/UART.c ****         #endif /* (!UART_TXCLKGEN_DP) */
 254:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 255:.\Generated_Source\PSoC5/UART.c **** 
 256:.\Generated_Source\PSoC5/UART.c ****     #if (UART_INTERNAL_CLOCK_USED)
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 9


 257:.\Generated_Source\PSoC5/UART.c ****         UART_IntClock_Stop();   /* Disable the clock */
 201              		.loc 1 257 0
 202 001e FFF7FEFF 		bl	UART_IntClock_Stop
 258:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_INTERNAL_CLOCK_USED) */
 259:.\Generated_Source\PSoC5/UART.c **** 
 260:.\Generated_Source\PSoC5/UART.c ****     /* Disable internal interrupt component */
 261:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_ENABLED || UART_HD_ENABLED)
 262:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_ACTL_REG  &= (uint8) ~UART_INT_ENABLE;
 203              		.loc 1 262 0
 204 0022 084A     		ldr	r2, .L12+4
 205 0024 074B     		ldr	r3, .L12+4
 206 0026 1B78     		ldrb	r3, [r3]
 207 0028 DBB2     		uxtb	r3, r3
 208 002a 23F01003 		bic	r3, r3, #16
 209 002e DBB2     		uxtb	r3, r3
 210 0030 1370     		strb	r3, [r2]
 263:.\Generated_Source\PSoC5/UART.c **** 
 264:.\Generated_Source\PSoC5/UART.c ****         #if (UART_RX_INTERRUPT_ENABLED)
 265:.\Generated_Source\PSoC5/UART.c ****             UART_DisableRxInt();
 266:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_RX_INTERRUPT_ENABLED) */
 267:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_ENABLED || UART_HD_ENABLED) */
 268:.\Generated_Source\PSoC5/UART.c **** 
 269:.\Generated_Source\PSoC5/UART.c ****     #if (UART_TX_ENABLED)
 270:.\Generated_Source\PSoC5/UART.c ****         UART_TXSTATUS_ACTL_REG &= (uint8) ~UART_INT_ENABLE;
 271:.\Generated_Source\PSoC5/UART.c **** 
 272:.\Generated_Source\PSoC5/UART.c ****         #if (UART_TX_INTERRUPT_ENABLED)
 273:.\Generated_Source\PSoC5/UART.c ****             UART_DisableTxInt();
 274:.\Generated_Source\PSoC5/UART.c ****         #endif /* (UART_TX_INTERRUPT_ENABLED) */
 275:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_TX_ENABLED) */
 276:.\Generated_Source\PSoC5/UART.c **** 
 277:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 277 0
 212 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 213 0034 1846     		mov	r0, r3
 214 0036 FFF7FEFF 		bl	CyExitCriticalSection
 278:.\Generated_Source\PSoC5/UART.c **** }
 215              		.loc 1 278 0
 216 003a 0837     		adds	r7, r7, #8
 217              		.cfi_def_cfa_offset 8
 218 003c BD46     		mov	sp, r7
 219              		.cfi_def_cfa_register 13
 220              		@ sp needed
 221 003e 80BD     		pop	{r7, pc}
 222              	.L13:
 223              		.align	2
 224              	.L12:
 225 0040 98640040 		.word	1073767576
 226 0044 9B650040 		.word	1073767835
 227              		.cfi_endproc
 228              	.LFE3:
 229              		.size	UART_Stop, .-UART_Stop
 230              		.section	.text.UART_ReadControlRegister,"ax",%progbits
 231              		.align	2
 232              		.global	UART_ReadControlRegister
 233              		.thumb
 234              		.thumb_func
 235              		.type	UART_ReadControlRegister, %function
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 10


 236              	UART_ReadControlRegister:
 237              	.LFB4:
 279:.\Generated_Source\PSoC5/UART.c **** 
 280:.\Generated_Source\PSoC5/UART.c **** 
 281:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 282:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadControlRegister
 283:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 284:.\Generated_Source\PSoC5/UART.c **** *
 285:.\Generated_Source\PSoC5/UART.c **** * Summary:
 286:.\Generated_Source\PSoC5/UART.c **** *  Returns the current value of the control register.
 287:.\Generated_Source\PSoC5/UART.c **** *
 288:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 289:.\Generated_Source\PSoC5/UART.c **** *  None.
 290:.\Generated_Source\PSoC5/UART.c **** *
 291:.\Generated_Source\PSoC5/UART.c **** * Return:
 292:.\Generated_Source\PSoC5/UART.c **** *  Contents of the control register.
 293:.\Generated_Source\PSoC5/UART.c **** *
 294:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 295:.\Generated_Source\PSoC5/UART.c **** uint8 UART_ReadControlRegister(void) 
 296:.\Generated_Source\PSoC5/UART.c **** {
 238              		.loc 1 296 0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 1, uses_anonymous_args = 0
 242              		@ link register save eliminated.
 243 0000 80B4     		push	{r7}
 244              		.cfi_def_cfa_offset 4
 245              		.cfi_offset 7, -4
 246 0002 00AF     		add	r7, sp, #0
 247              		.cfi_def_cfa_register 7
 297:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 298:.\Generated_Source\PSoC5/UART.c ****         return(0u);
 248              		.loc 1 298 0
 249 0004 0023     		movs	r3, #0
 299:.\Generated_Source\PSoC5/UART.c ****     #else
 300:.\Generated_Source\PSoC5/UART.c ****         return(UART_CONTROL_REG);
 301:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 302:.\Generated_Source\PSoC5/UART.c **** }
 250              		.loc 1 302 0
 251 0006 1846     		mov	r0, r3
 252 0008 BD46     		mov	sp, r7
 253              		.cfi_def_cfa_register 13
 254              		@ sp needed
 255 000a 5DF8047B 		ldr	r7, [sp], #4
 256              		.cfi_restore 7
 257              		.cfi_def_cfa_offset 0
 258 000e 7047     		bx	lr
 259              		.cfi_endproc
 260              	.LFE4:
 261              		.size	UART_ReadControlRegister, .-UART_ReadControlRegister
 262              		.section	.text.UART_WriteControlRegister,"ax",%progbits
 263              		.align	2
 264              		.global	UART_WriteControlRegister
 265              		.thumb
 266              		.thumb_func
 267              		.type	UART_WriteControlRegister, %function
 268              	UART_WriteControlRegister:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 11


 269              	.LFB5:
 303:.\Generated_Source\PSoC5/UART.c **** 
 304:.\Generated_Source\PSoC5/UART.c **** 
 305:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 306:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_WriteControlRegister
 307:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 308:.\Generated_Source\PSoC5/UART.c **** *
 309:.\Generated_Source\PSoC5/UART.c **** * Summary:
 310:.\Generated_Source\PSoC5/UART.c **** *  Writes an 8-bit value into the control register
 311:.\Generated_Source\PSoC5/UART.c **** *
 312:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 313:.\Generated_Source\PSoC5/UART.c **** *  control:  control register value
 314:.\Generated_Source\PSoC5/UART.c **** *
 315:.\Generated_Source\PSoC5/UART.c **** * Return:
 316:.\Generated_Source\PSoC5/UART.c **** *  None.
 317:.\Generated_Source\PSoC5/UART.c **** *
 318:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 319:.\Generated_Source\PSoC5/UART.c **** void  UART_WriteControlRegister(uint8 control) 
 320:.\Generated_Source\PSoC5/UART.c **** {
 270              		.loc 1 320 0
 271              		.cfi_startproc
 272              		@ args = 0, pretend = 0, frame = 8
 273              		@ frame_needed = 1, uses_anonymous_args = 0
 274              		@ link register save eliminated.
 275 0000 80B4     		push	{r7}
 276              		.cfi_def_cfa_offset 4
 277              		.cfi_offset 7, -4
 278 0002 83B0     		sub	sp, sp, #12
 279              		.cfi_def_cfa_offset 16
 280 0004 00AF     		add	r7, sp, #0
 281              		.cfi_def_cfa_register 7
 282 0006 0346     		mov	r3, r0
 283 0008 FB71     		strb	r3, [r7, #7]
 321:.\Generated_Source\PSoC5/UART.c ****     #if (UART_CONTROL_REG_REMOVED)
 322:.\Generated_Source\PSoC5/UART.c ****         if(0u != control)
 323:.\Generated_Source\PSoC5/UART.c ****         {
 324:.\Generated_Source\PSoC5/UART.c ****             /* Suppress compiler warning */
 325:.\Generated_Source\PSoC5/UART.c ****         }
 326:.\Generated_Source\PSoC5/UART.c ****     #else
 327:.\Generated_Source\PSoC5/UART.c ****        UART_CONTROL_REG = control;
 328:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_CONTROL_REG_REMOVED) */
 329:.\Generated_Source\PSoC5/UART.c **** }
 284              		.loc 1 329 0
 285 000a 0C37     		adds	r7, r7, #12
 286              		.cfi_def_cfa_offset 4
 287 000c BD46     		mov	sp, r7
 288              		.cfi_def_cfa_register 13
 289              		@ sp needed
 290 000e 5DF8047B 		ldr	r7, [sp], #4
 291              		.cfi_restore 7
 292              		.cfi_def_cfa_offset 0
 293 0012 7047     		bx	lr
 294              		.cfi_endproc
 295              	.LFE5:
 296              		.size	UART_WriteControlRegister, .-UART_WriteControlRegister
 297              		.section	.text.UART_SetRxInterruptMode,"ax",%progbits
 298              		.align	2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 12


 299              		.global	UART_SetRxInterruptMode
 300              		.thumb
 301              		.thumb_func
 302              		.type	UART_SetRxInterruptMode, %function
 303              	UART_SetRxInterruptMode:
 304              	.LFB6:
 330:.\Generated_Source\PSoC5/UART.c **** 
 331:.\Generated_Source\PSoC5/UART.c **** 
 332:.\Generated_Source\PSoC5/UART.c **** #if(UART_RX_ENABLED || UART_HD_ENABLED)
 333:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 334:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxInterruptMode
 335:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 336:.\Generated_Source\PSoC5/UART.c ****     *
 337:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 338:.\Generated_Source\PSoC5/UART.c ****     *  Configures the RX interrupt sources enabled.
 339:.\Generated_Source\PSoC5/UART.c ****     *
 340:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 341:.\Generated_Source\PSoC5/UART.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:.\Generated_Source\PSoC5/UART.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:.\Generated_Source\PSoC5/UART.c ****     *  combination of status register bit-masks shown below:
 344:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_BREAK            Interrupt on break.
 348:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_OVERRUN          Interrupt on overrun error.
 349:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:.\Generated_Source\PSoC5/UART.c ****     *      UART_RX_STS_MRKSPC           Interrupt on address detect.
 351:.\Generated_Source\PSoC5/UART.c ****     *
 352:.\Generated_Source\PSoC5/UART.c ****     * Return:
 353:.\Generated_Source\PSoC5/UART.c ****     *  None.
 354:.\Generated_Source\PSoC5/UART.c ****     *
 355:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 356:.\Generated_Source\PSoC5/UART.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:.\Generated_Source\PSoC5/UART.c ****     *
 358:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 359:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxInterruptMode(uint8 intSrc) 
 360:.\Generated_Source\PSoC5/UART.c ****     {
 305              		.loc 1 360 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 8
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309              		@ link register save eliminated.
 310 0000 80B4     		push	{r7}
 311              		.cfi_def_cfa_offset 4
 312              		.cfi_offset 7, -4
 313 0002 83B0     		sub	sp, sp, #12
 314              		.cfi_def_cfa_offset 16
 315 0004 00AF     		add	r7, sp, #0
 316              		.cfi_def_cfa_register 7
 317 0006 0346     		mov	r3, r0
 318 0008 FB71     		strb	r3, [r7, #7]
 361:.\Generated_Source\PSoC5/UART.c ****         UART_RXSTATUS_MASK_REG  = intSrc;
 319              		.loc 1 361 0
 320 000a 044A     		ldr	r2, .L18
 321 000c FB79     		ldrb	r3, [r7, #7]
 322 000e 1370     		strb	r3, [r2]
 362:.\Generated_Source\PSoC5/UART.c ****     }
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 13


 323              		.loc 1 362 0
 324 0010 0C37     		adds	r7, r7, #12
 325              		.cfi_def_cfa_offset 4
 326 0012 BD46     		mov	sp, r7
 327              		.cfi_def_cfa_register 13
 328              		@ sp needed
 329 0014 5DF8047B 		ldr	r7, [sp], #4
 330              		.cfi_restore 7
 331              		.cfi_def_cfa_offset 0
 332 0018 7047     		bx	lr
 333              	.L19:
 334 001a 00BF     		.align	2
 335              	.L18:
 336 001c 8B650040 		.word	1073767819
 337              		.cfi_endproc
 338              	.LFE6:
 339              		.size	UART_SetRxInterruptMode, .-UART_SetRxInterruptMode
 340              		.section	.text.UART_ReadRxData,"ax",%progbits
 341              		.align	2
 342              		.global	UART_ReadRxData
 343              		.thumb
 344              		.thumb_func
 345              		.type	UART_ReadRxData, %function
 346              	UART_ReadRxData:
 347              	.LFB7:
 363:.\Generated_Source\PSoC5/UART.c **** 
 364:.\Generated_Source\PSoC5/UART.c **** 
 365:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 366:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxData
 367:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 368:.\Generated_Source\PSoC5/UART.c ****     *
 369:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 370:.\Generated_Source\PSoC5/UART.c ****     *  Returns the next byte of received data. This function returns data without
 371:.\Generated_Source\PSoC5/UART.c ****     *  checking the status. You must check the status separately.
 372:.\Generated_Source\PSoC5/UART.c ****     *
 373:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 374:.\Generated_Source\PSoC5/UART.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART.c ****     *
 376:.\Generated_Source\PSoC5/UART.c ****     * Return:
 377:.\Generated_Source\PSoC5/UART.c ****     *  Received data from RX register
 378:.\Generated_Source\PSoC5/UART.c ****     *
 379:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 380:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 381:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 382:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 383:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 384:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 385:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 386:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 387:.\Generated_Source\PSoC5/UART.c ****     *
 388:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 389:.\Generated_Source\PSoC5/UART.c ****     *  No.
 390:.\Generated_Source\PSoC5/UART.c ****     *
 391:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 392:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxData(void) 
 393:.\Generated_Source\PSoC5/UART.c ****     {
 348              		.loc 1 393 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 14


 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 8
 351              		@ frame_needed = 1, uses_anonymous_args = 0
 352              		@ link register save eliminated.
 353 0000 80B4     		push	{r7}
 354              		.cfi_def_cfa_offset 4
 355              		.cfi_offset 7, -4
 356 0002 83B0     		sub	sp, sp, #12
 357              		.cfi_def_cfa_offset 16
 358 0004 00AF     		add	r7, sp, #0
 359              		.cfi_def_cfa_register 7
 394:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData;
 395:.\Generated_Source\PSoC5/UART.c **** 
 396:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 397:.\Generated_Source\PSoC5/UART.c **** 
 398:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 399:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 400:.\Generated_Source\PSoC5/UART.c **** 
 401:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 402:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 403:.\Generated_Source\PSoC5/UART.c **** 
 404:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 405:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 406:.\Generated_Source\PSoC5/UART.c **** 
 407:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:.\Generated_Source\PSoC5/UART.c ****         {
 409:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 410:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 411:.\Generated_Source\PSoC5/UART.c **** 
 412:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 413:.\Generated_Source\PSoC5/UART.c ****             {
 414:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 415:.\Generated_Source\PSoC5/UART.c ****             }
 416:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 417:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 418:.\Generated_Source\PSoC5/UART.c **** 
 419:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 420:.\Generated_Source\PSoC5/UART.c ****             {
 421:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 422:.\Generated_Source\PSoC5/UART.c ****                 #if ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u))
 423:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 425:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 426:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:.\Generated_Source\PSoC5/UART.c ****                             *  configuration set, otherwise
 428:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:.\Generated_Source\PSoC5/UART.c ****                             */
 430:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 431:.\Generated_Source\PSoC5/UART.c ****                         }
 432:.\Generated_Source\PSoC5/UART.c ****                     #else
 433:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG  |= UART_RX_STS_FIFO_NOTEMPTY;
 434:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 435:.\Generated_Source\PSoC5/UART.c ****                 #endif /* ((UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u)) */
 436:.\Generated_Source\PSoC5/UART.c ****             }
 437:.\Generated_Source\PSoC5/UART.c ****         }
 438:.\Generated_Source\PSoC5/UART.c ****         else
 439:.\Generated_Source\PSoC5/UART.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 15


 440:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 441:.\Generated_Source\PSoC5/UART.c ****         }
 442:.\Generated_Source\PSoC5/UART.c **** 
 443:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 444:.\Generated_Source\PSoC5/UART.c **** 
 445:.\Generated_Source\PSoC5/UART.c ****     #else
 446:.\Generated_Source\PSoC5/UART.c **** 
 447:.\Generated_Source\PSoC5/UART.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:.\Generated_Source\PSoC5/UART.c ****         rxData = UART_RXDATA_REG;
 360              		.loc 1 448 0
 361 0006 054B     		ldr	r3, .L22
 362 0008 1B78     		ldrb	r3, [r3]
 363 000a FB71     		strb	r3, [r7, #7]
 449:.\Generated_Source\PSoC5/UART.c **** 
 450:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 451:.\Generated_Source\PSoC5/UART.c **** 
 452:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 364              		.loc 1 452 0
 365 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:.\Generated_Source\PSoC5/UART.c ****     }
 366              		.loc 1 453 0
 367 000e 1846     		mov	r0, r3
 368 0010 0C37     		adds	r7, r7, #12
 369              		.cfi_def_cfa_offset 4
 370 0012 BD46     		mov	sp, r7
 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 0014 5DF8047B 		ldr	r7, [sp], #4
 374              		.cfi_restore 7
 375              		.cfi_def_cfa_offset 0
 376 0018 7047     		bx	lr
 377              	.L23:
 378 001a 00BF     		.align	2
 379              	.L22:
 380 001c 4B650040 		.word	1073767755
 381              		.cfi_endproc
 382              	.LFE7:
 383              		.size	UART_ReadRxData, .-UART_ReadRxData
 384              		.section	.text.UART_ReadRxStatus,"ax",%progbits
 385              		.align	2
 386              		.global	UART_ReadRxStatus
 387              		.thumb
 388              		.thumb_func
 389              		.type	UART_ReadRxStatus, %function
 390              	UART_ReadRxStatus:
 391              	.LFB8:
 454:.\Generated_Source\PSoC5/UART.c **** 
 455:.\Generated_Source\PSoC5/UART.c **** 
 456:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 457:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ReadRxStatus
 458:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 459:.\Generated_Source\PSoC5/UART.c ****     *
 460:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 461:.\Generated_Source\PSoC5/UART.c ****     *  Returns the current state of the receiver status register and the software
 462:.\Generated_Source\PSoC5/UART.c ****     *  buffer overflow status.
 463:.\Generated_Source\PSoC5/UART.c ****     *
 464:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 16


 465:.\Generated_Source\PSoC5/UART.c ****     *  None.
 466:.\Generated_Source\PSoC5/UART.c ****     *
 467:.\Generated_Source\PSoC5/UART.c ****     * Return:
 468:.\Generated_Source\PSoC5/UART.c ****     *  Current state of the status register.
 469:.\Generated_Source\PSoC5/UART.c ****     *
 470:.\Generated_Source\PSoC5/UART.c ****     * Side Effect:
 471:.\Generated_Source\PSoC5/UART.c ****     *  All status register bits are clear-on-read except
 472:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY.
 473:.\Generated_Source\PSoC5/UART.c ****     *  UART_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:.\Generated_Source\PSoC5/UART.c ****     *  register read.
 475:.\Generated_Source\PSoC5/UART.c ****     *
 476:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 477:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - used to indicate overload condition.
 478:.\Generated_Source\PSoC5/UART.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:.\Generated_Source\PSoC5/UART.c ****     *   UART_rxBufferRead to write new data. This condition returned
 480:.\Generated_Source\PSoC5/UART.c ****     *   and cleared to zero by this API as an
 481:.\Generated_Source\PSoC5/UART.c ****     *   UART_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:.\Generated_Source\PSoC5/UART.c ****     *   bits.
 483:.\Generated_Source\PSoC5/UART.c ****     *
 484:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 485:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_ReadRxStatus(void) 
 486:.\Generated_Source\PSoC5/UART.c ****     {
 392              		.loc 1 486 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 8
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 83B0     		sub	sp, sp, #12
 401              		.cfi_def_cfa_offset 16
 402 0004 00AF     		add	r7, sp, #0
 403              		.cfi_def_cfa_register 7
 487:.\Generated_Source\PSoC5/UART.c ****         uint8 status;
 488:.\Generated_Source\PSoC5/UART.c **** 
 489:.\Generated_Source\PSoC5/UART.c ****         status = UART_RXSTATUS_REG & UART_RX_HW_MASK;
 404              		.loc 1 489 0
 405 0006 064B     		ldr	r3, .L26
 406 0008 1B78     		ldrb	r3, [r3]
 407 000a DBB2     		uxtb	r3, r3
 408 000c 03F07F03 		and	r3, r3, #127
 409 0010 FB71     		strb	r3, [r7, #7]
 490:.\Generated_Source\PSoC5/UART.c **** 
 491:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 492:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferOverflow != 0u)
 493:.\Generated_Source\PSoC5/UART.c ****         {
 494:.\Generated_Source\PSoC5/UART.c ****             status |= UART_RX_STS_SOFT_BUFF_OVER;
 495:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferOverflow = 0u;
 496:.\Generated_Source\PSoC5/UART.c ****         }
 497:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 498:.\Generated_Source\PSoC5/UART.c **** 
 499:.\Generated_Source\PSoC5/UART.c ****         return(status);
 410              		.loc 1 499 0
 411 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:.\Generated_Source\PSoC5/UART.c ****     }
 412              		.loc 1 500 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 17


 413 0014 1846     		mov	r0, r3
 414 0016 0C37     		adds	r7, r7, #12
 415              		.cfi_def_cfa_offset 4
 416 0018 BD46     		mov	sp, r7
 417              		.cfi_def_cfa_register 13
 418              		@ sp needed
 419 001a 5DF8047B 		ldr	r7, [sp], #4
 420              		.cfi_restore 7
 421              		.cfi_def_cfa_offset 0
 422 001e 7047     		bx	lr
 423              	.L27:
 424              		.align	2
 425              	.L26:
 426 0020 6B650040 		.word	1073767787
 427              		.cfi_endproc
 428              	.LFE8:
 429              		.size	UART_ReadRxStatus, .-UART_ReadRxStatus
 430              		.section	.text.UART_GetChar,"ax",%progbits
 431              		.align	2
 432              		.global	UART_GetChar
 433              		.thumb
 434              		.thumb_func
 435              		.type	UART_GetChar, %function
 436              	UART_GetChar:
 437              	.LFB9:
 501:.\Generated_Source\PSoC5/UART.c **** 
 502:.\Generated_Source\PSoC5/UART.c **** 
 503:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 504:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetChar
 505:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 506:.\Generated_Source\PSoC5/UART.c ****     *
 507:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 508:.\Generated_Source\PSoC5/UART.c ****     *  Returns the last received byte of data. UART_GetChar() is
 509:.\Generated_Source\PSoC5/UART.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:.\Generated_Source\PSoC5/UART.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:.\Generated_Source\PSoC5/UART.c ****     *
 512:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 513:.\Generated_Source\PSoC5/UART.c ****     *  None.
 514:.\Generated_Source\PSoC5/UART.c ****     *
 515:.\Generated_Source\PSoC5/UART.c ****     * Return:
 516:.\Generated_Source\PSoC5/UART.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:.\Generated_Source\PSoC5/UART.c ****     *  A returned zero signifies an error condition or no data available.
 518:.\Generated_Source\PSoC5/UART.c ****     *
 519:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 520:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBuffer - RAM buffer pointer for save received data.
 521:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cyclic index for write to rxBuffer,
 522:.\Generated_Source\PSoC5/UART.c ****     *     checked to identify new data.
 523:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cyclic index for read from rxBuffer,
 524:.\Generated_Source\PSoC5/UART.c ****     *     incremented after each byte has been read from buffer.
 525:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared if loop condition was detected
 526:.\Generated_Source\PSoC5/UART.c ****     *     in RX ISR.
 527:.\Generated_Source\PSoC5/UART.c ****     *
 528:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 529:.\Generated_Source\PSoC5/UART.c ****     *  No.
 530:.\Generated_Source\PSoC5/UART.c ****     *
 531:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 532:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetChar(void) 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 18


 533:.\Generated_Source\PSoC5/UART.c ****     {
 438              		.loc 1 533 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 8
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442              		@ link register save eliminated.
 443 0000 80B4     		push	{r7}
 444              		.cfi_def_cfa_offset 4
 445              		.cfi_offset 7, -4
 446 0002 83B0     		sub	sp, sp, #12
 447              		.cfi_def_cfa_offset 16
 448 0004 00AF     		add	r7, sp, #0
 449              		.cfi_def_cfa_register 7
 534:.\Generated_Source\PSoC5/UART.c ****         uint8 rxData = 0u;
 450              		.loc 1 534 0
 451 0006 0023     		movs	r3, #0
 452 0008 FB71     		strb	r3, [r7, #7]
 535:.\Generated_Source\PSoC5/UART.c ****         uint8 rxStatus;
 536:.\Generated_Source\PSoC5/UART.c **** 
 537:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 538:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferRead;
 539:.\Generated_Source\PSoC5/UART.c ****         uint8 locRxBufferWrite;
 540:.\Generated_Source\PSoC5/UART.c **** 
 541:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 542:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 543:.\Generated_Source\PSoC5/UART.c **** 
 544:.\Generated_Source\PSoC5/UART.c ****         locRxBufferRead  = UART_rxBufferRead;
 545:.\Generated_Source\PSoC5/UART.c ****         locRxBufferWrite = UART_rxBufferWrite;
 546:.\Generated_Source\PSoC5/UART.c **** 
 547:.\Generated_Source\PSoC5/UART.c ****         if( (UART_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:.\Generated_Source\PSoC5/UART.c ****         {
 549:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_rxBuffer[locRxBufferRead];
 550:.\Generated_Source\PSoC5/UART.c ****             locRxBufferRead++;
 551:.\Generated_Source\PSoC5/UART.c ****             if(locRxBufferRead >= UART_RX_BUFFER_SIZE)
 552:.\Generated_Source\PSoC5/UART.c ****             {
 553:.\Generated_Source\PSoC5/UART.c ****                 locRxBufferRead = 0u;
 554:.\Generated_Source\PSoC5/UART.c ****             }
 555:.\Generated_Source\PSoC5/UART.c ****             /* Update the real pointer */
 556:.\Generated_Source\PSoC5/UART.c ****             UART_rxBufferRead = locRxBufferRead;
 557:.\Generated_Source\PSoC5/UART.c **** 
 558:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 559:.\Generated_Source\PSoC5/UART.c ****             {
 560:.\Generated_Source\PSoC5/UART.c ****                 UART_rxBufferLoopDetect = 0u;
 561:.\Generated_Source\PSoC5/UART.c ****                 #if( (UART_RX_INTERRUPT_ENABLED) && (UART_FLOW_CONTROL != 0u) )
 562:.\Generated_Source\PSoC5/UART.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:.\Generated_Source\PSoC5/UART.c ****                     #if( UART_HD_ENABLED )
 564:.\Generated_Source\PSoC5/UART.c ****                         if((UART_CONTROL_REG & UART_CTRL_HD_SEND) == 0u)
 565:.\Generated_Source\PSoC5/UART.c ****                         {   /* In Half duplex mode return RX mask only if
 566:.\Generated_Source\PSoC5/UART.c ****                             *  RX configuration set, otherwise
 567:.\Generated_Source\PSoC5/UART.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:.\Generated_Source\PSoC5/UART.c ****                             */
 569:.\Generated_Source\PSoC5/UART.c ****                             UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 570:.\Generated_Source\PSoC5/UART.c ****                         }
 571:.\Generated_Source\PSoC5/UART.c ****                     #else
 572:.\Generated_Source\PSoC5/UART.c ****                         UART_RXSTATUS_MASK_REG |= UART_RX_STS_FIFO_NOTEMPTY;
 573:.\Generated_Source\PSoC5/UART.c ****                     #endif /* end UART_HD_ENABLED */
 574:.\Generated_Source\PSoC5/UART.c ****                 #endif /* UART_RX_INTERRUPT_ENABLED and Hardware flow control*/
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 19


 575:.\Generated_Source\PSoC5/UART.c ****             }
 576:.\Generated_Source\PSoC5/UART.c **** 
 577:.\Generated_Source\PSoC5/UART.c ****         }
 578:.\Generated_Source\PSoC5/UART.c ****         else
 579:.\Generated_Source\PSoC5/UART.c ****         {   rxStatus = UART_RXSTATUS_REG;
 580:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:.\Generated_Source\PSoC5/UART.c ****             {   /* Read received data from FIFO */
 582:.\Generated_Source\PSoC5/UART.c ****                 rxData = UART_RXDATA_REG;
 583:.\Generated_Source\PSoC5/UART.c ****                 /*Check status on error*/
 584:.\Generated_Source\PSoC5/UART.c ****                 if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 585:.\Generated_Source\PSoC5/UART.c ****                                 UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 586:.\Generated_Source\PSoC5/UART.c ****                 {
 587:.\Generated_Source\PSoC5/UART.c ****                     rxData = 0u;
 588:.\Generated_Source\PSoC5/UART.c ****                 }
 589:.\Generated_Source\PSoC5/UART.c ****             }
 590:.\Generated_Source\PSoC5/UART.c ****         }
 591:.\Generated_Source\PSoC5/UART.c **** 
 592:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 593:.\Generated_Source\PSoC5/UART.c **** 
 594:.\Generated_Source\PSoC5/UART.c ****     #else
 595:.\Generated_Source\PSoC5/UART.c **** 
 596:.\Generated_Source\PSoC5/UART.c ****         rxStatus =UART_RXSTATUS_REG;
 453              		.loc 1 596 0
 454 000a 0C4B     		ldr	r3, .L31
 455 000c 1B78     		ldrb	r3, [r3]
 456 000e BB71     		strb	r3, [r7, #6]
 597:.\Generated_Source\PSoC5/UART.c ****         if((rxStatus & UART_RX_STS_FIFO_NOTEMPTY) != 0u)
 457              		.loc 1 597 0
 458 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 459 0012 03F02003 		and	r3, r3, #32
 460 0016 002B     		cmp	r3, #0
 461 0018 09D0     		beq	.L29
 598:.\Generated_Source\PSoC5/UART.c ****         {
 599:.\Generated_Source\PSoC5/UART.c ****             /* Read received data from FIFO */
 600:.\Generated_Source\PSoC5/UART.c ****             rxData = UART_RXDATA_REG;
 462              		.loc 1 600 0
 463 001a 094B     		ldr	r3, .L31+4
 464 001c 1B78     		ldrb	r3, [r3]
 465 001e FB71     		strb	r3, [r7, #7]
 601:.\Generated_Source\PSoC5/UART.c **** 
 602:.\Generated_Source\PSoC5/UART.c ****             /*Check status on error*/
 603:.\Generated_Source\PSoC5/UART.c ****             if((rxStatus & (UART_RX_STS_BREAK | UART_RX_STS_PAR_ERROR |
 604:.\Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 466              		.loc 1 604 0
 467 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 468 0022 03F01E03 		and	r3, r3, #30
 603:.\Generated_Source\PSoC5/UART.c ****                             UART_RX_STS_STOP_ERROR | UART_RX_STS_OVERRUN)) != 0u)
 469              		.loc 1 603 0
 470 0026 002B     		cmp	r3, #0
 471 0028 01D0     		beq	.L29
 605:.\Generated_Source\PSoC5/UART.c ****             {
 606:.\Generated_Source\PSoC5/UART.c ****                 rxData = 0u;
 472              		.loc 1 606 0
 473 002a 0023     		movs	r3, #0
 474 002c FB71     		strb	r3, [r7, #7]
 475              	.L29:
 607:.\Generated_Source\PSoC5/UART.c ****             }
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 20


 608:.\Generated_Source\PSoC5/UART.c ****         }
 609:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 610:.\Generated_Source\PSoC5/UART.c **** 
 611:.\Generated_Source\PSoC5/UART.c ****         return(rxData);
 476              		.loc 1 611 0
 477 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:.\Generated_Source\PSoC5/UART.c ****     }
 478              		.loc 1 612 0
 479 0030 1846     		mov	r0, r3
 480 0032 0C37     		adds	r7, r7, #12
 481              		.cfi_def_cfa_offset 4
 482 0034 BD46     		mov	sp, r7
 483              		.cfi_def_cfa_register 13
 484              		@ sp needed
 485 0036 5DF8047B 		ldr	r7, [sp], #4
 486              		.cfi_restore 7
 487              		.cfi_def_cfa_offset 0
 488 003a 7047     		bx	lr
 489              	.L32:
 490              		.align	2
 491              	.L31:
 492 003c 6B650040 		.word	1073767787
 493 0040 4B650040 		.word	1073767755
 494              		.cfi_endproc
 495              	.LFE9:
 496              		.size	UART_GetChar, .-UART_GetChar
 497              		.section	.text.UART_GetByte,"ax",%progbits
 498              		.align	2
 499              		.global	UART_GetByte
 500              		.thumb
 501              		.thumb_func
 502              		.type	UART_GetByte, %function
 503              	UART_GetByte:
 504              	.LFB10:
 613:.\Generated_Source\PSoC5/UART.c **** 
 614:.\Generated_Source\PSoC5/UART.c **** 
 615:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 616:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetByte
 617:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 618:.\Generated_Source\PSoC5/UART.c ****     *
 619:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 620:.\Generated_Source\PSoC5/UART.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:.\Generated_Source\PSoC5/UART.c ****     *  condition.
 622:.\Generated_Source\PSoC5/UART.c ****     *
 623:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 624:.\Generated_Source\PSoC5/UART.c ****     *  None.
 625:.\Generated_Source\PSoC5/UART.c ****     *
 626:.\Generated_Source\PSoC5/UART.c ****     * Return:
 627:.\Generated_Source\PSoC5/UART.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:.\Generated_Source\PSoC5/UART.c ****     *  an error has occurred.
 629:.\Generated_Source\PSoC5/UART.c ****     *
 630:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 631:.\Generated_Source\PSoC5/UART.c ****     *  No.
 632:.\Generated_Source\PSoC5/UART.c ****     *
 633:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 634:.\Generated_Source\PSoC5/UART.c ****     uint16 UART_GetByte(void) 
 635:.\Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 21


 505              		.loc 1 635 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 1, uses_anonymous_args = 0
 509 0000 98B5     		push	{r3, r4, r7, lr}
 510              		.cfi_def_cfa_offset 16
 511              		.cfi_offset 3, -16
 512              		.cfi_offset 4, -12
 513              		.cfi_offset 7, -8
 514              		.cfi_offset 14, -4
 515 0002 00AF     		add	r7, sp, #0
 516              		.cfi_def_cfa_register 7
 636:.\Generated_Source\PSoC5/UART.c ****         
 637:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 638:.\Generated_Source\PSoC5/UART.c ****         uint16 locErrorStatus;
 639:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 640:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 641:.\Generated_Source\PSoC5/UART.c ****         locErrorStatus = (uint16)UART_errorStatus;
 642:.\Generated_Source\PSoC5/UART.c ****         UART_errorStatus = 0u;
 643:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 644:.\Generated_Source\PSoC5/UART.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_ReadRxData() );
 645:.\Generated_Source\PSoC5/UART.c ****     #else
 646:.\Generated_Source\PSoC5/UART.c ****         return ( ((uint16)UART_ReadRxStatus() << 8u) | UART_ReadRxData() );
 517              		.loc 1 646 0
 518 0004 FFF7FEFF 		bl	UART_ReadRxStatus
 519 0008 0346     		mov	r3, r0
 520 000a 1B02     		lsls	r3, r3, #8
 521 000c 9CB2     		uxth	r4, r3
 522 000e FFF7FEFF 		bl	UART_ReadRxData
 523 0012 0346     		mov	r3, r0
 524 0014 9BB2     		uxth	r3, r3
 525 0016 2246     		mov	r2, r4	@ movhi
 526 0018 1343     		orrs	r3, r3, r2
 527 001a 9BB2     		uxth	r3, r3
 528 001c 9BB2     		uxth	r3, r3
 647:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_RX_INTERRUPT_ENABLED */
 648:.\Generated_Source\PSoC5/UART.c ****         
 649:.\Generated_Source\PSoC5/UART.c ****     }
 529              		.loc 1 649 0
 530 001e 1846     		mov	r0, r3
 531 0020 98BD     		pop	{r3, r4, r7, pc}
 532              		.cfi_endproc
 533              	.LFE10:
 534              		.size	UART_GetByte, .-UART_GetByte
 535 0022 00BF     		.section	.text.UART_GetRxBufferSize,"ax",%progbits
 536              		.align	2
 537              		.global	UART_GetRxBufferSize
 538              		.thumb
 539              		.thumb_func
 540              		.type	UART_GetRxBufferSize, %function
 541              	UART_GetRxBufferSize:
 542              	.LFB11:
 650:.\Generated_Source\PSoC5/UART.c **** 
 651:.\Generated_Source\PSoC5/UART.c **** 
 652:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 653:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_GetRxBufferSize
 654:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 22


 655:.\Generated_Source\PSoC5/UART.c ****     *
 656:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 657:.\Generated_Source\PSoC5/UART.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:.\Generated_Source\PSoC5/UART.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:.\Generated_Source\PSoC5/UART.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:.\Generated_Source\PSoC5/UART.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:.\Generated_Source\PSoC5/UART.c ****     *    account.
 663:.\Generated_Source\PSoC5/UART.c ****     *
 664:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 665:.\Generated_Source\PSoC5/UART.c ****     *  None.
 666:.\Generated_Source\PSoC5/UART.c ****     *
 667:.\Generated_Source\PSoC5/UART.c ****     * Return:
 668:.\Generated_Source\PSoC5/UART.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:.\Generated_Source\PSoC5/UART.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:.\Generated_Source\PSoC5/UART.c ****     *
 671:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 672:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - used to calculate left bytes.
 673:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - used to calculate left bytes.
 674:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - checked to decide left bytes amount.
 675:.\Generated_Source\PSoC5/UART.c ****     *
 676:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 677:.\Generated_Source\PSoC5/UART.c ****     *  No.
 678:.\Generated_Source\PSoC5/UART.c ****     *
 679:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 680:.\Generated_Source\PSoC5/UART.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:.\Generated_Source\PSoC5/UART.c ****     *
 682:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 683:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_GetRxBufferSize(void)
 684:.\Generated_Source\PSoC5/UART.c ****                                                             
 685:.\Generated_Source\PSoC5/UART.c ****     {
 543              		.loc 1 685 0
 544              		.cfi_startproc
 545              		@ args = 0, pretend = 0, frame = 8
 546              		@ frame_needed = 1, uses_anonymous_args = 0
 547              		@ link register save eliminated.
 548 0000 80B4     		push	{r7}
 549              		.cfi_def_cfa_offset 4
 550              		.cfi_offset 7, -4
 551 0002 83B0     		sub	sp, sp, #12
 552              		.cfi_def_cfa_offset 16
 553 0004 00AF     		add	r7, sp, #0
 554              		.cfi_def_cfa_register 7
 686:.\Generated_Source\PSoC5/UART.c ****         uint8 size;
 687:.\Generated_Source\PSoC5/UART.c **** 
 688:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 689:.\Generated_Source\PSoC5/UART.c **** 
 690:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt */
 691:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 692:.\Generated_Source\PSoC5/UART.c **** 
 693:.\Generated_Source\PSoC5/UART.c ****         if(UART_rxBufferRead == UART_rxBufferWrite)
 694:.\Generated_Source\PSoC5/UART.c ****         {
 695:.\Generated_Source\PSoC5/UART.c ****             if(UART_rxBufferLoopDetect != 0u)
 696:.\Generated_Source\PSoC5/UART.c ****             {
 697:.\Generated_Source\PSoC5/UART.c ****                 size = UART_RX_BUFFER_SIZE;
 698:.\Generated_Source\PSoC5/UART.c ****             }
 699:.\Generated_Source\PSoC5/UART.c ****             else
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 23


 700:.\Generated_Source\PSoC5/UART.c ****             {
 701:.\Generated_Source\PSoC5/UART.c ****                 size = 0u;
 702:.\Generated_Source\PSoC5/UART.c ****             }
 703:.\Generated_Source\PSoC5/UART.c ****         }
 704:.\Generated_Source\PSoC5/UART.c ****         else if(UART_rxBufferRead < UART_rxBufferWrite)
 705:.\Generated_Source\PSoC5/UART.c ****         {
 706:.\Generated_Source\PSoC5/UART.c ****             size = (UART_rxBufferWrite - UART_rxBufferRead);
 707:.\Generated_Source\PSoC5/UART.c ****         }
 708:.\Generated_Source\PSoC5/UART.c ****         else
 709:.\Generated_Source\PSoC5/UART.c ****         {
 710:.\Generated_Source\PSoC5/UART.c ****             size = (UART_RX_BUFFER_SIZE - UART_rxBufferRead) + UART_rxBufferWrite;
 711:.\Generated_Source\PSoC5/UART.c ****         }
 712:.\Generated_Source\PSoC5/UART.c **** 
 713:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 714:.\Generated_Source\PSoC5/UART.c **** 
 715:.\Generated_Source\PSoC5/UART.c ****     #else
 716:.\Generated_Source\PSoC5/UART.c **** 
 717:.\Generated_Source\PSoC5/UART.c ****         /* We can only know if there is data in the fifo. */
 718:.\Generated_Source\PSoC5/UART.c ****         size = ((UART_RXSTATUS_REG & UART_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 555              		.loc 1 718 0
 556 0006 094B     		ldr	r3, .L39
 557 0008 1B78     		ldrb	r3, [r3]
 558 000a DBB2     		uxtb	r3, r3
 559 000c 03F02003 		and	r3, r3, #32
 560 0010 002B     		cmp	r3, #0
 561 0012 01D0     		beq	.L36
 562              		.loc 1 718 0 is_stmt 0 discriminator 1
 563 0014 0123     		movs	r3, #1
 564 0016 00E0     		b	.L37
 565              	.L36:
 566              		.loc 1 718 0 discriminator 2
 567 0018 0023     		movs	r3, #0
 568              	.L37:
 569              		.loc 1 718 0 discriminator 4
 570 001a FB71     		strb	r3, [r7, #7]
 719:.\Generated_Source\PSoC5/UART.c **** 
 720:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 721:.\Generated_Source\PSoC5/UART.c **** 
 722:.\Generated_Source\PSoC5/UART.c ****         return(size);
 571              		.loc 1 722 0 is_stmt 1 discriminator 4
 572 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:.\Generated_Source\PSoC5/UART.c ****     }
 573              		.loc 1 723 0 discriminator 4
 574 001e 1846     		mov	r0, r3
 575 0020 0C37     		adds	r7, r7, #12
 576              		.cfi_def_cfa_offset 4
 577 0022 BD46     		mov	sp, r7
 578              		.cfi_def_cfa_register 13
 579              		@ sp needed
 580 0024 5DF8047B 		ldr	r7, [sp], #4
 581              		.cfi_restore 7
 582              		.cfi_def_cfa_offset 0
 583 0028 7047     		bx	lr
 584              	.L40:
 585 002a 00BF     		.align	2
 586              	.L39:
 587 002c 6B650040 		.word	1073767787
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 24


 588              		.cfi_endproc
 589              	.LFE11:
 590              		.size	UART_GetRxBufferSize, .-UART_GetRxBufferSize
 591              		.section	.text.UART_ClearRxBuffer,"ax",%progbits
 592              		.align	2
 593              		.global	UART_ClearRxBuffer
 594              		.thumb
 595              		.thumb_func
 596              		.type	UART_ClearRxBuffer, %function
 597              	UART_ClearRxBuffer:
 598              	.LFB12:
 724:.\Generated_Source\PSoC5/UART.c **** 
 725:.\Generated_Source\PSoC5/UART.c **** 
 726:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 727:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_ClearRxBuffer
 728:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 729:.\Generated_Source\PSoC5/UART.c ****     *
 730:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 731:.\Generated_Source\PSoC5/UART.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:.\Generated_Source\PSoC5/UART.c ****     *
 733:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 734:.\Generated_Source\PSoC5/UART.c ****     *  None.
 735:.\Generated_Source\PSoC5/UART.c ****     *
 736:.\Generated_Source\PSoC5/UART.c ****     * Return:
 737:.\Generated_Source\PSoC5/UART.c ****     *  None.
 738:.\Generated_Source\PSoC5/UART.c ****     *
 739:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 740:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferWrite - cleared to zero.
 741:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferRead - cleared to zero.
 742:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferLoopDetect - cleared to zero.
 743:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxBufferOverflow - cleared to zero.
 744:.\Generated_Source\PSoC5/UART.c ****     *
 745:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 746:.\Generated_Source\PSoC5/UART.c ****     *  No.
 747:.\Generated_Source\PSoC5/UART.c ****     *
 748:.\Generated_Source\PSoC5/UART.c ****     * Theory:
 749:.\Generated_Source\PSoC5/UART.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:.\Generated_Source\PSoC5/UART.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:.\Generated_Source\PSoC5/UART.c ****     *  have remained in the RAM.
 752:.\Generated_Source\PSoC5/UART.c ****     *
 753:.\Generated_Source\PSoC5/UART.c ****     * Side Effects:
 754:.\Generated_Source\PSoC5/UART.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:.\Generated_Source\PSoC5/UART.c ****     *
 756:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 757:.\Generated_Source\PSoC5/UART.c ****     void UART_ClearRxBuffer(void) 
 758:.\Generated_Source\PSoC5/UART.c ****     {
 599              		.loc 1 758 0
 600              		.cfi_startproc
 601              		@ args = 0, pretend = 0, frame = 8
 602              		@ frame_needed = 1, uses_anonymous_args = 0
 603 0000 80B5     		push	{r7, lr}
 604              		.cfi_def_cfa_offset 8
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 82B0     		sub	sp, sp, #8
 608              		.cfi_def_cfa_offset 16
 609 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 25


 610              		.cfi_def_cfa_register 7
 759:.\Generated_Source\PSoC5/UART.c ****         uint8 enableInterrupts;
 760:.\Generated_Source\PSoC5/UART.c **** 
 761:.\Generated_Source\PSoC5/UART.c ****         /* Clear the HW FIFO */
 762:.\Generated_Source\PSoC5/UART.c ****         enableInterrupts = CyEnterCriticalSection();
 611              		.loc 1 762 0
 612 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 613 000a 0346     		mov	r3, r0
 614 000c FB71     		strb	r3, [r7, #7]
 763:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG |= (uint8)  UART_RX_FIFO_CLR;
 615              		.loc 1 763 0
 616 000e 0B4A     		ldr	r2, .L42
 617 0010 0A4B     		ldr	r3, .L42
 618 0012 1B78     		ldrb	r3, [r3]
 619 0014 DBB2     		uxtb	r3, r3
 620 0016 43F00103 		orr	r3, r3, #1
 621 001a DBB2     		uxtb	r3, r3
 622 001c 1370     		strb	r3, [r2]
 764:.\Generated_Source\PSoC5/UART.c ****         UART_RXDATA_AUX_CTL_REG &= (uint8) ~UART_RX_FIFO_CLR;
 623              		.loc 1 764 0
 624 001e 074A     		ldr	r2, .L42
 625 0020 064B     		ldr	r3, .L42
 626 0022 1B78     		ldrb	r3, [r3]
 627 0024 DBB2     		uxtb	r3, r3
 628 0026 23F00103 		bic	r3, r3, #1
 629 002a DBB2     		uxtb	r3, r3
 630 002c 1370     		strb	r3, [r2]
 765:.\Generated_Source\PSoC5/UART.c ****         CyExitCriticalSection(enableInterrupts);
 631              		.loc 1 765 0
 632 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 633 0030 1846     		mov	r0, r3
 634 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:.\Generated_Source\PSoC5/UART.c **** 
 767:.\Generated_Source\PSoC5/UART.c ****     #if (UART_RX_INTERRUPT_ENABLED)
 768:.\Generated_Source\PSoC5/UART.c **** 
 769:.\Generated_Source\PSoC5/UART.c ****         /* Protect variables that could change on interrupt. */
 770:.\Generated_Source\PSoC5/UART.c ****         UART_DisableRxInt();
 771:.\Generated_Source\PSoC5/UART.c **** 
 772:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferRead = 0u;
 773:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferWrite = 0u;
 774:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferLoopDetect = 0u;
 775:.\Generated_Source\PSoC5/UART.c ****         UART_rxBufferOverflow = 0u;
 776:.\Generated_Source\PSoC5/UART.c **** 
 777:.\Generated_Source\PSoC5/UART.c ****         UART_EnableRxInt();
 778:.\Generated_Source\PSoC5/UART.c **** 
 779:.\Generated_Source\PSoC5/UART.c ****     #endif /* (UART_RX_INTERRUPT_ENABLED) */
 780:.\Generated_Source\PSoC5/UART.c **** 
 781:.\Generated_Source\PSoC5/UART.c ****     }
 635              		.loc 1 781 0
 636 0036 0837     		adds	r7, r7, #8
 637              		.cfi_def_cfa_offset 8
 638 0038 BD46     		mov	sp, r7
 639              		.cfi_def_cfa_register 13
 640              		@ sp needed
 641 003a 80BD     		pop	{r7, pc}
 642              	.L43:
 643              		.align	2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 26


 644              	.L42:
 645 003c 9B650040 		.word	1073767835
 646              		.cfi_endproc
 647              	.LFE12:
 648              		.size	UART_ClearRxBuffer, .-UART_ClearRxBuffer
 649              		.section	.text.UART_SetRxAddressMode,"ax",%progbits
 650              		.align	2
 651              		.global	UART_SetRxAddressMode
 652              		.thumb
 653              		.thumb_func
 654              		.type	UART_SetRxAddressMode, %function
 655              	UART_SetRxAddressMode:
 656              	.LFB13:
 782:.\Generated_Source\PSoC5/UART.c **** 
 783:.\Generated_Source\PSoC5/UART.c **** 
 784:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 785:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddressMode
 786:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 787:.\Generated_Source\PSoC5/UART.c ****     *
 788:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 789:.\Generated_Source\PSoC5/UART.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:.\Generated_Source\PSoC5/UART.c ****     *  UART.
 791:.\Generated_Source\PSoC5/UART.c ****     *
 792:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 793:.\Generated_Source\PSoC5/UART.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 796:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 798:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:.\Generated_Source\PSoC5/UART.c ****     *                                               detection
 800:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:.\Generated_Source\PSoC5/UART.c ****     *                                               address detection
 802:.\Generated_Source\PSoC5/UART.c ****     *  UART__B_UART__AM_NONE - No address detection
 803:.\Generated_Source\PSoC5/UART.c ****     *
 804:.\Generated_Source\PSoC5/UART.c ****     * Return:
 805:.\Generated_Source\PSoC5/UART.c ****     *  None.
 806:.\Generated_Source\PSoC5/UART.c ****     *
 807:.\Generated_Source\PSoC5/UART.c ****     * Global Variables:
 808:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressMode - the parameter stored in this variable for
 809:.\Generated_Source\PSoC5/UART.c ****     *   the farther usage in RX ISR.
 810:.\Generated_Source\PSoC5/UART.c ****     *  UART_rxAddressDetected - set to initial state (0).
 811:.\Generated_Source\PSoC5/UART.c ****     *
 812:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 813:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddressMode(uint8 addressMode)
 814:.\Generated_Source\PSoC5/UART.c ****                                                         
 815:.\Generated_Source\PSoC5/UART.c ****     {
 657              		.loc 1 815 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662 0000 80B4     		push	{r7}
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 7, -4
 665 0002 83B0     		sub	sp, sp, #12
 666              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 27


 667 0004 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
 669 0006 0346     		mov	r3, r0
 670 0008 FB71     		strb	r3, [r7, #7]
 816:.\Generated_Source\PSoC5/UART.c ****         #if(UART_RXHW_ADDRESS_ENABLED)
 817:.\Generated_Source\PSoC5/UART.c ****             #if(UART_CONTROL_REG_REMOVED)
 818:.\Generated_Source\PSoC5/UART.c ****                 if(0u != addressMode)
 819:.\Generated_Source\PSoC5/UART.c ****                 {
 820:.\Generated_Source\PSoC5/UART.c ****                     /* Suppress compiler warning */
 821:.\Generated_Source\PSoC5/UART.c ****                 }
 822:.\Generated_Source\PSoC5/UART.c ****             #else /* UART_CONTROL_REG_REMOVED */
 823:.\Generated_Source\PSoC5/UART.c ****                 uint8 tmpCtrl;
 824:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl = UART_CONTROL_REG & (uint8)~UART_CTRL_RXADDR_MODE_MASK;
 825:.\Generated_Source\PSoC5/UART.c ****                 tmpCtrl |= (uint8)(addressMode << UART_CTRL_RXADDR_MODE0_SHIFT);
 826:.\Generated_Source\PSoC5/UART.c ****                 UART_CONTROL_REG = tmpCtrl;
 827:.\Generated_Source\PSoC5/UART.c **** 
 828:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_RX_INTERRUPT_ENABLED && \
 829:.\Generated_Source\PSoC5/UART.c ****                    (UART_RXBUFFERSIZE > UART_FIFO_LENGTH) )
 830:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressMode = addressMode;
 831:.\Generated_Source\PSoC5/UART.c ****                     UART_rxAddressDetected = 0u;
 832:.\Generated_Source\PSoC5/UART.c ****                 #endif /* End UART_RXBUFFERSIZE > UART_FIFO_LENGTH*/
 833:.\Generated_Source\PSoC5/UART.c ****             #endif /* End UART_CONTROL_REG_REMOVED */
 834:.\Generated_Source\PSoC5/UART.c ****         #else /* UART_RXHW_ADDRESS_ENABLED */
 835:.\Generated_Source\PSoC5/UART.c ****             if(0u != addressMode)
 836:.\Generated_Source\PSoC5/UART.c ****             {
 837:.\Generated_Source\PSoC5/UART.c ****                 /* Suppress compiler warning */
 838:.\Generated_Source\PSoC5/UART.c ****             }
 839:.\Generated_Source\PSoC5/UART.c ****         #endif /* End UART_RXHW_ADDRESS_ENABLED */
 840:.\Generated_Source\PSoC5/UART.c ****     }
 671              		.loc 1 840 0
 672 000a 0C37     		adds	r7, r7, #12
 673              		.cfi_def_cfa_offset 4
 674 000c BD46     		mov	sp, r7
 675              		.cfi_def_cfa_register 13
 676              		@ sp needed
 677 000e 5DF8047B 		ldr	r7, [sp], #4
 678              		.cfi_restore 7
 679              		.cfi_def_cfa_offset 0
 680 0012 7047     		bx	lr
 681              		.cfi_endproc
 682              	.LFE13:
 683              		.size	UART_SetRxAddressMode, .-UART_SetRxAddressMode
 684              		.section	.text.UART_SetRxAddress1,"ax",%progbits
 685              		.align	2
 686              		.global	UART_SetRxAddress1
 687              		.thumb
 688              		.thumb_func
 689              		.type	UART_SetRxAddress1, %function
 690              	UART_SetRxAddress1:
 691              	.LFB14:
 841:.\Generated_Source\PSoC5/UART.c **** 
 842:.\Generated_Source\PSoC5/UART.c **** 
 843:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 844:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress1
 845:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 846:.\Generated_Source\PSoC5/UART.c ****     *
 847:.\Generated_Source\PSoC5/UART.c ****     * Summary:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 28


 848:.\Generated_Source\PSoC5/UART.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:.\Generated_Source\PSoC5/UART.c ****     *
 850:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 851:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #1 for hardware address detection.
 852:.\Generated_Source\PSoC5/UART.c ****     *
 853:.\Generated_Source\PSoC5/UART.c ****     * Return:
 854:.\Generated_Source\PSoC5/UART.c ****     *  None.
 855:.\Generated_Source\PSoC5/UART.c ****     *
 856:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 857:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress1(uint8 address) 
 858:.\Generated_Source\PSoC5/UART.c ****     {
 692              		.loc 1 858 0
 693              		.cfi_startproc
 694              		@ args = 0, pretend = 0, frame = 8
 695              		@ frame_needed = 1, uses_anonymous_args = 0
 696              		@ link register save eliminated.
 697 0000 80B4     		push	{r7}
 698              		.cfi_def_cfa_offset 4
 699              		.cfi_offset 7, -4
 700 0002 83B0     		sub	sp, sp, #12
 701              		.cfi_def_cfa_offset 16
 702 0004 00AF     		add	r7, sp, #0
 703              		.cfi_def_cfa_register 7
 704 0006 0346     		mov	r3, r0
 705 0008 FB71     		strb	r3, [r7, #7]
 859:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS1_REG = address;
 706              		.loc 1 859 0
 707 000a 044A     		ldr	r2, .L46
 708 000c FB79     		ldrb	r3, [r7, #7]
 709 000e 1370     		strb	r3, [r2]
 860:.\Generated_Source\PSoC5/UART.c ****     }
 710              		.loc 1 860 0
 711 0010 0C37     		adds	r7, r7, #12
 712              		.cfi_def_cfa_offset 4
 713 0012 BD46     		mov	sp, r7
 714              		.cfi_def_cfa_register 13
 715              		@ sp needed
 716 0014 5DF8047B 		ldr	r7, [sp], #4
 717              		.cfi_restore 7
 718              		.cfi_def_cfa_offset 0
 719 0018 7047     		bx	lr
 720              	.L47:
 721 001a 00BF     		.align	2
 722              	.L46:
 723 001c 2B650040 		.word	1073767723
 724              		.cfi_endproc
 725              	.LFE14:
 726              		.size	UART_SetRxAddress1, .-UART_SetRxAddress1
 727              		.section	.text.UART_SetRxAddress2,"ax",%progbits
 728              		.align	2
 729              		.global	UART_SetRxAddress2
 730              		.thumb
 731              		.thumb_func
 732              		.type	UART_SetRxAddress2, %function
 733              	UART_SetRxAddress2:
 734              	.LFB15:
 861:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 29


 862:.\Generated_Source\PSoC5/UART.c **** 
 863:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 864:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_SetRxAddress2
 865:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 866:.\Generated_Source\PSoC5/UART.c ****     *
 867:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 868:.\Generated_Source\PSoC5/UART.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:.\Generated_Source\PSoC5/UART.c ****     *
 870:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 871:.\Generated_Source\PSoC5/UART.c ****     *  address: Address #2 for hardware address detection.
 872:.\Generated_Source\PSoC5/UART.c ****     *
 873:.\Generated_Source\PSoC5/UART.c ****     * Return:
 874:.\Generated_Source\PSoC5/UART.c ****     *  None.
 875:.\Generated_Source\PSoC5/UART.c ****     *
 876:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 877:.\Generated_Source\PSoC5/UART.c ****     void UART_SetRxAddress2(uint8 address) 
 878:.\Generated_Source\PSoC5/UART.c ****     {
 735              		.loc 1 878 0
 736              		.cfi_startproc
 737              		@ args = 0, pretend = 0, frame = 8
 738              		@ frame_needed = 1, uses_anonymous_args = 0
 739              		@ link register save eliminated.
 740 0000 80B4     		push	{r7}
 741              		.cfi_def_cfa_offset 4
 742              		.cfi_offset 7, -4
 743 0002 83B0     		sub	sp, sp, #12
 744              		.cfi_def_cfa_offset 16
 745 0004 00AF     		add	r7, sp, #0
 746              		.cfi_def_cfa_register 7
 747 0006 0346     		mov	r3, r0
 748 0008 FB71     		strb	r3, [r7, #7]
 879:.\Generated_Source\PSoC5/UART.c ****         UART_RXADDRESS2_REG = address;
 749              		.loc 1 879 0
 750 000a 044A     		ldr	r2, .L49
 751 000c FB79     		ldrb	r3, [r7, #7]
 752 000e 1370     		strb	r3, [r2]
 880:.\Generated_Source\PSoC5/UART.c ****     }
 753              		.loc 1 880 0
 754 0010 0C37     		adds	r7, r7, #12
 755              		.cfi_def_cfa_offset 4
 756 0012 BD46     		mov	sp, r7
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 0014 5DF8047B 		ldr	r7, [sp], #4
 760              		.cfi_restore 7
 761              		.cfi_def_cfa_offset 0
 762 0018 7047     		bx	lr
 763              	.L50:
 764 001a 00BF     		.align	2
 765              	.L49:
 766 001c 3B650040 		.word	1073767739
 767              		.cfi_endproc
 768              	.LFE15:
 769              		.size	UART_SetRxAddress2, .-UART_SetRxAddress2
 770              		.text
 771              	.Letext0:
 772              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 30


 773              		.section	.debug_info,"",%progbits
 774              	.Ldebug_info0:
 775 0000 ED020000 		.4byte	0x2ed
 776 0004 0400     		.2byte	0x4
 777 0006 00000000 		.4byte	.Ldebug_abbrev0
 778 000a 04       		.byte	0x4
 779 000b 01       		.uleb128 0x1
 780 000c 17010000 		.4byte	.LASF41
 781 0010 01       		.byte	0x1
 782 0011 A0000000 		.4byte	.LASF42
 783 0015 6A020000 		.4byte	.LASF43
 784 0019 00000000 		.4byte	.Ldebug_ranges0+0
 785 001d 00000000 		.4byte	0
 786 0021 00000000 		.4byte	.Ldebug_line0
 787 0025 02       		.uleb128 0x2
 788 0026 01       		.byte	0x1
 789 0027 06       		.byte	0x6
 790 0028 37030000 		.4byte	.LASF0
 791 002c 02       		.uleb128 0x2
 792 002d 01       		.byte	0x1
 793 002e 08       		.byte	0x8
 794 002f 09010000 		.4byte	.LASF1
 795 0033 02       		.uleb128 0x2
 796 0034 02       		.byte	0x2
 797 0035 05       		.byte	0x5
 798 0036 00030000 		.4byte	.LASF2
 799 003a 02       		.uleb128 0x2
 800 003b 02       		.byte	0x2
 801 003c 07       		.byte	0x7
 802 003d 27000000 		.4byte	.LASF3
 803 0041 02       		.uleb128 0x2
 804 0042 04       		.byte	0x4
 805 0043 05       		.byte	0x5
 806 0044 2E030000 		.4byte	.LASF4
 807 0048 02       		.uleb128 0x2
 808 0049 04       		.byte	0x4
 809 004a 07       		.byte	0x7
 810 004b 8E000000 		.4byte	.LASF5
 811 004f 02       		.uleb128 0x2
 812 0050 08       		.byte	0x8
 813 0051 05       		.byte	0x5
 814 0052 ED020000 		.4byte	.LASF6
 815 0056 02       		.uleb128 0x2
 816 0057 08       		.byte	0x8
 817 0058 07       		.byte	0x7
 818 0059 FF010000 		.4byte	.LASF7
 819 005d 03       		.uleb128 0x3
 820 005e 04       		.byte	0x4
 821 005f 05       		.byte	0x5
 822 0060 696E7400 		.ascii	"int\000"
 823 0064 02       		.uleb128 0x2
 824 0065 04       		.byte	0x4
 825 0066 07       		.byte	0x7
 826 0067 D0010000 		.4byte	.LASF8
 827 006b 04       		.uleb128 0x4
 828 006c 20030000 		.4byte	.LASF9
 829 0070 02       		.byte	0x2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 31


 830 0071 C2       		.byte	0xc2
 831 0072 2C000000 		.4byte	0x2c
 832 0076 04       		.uleb128 0x4
 833 0077 BC010000 		.4byte	.LASF10
 834 007b 02       		.byte	0x2
 835 007c C3       		.byte	0xc3
 836 007d 3A000000 		.4byte	0x3a
 837 0081 02       		.uleb128 0x2
 838 0082 04       		.byte	0x4
 839 0083 04       		.byte	0x4
 840 0084 61000000 		.4byte	.LASF11
 841 0088 02       		.uleb128 0x2
 842 0089 08       		.byte	0x8
 843 008a 04       		.byte	0x4
 844 008b A5010000 		.4byte	.LASF12
 845 008f 02       		.uleb128 0x2
 846 0090 01       		.byte	0x1
 847 0091 08       		.byte	0x8
 848 0092 FB020000 		.4byte	.LASF13
 849 0096 05       		.uleb128 0x5
 850 0097 89000000 		.4byte	.LASF14
 851 009b 02       		.byte	0x2
 852 009c 6C01     		.2byte	0x16c
 853 009e A2000000 		.4byte	0xa2
 854 00a2 06       		.uleb128 0x6
 855 00a3 6B000000 		.4byte	0x6b
 856 00a7 02       		.uleb128 0x2
 857 00a8 04       		.byte	0x4
 858 00a9 07       		.byte	0x7
 859 00aa 61020000 		.4byte	.LASF15
 860 00ae 07       		.uleb128 0x7
 861 00af C0000000 		.4byte	.LASF16
 862 00b3 01       		.byte	0x1
 863 00b4 4C       		.byte	0x4c
 864 00b5 00000000 		.4byte	.LFB0
 865 00b9 20000000 		.4byte	.LFE0-.LFB0
 866 00bd 01       		.uleb128 0x1
 867 00be 9C       		.byte	0x9c
 868 00bf 08       		.uleb128 0x8
 869 00c0 7F000000 		.4byte	.LASF17
 870 00c4 01       		.byte	0x1
 871 00c5 6A       		.byte	0x6a
 872 00c6 00000000 		.4byte	.LFB1
 873 00ca 20000000 		.4byte	.LFE1-.LFB1
 874 00ce 01       		.uleb128 0x1
 875 00cf 9C       		.byte	0x9c
 876 00d0 09       		.uleb128 0x9
 877 00d1 67000000 		.4byte	.LASF18
 878 00d5 01       		.byte	0x1
 879 00d6 B7       		.byte	0xb7
 880 00d7 00000000 		.4byte	.LFB2
 881 00db 48000000 		.4byte	.LFE2-.LFB2
 882 00df 01       		.uleb128 0x1
 883 00e0 9C       		.byte	0x9c
 884 00e1 F4000000 		.4byte	0xf4
 885 00e5 0A       		.uleb128 0xa
 886 00e6 F8000000 		.4byte	.LASF20
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 32


 887 00ea 01       		.byte	0x1
 888 00eb B9       		.byte	0xb9
 889 00ec 6B000000 		.4byte	0x6b
 890 00f0 02       		.uleb128 0x2
 891 00f1 91       		.byte	0x91
 892 00f2 77       		.sleb128 -9
 893 00f3 00       		.byte	0
 894 00f4 09       		.uleb128 0x9
 895 00f5 16020000 		.4byte	.LASF19
 896 00f9 01       		.byte	0x1
 897 00fa F0       		.byte	0xf0
 898 00fb 00000000 		.4byte	.LFB3
 899 00ff 48000000 		.4byte	.LFE3-.LFB3
 900 0103 01       		.uleb128 0x1
 901 0104 9C       		.byte	0x9c
 902 0105 18010000 		.4byte	0x118
 903 0109 0A       		.uleb128 0xa
 904 010a F8000000 		.4byte	.LASF20
 905 010e 01       		.byte	0x1
 906 010f F2       		.byte	0xf2
 907 0110 6B000000 		.4byte	0x6b
 908 0114 02       		.uleb128 0x2
 909 0115 91       		.byte	0x91
 910 0116 77       		.sleb128 -9
 911 0117 00       		.byte	0
 912 0118 0B       		.uleb128 0xb
 913 0119 20020000 		.4byte	.LASF31
 914 011d 01       		.byte	0x1
 915 011e 2701     		.2byte	0x127
 916 0120 6B000000 		.4byte	0x6b
 917 0124 00000000 		.4byte	.LFB4
 918 0128 10000000 		.4byte	.LFE4-.LFB4
 919 012c 01       		.uleb128 0x1
 920 012d 9C       		.byte	0x9c
 921 012e 0C       		.uleb128 0xc
 922 012f DD010000 		.4byte	.LASF21
 923 0133 01       		.byte	0x1
 924 0134 3F01     		.2byte	0x13f
 925 0136 00000000 		.4byte	.LFB5
 926 013a 14000000 		.4byte	.LFE5-.LFB5
 927 013e 01       		.uleb128 0x1
 928 013f 9C       		.byte	0x9c
 929 0140 54010000 		.4byte	0x154
 930 0144 0D       		.uleb128 0xd
 931 0145 26030000 		.4byte	.LASF23
 932 0149 01       		.byte	0x1
 933 014a 3F01     		.2byte	0x13f
 934 014c 6B000000 		.4byte	0x6b
 935 0150 02       		.uleb128 0x2
 936 0151 91       		.byte	0x91
 937 0152 77       		.sleb128 -9
 938 0153 00       		.byte	0
 939 0154 0C       		.uleb128 0xc
 940 0155 49020000 		.4byte	.LASF22
 941 0159 01       		.byte	0x1
 942 015a 6701     		.2byte	0x167
 943 015c 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 33


 944 0160 20000000 		.4byte	.LFE6-.LFB6
 945 0164 01       		.uleb128 0x1
 946 0165 9C       		.byte	0x9c
 947 0166 7A010000 		.4byte	0x17a
 948 016a 0D       		.uleb128 0xd
 949 016b AC010000 		.4byte	.LASF24
 950 016f 01       		.byte	0x1
 951 0170 6701     		.2byte	0x167
 952 0172 6B000000 		.4byte	0x6b
 953 0176 02       		.uleb128 0x2
 954 0177 91       		.byte	0x91
 955 0178 77       		.sleb128 -9
 956 0179 00       		.byte	0
 957 017a 0E       		.uleb128 0xe
 958 017b 39020000 		.4byte	.LASF26
 959 017f 01       		.byte	0x1
 960 0180 8801     		.2byte	0x188
 961 0182 6B000000 		.4byte	0x6b
 962 0186 00000000 		.4byte	.LFB7
 963 018a 20000000 		.4byte	.LFE7-.LFB7
 964 018e 01       		.uleb128 0x1
 965 018f 9C       		.byte	0x9c
 966 0190 A4010000 		.4byte	0x1a4
 967 0194 0F       		.uleb128 0xf
 968 0195 F1000000 		.4byte	.LASF25
 969 0199 01       		.byte	0x1
 970 019a 8A01     		.2byte	0x18a
 971 019c 6B000000 		.4byte	0x6b
 972 01a0 02       		.uleb128 0x2
 973 01a1 91       		.byte	0x91
 974 01a2 77       		.sleb128 -9
 975 01a3 00       		.byte	0
 976 01a4 0E       		.uleb128 0xe
 977 01a5 00000000 		.4byte	.LASF27
 978 01a9 01       		.byte	0x1
 979 01aa E501     		.2byte	0x1e5
 980 01ac 6B000000 		.4byte	0x6b
 981 01b0 00000000 		.4byte	.LFB8
 982 01b4 24000000 		.4byte	.LFE8-.LFB8
 983 01b8 01       		.uleb128 0x1
 984 01b9 9C       		.byte	0x9c
 985 01ba CE010000 		.4byte	0x1ce
 986 01be 0F       		.uleb128 0xf
 987 01bf 5A000000 		.4byte	.LASF28
 988 01c3 01       		.byte	0x1
 989 01c4 E701     		.2byte	0x1e7
 990 01c6 6B000000 		.4byte	0x6b
 991 01ca 02       		.uleb128 0x2
 992 01cb 91       		.byte	0x91
 993 01cc 77       		.sleb128 -9
 994 01cd 00       		.byte	0
 995 01ce 0E       		.uleb128 0xe
 996 01cf 43030000 		.4byte	.LASF29
 997 01d3 01       		.byte	0x1
 998 01d4 1402     		.2byte	0x214
 999 01d6 6B000000 		.4byte	0x6b
 1000 01da 00000000 		.4byte	.LFB9
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 34


 1001 01de 44000000 		.4byte	.LFE9-.LFB9
 1002 01e2 01       		.uleb128 0x1
 1003 01e3 9C       		.byte	0x9c
 1004 01e4 07020000 		.4byte	0x207
 1005 01e8 0F       		.uleb128 0xf
 1006 01e9 F1000000 		.4byte	.LASF25
 1007 01ed 01       		.byte	0x1
 1008 01ee 1602     		.2byte	0x216
 1009 01f0 6B000000 		.4byte	0x6b
 1010 01f4 02       		.uleb128 0x2
 1011 01f5 91       		.byte	0x91
 1012 01f6 77       		.sleb128 -9
 1013 01f7 0F       		.uleb128 0xf
 1014 01f8 B3010000 		.4byte	.LASF30
 1015 01fc 01       		.byte	0x1
 1016 01fd 1702     		.2byte	0x217
 1017 01ff 6B000000 		.4byte	0x6b
 1018 0203 02       		.uleb128 0x2
 1019 0204 91       		.byte	0x91
 1020 0205 76       		.sleb128 -10
 1021 0206 00       		.byte	0
 1022 0207 10       		.uleb128 0x10
 1023 0208 C3010000 		.4byte	.LASF32
 1024 020c 01       		.byte	0x1
 1025 020d 7A02     		.2byte	0x27a
 1026 020f 76000000 		.4byte	0x76
 1027 0213 00000000 		.4byte	.LFB10
 1028 0217 22000000 		.4byte	.LFE10-.LFB10
 1029 021b 01       		.uleb128 0x1
 1030 021c 9C       		.byte	0x9c
 1031 021d 0E       		.uleb128 0xe
 1032 021e 12000000 		.4byte	.LASF33
 1033 0222 01       		.byte	0x1
 1034 0223 AB02     		.2byte	0x2ab
 1035 0225 6B000000 		.4byte	0x6b
 1036 0229 00000000 		.4byte	.LFB11
 1037 022d 30000000 		.4byte	.LFE11-.LFB11
 1038 0231 01       		.uleb128 0x1
 1039 0232 9C       		.byte	0x9c
 1040 0233 47020000 		.4byte	0x247
 1041 0237 0F       		.uleb128 0xf
 1042 0238 50030000 		.4byte	.LASF34
 1043 023c 01       		.byte	0x1
 1044 023d AE02     		.2byte	0x2ae
 1045 023f 6B000000 		.4byte	0x6b
 1046 0243 02       		.uleb128 0x2
 1047 0244 91       		.byte	0x91
 1048 0245 77       		.sleb128 -9
 1049 0246 00       		.byte	0
 1050 0247 11       		.uleb128 0x11
 1051 0248 3A000000 		.4byte	.LASF35
 1052 024c 01       		.byte	0x1
 1053 024d F502     		.2byte	0x2f5
 1054 024f 00000000 		.4byte	.LFB12
 1055 0253 40000000 		.4byte	.LFE12-.LFB12
 1056 0257 01       		.uleb128 0x1
 1057 0258 9C       		.byte	0x9c
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 35


 1058 0259 6D020000 		.4byte	0x26d
 1059 025d 0F       		.uleb128 0xf
 1060 025e F8000000 		.4byte	.LASF20
 1061 0262 01       		.byte	0x1
 1062 0263 F702     		.2byte	0x2f7
 1063 0265 6B000000 		.4byte	0x6b
 1064 0269 02       		.uleb128 0x2
 1065 026a 91       		.byte	0x91
 1066 026b 77       		.sleb128 -9
 1067 026c 00       		.byte	0
 1068 026d 0C       		.uleb128 0xc
 1069 026e 0A030000 		.4byte	.LASF36
 1070 0272 01       		.byte	0x1
 1071 0273 2D03     		.2byte	0x32d
 1072 0275 00000000 		.4byte	.LFB13
 1073 0279 14000000 		.4byte	.LFE13-.LFB13
 1074 027d 01       		.uleb128 0x1
 1075 027e 9C       		.byte	0x9c
 1076 027f 93020000 		.4byte	0x293
 1077 0283 0D       		.uleb128 0xd
 1078 0284 73000000 		.4byte	.LASF37
 1079 0288 01       		.byte	0x1
 1080 0289 2D03     		.2byte	0x32d
 1081 028b 6B000000 		.4byte	0x6b
 1082 028f 02       		.uleb128 0x2
 1083 0290 91       		.byte	0x91
 1084 0291 77       		.sleb128 -9
 1085 0292 00       		.byte	0
 1086 0293 0C       		.uleb128 0xc
 1087 0294 CB000000 		.4byte	.LASF38
 1088 0298 01       		.byte	0x1
 1089 0299 5903     		.2byte	0x359
 1090 029b 00000000 		.4byte	.LFB14
 1091 029f 20000000 		.4byte	.LFE14-.LFB14
 1092 02a3 01       		.uleb128 0x1
 1093 02a4 9C       		.byte	0x9c
 1094 02a5 B9020000 		.4byte	0x2b9
 1095 02a9 0D       		.uleb128 0xd
 1096 02aa F7010000 		.4byte	.LASF39
 1097 02ae 01       		.byte	0x1
 1098 02af 5903     		.2byte	0x359
 1099 02b1 6B000000 		.4byte	0x6b
 1100 02b5 02       		.uleb128 0x2
 1101 02b6 91       		.byte	0x91
 1102 02b7 77       		.sleb128 -9
 1103 02b8 00       		.byte	0
 1104 02b9 0C       		.uleb128 0xc
 1105 02ba DE000000 		.4byte	.LASF40
 1106 02be 01       		.byte	0x1
 1107 02bf 6D03     		.2byte	0x36d
 1108 02c1 00000000 		.4byte	.LFB15
 1109 02c5 20000000 		.4byte	.LFE15-.LFB15
 1110 02c9 01       		.uleb128 0x1
 1111 02ca 9C       		.byte	0x9c
 1112 02cb DF020000 		.4byte	0x2df
 1113 02cf 0D       		.uleb128 0xd
 1114 02d0 F7010000 		.4byte	.LASF39
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 36


 1115 02d4 01       		.byte	0x1
 1116 02d5 6D03     		.2byte	0x36d
 1117 02d7 6B000000 		.4byte	0x6b
 1118 02db 02       		.uleb128 0x2
 1119 02dc 91       		.byte	0x91
 1120 02dd 77       		.sleb128 -9
 1121 02de 00       		.byte	0
 1122 02df 12       		.uleb128 0x12
 1123 02e0 4D000000 		.4byte	.LASF44
 1124 02e4 01       		.byte	0x1
 1125 02e5 1B       		.byte	0x1b
 1126 02e6 6B000000 		.4byte	0x6b
 1127 02ea 05       		.uleb128 0x5
 1128 02eb 03       		.byte	0x3
 1129 02ec 00000000 		.4byte	UART_initVar
 1130 02f0 00       		.byte	0
 1131              		.section	.debug_abbrev,"",%progbits
 1132              	.Ldebug_abbrev0:
 1133 0000 01       		.uleb128 0x1
 1134 0001 11       		.uleb128 0x11
 1135 0002 01       		.byte	0x1
 1136 0003 25       		.uleb128 0x25
 1137 0004 0E       		.uleb128 0xe
 1138 0005 13       		.uleb128 0x13
 1139 0006 0B       		.uleb128 0xb
 1140 0007 03       		.uleb128 0x3
 1141 0008 0E       		.uleb128 0xe
 1142 0009 1B       		.uleb128 0x1b
 1143 000a 0E       		.uleb128 0xe
 1144 000b 55       		.uleb128 0x55
 1145 000c 17       		.uleb128 0x17
 1146 000d 11       		.uleb128 0x11
 1147 000e 01       		.uleb128 0x1
 1148 000f 10       		.uleb128 0x10
 1149 0010 17       		.uleb128 0x17
 1150 0011 00       		.byte	0
 1151 0012 00       		.byte	0
 1152 0013 02       		.uleb128 0x2
 1153 0014 24       		.uleb128 0x24
 1154 0015 00       		.byte	0
 1155 0016 0B       		.uleb128 0xb
 1156 0017 0B       		.uleb128 0xb
 1157 0018 3E       		.uleb128 0x3e
 1158 0019 0B       		.uleb128 0xb
 1159 001a 03       		.uleb128 0x3
 1160 001b 0E       		.uleb128 0xe
 1161 001c 00       		.byte	0
 1162 001d 00       		.byte	0
 1163 001e 03       		.uleb128 0x3
 1164 001f 24       		.uleb128 0x24
 1165 0020 00       		.byte	0
 1166 0021 0B       		.uleb128 0xb
 1167 0022 0B       		.uleb128 0xb
 1168 0023 3E       		.uleb128 0x3e
 1169 0024 0B       		.uleb128 0xb
 1170 0025 03       		.uleb128 0x3
 1171 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 37


 1172 0027 00       		.byte	0
 1173 0028 00       		.byte	0
 1174 0029 04       		.uleb128 0x4
 1175 002a 16       		.uleb128 0x16
 1176 002b 00       		.byte	0
 1177 002c 03       		.uleb128 0x3
 1178 002d 0E       		.uleb128 0xe
 1179 002e 3A       		.uleb128 0x3a
 1180 002f 0B       		.uleb128 0xb
 1181 0030 3B       		.uleb128 0x3b
 1182 0031 0B       		.uleb128 0xb
 1183 0032 49       		.uleb128 0x49
 1184 0033 13       		.uleb128 0x13
 1185 0034 00       		.byte	0
 1186 0035 00       		.byte	0
 1187 0036 05       		.uleb128 0x5
 1188 0037 16       		.uleb128 0x16
 1189 0038 00       		.byte	0
 1190 0039 03       		.uleb128 0x3
 1191 003a 0E       		.uleb128 0xe
 1192 003b 3A       		.uleb128 0x3a
 1193 003c 0B       		.uleb128 0xb
 1194 003d 3B       		.uleb128 0x3b
 1195 003e 05       		.uleb128 0x5
 1196 003f 49       		.uleb128 0x49
 1197 0040 13       		.uleb128 0x13
 1198 0041 00       		.byte	0
 1199 0042 00       		.byte	0
 1200 0043 06       		.uleb128 0x6
 1201 0044 35       		.uleb128 0x35
 1202 0045 00       		.byte	0
 1203 0046 49       		.uleb128 0x49
 1204 0047 13       		.uleb128 0x13
 1205 0048 00       		.byte	0
 1206 0049 00       		.byte	0
 1207 004a 07       		.uleb128 0x7
 1208 004b 2E       		.uleb128 0x2e
 1209 004c 00       		.byte	0
 1210 004d 3F       		.uleb128 0x3f
 1211 004e 19       		.uleb128 0x19
 1212 004f 03       		.uleb128 0x3
 1213 0050 0E       		.uleb128 0xe
 1214 0051 3A       		.uleb128 0x3a
 1215 0052 0B       		.uleb128 0xb
 1216 0053 3B       		.uleb128 0x3b
 1217 0054 0B       		.uleb128 0xb
 1218 0055 27       		.uleb128 0x27
 1219 0056 19       		.uleb128 0x19
 1220 0057 11       		.uleb128 0x11
 1221 0058 01       		.uleb128 0x1
 1222 0059 12       		.uleb128 0x12
 1223 005a 06       		.uleb128 0x6
 1224 005b 40       		.uleb128 0x40
 1225 005c 18       		.uleb128 0x18
 1226 005d 9642     		.uleb128 0x2116
 1227 005f 19       		.uleb128 0x19
 1228 0060 00       		.byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 38


 1229 0061 00       		.byte	0
 1230 0062 08       		.uleb128 0x8
 1231 0063 2E       		.uleb128 0x2e
 1232 0064 00       		.byte	0
 1233 0065 3F       		.uleb128 0x3f
 1234 0066 19       		.uleb128 0x19
 1235 0067 03       		.uleb128 0x3
 1236 0068 0E       		.uleb128 0xe
 1237 0069 3A       		.uleb128 0x3a
 1238 006a 0B       		.uleb128 0xb
 1239 006b 3B       		.uleb128 0x3b
 1240 006c 0B       		.uleb128 0xb
 1241 006d 27       		.uleb128 0x27
 1242 006e 19       		.uleb128 0x19
 1243 006f 11       		.uleb128 0x11
 1244 0070 01       		.uleb128 0x1
 1245 0071 12       		.uleb128 0x12
 1246 0072 06       		.uleb128 0x6
 1247 0073 40       		.uleb128 0x40
 1248 0074 18       		.uleb128 0x18
 1249 0075 9742     		.uleb128 0x2117
 1250 0077 19       		.uleb128 0x19
 1251 0078 00       		.byte	0
 1252 0079 00       		.byte	0
 1253 007a 09       		.uleb128 0x9
 1254 007b 2E       		.uleb128 0x2e
 1255 007c 01       		.byte	0x1
 1256 007d 3F       		.uleb128 0x3f
 1257 007e 19       		.uleb128 0x19
 1258 007f 03       		.uleb128 0x3
 1259 0080 0E       		.uleb128 0xe
 1260 0081 3A       		.uleb128 0x3a
 1261 0082 0B       		.uleb128 0xb
 1262 0083 3B       		.uleb128 0x3b
 1263 0084 0B       		.uleb128 0xb
 1264 0085 27       		.uleb128 0x27
 1265 0086 19       		.uleb128 0x19
 1266 0087 11       		.uleb128 0x11
 1267 0088 01       		.uleb128 0x1
 1268 0089 12       		.uleb128 0x12
 1269 008a 06       		.uleb128 0x6
 1270 008b 40       		.uleb128 0x40
 1271 008c 18       		.uleb128 0x18
 1272 008d 9642     		.uleb128 0x2116
 1273 008f 19       		.uleb128 0x19
 1274 0090 01       		.uleb128 0x1
 1275 0091 13       		.uleb128 0x13
 1276 0092 00       		.byte	0
 1277 0093 00       		.byte	0
 1278 0094 0A       		.uleb128 0xa
 1279 0095 34       		.uleb128 0x34
 1280 0096 00       		.byte	0
 1281 0097 03       		.uleb128 0x3
 1282 0098 0E       		.uleb128 0xe
 1283 0099 3A       		.uleb128 0x3a
 1284 009a 0B       		.uleb128 0xb
 1285 009b 3B       		.uleb128 0x3b
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 39


 1286 009c 0B       		.uleb128 0xb
 1287 009d 49       		.uleb128 0x49
 1288 009e 13       		.uleb128 0x13
 1289 009f 02       		.uleb128 0x2
 1290 00a0 18       		.uleb128 0x18
 1291 00a1 00       		.byte	0
 1292 00a2 00       		.byte	0
 1293 00a3 0B       		.uleb128 0xb
 1294 00a4 2E       		.uleb128 0x2e
 1295 00a5 00       		.byte	0
 1296 00a6 3F       		.uleb128 0x3f
 1297 00a7 19       		.uleb128 0x19
 1298 00a8 03       		.uleb128 0x3
 1299 00a9 0E       		.uleb128 0xe
 1300 00aa 3A       		.uleb128 0x3a
 1301 00ab 0B       		.uleb128 0xb
 1302 00ac 3B       		.uleb128 0x3b
 1303 00ad 05       		.uleb128 0x5
 1304 00ae 27       		.uleb128 0x27
 1305 00af 19       		.uleb128 0x19
 1306 00b0 49       		.uleb128 0x49
 1307 00b1 13       		.uleb128 0x13
 1308 00b2 11       		.uleb128 0x11
 1309 00b3 01       		.uleb128 0x1
 1310 00b4 12       		.uleb128 0x12
 1311 00b5 06       		.uleb128 0x6
 1312 00b6 40       		.uleb128 0x40
 1313 00b7 18       		.uleb128 0x18
 1314 00b8 9742     		.uleb128 0x2117
 1315 00ba 19       		.uleb128 0x19
 1316 00bb 00       		.byte	0
 1317 00bc 00       		.byte	0
 1318 00bd 0C       		.uleb128 0xc
 1319 00be 2E       		.uleb128 0x2e
 1320 00bf 01       		.byte	0x1
 1321 00c0 3F       		.uleb128 0x3f
 1322 00c1 19       		.uleb128 0x19
 1323 00c2 03       		.uleb128 0x3
 1324 00c3 0E       		.uleb128 0xe
 1325 00c4 3A       		.uleb128 0x3a
 1326 00c5 0B       		.uleb128 0xb
 1327 00c6 3B       		.uleb128 0x3b
 1328 00c7 05       		.uleb128 0x5
 1329 00c8 27       		.uleb128 0x27
 1330 00c9 19       		.uleb128 0x19
 1331 00ca 11       		.uleb128 0x11
 1332 00cb 01       		.uleb128 0x1
 1333 00cc 12       		.uleb128 0x12
 1334 00cd 06       		.uleb128 0x6
 1335 00ce 40       		.uleb128 0x40
 1336 00cf 18       		.uleb128 0x18
 1337 00d0 9742     		.uleb128 0x2117
 1338 00d2 19       		.uleb128 0x19
 1339 00d3 01       		.uleb128 0x1
 1340 00d4 13       		.uleb128 0x13
 1341 00d5 00       		.byte	0
 1342 00d6 00       		.byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 40


 1343 00d7 0D       		.uleb128 0xd
 1344 00d8 05       		.uleb128 0x5
 1345 00d9 00       		.byte	0
 1346 00da 03       		.uleb128 0x3
 1347 00db 0E       		.uleb128 0xe
 1348 00dc 3A       		.uleb128 0x3a
 1349 00dd 0B       		.uleb128 0xb
 1350 00de 3B       		.uleb128 0x3b
 1351 00df 05       		.uleb128 0x5
 1352 00e0 49       		.uleb128 0x49
 1353 00e1 13       		.uleb128 0x13
 1354 00e2 02       		.uleb128 0x2
 1355 00e3 18       		.uleb128 0x18
 1356 00e4 00       		.byte	0
 1357 00e5 00       		.byte	0
 1358 00e6 0E       		.uleb128 0xe
 1359 00e7 2E       		.uleb128 0x2e
 1360 00e8 01       		.byte	0x1
 1361 00e9 3F       		.uleb128 0x3f
 1362 00ea 19       		.uleb128 0x19
 1363 00eb 03       		.uleb128 0x3
 1364 00ec 0E       		.uleb128 0xe
 1365 00ed 3A       		.uleb128 0x3a
 1366 00ee 0B       		.uleb128 0xb
 1367 00ef 3B       		.uleb128 0x3b
 1368 00f0 05       		.uleb128 0x5
 1369 00f1 27       		.uleb128 0x27
 1370 00f2 19       		.uleb128 0x19
 1371 00f3 49       		.uleb128 0x49
 1372 00f4 13       		.uleb128 0x13
 1373 00f5 11       		.uleb128 0x11
 1374 00f6 01       		.uleb128 0x1
 1375 00f7 12       		.uleb128 0x12
 1376 00f8 06       		.uleb128 0x6
 1377 00f9 40       		.uleb128 0x40
 1378 00fa 18       		.uleb128 0x18
 1379 00fb 9742     		.uleb128 0x2117
 1380 00fd 19       		.uleb128 0x19
 1381 00fe 01       		.uleb128 0x1
 1382 00ff 13       		.uleb128 0x13
 1383 0100 00       		.byte	0
 1384 0101 00       		.byte	0
 1385 0102 0F       		.uleb128 0xf
 1386 0103 34       		.uleb128 0x34
 1387 0104 00       		.byte	0
 1388 0105 03       		.uleb128 0x3
 1389 0106 0E       		.uleb128 0xe
 1390 0107 3A       		.uleb128 0x3a
 1391 0108 0B       		.uleb128 0xb
 1392 0109 3B       		.uleb128 0x3b
 1393 010a 05       		.uleb128 0x5
 1394 010b 49       		.uleb128 0x49
 1395 010c 13       		.uleb128 0x13
 1396 010d 02       		.uleb128 0x2
 1397 010e 18       		.uleb128 0x18
 1398 010f 00       		.byte	0
 1399 0110 00       		.byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 41


 1400 0111 10       		.uleb128 0x10
 1401 0112 2E       		.uleb128 0x2e
 1402 0113 00       		.byte	0
 1403 0114 3F       		.uleb128 0x3f
 1404 0115 19       		.uleb128 0x19
 1405 0116 03       		.uleb128 0x3
 1406 0117 0E       		.uleb128 0xe
 1407 0118 3A       		.uleb128 0x3a
 1408 0119 0B       		.uleb128 0xb
 1409 011a 3B       		.uleb128 0x3b
 1410 011b 05       		.uleb128 0x5
 1411 011c 27       		.uleb128 0x27
 1412 011d 19       		.uleb128 0x19
 1413 011e 49       		.uleb128 0x49
 1414 011f 13       		.uleb128 0x13
 1415 0120 11       		.uleb128 0x11
 1416 0121 01       		.uleb128 0x1
 1417 0122 12       		.uleb128 0x12
 1418 0123 06       		.uleb128 0x6
 1419 0124 40       		.uleb128 0x40
 1420 0125 18       		.uleb128 0x18
 1421 0126 9642     		.uleb128 0x2116
 1422 0128 19       		.uleb128 0x19
 1423 0129 00       		.byte	0
 1424 012a 00       		.byte	0
 1425 012b 11       		.uleb128 0x11
 1426 012c 2E       		.uleb128 0x2e
 1427 012d 01       		.byte	0x1
 1428 012e 3F       		.uleb128 0x3f
 1429 012f 19       		.uleb128 0x19
 1430 0130 03       		.uleb128 0x3
 1431 0131 0E       		.uleb128 0xe
 1432 0132 3A       		.uleb128 0x3a
 1433 0133 0B       		.uleb128 0xb
 1434 0134 3B       		.uleb128 0x3b
 1435 0135 05       		.uleb128 0x5
 1436 0136 27       		.uleb128 0x27
 1437 0137 19       		.uleb128 0x19
 1438 0138 11       		.uleb128 0x11
 1439 0139 01       		.uleb128 0x1
 1440 013a 12       		.uleb128 0x12
 1441 013b 06       		.uleb128 0x6
 1442 013c 40       		.uleb128 0x40
 1443 013d 18       		.uleb128 0x18
 1444 013e 9642     		.uleb128 0x2116
 1445 0140 19       		.uleb128 0x19
 1446 0141 01       		.uleb128 0x1
 1447 0142 13       		.uleb128 0x13
 1448 0143 00       		.byte	0
 1449 0144 00       		.byte	0
 1450 0145 12       		.uleb128 0x12
 1451 0146 34       		.uleb128 0x34
 1452 0147 00       		.byte	0
 1453 0148 03       		.uleb128 0x3
 1454 0149 0E       		.uleb128 0xe
 1455 014a 3A       		.uleb128 0x3a
 1456 014b 0B       		.uleb128 0xb
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 42


 1457 014c 3B       		.uleb128 0x3b
 1458 014d 0B       		.uleb128 0xb
 1459 014e 49       		.uleb128 0x49
 1460 014f 13       		.uleb128 0x13
 1461 0150 3F       		.uleb128 0x3f
 1462 0151 19       		.uleb128 0x19
 1463 0152 02       		.uleb128 0x2
 1464 0153 18       		.uleb128 0x18
 1465 0154 00       		.byte	0
 1466 0155 00       		.byte	0
 1467 0156 00       		.byte	0
 1468              		.section	.debug_aranges,"",%progbits
 1469 0000 94000000 		.4byte	0x94
 1470 0004 0200     		.2byte	0x2
 1471 0006 00000000 		.4byte	.Ldebug_info0
 1472 000a 04       		.byte	0x4
 1473 000b 00       		.byte	0
 1474 000c 0000     		.2byte	0
 1475 000e 0000     		.2byte	0
 1476 0010 00000000 		.4byte	.LFB0
 1477 0014 20000000 		.4byte	.LFE0-.LFB0
 1478 0018 00000000 		.4byte	.LFB1
 1479 001c 20000000 		.4byte	.LFE1-.LFB1
 1480 0020 00000000 		.4byte	.LFB2
 1481 0024 48000000 		.4byte	.LFE2-.LFB2
 1482 0028 00000000 		.4byte	.LFB3
 1483 002c 48000000 		.4byte	.LFE3-.LFB3
 1484 0030 00000000 		.4byte	.LFB4
 1485 0034 10000000 		.4byte	.LFE4-.LFB4
 1486 0038 00000000 		.4byte	.LFB5
 1487 003c 14000000 		.4byte	.LFE5-.LFB5
 1488 0040 00000000 		.4byte	.LFB6
 1489 0044 20000000 		.4byte	.LFE6-.LFB6
 1490 0048 00000000 		.4byte	.LFB7
 1491 004c 20000000 		.4byte	.LFE7-.LFB7
 1492 0050 00000000 		.4byte	.LFB8
 1493 0054 24000000 		.4byte	.LFE8-.LFB8
 1494 0058 00000000 		.4byte	.LFB9
 1495 005c 44000000 		.4byte	.LFE9-.LFB9
 1496 0060 00000000 		.4byte	.LFB10
 1497 0064 22000000 		.4byte	.LFE10-.LFB10
 1498 0068 00000000 		.4byte	.LFB11
 1499 006c 30000000 		.4byte	.LFE11-.LFB11
 1500 0070 00000000 		.4byte	.LFB12
 1501 0074 40000000 		.4byte	.LFE12-.LFB12
 1502 0078 00000000 		.4byte	.LFB13
 1503 007c 14000000 		.4byte	.LFE13-.LFB13
 1504 0080 00000000 		.4byte	.LFB14
 1505 0084 20000000 		.4byte	.LFE14-.LFB14
 1506 0088 00000000 		.4byte	.LFB15
 1507 008c 20000000 		.4byte	.LFE15-.LFB15
 1508 0090 00000000 		.4byte	0
 1509 0094 00000000 		.4byte	0
 1510              		.section	.debug_ranges,"",%progbits
 1511              	.Ldebug_ranges0:
 1512 0000 00000000 		.4byte	.LFB0
 1513 0004 20000000 		.4byte	.LFE0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 43


 1514 0008 00000000 		.4byte	.LFB1
 1515 000c 20000000 		.4byte	.LFE1
 1516 0010 00000000 		.4byte	.LFB2
 1517 0014 48000000 		.4byte	.LFE2
 1518 0018 00000000 		.4byte	.LFB3
 1519 001c 48000000 		.4byte	.LFE3
 1520 0020 00000000 		.4byte	.LFB4
 1521 0024 10000000 		.4byte	.LFE4
 1522 0028 00000000 		.4byte	.LFB5
 1523 002c 14000000 		.4byte	.LFE5
 1524 0030 00000000 		.4byte	.LFB6
 1525 0034 20000000 		.4byte	.LFE6
 1526 0038 00000000 		.4byte	.LFB7
 1527 003c 20000000 		.4byte	.LFE7
 1528 0040 00000000 		.4byte	.LFB8
 1529 0044 24000000 		.4byte	.LFE8
 1530 0048 00000000 		.4byte	.LFB9
 1531 004c 44000000 		.4byte	.LFE9
 1532 0050 00000000 		.4byte	.LFB10
 1533 0054 22000000 		.4byte	.LFE10
 1534 0058 00000000 		.4byte	.LFB11
 1535 005c 30000000 		.4byte	.LFE11
 1536 0060 00000000 		.4byte	.LFB12
 1537 0064 40000000 		.4byte	.LFE12
 1538 0068 00000000 		.4byte	.LFB13
 1539 006c 14000000 		.4byte	.LFE13
 1540 0070 00000000 		.4byte	.LFB14
 1541 0074 20000000 		.4byte	.LFE14
 1542 0078 00000000 		.4byte	.LFB15
 1543 007c 20000000 		.4byte	.LFE15
 1544 0080 00000000 		.4byte	0
 1545 0084 00000000 		.4byte	0
 1546              		.section	.debug_line,"",%progbits
 1547              	.Ldebug_line0:
 1548 0000 B3010000 		.section	.debug_str,"MS",%progbits,1
 1548      02004300 
 1548      00000201 
 1548      FB0E0D00 
 1548      01010101 
 1549              	.LASF27:
 1550 0000 55415254 		.ascii	"UART_ReadRxStatus\000"
 1550      5F526561 
 1550      64527853 
 1550      74617475 
 1550      7300
 1551              	.LASF33:
 1552 0012 55415254 		.ascii	"UART_GetRxBufferSize\000"
 1552      5F476574 
 1552      52784275 
 1552      66666572 
 1552      53697A65 
 1553              	.LASF3:
 1554 0027 73686F72 		.ascii	"short unsigned int\000"
 1554      7420756E 
 1554      7369676E 
 1554      65642069 
 1554      6E7400
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 44


 1555              	.LASF35:
 1556 003a 55415254 		.ascii	"UART_ClearRxBuffer\000"
 1556      5F436C65 
 1556      61725278 
 1556      42756666 
 1556      657200
 1557              	.LASF44:
 1558 004d 55415254 		.ascii	"UART_initVar\000"
 1558      5F696E69 
 1558      74566172 
 1558      00
 1559              	.LASF28:
 1560 005a 73746174 		.ascii	"status\000"
 1560      757300
 1561              	.LASF11:
 1562 0061 666C6F61 		.ascii	"float\000"
 1562      7400
 1563              	.LASF18:
 1564 0067 55415254 		.ascii	"UART_Enable\000"
 1564      5F456E61 
 1564      626C6500 
 1565              	.LASF37:
 1566 0073 61646472 		.ascii	"addressMode\000"
 1566      6573734D 
 1566      6F646500 
 1567              	.LASF17:
 1568 007f 55415254 		.ascii	"UART_Init\000"
 1568      5F496E69 
 1568      7400
 1569              	.LASF14:
 1570 0089 72656738 		.ascii	"reg8\000"
 1570      00
 1571              	.LASF5:
 1572 008e 6C6F6E67 		.ascii	"long unsigned int\000"
 1572      20756E73 
 1572      69676E65 
 1572      6420696E 
 1572      7400
 1573              	.LASF42:
 1574 00a0 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART.c\000"
 1574      6E657261 
 1574      7465645F 
 1574      536F7572 
 1574      63655C50 
 1575              	.LASF16:
 1576 00c0 55415254 		.ascii	"UART_Start\000"
 1576      5F537461 
 1576      727400
 1577              	.LASF38:
 1578 00cb 55415254 		.ascii	"UART_SetRxAddress1\000"
 1578      5F536574 
 1578      52784164 
 1578      64726573 
 1578      733100
 1579              	.LASF40:
 1580 00de 55415254 		.ascii	"UART_SetRxAddress2\000"
 1580      5F536574 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 45


 1580      52784164 
 1580      64726573 
 1580      733200
 1581              	.LASF25:
 1582 00f1 72784461 		.ascii	"rxData\000"
 1582      746100
 1583              	.LASF20:
 1584 00f8 656E6162 		.ascii	"enableInterrupts\000"
 1584      6C65496E 
 1584      74657272 
 1584      75707473 
 1584      00
 1585              	.LASF1:
 1586 0109 756E7369 		.ascii	"unsigned char\000"
 1586      676E6564 
 1586      20636861 
 1586      7200
 1587              	.LASF41:
 1588 0117 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1588      4320342E 
 1588      392E3320 
 1588      32303135 
 1588      30333033 
 1589 014a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1589      20726576 
 1589      6973696F 
 1589      6E203232 
 1589      31323230 
 1590 017d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1590      66756E63 
 1590      74696F6E 
 1590      2D736563 
 1590      74696F6E 
 1591              	.LASF12:
 1592 01a5 646F7562 		.ascii	"double\000"
 1592      6C6500
 1593              	.LASF24:
 1594 01ac 696E7453 		.ascii	"intSrc\000"
 1594      726300
 1595              	.LASF30:
 1596 01b3 72785374 		.ascii	"rxStatus\000"
 1596      61747573 
 1596      00
 1597              	.LASF10:
 1598 01bc 75696E74 		.ascii	"uint16\000"
 1598      313600
 1599              	.LASF32:
 1600 01c3 55415254 		.ascii	"UART_GetByte\000"
 1600      5F476574 
 1600      42797465 
 1600      00
 1601              	.LASF8:
 1602 01d0 756E7369 		.ascii	"unsigned int\000"
 1602      676E6564 
 1602      20696E74 
 1602      00
 1603              	.LASF21:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 46


 1604 01dd 55415254 		.ascii	"UART_WriteControlRegister\000"
 1604      5F577269 
 1604      7465436F 
 1604      6E74726F 
 1604      6C526567 
 1605              	.LASF39:
 1606 01f7 61646472 		.ascii	"address\000"
 1606      65737300 
 1607              	.LASF7:
 1608 01ff 6C6F6E67 		.ascii	"long long unsigned int\000"
 1608      206C6F6E 
 1608      6720756E 
 1608      7369676E 
 1608      65642069 
 1609              	.LASF19:
 1610 0216 55415254 		.ascii	"UART_Stop\000"
 1610      5F53746F 
 1610      7000
 1611              	.LASF31:
 1612 0220 55415254 		.ascii	"UART_ReadControlRegister\000"
 1612      5F526561 
 1612      64436F6E 
 1612      74726F6C 
 1612      52656769 
 1613              	.LASF26:
 1614 0239 55415254 		.ascii	"UART_ReadRxData\000"
 1614      5F526561 
 1614      64527844 
 1614      61746100 
 1615              	.LASF22:
 1616 0249 55415254 		.ascii	"UART_SetRxInterruptMode\000"
 1616      5F536574 
 1616      5278496E 
 1616      74657272 
 1616      7570744D 
 1617              	.LASF15:
 1618 0261 73697A65 		.ascii	"sizetype\000"
 1618      74797065 
 1618      00
 1619              	.LASF43:
 1620 026a 5C5C4441 		.ascii	"\\\\DATA\\Folder Redirection\\faithc\\Desktop\\FAIT"
 1620      54415C46 
 1620      6F6C6465 
 1620      72205265 
 1620      64697265 
 1621 0297 48532052 		.ascii	"HS RELEASED FIRMWARE\\SirenProject200W_RevF\\SirenP"
 1621      454C4541 
 1621      53454420 
 1621      4649524D 
 1621      57415245 
 1622 02c8 726F6A65 		.ascii	"roject200W_RevD\\ReleaseVersion.cydsn\000"
 1622      63743230 
 1622      30575F52 
 1622      6576445C 
 1622      52656C65 
 1623              	.LASF6:
 1624 02ed 6C6F6E67 		.ascii	"long long int\000"
ARM GAS  C:\Users\faithc\AppData\Local\Temp\ccZSGiWG.s 			page 47


 1624      206C6F6E 
 1624      6720696E 
 1624      7400
 1625              	.LASF13:
 1626 02fb 63686172 		.ascii	"char\000"
 1626      00
 1627              	.LASF2:
 1628 0300 73686F72 		.ascii	"short int\000"
 1628      7420696E 
 1628      7400
 1629              	.LASF36:
 1630 030a 55415254 		.ascii	"UART_SetRxAddressMode\000"
 1630      5F536574 
 1630      52784164 
 1630      64726573 
 1630      734D6F64 
 1631              	.LASF9:
 1632 0320 75696E74 		.ascii	"uint8\000"
 1632      3800
 1633              	.LASF23:
 1634 0326 636F6E74 		.ascii	"control\000"
 1634      726F6C00 
 1635              	.LASF4:
 1636 032e 6C6F6E67 		.ascii	"long int\000"
 1636      20696E74 
 1636      00
 1637              	.LASF0:
 1638 0337 7369676E 		.ascii	"signed char\000"
 1638      65642063 
 1638      68617200 
 1639              	.LASF29:
 1640 0343 55415254 		.ascii	"UART_GetChar\000"
 1640      5F476574 
 1640      43686172 
 1640      00
 1641              	.LASF34:
 1642 0350 73697A65 		.ascii	"size\000"
 1642      00
 1643              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
