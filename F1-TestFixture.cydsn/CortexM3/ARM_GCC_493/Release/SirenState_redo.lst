ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"SirenState_redo.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata
  19              		.align	2
  20              		.type	DEFAULT_CONFIGURATION_LIST, %object
  21              		.size	DEFAULT_CONFIGURATION_LIST, 12
  22              	DEFAULT_CONFIGURATION_LIST:
  23 0000 0F       		.byte	15
  24 0001 01       		.byte	1
  25 0002 02       		.byte	2
  26 0003 04       		.byte	4
  27 0004 05       		.byte	5
  28 0005 0B       		.byte	11
  29 0006 0F       		.byte	15
  30 0007 01       		.byte	1
  31 0008 02       		.byte	2
  32 0009 04       		.byte	4
  33 000a 05       		.byte	5
  34 000b 0B       		.byte	11
  35              		.align	1
  36              		.type	EEPROM_KEY_INDEX, %object
  37              		.size	EEPROM_KEY_INDEX, 2
  38              	EEPROM_KEY_INDEX:
  39 000c FF00     		.short	255
  40              		.type	EEPROM_KEY_VALUE, %object
  41              		.size	EEPROM_KEY_VALUE, 1
  42              	EEPROM_KEY_VALUE:
  43 000e 55       		.byte	85
  44 000f 00       		.bss
  45              		.align	2
  46              	InputRead:
  47 0000 00000000 		.space	7
  47      000000
  48 0007 00       		.align	2
  49              	Speaker:
  50 0008 00000000 		.space	8
  50      00000000 
  51              		.align	2
  52              	toneConfigurationList:
  53 0010 00000000 		.space	12
  53      00000000 
  53      00000000 
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 2


  54              	bToneChangeOnHornRing:
  55 001c 00       		.space	1
  56 001d 000000   		.section	.text.initializeToneConfigurationList,"ax",%progbits
  57              		.align	2
  58              		.global	initializeToneConfigurationList
  59              		.thumb
  60              		.thumb_func
  61              		.type	initializeToneConfigurationList, %function
  62              	initializeToneConfigurationList:
  63              	.LFB63:
  64              		.file 1 ".\\SirenState_redo.c"
   1:.\SirenState_redo.c **** /* ========================================
   2:.\SirenState_redo.c ****  *
   3:.\SirenState_redo.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\SirenState_redo.c ****  * All Rights Reserved
   5:.\SirenState_redo.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\SirenState_redo.c ****  *
   7:.\SirenState_redo.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\SirenState_redo.c ****  * WHICH IS THE PROPERTY OF your company.
   9:.\SirenState_redo.c ****  *
  10:.\SirenState_redo.c ****  * ========================================
  11:.\SirenState_redo.c **** */
  12:.\SirenState_redo.c **** 
  13:.\SirenState_redo.c **** /**********PREPROCESSOR DIRECTIVES**********/
  14:.\SirenState_redo.c **** #include "CommonVariables.h"
  15:.\SirenState_redo.c **** #include "SirenState.h"
  16:.\SirenState_redo.c **** #include "Tones.h"
  17:.\SirenState_redo.c **** #include "DACaudio.h"
  18:.\SirenState_redo.c **** 
  19:.\SirenState_redo.c **** /**********DEFINED CONSTANTS**********/
  20:.\SirenState_redo.c **** static const uint8 DEFAULT_CONFIGURATION_LIST[SPEAKER_COUNT * CHANNEL_COUNT_PER_SPEAKER] = 
  21:.\SirenState_redo.c ****     {COPS_SONG, WAIL, SLOW_YELP, PHASER, HORN, HORN_PHASER,
  22:.\SirenState_redo.c ****     COPS_SONG, WAIL, SLOW_YELP, PHASER, HORN, HORN_PHASER};
  23:.\SirenState_redo.c **** 
  24:.\SirenState_redo.c **** static const uint16 EEPROM_KEY_INDEX = 0xFF;
  25:.\SirenState_redo.c **** static const uint8 EEPROM_KEY_VALUE = 0x55;
  26:.\SirenState_redo.c **** 
  27:.\SirenState_redo.c **** enum InputType
  28:.\SirenState_redo.c **** {
  29:.\SirenState_redo.c **** 	RADIO_MIC,
  30:.\SirenState_redo.c **** 	AUDIO_TONE,
  31:.\SirenState_redo.c **** 	PARK_KILL,
  32:.\SirenState_redo.c **** 	HORN_RING,
  33:.\SirenState_redo.c **** 	SIREN_TONE,
  34:.\SirenState_redo.c **** 	NO_INPUT
  35:.\SirenState_redo.c **** };
  36:.\SirenState_redo.c **** 
  37:.\SirenState_redo.c **** enum ToneChannelNumber
  38:.\SirenState_redo.c **** {
  39:.\SirenState_redo.c **** 	CHANNEL_1,
  40:.\SirenState_redo.c **** 	CHANNEL_2,
  41:.\SirenState_redo.c **** 	CHANNEL_3,
  42:.\SirenState_redo.c **** 	CHANNEL_4,
  43:.\SirenState_redo.c **** 	CHANNEL_5,
  44:.\SirenState_redo.c **** 	CHANNEL_6,
  45:.\SirenState_redo.c **** 	NO_CHANNEL
  46:.\SirenState_redo.c **** };
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 3


  47:.\SirenState_redo.c **** 
  48:.\SirenState_redo.c **** /**********DATA STRUCTURES**********/
  49:.\SirenState_redo.c **** static struct
  50:.\SirenState_redo.c **** {
  51:.\SirenState_redo.c ****     uint8 bRadioAndMicKey;
  52:.\SirenState_redo.c ****     uint8 bParkKill;
  53:.\SirenState_redo.c ****     uint8 bTackSwitch;
  54:.\SirenState_redo.c ****     uint8 bHornRing;  
  55:.\SirenState_redo.c ****     uint8 bDualDelay;
  56:.\SirenState_redo.c ****     enum ToneChannelNumber highestPriorityChannel[SPEAKER_COUNT];
  57:.\SirenState_redo.c **** }InputRead;
  58:.\SirenState_redo.c **** 
  59:.\SirenState_redo.c **** typedef struct
  60:.\SirenState_redo.c **** {
  61:.\SirenState_redo.c **** 	enum ToneType currentTone;
  62:.\SirenState_redo.c **** 	uint8 bRisingEdge;
  63:.\SirenState_redo.c **** 	uint8 bManualWailToneStatus;
  64:.\SirenState_redo.c **** 	uint8 bAudioToneStatus;
  65:.\SirenState_redo.c **** }SpeakerStatus;
  66:.\SirenState_redo.c **** 
  67:.\SirenState_redo.c **** static SpeakerStatus Speaker[SPEAKER_COUNT];
  68:.\SirenState_redo.c **** 
  69:.\SirenState_redo.c **** /**********GLOBAL VARIABLES**********/
  70:.\SirenState_redo.c **** static enum ToneType toneConfigurationList[SPEAKER_COUNT][CHANNEL_COUNT_PER_SPEAKER];
  71:.\SirenState_redo.c **** static uint8 bToneChangeOnHornRing = false;
  72:.\SirenState_redo.c **** 
  73:.\SirenState_redo.c **** /**********FUNCTION PROTOTYPES**********/
  74:.\SirenState_redo.c **** static void processInputLogic(void);
  75:.\SirenState_redo.c **** static void updateAudio(void);
  76:.\SirenState_redo.c **** static enum ToneChannelNumber getHighestPriorityChannel(uint8 bSpeakerNumber);
  77:.\SirenState_redo.c **** static enum InputType getHighestPriorityInput(void);
  78:.\SirenState_redo.c **** static enum ToneType getAlternatingTone(enum ToneType toneSelection);
  79:.\SirenState_redo.c **** static uint8 isTrailingAudioTone(enum ToneType toneSelection);
  80:.\SirenState_redo.c **** static uint8 isSong(enum ToneType toneSelection);
  81:.\SirenState_redo.c **** static uint8 isAudioTone(enum ToneType toneSelection);
  82:.\SirenState_redo.c **** 
  83:.\SirenState_redo.c **** /**********DEFINED FUNCTIONS**********/
  84:.\SirenState_redo.c **** 
  85:.\SirenState_redo.c **** /*******************************************************************************
  86:.\SirenState_redo.c **** * Function Name: initializeToneConfigurationList
  87:.\SirenState_redo.c **** ********************************************************************************
  88:.\SirenState_redo.c **** *
  89:.\SirenState_redo.c **** * Summary:
  90:.\SirenState_redo.c **** *  Sets the configuration list to the tones saved in EEPROM
  91:.\SirenState_redo.c **** *
  92:.\SirenState_redo.c **** * Parameters:  
  93:.\SirenState_redo.c **** *   None
  94:.\SirenState_redo.c **** *
  95:.\SirenState_redo.c **** * Return:
  96:.\SirenState_redo.c **** *   None
  97:.\SirenState_redo.c **** *
  98:.\SirenState_redo.c **** *******************************************************************************/
  99:.\SirenState_redo.c **** void initializeToneConfigurationList(void)
 100:.\SirenState_redo.c **** {
  65              		.loc 1 100 0
  66              		.cfi_startproc
  67              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 4


  68              		@ frame_needed = 1, uses_anonymous_args = 0
  69 0000 B0B5     		push	{r4, r5, r7, lr}
  70              		.cfi_def_cfa_offset 16
  71              		.cfi_offset 4, -16
  72              		.cfi_offset 5, -12
  73              		.cfi_offset 7, -8
  74              		.cfi_offset 14, -4
  75 0002 82B0     		sub	sp, sp, #8
  76              		.cfi_def_cfa_offset 24
  77 0004 00AF     		add	r7, sp, #0
  78              		.cfi_def_cfa_register 7
 101:.\SirenState_redo.c ****     uint8 bHasNoTone = false;  
  79              		.loc 1 101 0
  80 0006 0023     		movs	r3, #0
  81 0008 FB71     		strb	r3, [r7, #7]
 102:.\SirenState_redo.c ****     uint8 bSpeakerIndex = SPEAKER_1;
  82              		.loc 1 102 0
  83 000a 0023     		movs	r3, #0
  84 000c BB71     		strb	r3, [r7, #6]
 103:.\SirenState_redo.c ****     uint8 channelIndex = NO_CHANNEL;   
  85              		.loc 1 103 0
  86 000e 0623     		movs	r3, #6
  87 0010 7B71     		strb	r3, [r7, #5]
 104:.\SirenState_redo.c ****     uint16 addressIndex = 0;
  88              		.loc 1 104 0
  89 0012 0023     		movs	r3, #0
  90 0014 7B80     		strh	r3, [r7, #2]	@ movhi
 105:.\SirenState_redo.c ****     
 106:.\SirenState_redo.c ****     EEPROM_Start();   
  91              		.loc 1 106 0
  92 0016 FFF7FEFF 		bl	EEPROM_Start
 107:.\SirenState_redo.c ****     
 108:.\SirenState_redo.c ****     for(bSpeakerIndex = 0; bSpeakerIndex < SPEAKER_COUNT; bSpeakerIndex++)
  93              		.loc 1 108 0
  94 001a 0023     		movs	r3, #0
  95 001c BB71     		strb	r3, [r7, #6]
  96 001e 20E0     		b	.L2
  97              	.L7:
 109:.\SirenState_redo.c ****     {   //Check for indices with no tone written to it
 110:.\SirenState_redo.c ****         for(channelIndex = 0; channelIndex < CHANNEL_COUNT_PER_SPEAKER; channelIndex++)
  98              		.loc 1 110 0
  99 0020 0023     		movs	r3, #0
 100 0022 7B71     		strb	r3, [r7, #5]
 101 0024 17E0     		b	.L3
 102              	.L6:
 111:.\SirenState_redo.c ****         {
 112:.\SirenState_redo.c ****             addressIndex = (uint16)(CHANNEL_COUNT_PER_SPEAKER * bSpeakerIndex + channelIndex);
 103              		.loc 1 112 0
 104 0026 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 105 0028 9BB2     		uxth	r3, r3
 106 002a 1A46     		mov	r2, r3	@ movhi
 107 002c 5200     		lsls	r2, r2, #1
 108 002e 1344     		add	r3, r3, r2
 109 0030 5B00     		lsls	r3, r3, #1
 110 0032 9AB2     		uxth	r2, r3
 111 0034 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 112 0036 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 5


 113 0038 1344     		add	r3, r3, r2
 114 003a 7B80     		strh	r3, [r7, #2]	@ movhi
 113:.\SirenState_redo.c ****             if(EEPROM_ReadByte(addressIndex) >= TONE_TYPE_LIST_SIZE)
 115              		.loc 1 113 0
 116 003c 7B88     		ldrh	r3, [r7, #2]
 117 003e 1846     		mov	r0, r3
 118 0040 FFF7FEFF 		bl	EEPROM_ReadByte
 119 0044 0346     		mov	r3, r0
 120 0046 162B     		cmp	r3, #22
 121 0048 02D9     		bls	.L4
 114:.\SirenState_redo.c ****             {   //Terminate loop after finding first invalid tone
 115:.\SirenState_redo.c ****                 bHasNoTone = true;
 122              		.loc 1 115 0
 123 004a 0123     		movs	r3, #1
 124 004c FB71     		strb	r3, [r7, #7]
 116:.\SirenState_redo.c ****                 break;
 125              		.loc 1 116 0
 126 004e 05E0     		b	.L5
 127              	.L4:
 110:.\SirenState_redo.c ****         {
 128              		.loc 1 110 0 discriminator 2
 129 0050 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 130 0052 0133     		adds	r3, r3, #1
 131 0054 7B71     		strb	r3, [r7, #5]
 132              	.L3:
 110:.\SirenState_redo.c ****         {
 133              		.loc 1 110 0 is_stmt 0 discriminator 1
 134 0056 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 135 0058 052B     		cmp	r3, #5
 136 005a E4D9     		bls	.L6
 137              	.L5:
 108:.\SirenState_redo.c ****     {   //Check for indices with no tone written to it
 138              		.loc 1 108 0 is_stmt 1 discriminator 2
 139 005c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 140 005e 0133     		adds	r3, r3, #1
 141 0060 BB71     		strb	r3, [r7, #6]
 142              	.L2:
 108:.\SirenState_redo.c ****     {   //Check for indices with no tone written to it
 143              		.loc 1 108 0 is_stmt 0 discriminator 1
 144 0062 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 145 0064 012B     		cmp	r3, #1
 146 0066 DBD9     		bls	.L7
 117:.\SirenState_redo.c ****             }
 118:.\SirenState_redo.c ****         }
 119:.\SirenState_redo.c ****     }
 120:.\SirenState_redo.c ****     
 121:.\SirenState_redo.c ****     if((bHasNoTone == true) || (EEPROM_ReadByte(EEPROM_KEY_INDEX) != EEPROM_KEY_VALUE))
 147              		.loc 1 121 0 is_stmt 1
 148 0068 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 149 006a 012B     		cmp	r3, #1
 150 006c 08D0     		beq	.L8
 151              		.loc 1 121 0 is_stmt 0 discriminator 1
 152 006e FF23     		movs	r3, #255
 153 0070 1846     		mov	r0, r3
 154 0072 FFF7FEFF 		bl	EEPROM_ReadByte
 155 0076 0346     		mov	r3, r0
 156 0078 1A46     		mov	r2, r3
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 6


 157 007a 5523     		movs	r3, #85
 158 007c 9A42     		cmp	r2, r3
 159 007e 2CD0     		beq	.L9
 160              	.L8:
 122:.\SirenState_redo.c ****     {   //Write to EEPROM 
 123:.\SirenState_redo.c ****         EEPROM_UpdateTemperature(); //Optimizes write timings based on temperature reading 
 161              		.loc 1 123 0 is_stmt 1
 162 0080 FFF7FEFF 		bl	EEPROM_UpdateTemperature
 124:.\SirenState_redo.c ****         
 125:.\SirenState_redo.c ****         for(bSpeakerIndex = 0; bSpeakerIndex < SPEAKER_COUNT; bSpeakerIndex++)
 163              		.loc 1 125 0
 164 0084 0023     		movs	r3, #0
 165 0086 BB71     		strb	r3, [r7, #6]
 166 0088 1EE0     		b	.L10
 167              	.L13:
 126:.\SirenState_redo.c ****         {   //Obtain tones from EEPROM to configure channels
 127:.\SirenState_redo.c ****             for(channelIndex = 0; channelIndex < CHANNEL_COUNT_PER_SPEAKER; channelIndex++)
 168              		.loc 1 127 0
 169 008a 0023     		movs	r3, #0
 170 008c 7B71     		strb	r3, [r7, #5]
 171 008e 15E0     		b	.L11
 172              	.L12:
 128:.\SirenState_redo.c ****             {
 129:.\SirenState_redo.c ****                 addressIndex = (uint16)(CHANNEL_COUNT_PER_SPEAKER * bSpeakerIndex + channelIndex);
 173              		.loc 1 129 0 discriminator 3
 174 0090 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 175 0092 9BB2     		uxth	r3, r3
 176 0094 1A46     		mov	r2, r3	@ movhi
 177 0096 5200     		lsls	r2, r2, #1
 178 0098 1344     		add	r3, r3, r2
 179 009a 5B00     		lsls	r3, r3, #1
 180 009c 9AB2     		uxth	r2, r3
 181 009e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 182 00a0 9BB2     		uxth	r3, r3
 183 00a2 1344     		add	r3, r3, r2
 184 00a4 7B80     		strh	r3, [r7, #2]	@ movhi
 130:.\SirenState_redo.c ****                 EEPROM_WriteByte(DEFAULT_CONFIGURATION_LIST[addressIndex], addressIndex);
 185              		.loc 1 130 0 discriminator 3
 186 00a6 7B88     		ldrh	r3, [r7, #2]
 187 00a8 244A     		ldr	r2, .L18
 188 00aa D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 189 00ac 7B88     		ldrh	r3, [r7, #2]
 190 00ae 1046     		mov	r0, r2
 191 00b0 1946     		mov	r1, r3
 192 00b2 FFF7FEFF 		bl	EEPROM_WriteByte
 127:.\SirenState_redo.c ****             {
 193              		.loc 1 127 0 discriminator 3
 194 00b6 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 195 00b8 0133     		adds	r3, r3, #1
 196 00ba 7B71     		strb	r3, [r7, #5]
 197              	.L11:
 127:.\SirenState_redo.c ****             {
 198              		.loc 1 127 0 is_stmt 0 discriminator 1
 199 00bc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 200 00be 052B     		cmp	r3, #5
 201 00c0 E6D9     		bls	.L12
 125:.\SirenState_redo.c ****         {   //Obtain tones from EEPROM to configure channels
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 7


 202              		.loc 1 125 0 is_stmt 1 discriminator 2
 203 00c2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 204 00c4 0133     		adds	r3, r3, #1
 205 00c6 BB71     		strb	r3, [r7, #6]
 206              	.L10:
 125:.\SirenState_redo.c ****         {   //Obtain tones from EEPROM to configure channels
 207              		.loc 1 125 0 is_stmt 0 discriminator 1
 208 00c8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 209 00ca 012B     		cmp	r3, #1
 210 00cc DDD9     		bls	.L13
 131:.\SirenState_redo.c ****             }
 132:.\SirenState_redo.c ****         }
 133:.\SirenState_redo.c ****         
 134:.\SirenState_redo.c ****         EEPROM_WriteByte(EEPROM_KEY_VALUE, EEPROM_KEY_INDEX);
 211              		.loc 1 134 0 is_stmt 1
 212 00ce 5522     		movs	r2, #85
 213 00d0 FF23     		movs	r3, #255
 214 00d2 1046     		mov	r0, r2
 215 00d4 1946     		mov	r1, r3
 216 00d6 FFF7FEFF 		bl	EEPROM_WriteByte
 217              	.L9:
 135:.\SirenState_redo.c ****     }
 136:.\SirenState_redo.c ****     
 137:.\SirenState_redo.c ****     for(bSpeakerIndex = 0; bSpeakerIndex < SPEAKER_COUNT; bSpeakerIndex++)
 218              		.loc 1 137 0
 219 00da 0023     		movs	r3, #0
 220 00dc BB71     		strb	r3, [r7, #6]
 221 00de 27E0     		b	.L14
 222              	.L17:
 138:.\SirenState_redo.c ****     {   //Obtain tones from EEPROM to configure channels
 139:.\SirenState_redo.c ****         for(channelIndex = 0; channelIndex < CHANNEL_COUNT_PER_SPEAKER; channelIndex++)
 223              		.loc 1 139 0
 224 00e0 0023     		movs	r3, #0
 225 00e2 7B71     		strb	r3, [r7, #5]
 226 00e4 1EE0     		b	.L15
 227              	.L16:
 140:.\SirenState_redo.c ****         {
 141:.\SirenState_redo.c ****             addressIndex = (uint16)(CHANNEL_COUNT_PER_SPEAKER * bSpeakerIndex + channelIndex);
 228              		.loc 1 141 0 discriminator 3
 229 00e6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 230 00e8 9BB2     		uxth	r3, r3
 231 00ea 1A46     		mov	r2, r3	@ movhi
 232 00ec 5200     		lsls	r2, r2, #1
 233 00ee 1344     		add	r3, r3, r2
 234 00f0 5B00     		lsls	r3, r3, #1
 235 00f2 9AB2     		uxth	r2, r3
 236 00f4 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 237 00f6 9BB2     		uxth	r3, r3
 238 00f8 1344     		add	r3, r3, r2
 239 00fa 7B80     		strh	r3, [r7, #2]	@ movhi
 142:.\SirenState_redo.c ****             toneConfigurationList[bSpeakerIndex][channelIndex] = EEPROM_ReadByte(addressIndex);
 240              		.loc 1 142 0 discriminator 3
 241 00fc BC79     		ldrb	r4, [r7, #6]	@ zero_extendqisi2
 242 00fe 7D79     		ldrb	r5, [r7, #5]	@ zero_extendqisi2
 243 0100 7B88     		ldrh	r3, [r7, #2]
 244 0102 1846     		mov	r0, r3
 245 0104 FFF7FEFF 		bl	EEPROM_ReadByte
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 8


 246 0108 0346     		mov	r3, r0
 247 010a 1946     		mov	r1, r3
 248 010c 0C4A     		ldr	r2, .L18+4
 249 010e 2346     		mov	r3, r4
 250 0110 5B00     		lsls	r3, r3, #1
 251 0112 2344     		add	r3, r3, r4
 252 0114 5B00     		lsls	r3, r3, #1
 253 0116 2B44     		add	r3, r3, r5
 254 0118 1344     		add	r3, r3, r2
 255 011a 0A46     		mov	r2, r1
 256 011c 1A70     		strb	r2, [r3]
 139:.\SirenState_redo.c ****         {
 257              		.loc 1 139 0 discriminator 3
 258 011e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 259 0120 0133     		adds	r3, r3, #1
 260 0122 7B71     		strb	r3, [r7, #5]
 261              	.L15:
 139:.\SirenState_redo.c ****         {
 262              		.loc 1 139 0 is_stmt 0 discriminator 1
 263 0124 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 264 0126 052B     		cmp	r3, #5
 265 0128 DDD9     		bls	.L16
 137:.\SirenState_redo.c ****     {   //Obtain tones from EEPROM to configure channels
 266              		.loc 1 137 0 is_stmt 1 discriminator 2
 267 012a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 268 012c 0133     		adds	r3, r3, #1
 269 012e BB71     		strb	r3, [r7, #6]
 270              	.L14:
 137:.\SirenState_redo.c ****     {   //Obtain tones from EEPROM to configure channels
 271              		.loc 1 137 0 is_stmt 0 discriminator 1
 272 0130 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 273 0132 012B     		cmp	r3, #1
 274 0134 D4D9     		bls	.L17
 143:.\SirenState_redo.c ****         }
 144:.\SirenState_redo.c ****     }
 145:.\SirenState_redo.c **** }
 275              		.loc 1 145 0 is_stmt 1
 276 0136 0837     		adds	r7, r7, #8
 277              		.cfi_def_cfa_offset 16
 278 0138 BD46     		mov	sp, r7
 279              		.cfi_def_cfa_register 13
 280              		@ sp needed
 281 013a B0BD     		pop	{r4, r5, r7, pc}
 282              	.L19:
 283              		.align	2
 284              	.L18:
 285 013c 00000000 		.word	DEFAULT_CONFIGURATION_LIST
 286 0140 10000000 		.word	toneConfigurationList
 287              		.cfi_endproc
 288              	.LFE63:
 289              		.size	initializeToneConfigurationList, .-initializeToneConfigurationList
 290              		.section	.text.initializeInputReadings,"ax",%progbits
 291              		.align	2
 292              		.global	initializeInputReadings
 293              		.thumb
 294              		.thumb_func
 295              		.type	initializeInputReadings, %function
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 9


 296              	initializeInputReadings:
 297              	.LFB64:
 146:.\SirenState_redo.c **** 
 147:.\SirenState_redo.c **** /*******************************************************************************
 148:.\SirenState_redo.c **** * Function Name: initializeInputReadings
 149:.\SirenState_redo.c **** ********************************************************************************
 150:.\SirenState_redo.c **** *
 151:.\SirenState_redo.c **** * Summary:
 152:.\SirenState_redo.c **** *  Sets InputRead struct to current input readings at the beginning of the program
 153:.\SirenState_redo.c **** *
 154:.\SirenState_redo.c **** * Parameters:  
 155:.\SirenState_redo.c **** *   None
 156:.\SirenState_redo.c **** *
 157:.\SirenState_redo.c **** * Return:
 158:.\SirenState_redo.c **** *   None
 159:.\SirenState_redo.c **** *
 160:.\SirenState_redo.c **** *******************************************************************************/
 161:.\SirenState_redo.c **** void initializeInputReadings(void)
 162:.\SirenState_redo.c **** {
 298              		.loc 1 162 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 0
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 00AF     		add	r7, sp, #0
 307              		.cfi_def_cfa_register 7
 163:.\SirenState_redo.c ****     InputRead.bRadioAndMicKey = RadioRebroadcastInput_Read() ||  MicKeyInput_Read();
 308              		.loc 1 163 0
 309 0004 FFF7FEFF 		bl	RadioRebroadcastInput_Read
 310 0008 0346     		mov	r3, r0
 311 000a 002B     		cmp	r3, #0
 312 000c 04D1     		bne	.L21
 313              		.loc 1 163 0 is_stmt 0 discriminator 2
 314 000e FFF7FEFF 		bl	MicKeyInput_Read
 315 0012 0346     		mov	r3, r0
 316 0014 002B     		cmp	r3, #0
 317 0016 01D0     		beq	.L22
 318              	.L21:
 319              		.loc 1 163 0 discriminator 3
 320 0018 0123     		movs	r3, #1
 321 001a 00E0     		b	.L23
 322              	.L22:
 323              		.loc 1 163 0 discriminator 4
 324 001c 0023     		movs	r3, #0
 325              	.L23:
 326              		.loc 1 163 0 discriminator 6
 327 001e DAB2     		uxtb	r2, r3
 328 0020 124B     		ldr	r3, .L24
 329 0022 1A70     		strb	r2, [r3]
 164:.\SirenState_redo.c ****     InputRead.bParkKill = ParkKillStatus_Read() & 0x01;
 330              		.loc 1 164 0 is_stmt 1 discriminator 6
 331 0024 FFF7FEFF 		bl	ParkKillStatus_Read
 332 0028 0346     		mov	r3, r0
 333 002a 03F00103 		and	r3, r3, #1
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 10


 334 002e DAB2     		uxtb	r2, r3
 335 0030 0E4B     		ldr	r3, .L24
 336 0032 5A70     		strb	r2, [r3, #1]
 165:.\SirenState_redo.c ****     InputRead.bHornRing = HornRingStatus_Read() & 0x01;
 337              		.loc 1 165 0 discriminator 6
 338 0034 FFF7FEFF 		bl	HornRingStatus_Read
 339 0038 0346     		mov	r3, r0
 340 003a 03F00103 		and	r3, r3, #1
 341 003e DAB2     		uxtb	r2, r3
 342 0040 0A4B     		ldr	r3, .L24
 343 0042 DA70     		strb	r2, [r3, #3]
 166:.\SirenState_redo.c ****     InputRead.highestPriorityChannel[SPEAKER_1] = getHighestPriorityChannel(SPEAKER_1);
 344              		.loc 1 166 0 discriminator 6
 345 0044 0020     		movs	r0, #0
 346 0046 FFF7FEFF 		bl	getHighestPriorityChannel
 347 004a 0346     		mov	r3, r0
 348 004c 1A46     		mov	r2, r3
 349 004e 074B     		ldr	r3, .L24
 350 0050 5A71     		strb	r2, [r3, #5]
 167:.\SirenState_redo.c ****     InputRead.highestPriorityChannel[SPEAKER_2] = getHighestPriorityChannel(SPEAKER_2);
 351              		.loc 1 167 0 discriminator 6
 352 0052 0120     		movs	r0, #1
 353 0054 FFF7FEFF 		bl	getHighestPriorityChannel
 354 0058 0346     		mov	r3, r0
 355 005a 1A46     		mov	r2, r3
 356 005c 034B     		ldr	r3, .L24
 357 005e 9A71     		strb	r2, [r3, #6]
 168:.\SirenState_redo.c ****     
 169:.\SirenState_redo.c ****     processInputLogic();
 358              		.loc 1 169 0 discriminator 6
 359 0060 FFF7FEFF 		bl	processInputLogic
 170:.\SirenState_redo.c **** 	updateAudio();
 360              		.loc 1 170 0 discriminator 6
 361 0064 FFF7FEFF 		bl	updateAudio
 171:.\SirenState_redo.c **** }
 362              		.loc 1 171 0 discriminator 6
 363 0068 80BD     		pop	{r7, pc}
 364              	.L25:
 365 006a 00BF     		.align	2
 366              	.L24:
 367 006c 00000000 		.word	InputRead
 368              		.cfi_endproc
 369              	.LFE64:
 370              		.size	initializeInputReadings, .-initializeInputReadings
 371              		.section	.text.enableToneInputInterrupts,"ax",%progbits
 372              		.align	2
 373              		.global	enableToneInputInterrupts
 374              		.thumb
 375              		.thumb_func
 376              		.type	enableToneInputInterrupts, %function
 377              	enableToneInputInterrupts:
 378              	.LFB65:
 172:.\SirenState_redo.c **** 
 173:.\SirenState_redo.c **** /*******************************************************************************
 174:.\SirenState_redo.c **** * Function Name: 
 175:.\SirenState_redo.c **** ********************************************************************************
 176:.\SirenState_redo.c **** *
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 11


 177:.\SirenState_redo.c **** * Summary:
 178:.\SirenState_redo.c **** *  
 179:.\SirenState_redo.c **** *
 180:.\SirenState_redo.c **** * Parameters:  
 181:.\SirenState_redo.c **** *   None
 182:.\SirenState_redo.c **** *
 183:.\SirenState_redo.c **** * Return:
 184:.\SirenState_redo.c **** *   None
 185:.\SirenState_redo.c **** *
 186:.\SirenState_redo.c **** *******************************************************************************/
 187:.\SirenState_redo.c **** void enableToneInputInterrupts(void)
 188:.\SirenState_redo.c **** {
 379              		.loc 1 188 0
 380              		.cfi_startproc
 381              		@ args = 0, pretend = 0, frame = 0
 382              		@ frame_needed = 1, uses_anonymous_args = 0
 383 0000 80B5     		push	{r7, lr}
 384              		.cfi_def_cfa_offset 8
 385              		.cfi_offset 7, -8
 386              		.cfi_offset 14, -4
 387 0002 00AF     		add	r7, sp, #0
 388              		.cfi_def_cfa_register 7
 189:.\SirenState_redo.c ****     TackSwitchISR_Start();
 389              		.loc 1 189 0
 390 0004 FFF7FEFF 		bl	TackSwitchISR_Start
 190:.\SirenState_redo.c ****     TackSwitchStatus_InterruptEnable();
 391              		.loc 1 190 0
 392 0008 FFF7FEFF 		bl	TackSwitchStatus_InterruptEnable
 191:.\SirenState_redo.c ****     
 192:.\SirenState_redo.c ****     DualDelayISR_Start();
 393              		.loc 1 192 0
 394 000c FFF7FEFF 		bl	DualDelayISR_Start
 193:.\SirenState_redo.c ****     DualDelayStatus_InterruptEnable();
 395              		.loc 1 193 0
 396 0010 FFF7FEFF 		bl	DualDelayStatus_InterruptEnable
 194:.\SirenState_redo.c ****     
 195:.\SirenState_redo.c ****     ModeStatusISR_Start();
 397              		.loc 1 195 0
 398 0014 FFF7FEFF 		bl	ModeStatusISR_Start
 196:.\SirenState_redo.c ****     ModeStatus_InterruptEnable();
 399              		.loc 1 196 0
 400 0018 FFF7FEFF 		bl	ModeStatus_InterruptEnable
 197:.\SirenState_redo.c ****     
 198:.\SirenState_redo.c ****     ModeStatus2ISR_Start();
 401              		.loc 1 198 0
 402 001c FFF7FEFF 		bl	ModeStatus2ISR_Start
 199:.\SirenState_redo.c ****     ModeStatus2_InterruptEnable();
 403              		.loc 1 199 0
 404 0020 FFF7FEFF 		bl	ModeStatus2_InterruptEnable
 200:.\SirenState_redo.c **** }
 405              		.loc 1 200 0
 406 0024 80BD     		pop	{r7, pc}
 407              		.cfi_endproc
 408              	.LFE65:
 409              		.size	enableToneInputInterrupts, .-enableToneInputInterrupts
 410 0026 00BF     		.section	.text.disableToneInputInterrupts,"ax",%progbits
 411              		.align	2
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 12


 412              		.global	disableToneInputInterrupts
 413              		.thumb
 414              		.thumb_func
 415              		.type	disableToneInputInterrupts, %function
 416              	disableToneInputInterrupts:
 417              	.LFB66:
 201:.\SirenState_redo.c **** 
 202:.\SirenState_redo.c **** /*******************************************************************************
 203:.\SirenState_redo.c **** * Function Name: 
 204:.\SirenState_redo.c **** ********************************************************************************
 205:.\SirenState_redo.c **** *
 206:.\SirenState_redo.c **** * Summary:
 207:.\SirenState_redo.c **** *  
 208:.\SirenState_redo.c **** *
 209:.\SirenState_redo.c **** * Parameters:  
 210:.\SirenState_redo.c **** *   None
 211:.\SirenState_redo.c **** *
 212:.\SirenState_redo.c **** * Return:
 213:.\SirenState_redo.c **** *   None
 214:.\SirenState_redo.c **** *
 215:.\SirenState_redo.c **** *******************************************************************************/
 216:.\SirenState_redo.c **** void disableToneInputInterrupts(void)
 217:.\SirenState_redo.c **** {
 418              		.loc 1 217 0
 419              		.cfi_startproc
 420              		@ args = 0, pretend = 0, frame = 0
 421              		@ frame_needed = 1, uses_anonymous_args = 0
 422 0000 80B5     		push	{r7, lr}
 423              		.cfi_def_cfa_offset 8
 424              		.cfi_offset 7, -8
 425              		.cfi_offset 14, -4
 426 0002 00AF     		add	r7, sp, #0
 427              		.cfi_def_cfa_register 7
 218:.\SirenState_redo.c ****     TackSwitchStatus_InterruptDisable();
 428              		.loc 1 218 0
 429 0004 FFF7FEFF 		bl	TackSwitchStatus_InterruptDisable
 219:.\SirenState_redo.c ****     TackSwitchISR_Stop();
 430              		.loc 1 219 0
 431 0008 FFF7FEFF 		bl	TackSwitchISR_Stop
 220:.\SirenState_redo.c ****     
 221:.\SirenState_redo.c ****     DualDelayStatus_InterruptDisable();
 432              		.loc 1 221 0
 433 000c FFF7FEFF 		bl	DualDelayStatus_InterruptDisable
 222:.\SirenState_redo.c ****     DualDelayISR_Stop();
 434              		.loc 1 222 0
 435 0010 FFF7FEFF 		bl	DualDelayISR_Stop
 223:.\SirenState_redo.c ****     
 224:.\SirenState_redo.c ****     ModeStatus_InterruptDisable();
 436              		.loc 1 224 0
 437 0014 FFF7FEFF 		bl	ModeStatus_InterruptDisable
 225:.\SirenState_redo.c ****     ModeStatusISR_Stop();
 438              		.loc 1 225 0
 439 0018 FFF7FEFF 		bl	ModeStatusISR_Stop
 226:.\SirenState_redo.c ****     
 227:.\SirenState_redo.c ****     ModeStatus2_InterruptDisable();
 440              		.loc 1 227 0
 441 001c FFF7FEFF 		bl	ModeStatus2_InterruptDisable
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 13


 228:.\SirenState_redo.c ****     ModeStatus2ISR_Stop();
 442              		.loc 1 228 0
 443 0020 FFF7FEFF 		bl	ModeStatus2ISR_Stop
 229:.\SirenState_redo.c **** }
 444              		.loc 1 229 0
 445 0024 80BD     		pop	{r7, pc}
 446              		.cfi_endproc
 447              	.LFE66:
 448              		.size	disableToneInputInterrupts, .-disableToneInputInterrupts
 449 0026 00BF     		.section	.text.processRadioMicKeyRoutine,"ax",%progbits
 450              		.align	2
 451              		.global	processRadioMicKeyRoutine
 452              		.thumb
 453              		.thumb_func
 454              		.type	processRadioMicKeyRoutine, %function
 455              	processRadioMicKeyRoutine:
 456              	.LFB67:
 230:.\SirenState_redo.c **** 
 231:.\SirenState_redo.c **** /*******************************************************************************
 232:.\SirenState_redo.c **** * Function Name: processRadioMicKeyRoutine
 233:.\SirenState_redo.c **** ********************************************************************************
 234:.\SirenState_redo.c **** *
 235:.\SirenState_redo.c **** * Summary:
 236:.\SirenState_redo.c **** *  Updates the siren system for the radio rebroadcast or mic key input change,
 237:.\SirenState_redo.c **** *  called in RadioMicKeyISR
 238:.\SirenState_redo.c **** *
 239:.\SirenState_redo.c **** * Parameters:  
 240:.\SirenState_redo.c **** *   None
 241:.\SirenState_redo.c **** *
 242:.\SirenState_redo.c **** * Return:
 243:.\SirenState_redo.c **** *   None
 244:.\SirenState_redo.c **** *
 245:.\SirenState_redo.c **** *******************************************************************************/
 246:.\SirenState_redo.c **** void processRadioMicKeyRoutine(void)
 247:.\SirenState_redo.c **** {
 457              		.loc 1 247 0
 458              		.cfi_startproc
 459              		@ args = 0, pretend = 0, frame = 0
 460              		@ frame_needed = 1, uses_anonymous_args = 0
 461 0000 80B5     		push	{r7, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
 248:.\SirenState_redo.c ****     InputRead.bRadioAndMicKey = RadioRebroadcastInput_Read() ||  MicKeyInput_Read();
 467              		.loc 1 248 0
 468 0004 FFF7FEFF 		bl	RadioRebroadcastInput_Read
 469 0008 0346     		mov	r3, r0
 470 000a 002B     		cmp	r3, #0
 471 000c 04D1     		bne	.L29
 472              		.loc 1 248 0 is_stmt 0 discriminator 2
 473 000e FFF7FEFF 		bl	MicKeyInput_Read
 474 0012 0346     		mov	r3, r0
 475 0014 002B     		cmp	r3, #0
 476 0016 01D0     		beq	.L30
 477              	.L29:
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 14


 478              		.loc 1 248 0 discriminator 3
 479 0018 0123     		movs	r3, #1
 480 001a 00E0     		b	.L31
 481              	.L30:
 482              		.loc 1 248 0 discriminator 4
 483 001c 0023     		movs	r3, #0
 484              	.L31:
 485              		.loc 1 248 0 discriminator 6
 486 001e DAB2     		uxtb	r2, r3
 487 0020 034B     		ldr	r3, .L32
 488 0022 1A70     		strb	r2, [r3]
 249:.\SirenState_redo.c ****     processInputLogic();
 489              		.loc 1 249 0 is_stmt 1 discriminator 6
 490 0024 FFF7FEFF 		bl	processInputLogic
 250:.\SirenState_redo.c **** 	updateAudio();
 491              		.loc 1 250 0 discriminator 6
 492 0028 FFF7FEFF 		bl	updateAudio
 251:.\SirenState_redo.c **** }
 493              		.loc 1 251 0 discriminator 6
 494 002c 80BD     		pop	{r7, pc}
 495              	.L33:
 496 002e 00BF     		.align	2
 497              	.L32:
 498 0030 00000000 		.word	InputRead
 499              		.cfi_endproc
 500              	.LFE67:
 501              		.size	processRadioMicKeyRoutine, .-processRadioMicKeyRoutine
 502              		.section	.text.processParkKillRoutine,"ax",%progbits
 503              		.align	2
 504              		.global	processParkKillRoutine
 505              		.thumb
 506              		.thumb_func
 507              		.type	processParkKillRoutine, %function
 508              	processParkKillRoutine:
 509              	.LFB68:
 252:.\SirenState_redo.c **** 
 253:.\SirenState_redo.c **** /*******************************************************************************
 254:.\SirenState_redo.c **** * Function Name: processParkKillRoutine
 255:.\SirenState_redo.c **** ********************************************************************************
 256:.\SirenState_redo.c **** *
 257:.\SirenState_redo.c **** * Summary:
 258:.\SirenState_redo.c **** *  Updates the siren system for the park kill input change, called in ParkKillISR
 259:.\SirenState_redo.c **** *
 260:.\SirenState_redo.c **** * Parameters:  
 261:.\SirenState_redo.c **** *   None
 262:.\SirenState_redo.c **** *
 263:.\SirenState_redo.c **** * Return:
 264:.\SirenState_redo.c **** *   None
 265:.\SirenState_redo.c **** *
 266:.\SirenState_redo.c **** *******************************************************************************/
 267:.\SirenState_redo.c **** void processParkKillRoutine(void)
 268:.\SirenState_redo.c **** {
 510              		.loc 1 268 0
 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 1, uses_anonymous_args = 0
 514 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 15


 515              		.cfi_def_cfa_offset 8
 516              		.cfi_offset 7, -8
 517              		.cfi_offset 14, -4
 518 0002 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 269:.\SirenState_redo.c ****     InputRead.bParkKill = ParkKillStatus_Read() & 0x01;    
 520              		.loc 1 269 0
 521 0004 FFF7FEFF 		bl	ParkKillStatus_Read
 522 0008 0346     		mov	r3, r0
 523 000a 03F00103 		and	r3, r3, #1
 524 000e DAB2     		uxtb	r2, r3
 525 0010 034B     		ldr	r3, .L35
 526 0012 5A70     		strb	r2, [r3, #1]
 270:.\SirenState_redo.c ****     processInputLogic();
 527              		.loc 1 270 0
 528 0014 FFF7FEFF 		bl	processInputLogic
 271:.\SirenState_redo.c **** 	updateAudio();
 529              		.loc 1 271 0
 530 0018 FFF7FEFF 		bl	updateAudio
 272:.\SirenState_redo.c **** }
 531              		.loc 1 272 0
 532 001c 80BD     		pop	{r7, pc}
 533              	.L36:
 534 001e 00BF     		.align	2
 535              	.L35:
 536 0020 00000000 		.word	InputRead
 537              		.cfi_endproc
 538              	.LFE68:
 539              		.size	processParkKillRoutine, .-processParkKillRoutine
 540              		.section	.text.processTackSwitchRoutine,"ax",%progbits
 541              		.align	2
 542              		.global	processTackSwitchRoutine
 543              		.thumb
 544              		.thumb_func
 545              		.type	processTackSwitchRoutine, %function
 546              	processTackSwitchRoutine:
 547              	.LFB69:
 273:.\SirenState_redo.c **** 
 274:.\SirenState_redo.c **** /*******************************************************************************
 275:.\SirenState_redo.c **** * Function Name: processTackSwitchRoutine
 276:.\SirenState_redo.c **** ********************************************************************************
 277:.\SirenState_redo.c **** *
 278:.\SirenState_redo.c **** * Summary:
 279:.\SirenState_redo.c **** *  Cycles through the tones and configures the tone selection for the specified
 280:.\SirenState_redo.c **** *  input, called in TackSwitchISR
 281:.\SirenState_redo.c **** *
 282:.\SirenState_redo.c **** * Parameters:  
 283:.\SirenState_redo.c **** *   None
 284:.\SirenState_redo.c **** *
 285:.\SirenState_redo.c **** * Return:
 286:.\SirenState_redo.c **** *   None
 287:.\SirenState_redo.c **** *
 288:.\SirenState_redo.c **** *******************************************************************************/
 289:.\SirenState_redo.c **** void processTackSwitchRoutine(void)
 290:.\SirenState_redo.c **** {
 548              		.loc 1 290 0
 549              		.cfi_startproc
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 16


 550              		@ args = 0, pretend = 0, frame = 8
 551              		@ frame_needed = 1, uses_anonymous_args = 0
 552 0000 80B5     		push	{r7, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 82B0     		sub	sp, sp, #8
 557              		.cfi_def_cfa_offset 16
 558 0004 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 291:.\SirenState_redo.c ****     enum ToneType toneToPlay = NO_TONE;
 560              		.loc 1 291 0
 561 0006 0023     		movs	r3, #0
 562 0008 FB71     		strb	r3, [r7, #7]
 292:.\SirenState_redo.c ****     uint16 addressIndex = 0;
 563              		.loc 1 292 0
 564 000a 0023     		movs	r3, #0
 565 000c BB80     		strh	r3, [r7, #4]	@ movhi
 293:.\SirenState_redo.c ****     uint8 channelIndex = 0;
 566              		.loc 1 293 0
 567 000e 0023     		movs	r3, #0
 568 0010 FB70     		strb	r3, [r7, #3]
 294:.\SirenState_redo.c ****     uint8 bSpeakerIndex = SPEAKER_1;
 569              		.loc 1 294 0
 570 0012 0023     		movs	r3, #0
 571 0014 BB71     		strb	r3, [r7, #6]
 295:.\SirenState_redo.c ****     
 296:.\SirenState_redo.c ****     InputRead.bTackSwitch = TackSwitchStatus_Read() & 0x01;
 572              		.loc 1 296 0
 573 0016 FFF7FEFF 		bl	TackSwitchStatus_Read
 574 001a 0346     		mov	r3, r0
 575 001c 03F00103 		and	r3, r3, #1
 576 0020 DAB2     		uxtb	r2, r3
 577 0022 4B4B     		ldr	r3, .L45
 578 0024 9A70     		strb	r2, [r3, #2]
 297:.\SirenState_redo.c ****     
 298:.\SirenState_redo.c ****     if((!InputRead.bRadioAndMicKey) && (!InputRead.bParkKill))
 579              		.loc 1 298 0
 580 0026 4A4B     		ldr	r3, .L45
 581 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 582 002a 002B     		cmp	r3, #0
 583 002c 40F08C80 		bne	.L37
 584              		.loc 1 298 0 is_stmt 0 discriminator 1
 585 0030 474B     		ldr	r3, .L45
 586 0032 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 587 0034 002B     		cmp	r3, #0
 588 0036 40F08780 		bne	.L37
 299:.\SirenState_redo.c ****     {
 300:.\SirenState_redo.c ****         if(InputRead.bTackSwitch)
 589              		.loc 1 300 0 is_stmt 1
 590 003a 454B     		ldr	r3, .L45
 591 003c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 592 003e 002B     		cmp	r3, #0
 593 0040 10D0     		beq	.L39
 301:.\SirenState_redo.c ****         {   
 302:.\SirenState_redo.c ****             deactivateAudio();
 594              		.loc 1 302 0
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 17


 595 0042 FFF7FEFF 		bl	deactivateAudio
 303:.\SirenState_redo.c ****             deactivateManualWail();
 596              		.loc 1 303 0
 597 0046 FFF7FEFF 		bl	deactivateManualWail
 304:.\SirenState_redo.c ****             stopPWMTone(SPEAKER_1);
 598              		.loc 1 304 0
 599 004a 0020     		movs	r0, #0
 600 004c FFF7FEFF 		bl	stopPWMTone
 305:.\SirenState_redo.c ****             stopPWMTone(SPEAKER_2); 
 601              		.loc 1 305 0
 602 0050 0120     		movs	r0, #1
 603 0052 FFF7FEFF 		bl	stopPWMTone
 306:.\SirenState_redo.c ****     		stopAudioTone(SPEAKER_1);
 604              		.loc 1 306 0
 605 0056 0020     		movs	r0, #0
 606 0058 FFF7FEFF 		bl	stopAudioTone
 307:.\SirenState_redo.c ****     		stopAudioTone(SPEAKER_2);
 607              		.loc 1 307 0
 608 005c 0120     		movs	r0, #1
 609 005e FFF7FEFF 		bl	stopAudioTone
 610 0062 71E0     		b	.L37
 611              	.L39:
 308:.\SirenState_redo.c ****         }
 309:.\SirenState_redo.c ****         else
 310:.\SirenState_redo.c ****         {   //Tack switch is disabled
 311:.\SirenState_redo.c ****             EEPROM_UpdateTemperature(); //Optimizes write timings based on temperature reading
 612              		.loc 1 311 0
 613 0064 FFF7FEFF 		bl	EEPROM_UpdateTemperature
 312:.\SirenState_redo.c ****             
 313:.\SirenState_redo.c ****             for(bSpeakerIndex = 0; bSpeakerIndex < SPEAKER_COUNT; bSpeakerIndex++)
 614              		.loc 1 313 0
 615 0068 0023     		movs	r3, #0
 616 006a BB71     		strb	r3, [r7, #6]
 617 006c 67E0     		b	.L40
 618              	.L44:
 314:.\SirenState_redo.c ****             {   //Speaker 1 addresses range 0x00 to 0x05, Speaker 2 addresses range 0x06 to 0x0B 
 315:.\SirenState_redo.c ****                 channelIndex = InputRead.highestPriorityChannel[bSpeakerIndex];
 619              		.loc 1 315 0
 620 006e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 621 0070 374A     		ldr	r2, .L45
 622 0072 1344     		add	r3, r3, r2
 623 0074 5B79     		ldrb	r3, [r3, #5]
 624 0076 FB70     		strb	r3, [r7, #3]
 316:.\SirenState_redo.c ****                 addressIndex = (uint16)(CHANNEL_COUNT_PER_SPEAKER * bSpeakerIndex + channelIndex);
 625              		.loc 1 316 0
 626 0078 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 627 007a 9BB2     		uxth	r3, r3
 628 007c 1A46     		mov	r2, r3	@ movhi
 629 007e 5200     		lsls	r2, r2, #1
 630 0080 1344     		add	r3, r3, r2
 631 0082 5B00     		lsls	r3, r3, #1
 632 0084 9AB2     		uxth	r2, r3
 633 0086 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 634 0088 9BB2     		uxth	r3, r3
 635 008a 1344     		add	r3, r3, r2
 636 008c BB80     		strh	r3, [r7, #4]	@ movhi
 317:.\SirenState_redo.c ****                 
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 18


 318:.\SirenState_redo.c ****                 if(channelIndex != NO_CHANNEL)
 637              		.loc 1 318 0
 638 008e FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 639 0090 062B     		cmp	r3, #6
 640 0092 51D0     		beq	.L41
 319:.\SirenState_redo.c ****                 {
 320:.\SirenState_redo.c ****                     if(toneToPlay == NO_TONE)
 641              		.loc 1 320 0
 642 0094 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 643 0096 002B     		cmp	r3, #0
 644 0098 1CD1     		bne	.L42
 321:.\SirenState_redo.c ****                     {   //Gets original tone for that channel as starting tone in the list         
 322:.\SirenState_redo.c ****                         toneToPlay = EEPROM_ReadByte(addressIndex);    
 645              		.loc 1 322 0
 646 009a BB88     		ldrh	r3, [r7, #4]
 647 009c 1846     		mov	r0, r3
 648 009e FFF7FEFF 		bl	EEPROM_ReadByte
 649 00a2 0346     		mov	r3, r0
 650 00a4 FB71     		strb	r3, [r7, #7]
 323:.\SirenState_redo.c ****                         toneToPlay = (toneToPlay + 1) % TONE_TYPE_LIST_SIZE;  //Increments to next 
 651              		.loc 1 323 0
 652 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 653 00a8 5A1C     		adds	r2, r3, #1
 654 00aa 2A4B     		ldr	r3, .L45+4
 655 00ac 82FB0301 		smull	r0, r1, r2, r3
 656 00b0 5318     		adds	r3, r2, r1
 657 00b2 1911     		asrs	r1, r3, #4
 658 00b4 D317     		asrs	r3, r2, #31
 659 00b6 C91A     		subs	r1, r1, r3
 660 00b8 0B46     		mov	r3, r1
 661 00ba 5B00     		lsls	r3, r3, #1
 662 00bc 0B44     		add	r3, r3, r1
 663 00be DB00     		lsls	r3, r3, #3
 664 00c0 5B1A     		subs	r3, r3, r1
 665 00c2 D11A     		subs	r1, r2, r3
 666 00c4 0B46     		mov	r3, r1
 667 00c6 FB71     		strb	r3, [r7, #7]
 324:.\SirenState_redo.c ****                         
 325:.\SirenState_redo.c ****                         if(toneToPlay == NO_TONE)
 668              		.loc 1 325 0
 669 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 670 00ca 002B     		cmp	r3, #0
 671 00cc 02D1     		bne	.L42
 326:.\SirenState_redo.c ****                             toneToPlay++;  //Makes sure a tone is always selected
 672              		.loc 1 326 0
 673 00ce FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 674 00d0 0133     		adds	r3, r3, #1
 675 00d2 FB71     		strb	r3, [r7, #7]
 676              	.L42:
 327:.\SirenState_redo.c ****                     }
 328:.\SirenState_redo.c ****                     
 329:.\SirenState_redo.c ****                     if(toneToPlay != NO_TONE)
 677              		.loc 1 329 0
 678 00d4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 679 00d6 002B     		cmp	r3, #0
 680 00d8 21D0     		beq	.L43
 330:.\SirenState_redo.c ****                     {   //Configure new tone to the enabled channels
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 19


 331:.\SirenState_redo.c ****                         EEPROM_WriteByte(toneToPlay, addressIndex);
 681              		.loc 1 331 0
 682 00da FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 683 00dc BB88     		ldrh	r3, [r7, #4]
 684 00de 1046     		mov	r0, r2
 685 00e0 1946     		mov	r1, r3
 686 00e2 FFF7FEFF 		bl	EEPROM_WriteByte
 332:.\SirenState_redo.c ****                         toneConfigurationList[bSpeakerIndex][channelIndex] = toneToPlay;
 687              		.loc 1 332 0
 688 00e6 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 689 00e8 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 690 00ea 1B48     		ldr	r0, .L45+8
 691 00ec 1346     		mov	r3, r2
 692 00ee 5B00     		lsls	r3, r3, #1
 693 00f0 1344     		add	r3, r3, r2
 694 00f2 5B00     		lsls	r3, r3, #1
 695 00f4 0B44     		add	r3, r3, r1
 696 00f6 0344     		add	r3, r3, r0
 697 00f8 FA79     		ldrb	r2, [r7, #7]
 698 00fa 1A70     		strb	r2, [r3]
 333:.\SirenState_redo.c ****                         Speaker[bSpeakerIndex].currentTone = toneToPlay;
 699              		.loc 1 333 0
 700 00fc BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 701 00fe 1749     		ldr	r1, .L45+12
 702 0100 FA79     		ldrb	r2, [r7, #7]
 703 0102 01F82320 		strb	r2, [r1, r3, lsl #2]
 334:.\SirenState_redo.c ****                         
 335:.\SirenState_redo.c ****                         if(Speaker[bSpeakerIndex].currentTone == MANUAL_WAIL)
 704              		.loc 1 335 0
 705 0106 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 706 0108 144A     		ldr	r2, .L45+12
 707 010a 12F82330 		ldrb	r3, [r2, r3, lsl #2]	@ zero_extendqisi2
 708 010e 072B     		cmp	r3, #7
 709 0110 05D1     		bne	.L43
 336:.\SirenState_redo.c ****                             Speaker[bSpeakerIndex].bManualWailToneStatus = true;
 710              		.loc 1 336 0
 711 0112 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 712 0114 114A     		ldr	r2, .L45+12
 713 0116 9B00     		lsls	r3, r3, #2
 714 0118 1344     		add	r3, r3, r2
 715 011a 0122     		movs	r2, #1
 716 011c 9A70     		strb	r2, [r3, #2]
 717              	.L43:
 337:.\SirenState_redo.c ****                     }
 338:.\SirenState_redo.c ****                     
 339:.\SirenState_redo.c ****                     if(isSong(toneToPlay))
 718              		.loc 1 339 0
 719 011e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 720 0120 1846     		mov	r0, r3
 721 0122 FFF7FEFF 		bl	isSong
 722 0126 0346     		mov	r3, r0
 723 0128 002B     		cmp	r3, #0
 724 012a 05D0     		beq	.L41
 340:.\SirenState_redo.c ****                         Speaker[bSpeakerIndex].bRisingEdge = true;
 725              		.loc 1 340 0
 726 012c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 727 012e 0B4A     		ldr	r2, .L45+12
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 20


 728 0130 9B00     		lsls	r3, r3, #2
 729 0132 1344     		add	r3, r3, r2
 730 0134 0122     		movs	r2, #1
 731 0136 5A70     		strb	r2, [r3, #1]
 732              	.L41:
 313:.\SirenState_redo.c ****             {   //Speaker 1 addresses range 0x00 to 0x05, Speaker 2 addresses range 0x06 to 0x0B 
 733              		.loc 1 313 0 discriminator 2
 734 0138 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 735 013a 0133     		adds	r3, r3, #1
 736 013c BB71     		strb	r3, [r7, #6]
 737              	.L40:
 313:.\SirenState_redo.c ****             {   //Speaker 1 addresses range 0x00 to 0x05, Speaker 2 addresses range 0x06 to 0x0B 
 738              		.loc 1 313 0 is_stmt 0 discriminator 1
 739 013e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 740 0140 012B     		cmp	r3, #1
 741 0142 94D9     		bls	.L44
 341:.\SirenState_redo.c ****                 }
 342:.\SirenState_redo.c ****             }
 343:.\SirenState_redo.c ****             
 344:.\SirenState_redo.c ****             updateAudio();  
 742              		.loc 1 344 0 is_stmt 1
 743 0144 FFF7FEFF 		bl	updateAudio
 744              	.L37:
 345:.\SirenState_redo.c ****         }
 346:.\SirenState_redo.c ****     }
 347:.\SirenState_redo.c **** }
 745              		.loc 1 347 0
 746 0148 0837     		adds	r7, r7, #8
 747              		.cfi_def_cfa_offset 8
 748 014a BD46     		mov	sp, r7
 749              		.cfi_def_cfa_register 13
 750              		@ sp needed
 751 014c 80BD     		pop	{r7, pc}
 752              	.L46:
 753 014e 00BF     		.align	2
 754              	.L45:
 755 0150 00000000 		.word	InputRead
 756 0154 C94216B2 		.word	-1307163959
 757 0158 10000000 		.word	toneConfigurationList
 758 015c 08000000 		.word	Speaker
 759              		.cfi_endproc
 760              	.LFE69:
 761              		.size	processTackSwitchRoutine, .-processTackSwitchRoutine
 762              		.section	.text.processHornRingRoutine,"ax",%progbits
 763              		.align	2
 764              		.global	processHornRingRoutine
 765              		.thumb
 766              		.thumb_func
 767              		.type	processHornRingRoutine, %function
 768              	processHornRingRoutine:
 769              	.LFB70:
 348:.\SirenState_redo.c **** 
 349:.\SirenState_redo.c **** /*******************************************************************************
 350:.\SirenState_redo.c **** * Function Name: processHornRingRoutine
 351:.\SirenState_redo.c **** ********************************************************************************
 352:.\SirenState_redo.c **** *
 353:.\SirenState_redo.c **** * Summary:
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 21


 354:.\SirenState_redo.c **** *  Updates the siren system for the horn input change, called in HornRingISR
 355:.\SirenState_redo.c **** *
 356:.\SirenState_redo.c **** * Parameters:  
 357:.\SirenState_redo.c **** *   None
 358:.\SirenState_redo.c **** *
 359:.\SirenState_redo.c **** * Return:
 360:.\SirenState_redo.c **** *   None
 361:.\SirenState_redo.c **** *
 362:.\SirenState_redo.c **** *******************************************************************************/
 363:.\SirenState_redo.c **** void processHornRingRoutine(void)
 364:.\SirenState_redo.c **** {
 770              		.loc 1 364 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 0
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774 0000 80B5     		push	{r7, lr}
 775              		.cfi_def_cfa_offset 8
 776              		.cfi_offset 7, -8
 777              		.cfi_offset 14, -4
 778 0002 00AF     		add	r7, sp, #0
 779              		.cfi_def_cfa_register 7
 365:.\SirenState_redo.c ****     InputRead.bHornRing = HornRingStatus_Read() & 0x01;
 780              		.loc 1 365 0
 781 0004 FFF7FEFF 		bl	HornRingStatus_Read
 782 0008 0346     		mov	r3, r0
 783 000a 03F00103 		and	r3, r3, #1
 784 000e DAB2     		uxtb	r2, r3
 785 0010 034B     		ldr	r3, .L48
 786 0012 DA70     		strb	r2, [r3, #3]
 366:.\SirenState_redo.c ****     processInputLogic();
 787              		.loc 1 366 0
 788 0014 FFF7FEFF 		bl	processInputLogic
 367:.\SirenState_redo.c **** 	updateAudio();
 789              		.loc 1 367 0
 790 0018 FFF7FEFF 		bl	updateAudio
 368:.\SirenState_redo.c **** }
 791              		.loc 1 368 0
 792 001c 80BD     		pop	{r7, pc}
 793              	.L49:
 794 001e 00BF     		.align	2
 795              	.L48:
 796 0020 00000000 		.word	InputRead
 797              		.cfi_endproc
 798              	.LFE70:
 799              		.size	processHornRingRoutine, .-processHornRingRoutine
 800              		.section	.text.processDualDelayRoutine,"ax",%progbits
 801              		.align	2
 802              		.global	processDualDelayRoutine
 803              		.thumb
 804              		.thumb_func
 805              		.type	processDualDelayRoutine, %function
 806              	processDualDelayRoutine:
 807              	.LFB71:
 369:.\SirenState_redo.c **** 
 370:.\SirenState_redo.c **** /*******************************************************************************
 371:.\SirenState_redo.c **** * Function Name: processDualDelayRoutine
 372:.\SirenState_redo.c **** ********************************************************************************
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 22


 373:.\SirenState_redo.c **** *
 374:.\SirenState_redo.c **** * Summary:
 375:.\SirenState_redo.c **** *  Activates delay functionality for the two current tones, called in DualDelayISR
 376:.\SirenState_redo.c **** *
 377:.\SirenState_redo.c **** * Parameters:  
 378:.\SirenState_redo.c **** *   None
 379:.\SirenState_redo.c **** *
 380:.\SirenState_redo.c **** * Return:
 381:.\SirenState_redo.c **** *   None
 382:.\SirenState_redo.c **** *
 383:.\SirenState_redo.c **** *******************************************************************************/
 384:.\SirenState_redo.c **** void processDualDelayRoutine(void)
 385:.\SirenState_redo.c **** {
 808              		.loc 1 385 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 0
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812 0000 80B5     		push	{r7, lr}
 813              		.cfi_def_cfa_offset 8
 814              		.cfi_offset 7, -8
 815              		.cfi_offset 14, -4
 816 0002 00AF     		add	r7, sp, #0
 817              		.cfi_def_cfa_register 7
 386:.\SirenState_redo.c ****     InputRead.bDualDelay = DualDelayStatus_Read() & 0x01;
 818              		.loc 1 386 0
 819 0004 FFF7FEFF 		bl	DualDelayStatus_Read
 820 0008 0346     		mov	r3, r0
 821 000a 03F00103 		and	r3, r3, #1
 822 000e DAB2     		uxtb	r2, r3
 823 0010 034B     		ldr	r3, .L51
 824 0012 1A71     		strb	r2, [r3, #4]
 387:.\SirenState_redo.c ****     processInputLogic();
 825              		.loc 1 387 0
 826 0014 FFF7FEFF 		bl	processInputLogic
 388:.\SirenState_redo.c **** 	updateAudio();
 827              		.loc 1 388 0
 828 0018 FFF7FEFF 		bl	updateAudio
 389:.\SirenState_redo.c **** }
 829              		.loc 1 389 0
 830 001c 80BD     		pop	{r7, pc}
 831              	.L52:
 832 001e 00BF     		.align	2
 833              	.L51:
 834 0020 00000000 		.word	InputRead
 835              		.cfi_endproc
 836              	.LFE71:
 837              		.size	processDualDelayRoutine, .-processDualDelayRoutine
 838              		.section	.text.processToneChangeRoutine,"ax",%progbits
 839              		.align	2
 840              		.global	processToneChangeRoutine
 841              		.thumb
 842              		.thumb_func
 843              		.type	processToneChangeRoutine, %function
 844              	processToneChangeRoutine:
 845              	.LFB72:
 390:.\SirenState_redo.c **** 
 391:.\SirenState_redo.c **** /*******************************************************************************
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 23


 392:.\SirenState_redo.c **** * Function Name: processToneChangeRoutine
 393:.\SirenState_redo.c **** ********************************************************************************
 394:.\SirenState_redo.c **** *
 395:.\SirenState_redo.c **** * Summary:
 396:.\SirenState_redo.c **** *  Updates the siren system for the tone input change, called in ModeStatusISR
 397:.\SirenState_redo.c **** *   and ModeStatus2ISR
 398:.\SirenState_redo.c **** *
 399:.\SirenState_redo.c **** * Parameters:  
 400:.\SirenState_redo.c **** *   None
 401:.\SirenState_redo.c **** *
 402:.\SirenState_redo.c **** * Return:
 403:.\SirenState_redo.c **** *   None
 404:.\SirenState_redo.c **** *
 405:.\SirenState_redo.c **** *******************************************************************************/
 406:.\SirenState_redo.c **** void processToneChangeRoutine(uint8 bSpeaker)
 407:.\SirenState_redo.c **** {  
 846              		.loc 1 407 0
 847              		.cfi_startproc
 848              		@ args = 0, pretend = 0, frame = 16
 849              		@ frame_needed = 1, uses_anonymous_args = 0
 850 0000 80B5     		push	{r7, lr}
 851              		.cfi_def_cfa_offset 8
 852              		.cfi_offset 7, -8
 853              		.cfi_offset 14, -4
 854 0002 84B0     		sub	sp, sp, #16
 855              		.cfi_def_cfa_offset 24
 856 0004 00AF     		add	r7, sp, #0
 857              		.cfi_def_cfa_register 7
 858 0006 0346     		mov	r3, r0
 859 0008 FB71     		strb	r3, [r7, #7]
 408:.\SirenState_redo.c ****     uint8 currentChannel = NO_CHANNEL;
 860              		.loc 1 408 0
 861 000a 0623     		movs	r3, #6
 862 000c FB73     		strb	r3, [r7, #15]
 409:.\SirenState_redo.c ****     
 410:.\SirenState_redo.c ****     if((bSpeaker != SPEAKER_1) && (bSpeaker != SPEAKER_2))
 863              		.loc 1 410 0
 864 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 865 0010 002B     		cmp	r3, #0
 866 0012 03D0     		beq	.L54
 867              		.loc 1 410 0 is_stmt 0 discriminator 1
 868 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 869 0016 012B     		cmp	r3, #1
 870 0018 00D0     		beq	.L54
 411:.\SirenState_redo.c ****         return;
 871              		.loc 1 411 0 is_stmt 1
 872 001a 3DE0     		b	.L53
 873              	.L54:
 412:.\SirenState_redo.c **** 	
 413:.\SirenState_redo.c **** 	currentChannel = getHighestPriorityChannel(bSpeaker);
 874              		.loc 1 413 0
 875 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 876 001e 1846     		mov	r0, r3
 877 0020 FFF7FEFF 		bl	getHighestPriorityChannel
 878 0024 0346     		mov	r3, r0
 879 0026 FB73     		strb	r3, [r7, #15]
 414:.\SirenState_redo.c **** 	if(currentChannel == NO_CHANNEL)
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 24


 880              		.loc 1 414 0
 881 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 882 002a 062B     		cmp	r3, #6
 883 002c 06D1     		bne	.L56
 415:.\SirenState_redo.c **** 		Speaker[bSpeaker].bRisingEdge = false;
 884              		.loc 1 415 0
 885 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 886 0030 1B4A     		ldr	r2, .L60
 887 0032 9B00     		lsls	r3, r3, #2
 888 0034 1344     		add	r3, r3, r2
 889 0036 0022     		movs	r2, #0
 890 0038 5A70     		strb	r2, [r3, #1]
 891 003a 19E0     		b	.L57
 892              	.L56:
 416:.\SirenState_redo.c **** 	else
 417:.\SirenState_redo.c **** 	{
 418:.\SirenState_redo.c **** 		if((InputRead.highestPriorityChannel[bSpeaker] == NO_CHANNEL) ||
 893              		.loc 1 418 0
 894 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 895 003e 194A     		ldr	r2, .L60+4
 896 0040 1344     		add	r3, r3, r2
 897 0042 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 898 0044 062B     		cmp	r3, #6
 899 0046 06D0     		beq	.L58
 419:.\SirenState_redo.c **** 			(currentChannel > InputRead.highestPriorityChannel[bSpeaker]))
 900              		.loc 1 419 0 discriminator 1
 901 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 902 004a 164A     		ldr	r2, .L60+4
 903 004c 1344     		add	r3, r3, r2
 904 004e 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 418:.\SirenState_redo.c **** 			(currentChannel > InputRead.highestPriorityChannel[bSpeaker]))
 905              		.loc 1 418 0 discriminator 1
 906 0050 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 907 0052 9A42     		cmp	r2, r3
 908 0054 06D9     		bls	.L59
 909              	.L58:
 420:.\SirenState_redo.c **** 			Speaker[bSpeaker].bRisingEdge = true;
 910              		.loc 1 420 0
 911 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 912 0058 114A     		ldr	r2, .L60
 913 005a 9B00     		lsls	r3, r3, #2
 914 005c 1344     		add	r3, r3, r2
 915 005e 0122     		movs	r2, #1
 916 0060 5A70     		strb	r2, [r3, #1]
 917 0062 05E0     		b	.L57
 918              	.L59:
 421:.\SirenState_redo.c **** 		else
 422:.\SirenState_redo.c **** 			Speaker[bSpeaker].bRisingEdge = false;
 919              		.loc 1 422 0
 920 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 921 0066 0E4A     		ldr	r2, .L60
 922 0068 9B00     		lsls	r3, r3, #2
 923 006a 1344     		add	r3, r3, r2
 924 006c 0022     		movs	r2, #0
 925 006e 5A70     		strb	r2, [r3, #1]
 926              	.L57:
 423:.\SirenState_redo.c **** 	}
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 25


 424:.\SirenState_redo.c ****     
 425:.\SirenState_redo.c **** 	Speaker[!bSpeaker].bRisingEdge = false;
 927              		.loc 1 425 0
 928 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 929 0072 002B     		cmp	r3, #0
 930 0074 0CBF     		ite	eq
 931 0076 0123     		moveq	r3, #1
 932 0078 0023     		movne	r3, #0
 933 007a DBB2     		uxtb	r3, r3
 934 007c 084A     		ldr	r2, .L60
 935 007e 9B00     		lsls	r3, r3, #2
 936 0080 1344     		add	r3, r3, r2
 937 0082 0022     		movs	r2, #0
 938 0084 5A70     		strb	r2, [r3, #1]
 426:.\SirenState_redo.c ****     InputRead.highestPriorityChannel[bSpeaker] = currentChannel;
 939              		.loc 1 426 0
 940 0086 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 941 0088 064A     		ldr	r2, .L60+4
 942 008a 1344     		add	r3, r3, r2
 943 008c FA7B     		ldrb	r2, [r7, #15]
 944 008e 5A71     		strb	r2, [r3, #5]
 427:.\SirenState_redo.c ****     processInputLogic();
 945              		.loc 1 427 0
 946 0090 FFF7FEFF 		bl	processInputLogic
 428:.\SirenState_redo.c **** 	updateAudio();
 947              		.loc 1 428 0
 948 0094 FFF7FEFF 		bl	updateAudio
 949              	.L53:
 429:.\SirenState_redo.c **** }
 950              		.loc 1 429 0
 951 0098 1037     		adds	r7, r7, #16
 952              		.cfi_def_cfa_offset 8
 953 009a BD46     		mov	sp, r7
 954              		.cfi_def_cfa_register 13
 955              		@ sp needed
 956 009c 80BD     		pop	{r7, pc}
 957              	.L61:
 958 009e 00BF     		.align	2
 959              	.L60:
 960 00a0 08000000 		.word	Speaker
 961 00a4 00000000 		.word	InputRead
 962              		.cfi_endproc
 963              	.LFE72:
 964              		.size	processToneChangeRoutine, .-processToneChangeRoutine
 965              		.section	.text.getHighestPriorityChannel,"ax",%progbits
 966              		.align	2
 967              		.thumb
 968              		.thumb_func
 969              		.type	getHighestPriorityChannel, %function
 970              	getHighestPriorityChannel:
 971              	.LFB73:
 430:.\SirenState_redo.c **** 
 431:.\SirenState_redo.c **** /*******************************************************************************
 432:.\SirenState_redo.c **** * Function Name: getHighestPriorityChannel
 433:.\SirenState_redo.c **** ********************************************************************************
 434:.\SirenState_redo.c **** *
 435:.\SirenState_redo.c **** * Summary:
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 26


 436:.\SirenState_redo.c **** *  Determines the active tone with the highest priority
 437:.\SirenState_redo.c **** *
 438:.\SirenState_redo.c **** * Parameters: 
 439:.\SirenState_redo.c **** *   bSpeakerNumber - The speaker selection for the input reading
 440:.\SirenState_redo.c **** *
 441:.\SirenState_redo.c **** * Return:
 442:.\SirenState_redo.c **** *   The active tone mode with the highest priority
 443:.\SirenState_redo.c **** *
 444:.\SirenState_redo.c **** *******************************************************************************/
 445:.\SirenState_redo.c **** static enum ToneChannelNumber getHighestPriorityChannel(uint8 bSpeakerNumber)
 446:.\SirenState_redo.c **** {
 972              		.loc 1 446 0
 973              		.cfi_startproc
 974              		@ args = 0, pretend = 0, frame = 16
 975              		@ frame_needed = 1, uses_anonymous_args = 0
 976 0000 80B5     		push	{r7, lr}
 977              		.cfi_def_cfa_offset 8
 978              		.cfi_offset 7, -8
 979              		.cfi_offset 14, -4
 980 0002 84B0     		sub	sp, sp, #16
 981              		.cfi_def_cfa_offset 24
 982 0004 00AF     		add	r7, sp, #0
 983              		.cfi_def_cfa_register 7
 984 0006 0346     		mov	r3, r0
 985 0008 FB71     		strb	r3, [r7, #7]
 447:.\SirenState_redo.c ****     uint8 modeStatusByte = 0;
 986              		.loc 1 447 0
 987 000a 0023     		movs	r3, #0
 988 000c FB73     		strb	r3, [r7, #15]
 448:.\SirenState_redo.c ****     
 449:.\SirenState_redo.c ****     if((bSpeakerNumber != 0) && (bSpeakerNumber != SPEAKER_2))
 989              		.loc 1 449 0
 990 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 991 0010 002B     		cmp	r3, #0
 992 0012 04D0     		beq	.L63
 993              		.loc 1 449 0 is_stmt 0 discriminator 1
 994 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 995 0016 012B     		cmp	r3, #1
 996 0018 01D0     		beq	.L63
 450:.\SirenState_redo.c ****         return NO_CHANNEL;
 997              		.loc 1 450 0 is_stmt 1
 998 001a 0623     		movs	r3, #6
 999 001c 36E0     		b	.L64
 1000              	.L63:
 451:.\SirenState_redo.c ****     
 452:.\SirenState_redo.c ****     if(bSpeakerNumber)
 1001              		.loc 1 452 0
 1002 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1003 0020 002B     		cmp	r3, #0
 1004 0022 04D0     		beq	.L65
 453:.\SirenState_redo.c ****         modeStatusByte = ModeStatus2_Read();
 1005              		.loc 1 453 0
 1006 0024 FFF7FEFF 		bl	ModeStatus2_Read
 1007 0028 0346     		mov	r3, r0
 1008 002a FB73     		strb	r3, [r7, #15]
 1009 002c 03E0     		b	.L66
 1010              	.L65:
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 27


 454:.\SirenState_redo.c ****     else
 455:.\SirenState_redo.c ****         modeStatusByte = ModeStatus_Read();
 1011              		.loc 1 455 0
 1012 002e FFF7FEFF 		bl	ModeStatus_Read
 1013 0032 0346     		mov	r3, r0
 1014 0034 FB73     		strb	r3, [r7, #15]
 1015              	.L66:
 456:.\SirenState_redo.c ****     
 457:.\SirenState_redo.c ****     if(modeStatusByte & 0x20)
 1016              		.loc 1 457 0
 1017 0036 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1018 0038 03F02003 		and	r3, r3, #32
 1019 003c 002B     		cmp	r3, #0
 1020 003e 01D0     		beq	.L67
 458:.\SirenState_redo.c ****         return CHANNEL_6;
 1021              		.loc 1 458 0
 1022 0040 0523     		movs	r3, #5
 1023 0042 23E0     		b	.L64
 1024              	.L67:
 459:.\SirenState_redo.c ****     if(modeStatusByte & 0x10)
 1025              		.loc 1 459 0
 1026 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1027 0046 03F01003 		and	r3, r3, #16
 1028 004a 002B     		cmp	r3, #0
 1029 004c 01D0     		beq	.L68
 460:.\SirenState_redo.c ****         return CHANNEL_5;
 1030              		.loc 1 460 0
 1031 004e 0423     		movs	r3, #4
 1032 0050 1CE0     		b	.L64
 1033              	.L68:
 461:.\SirenState_redo.c ****     if(modeStatusByte & 0x08)
 1034              		.loc 1 461 0
 1035 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1036 0054 03F00803 		and	r3, r3, #8
 1037 0058 002B     		cmp	r3, #0
 1038 005a 01D0     		beq	.L69
 462:.\SirenState_redo.c ****         return CHANNEL_4;
 1039              		.loc 1 462 0
 1040 005c 0323     		movs	r3, #3
 1041 005e 15E0     		b	.L64
 1042              	.L69:
 463:.\SirenState_redo.c ****     if(modeStatusByte & 0x04)
 1043              		.loc 1 463 0
 1044 0060 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1045 0062 03F00403 		and	r3, r3, #4
 1046 0066 002B     		cmp	r3, #0
 1047 0068 01D0     		beq	.L70
 464:.\SirenState_redo.c ****         return CHANNEL_3;    
 1048              		.loc 1 464 0
 1049 006a 0223     		movs	r3, #2
 1050 006c 0EE0     		b	.L64
 1051              	.L70:
 465:.\SirenState_redo.c ****     if(modeStatusByte & 0x02)
 1052              		.loc 1 465 0
 1053 006e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1054 0070 03F00203 		and	r3, r3, #2
 1055 0074 002B     		cmp	r3, #0
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 28


 1056 0076 01D0     		beq	.L71
 466:.\SirenState_redo.c ****         return CHANNEL_2;
 1057              		.loc 1 466 0
 1058 0078 0123     		movs	r3, #1
 1059 007a 07E0     		b	.L64
 1060              	.L71:
 467:.\SirenState_redo.c ****     if(modeStatusByte & 0x01)
 1061              		.loc 1 467 0
 1062 007c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1063 007e 03F00103 		and	r3, r3, #1
 1064 0082 002B     		cmp	r3, #0
 1065 0084 01D0     		beq	.L72
 468:.\SirenState_redo.c ****         return CHANNEL_1;
 1066              		.loc 1 468 0
 1067 0086 0023     		movs	r3, #0
 1068 0088 00E0     		b	.L64
 1069              	.L72:
 469:.\SirenState_redo.c ****     
 470:.\SirenState_redo.c ****     return NO_CHANNEL;
 1070              		.loc 1 470 0
 1071 008a 0623     		movs	r3, #6
 1072              	.L64:
 471:.\SirenState_redo.c **** }
 1073              		.loc 1 471 0
 1074 008c 1846     		mov	r0, r3
 1075 008e 1037     		adds	r7, r7, #16
 1076              		.cfi_def_cfa_offset 8
 1077 0090 BD46     		mov	sp, r7
 1078              		.cfi_def_cfa_register 13
 1079              		@ sp needed
 1080 0092 80BD     		pop	{r7, pc}
 1081              		.cfi_endproc
 1082              	.LFE73:
 1083              		.size	getHighestPriorityChannel, .-getHighestPriorityChannel
 1084              		.section	.text.processInputLogic,"ax",%progbits
 1085              		.align	2
 1086              		.thumb
 1087              		.thumb_func
 1088              		.type	processInputLogic, %function
 1089              	processInputLogic:
 1090              	.LFB74:
 472:.\SirenState_redo.c **** 
 473:.\SirenState_redo.c **** /*******************************************************************************
 474:.\SirenState_redo.c **** * Function Name: processInputLogic
 475:.\SirenState_redo.c **** ********************************************************************************
 476:.\SirenState_redo.c **** *
 477:.\SirenState_redo.c **** * Summary:
 478:.\SirenState_redo.c **** *  The state machine that determines the tone outcome for each speaker.
 479:.\SirenState_redo.c **** *
 480:.\SirenState_redo.c **** * Parameters:  
 481:.\SirenState_redo.c **** *   None
 482:.\SirenState_redo.c **** *
 483:.\SirenState_redo.c **** * Return:
 484:.\SirenState_redo.c **** *   None
 485:.\SirenState_redo.c **** *
 486:.\SirenState_redo.c **** *******************************************************************************/
 487:.\SirenState_redo.c **** static void processInputLogic(void)
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 29


 488:.\SirenState_redo.c **** {
 1091              		.loc 1 488 0
 1092              		.cfi_startproc
 1093              		@ args = 0, pretend = 0, frame = 8
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095 0000 90B5     		push	{r4, r7, lr}
 1096              		.cfi_def_cfa_offset 12
 1097              		.cfi_offset 4, -12
 1098              		.cfi_offset 7, -8
 1099              		.cfi_offset 14, -4
 1100 0002 83B0     		sub	sp, sp, #12
 1101              		.cfi_def_cfa_offset 24
 1102 0004 00AF     		add	r7, sp, #0
 1103              		.cfi_def_cfa_register 7
 489:.\SirenState_redo.c **** 	enum InputType highestPriorityInput = NO_INPUT;
 1104              		.loc 1 489 0
 1105 0006 0523     		movs	r3, #5
 1106 0008 BB71     		strb	r3, [r7, #6]
 490:.\SirenState_redo.c **** 	enum ToneChannelNumber currentChannel = NO_CHANNEL;
 1107              		.loc 1 490 0
 1108 000a 0623     		movs	r3, #6
 1109 000c 7B71     		strb	r3, [r7, #5]
 491:.\SirenState_redo.c ****     uint8 bSpeakerIndex = SPEAKER_1;
 1110              		.loc 1 491 0
 1111 000e 0023     		movs	r3, #0
 1112 0010 FB71     		strb	r3, [r7, #7]
 492:.\SirenState_redo.c **** 	
 493:.\SirenState_redo.c **** 	highestPriorityInput = getHighestPriorityInput();
 1113              		.loc 1 493 0
 1114 0012 FFF7FEFF 		bl	getHighestPriorityInput
 1115 0016 0346     		mov	r3, r0
 1116 0018 BB71     		strb	r3, [r7, #6]
 494:.\SirenState_redo.c **** 	
 495:.\SirenState_redo.c **** 	switch(highestPriorityInput)
 1117              		.loc 1 495 0
 1118 001a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1119 001c 052B     		cmp	r3, #5
 1120 001e 00F27D81 		bhi	.L107
 1121 0022 01A2     		adr	r2, .L76
 1122 0024 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1123              		.p2align 2
 1124              	.L76:
 1125 0028 41000000 		.word	.L75+1
 1126 002c 4F000000 		.word	.L77+1
 1127 0030 3D010000 		.word	.L78+1
 1128 0034 4B010000 		.word	.L79+1
 1129 0038 91010000 		.word	.L80+1
 1130 003c 7B020000 		.word	.L81+1
 1131              		.p2align 1
 1132              	.L75:
 496:.\SirenState_redo.c **** 	{
 497:.\SirenState_redo.c **** 		case RADIO_MIC:
 498:.\SirenState_redo.c **** 			Speaker[SPEAKER_1].currentTone = NO_TONE;
 1133              		.loc 1 498 0
 1134 0040 A64B     		ldr	r3, .L108
 1135 0042 0022     		movs	r2, #0
 1136 0044 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 30


 499:.\SirenState_redo.c **** 			Speaker[SPEAKER_2].currentTone = NO_TONE;			
 1137              		.loc 1 499 0
 1138 0046 A54B     		ldr	r3, .L108
 1139 0048 0022     		movs	r2, #0
 1140 004a 1A71     		strb	r2, [r3, #4]
 500:.\SirenState_redo.c **** 			break;
 1141              		.loc 1 500 0
 1142 004c 67E1     		b	.L73
 1143              	.L77:
 501:.\SirenState_redo.c **** 			
 502:.\SirenState_redo.c **** 		case AUDIO_TONE:	//One of the speakers is configured to an audio tone
 503:.\SirenState_redo.c ****             currentChannel = InputRead.highestPriorityChannel[SPEAKER_1];
 1144              		.loc 1 503 0
 1145 004e A44B     		ldr	r3, .L108+4
 1146 0050 5B79     		ldrb	r3, [r3, #5]
 1147 0052 7B71     		strb	r3, [r7, #5]
 504:.\SirenState_redo.c **** 			if((currentChannel != NO_CHANNEL) && (!isAudioTone(toneConfigurationList[SPEAKER_1][currentChann
 1148              		.loc 1 504 0
 1149 0054 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1150 0056 062B     		cmp	r3, #6
 1151 0058 40D0     		beq	.L83
 1152              		.loc 1 504 0 is_stmt 0 discriminator 1
 1153 005a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1154 005c A14A     		ldr	r2, .L108+8
 1155 005e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1156 0060 1846     		mov	r0, r3
 1157 0062 FFF7FEFF 		bl	isAudioTone
 1158 0066 0346     		mov	r3, r0
 1159 0068 002B     		cmp	r3, #0
 1160 006a 37D1     		bne	.L83
 505:.\SirenState_redo.c **** 			{
 506:.\SirenState_redo.c ****                 currentChannel = InputRead.highestPriorityChannel[SPEAKER_2];
 1161              		.loc 1 506 0 is_stmt 1
 1162 006c 9C4B     		ldr	r3, .L108+4
 1163 006e 9B79     		ldrb	r3, [r3, #6]
 1164 0070 7B71     		strb	r3, [r7, #5]
 507:.\SirenState_redo.c ****                 if(!isSong(toneConfigurationList[SPEAKER_2][currentChannel]))
 1165              		.loc 1 507 0
 1166 0072 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1167 0074 9B4A     		ldr	r2, .L108+8
 1168 0076 1344     		add	r3, r3, r2
 1169 0078 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 1170 007a 1846     		mov	r0, r3
 1171 007c FFF7FEFF 		bl	isSong
 1172 0080 0346     		mov	r3, r0
 1173 0082 002B     		cmp	r3, #0
 1174 0084 0CD1     		bne	.L84
 508:.\SirenState_redo.c ****                 {
 509:.\SirenState_redo.c ****                     Speaker[SPEAKER_1].currentTone = toneConfigurationList[SPEAKER_2][currentChanne
 1175              		.loc 1 509 0
 1176 0086 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1177 0088 964A     		ldr	r2, .L108+8
 1178 008a 1344     		add	r3, r3, r2
 1179 008c 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1180 008e 934B     		ldr	r3, .L108
 1181 0090 1A70     		strb	r2, [r3]
 510:.\SirenState_redo.c **** 					Speaker[SPEAKER_2].currentTone = toneConfigurationList[SPEAKER_2][currentChannel];    
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 31


 1182              		.loc 1 510 0
 1183 0092 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1184 0094 934A     		ldr	r2, .L108+8
 1185 0096 1344     		add	r3, r3, r2
 1186 0098 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1187 009a 904B     		ldr	r3, .L108
 1188 009c 1A71     		strb	r2, [r3, #4]
 1189 009e 1CE0     		b	.L85
 1190              	.L84:
 511:.\SirenState_redo.c ****                 }
 512:.\SirenState_redo.c ****                 else
 513:.\SirenState_redo.c ****                 {
 514:.\SirenState_redo.c ****                     if((Speaker[SPEAKER_2].bRisingEdge == true) || (!isSongFinished()))
 1191              		.loc 1 514 0
 1192 00a0 8E4B     		ldr	r3, .L108
 1193 00a2 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
 1194 00a4 012B     		cmp	r3, #1
 1195 00a6 04D0     		beq	.L86
 1196              		.loc 1 514 0 is_stmt 0 discriminator 1
 1197 00a8 FFF7FEFF 		bl	isSongFinished
 1198 00ac 0346     		mov	r3, r0
 1199 00ae 002B     		cmp	r3, #0
 1200 00b0 0CD1     		bne	.L87
 1201              	.L86:
 515:.\SirenState_redo.c ****                     {
 516:.\SirenState_redo.c ****                         Speaker[SPEAKER_1].currentTone = toneConfigurationList[SPEAKER_2][currentCh
 1202              		.loc 1 516 0 is_stmt 1
 1203 00b2 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1204 00b4 8B4A     		ldr	r2, .L108+8
 1205 00b6 1344     		add	r3, r3, r2
 1206 00b8 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1207 00ba 884B     		ldr	r3, .L108
 1208 00bc 1A70     		strb	r2, [r3]
 517:.\SirenState_redo.c ****     					Speaker[SPEAKER_2].currentTone = toneConfigurationList[SPEAKER_2][currentChannel];    
 1209              		.loc 1 517 0
 1210 00be 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1211 00c0 884A     		ldr	r2, .L108+8
 1212 00c2 1344     		add	r3, r3, r2
 1213 00c4 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 1214 00c6 854B     		ldr	r3, .L108
 1215 00c8 1A71     		strb	r2, [r3, #4]
 1216 00ca 06E0     		b	.L85
 1217              	.L87:
 518:.\SirenState_redo.c ****                     }
 519:.\SirenState_redo.c ****                     else
 520:.\SirenState_redo.c ****                     {
 521:.\SirenState_redo.c ****                         Speaker[SPEAKER_1].currentTone = NO_TONE;
 1218              		.loc 1 521 0
 1219 00cc 834B     		ldr	r3, .L108
 1220 00ce 0022     		movs	r2, #0
 1221 00d0 1A70     		strb	r2, [r3]
 522:.\SirenState_redo.c **** 					    Speaker[SPEAKER_2].currentTone = NO_TONE;
 1222              		.loc 1 522 0
 1223 00d2 824B     		ldr	r3, .L108
 1224 00d4 0022     		movs	r2, #0
 1225 00d6 1A71     		strb	r2, [r3, #4]
 507:.\SirenState_redo.c ****                 {
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 32


 1226              		.loc 1 507 0
 1227 00d8 2FE0     		b	.L88
 1228              	.L85:
 1229 00da 2EE0     		b	.L88
 1230              	.L83:
 523:.\SirenState_redo.c ****                     }
 524:.\SirenState_redo.c ****                 }
 525:.\SirenState_redo.c ****             }
 526:.\SirenState_redo.c ****             else
 527:.\SirenState_redo.c ****             {
 528:.\SirenState_redo.c ****                 if(!isSong(toneConfigurationList[SPEAKER_1][currentChannel]))
 1231              		.loc 1 528 0
 1232 00dc 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1233 00de 814A     		ldr	r2, .L108+8
 1234 00e0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1235 00e2 1846     		mov	r0, r3
 1236 00e4 FFF7FEFF 		bl	isSong
 1237 00e8 0346     		mov	r3, r0
 1238 00ea 002B     		cmp	r3, #0
 1239 00ec 0AD1     		bne	.L89
 529:.\SirenState_redo.c ****                 {
 530:.\SirenState_redo.c ****                     Speaker[SPEAKER_1].currentTone = toneConfigurationList[SPEAKER_1][currentChanne
 1240              		.loc 1 530 0
 1241 00ee 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1242 00f0 7C4A     		ldr	r2, .L108+8
 1243 00f2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1244 00f4 794B     		ldr	r3, .L108
 1245 00f6 1A70     		strb	r2, [r3]
 531:.\SirenState_redo.c **** 					Speaker[SPEAKER_2].currentTone = toneConfigurationList[SPEAKER_1][currentChannel];    
 1246              		.loc 1 531 0
 1247 00f8 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1248 00fa 7A4A     		ldr	r2, .L108+8
 1249 00fc D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1250 00fe 774B     		ldr	r3, .L108
 1251 0100 1A71     		strb	r2, [r3, #4]
 1252 0102 1AE0     		b	.L88
 1253              	.L89:
 532:.\SirenState_redo.c ****                 }
 533:.\SirenState_redo.c ****                 else
 534:.\SirenState_redo.c ****                 {
 535:.\SirenState_redo.c ****                     if((Speaker[SPEAKER_1].bRisingEdge == true) || (!isSongFinished()))
 1254              		.loc 1 535 0
 1255 0104 754B     		ldr	r3, .L108
 1256 0106 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1257 0108 012B     		cmp	r3, #1
 1258 010a 04D0     		beq	.L90
 1259              		.loc 1 535 0 is_stmt 0 discriminator 1
 1260 010c FFF7FEFF 		bl	isSongFinished
 1261 0110 0346     		mov	r3, r0
 1262 0112 002B     		cmp	r3, #0
 1263 0114 0AD1     		bne	.L91
 1264              	.L90:
 536:.\SirenState_redo.c ****                     {
 537:.\SirenState_redo.c ****                         Speaker[SPEAKER_1].currentTone = toneConfigurationList[SPEAKER_1][currentCh
 1265              		.loc 1 537 0 is_stmt 1
 1266 0116 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1267 0118 724A     		ldr	r2, .L108+8
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 33


 1268 011a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1269 011c 6F4B     		ldr	r3, .L108
 1270 011e 1A70     		strb	r2, [r3]
 538:.\SirenState_redo.c ****     					Speaker[SPEAKER_2].currentTone = toneConfigurationList[SPEAKER_1][currentChannel];    
 1271              		.loc 1 538 0
 1272 0120 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1273 0122 704A     		ldr	r2, .L108+8
 1274 0124 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1275 0126 6D4B     		ldr	r3, .L108
 1276 0128 1A71     		strb	r2, [r3, #4]
 1277 012a 06E0     		b	.L88
 1278              	.L91:
 539:.\SirenState_redo.c ****                     }
 540:.\SirenState_redo.c ****                     else
 541:.\SirenState_redo.c ****                     {
 542:.\SirenState_redo.c ****                         Speaker[SPEAKER_1].currentTone = NO_TONE;
 1279              		.loc 1 542 0
 1280 012c 6B4B     		ldr	r3, .L108
 1281 012e 0022     		movs	r2, #0
 1282 0130 1A70     		strb	r2, [r3]
 543:.\SirenState_redo.c **** 					    Speaker[SPEAKER_2].currentTone = NO_TONE;
 1283              		.loc 1 543 0
 1284 0132 6A4B     		ldr	r3, .L108
 1285 0134 0022     		movs	r2, #0
 1286 0136 1A71     		strb	r2, [r3, #4]
 544:.\SirenState_redo.c ****                     }
 545:.\SirenState_redo.c ****                 }
 546:.\SirenState_redo.c ****             }		
 547:.\SirenState_redo.c **** 			break;
 1287              		.loc 1 547 0
 1288 0138 F1E0     		b	.L73
 1289              	.L88:
 1290              		.loc 1 547 0 is_stmt 0 discriminator 1
 1291 013a F0E0     		b	.L73
 1292              	.L78:
 548:.\SirenState_redo.c **** 			
 549:.\SirenState_redo.c **** 		case PARK_KILL:
 550:.\SirenState_redo.c **** 			Speaker[SPEAKER_1].currentTone = NO_TONE;
 1293              		.loc 1 550 0 is_stmt 1
 1294 013c 674B     		ldr	r3, .L108
 1295 013e 0022     		movs	r2, #0
 1296 0140 1A70     		strb	r2, [r3]
 551:.\SirenState_redo.c **** 			Speaker[SPEAKER_2].currentTone = NO_TONE;
 1297              		.loc 1 551 0
 1298 0142 664B     		ldr	r3, .L108
 1299 0144 0022     		movs	r2, #0
 1300 0146 1A71     		strb	r2, [r3, #4]
 552:.\SirenState_redo.c **** 			break;
 1301              		.loc 1 552 0
 1302 0148 E9E0     		b	.L73
 1303              	.L79:
 553:.\SirenState_redo.c **** 			
 554:.\SirenState_redo.c **** 		case HORN_RING:
 555:.\SirenState_redo.c **** 			if((InputRead.highestPriorityChannel[SPEAKER_1] == NO_CHANNEL) &&
 1304              		.loc 1 555 0
 1305 014a 654B     		ldr	r3, .L108+4
 1306 014c 5B79     		ldrb	r3, [r3, #5]	@ zero_extendqisi2
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 34


 1307 014e 062B     		cmp	r3, #6
 1308 0150 0DD1     		bne	.L92
 556:.\SirenState_redo.c **** 				(InputRead.highestPriorityChannel[SPEAKER_2] == NO_CHANNEL))
 1309              		.loc 1 556 0 discriminator 1
 1310 0152 634B     		ldr	r3, .L108+4
 1311 0154 9B79     		ldrb	r3, [r3, #6]	@ zero_extendqisi2
 555:.\SirenState_redo.c **** 				(InputRead.highestPriorityChannel[SPEAKER_2] == NO_CHANNEL))
 1312              		.loc 1 555 0 discriminator 1
 1313 0156 062B     		cmp	r3, #6
 1314 0158 09D1     		bne	.L92
 557:.\SirenState_redo.c **** 			{
 558:.\SirenState_redo.c **** 				bToneChangeOnHornRing = false;
 1315              		.loc 1 558 0
 1316 015a 634B     		ldr	r3, .L108+12
 1317 015c 0022     		movs	r2, #0
 1318 015e 1A70     		strb	r2, [r3]
 559:.\SirenState_redo.c **** 				Speaker[SPEAKER_1].currentTone = HORN;
 1319              		.loc 1 559 0
 1320 0160 5E4B     		ldr	r3, .L108
 1321 0162 0522     		movs	r2, #5
 1322 0164 1A70     		strb	r2, [r3]
 560:.\SirenState_redo.c **** 				Speaker[SPEAKER_2].currentTone = HORN;
 1323              		.loc 1 560 0
 1324 0166 5D4B     		ldr	r3, .L108
 1325 0168 0522     		movs	r2, #5
 1326 016a 1A71     		strb	r2, [r3, #4]
 561:.\SirenState_redo.c **** 			}
 562:.\SirenState_redo.c **** 			else
 563:.\SirenState_redo.c **** 			{
 564:.\SirenState_redo.c **** 				bToneChangeOnHornRing = !bToneChangeOnHornRing;
 565:.\SirenState_redo.c **** 				Speaker[SPEAKER_1].currentTone = NO_TONE;
 566:.\SirenState_redo.c **** 				Speaker[SPEAKER_2].currentTone = NO_TONE;
 567:.\SirenState_redo.c **** 			}
 568:.\SirenState_redo.c **** 			break;
 1327              		.loc 1 568 0
 1328 016c D7E0     		b	.L73
 1329              	.L92:
 564:.\SirenState_redo.c **** 				Speaker[SPEAKER_1].currentTone = NO_TONE;
 1330              		.loc 1 564 0
 1331 016e 5E4B     		ldr	r3, .L108+12
 1332 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1333 0172 002B     		cmp	r3, #0
 1334 0174 0CBF     		ite	eq
 1335 0176 0123     		moveq	r3, #1
 1336 0178 0023     		movne	r3, #0
 1337 017a DBB2     		uxtb	r3, r3
 1338 017c 1A46     		mov	r2, r3
 1339 017e 5A4B     		ldr	r3, .L108+12
 1340 0180 1A70     		strb	r2, [r3]
 565:.\SirenState_redo.c **** 				Speaker[SPEAKER_2].currentTone = NO_TONE;
 1341              		.loc 1 565 0
 1342 0182 564B     		ldr	r3, .L108
 1343 0184 0022     		movs	r2, #0
 1344 0186 1A70     		strb	r2, [r3]
 566:.\SirenState_redo.c **** 			}
 1345              		.loc 1 566 0
 1346 0188 544B     		ldr	r3, .L108
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 35


 1347 018a 0022     		movs	r2, #0
 1348 018c 1A71     		strb	r2, [r3, #4]
 1349              		.loc 1 568 0
 1350 018e C6E0     		b	.L73
 1351              	.L80:
 569:.\SirenState_redo.c **** 			
 570:.\SirenState_redo.c **** 		case SIREN_TONE:
 571:.\SirenState_redo.c **** 			for(bSpeakerIndex = 0; bSpeakerIndex < SPEAKER_COUNT; bSpeakerIndex++)
 1352              		.loc 1 571 0
 1353 0190 0023     		movs	r3, #0
 1354 0192 FB71     		strb	r3, [r7, #7]
 1355 0194 6DE0     		b	.L94
 1356              	.L101:
 572:.\SirenState_redo.c **** 			{
 573:.\SirenState_redo.c **** 				currentChannel = InputRead.highestPriorityChannel[bSpeakerIndex];
 1357              		.loc 1 573 0
 1358 0196 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1359 0198 514A     		ldr	r2, .L108+4
 1360 019a 1344     		add	r3, r3, r2
 1361 019c 5B79     		ldrb	r3, [r3, #5]
 1362 019e 7B71     		strb	r3, [r7, #5]
 574:.\SirenState_redo.c **** 				
 575:.\SirenState_redo.c **** 				if(currentChannel == NO_CHANNEL)
 1363              		.loc 1 575 0
 1364 01a0 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1365 01a2 062B     		cmp	r3, #6
 1366 01a4 3CD1     		bne	.L95
 576:.\SirenState_redo.c **** 				{
 577:.\SirenState_redo.c **** 					if(isTrailingAudioTone(Speaker[bSpeakerIndex].currentTone) && isAudioActive())
 1367              		.loc 1 577 0
 1368 01a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1369 01a8 4C4A     		ldr	r2, .L108
 1370 01aa 12F82330 		ldrb	r3, [r2, r3, lsl #2]	@ zero_extendqisi2
 1371 01ae 1846     		mov	r0, r3
 1372 01b0 FFF7FEFF 		bl	isTrailingAudioTone
 1373 01b4 0346     		mov	r3, r0
 1374 01b6 002B     		cmp	r3, #0
 1375 01b8 0BD0     		beq	.L96
 1376              		.loc 1 577 0 is_stmt 0 discriminator 1
 1377 01ba FFF7FEFF 		bl	isAudioActive
 1378 01be 0346     		mov	r3, r0
 1379 01c0 002B     		cmp	r3, #0
 1380 01c2 06D0     		beq	.L96
 578:.\SirenState_redo.c **** 						Speaker[bSpeakerIndex].bAudioToneStatus = true;
 1381              		.loc 1 578 0 is_stmt 1
 1382 01c4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1383 01c6 454A     		ldr	r2, .L108
 1384 01c8 9B00     		lsls	r3, r3, #2
 1385 01ca 1344     		add	r3, r3, r2
 1386 01cc 0122     		movs	r2, #1
 1387 01ce DA70     		strb	r2, [r3, #3]
 1388 01d0 25E0     		b	.L97
 1389              	.L96:
 579:.\SirenState_redo.c **** 					else if((Speaker[bSpeakerIndex].currentTone == MANUAL_WAIL) && 
 1390              		.loc 1 579 0
 1391 01d2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1392 01d4 414A     		ldr	r2, .L108
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 36


 1393 01d6 12F82330 		ldrb	r3, [r2, r3, lsl #2]	@ zero_extendqisi2
 1394 01da 072B     		cmp	r3, #7
 1395 01dc 0DD1     		bne	.L98
 580:.\SirenState_redo.c ****                         isManualWailActive(bSpeakerIndex))
 1396              		.loc 1 580 0 discriminator 1
 1397 01de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1398 01e0 1846     		mov	r0, r3
 1399 01e2 FFF7FEFF 		bl	isManualWailActive
 1400 01e6 0346     		mov	r3, r0
 579:.\SirenState_redo.c **** 					else if((Speaker[bSpeakerIndex].currentTone == MANUAL_WAIL) && 
 1401              		.loc 1 579 0 discriminator 1
 1402 01e8 002B     		cmp	r3, #0
 1403 01ea 06D0     		beq	.L98
 581:.\SirenState_redo.c **** 						Speaker[bSpeakerIndex].bManualWailToneStatus = true;
 1404              		.loc 1 581 0
 1405 01ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1406 01ee 3B4A     		ldr	r2, .L108
 1407 01f0 9B00     		lsls	r3, r3, #2
 1408 01f2 1344     		add	r3, r3, r2
 1409 01f4 0122     		movs	r2, #1
 1410 01f6 9A70     		strb	r2, [r3, #2]
 1411 01f8 11E0     		b	.L97
 1412              	.L98:
 582:.\SirenState_redo.c **** 					else
 583:.\SirenState_redo.c **** 					{
 584:.\SirenState_redo.c **** 						Speaker[bSpeakerIndex].bAudioToneStatus = false;
 1413              		.loc 1 584 0
 1414 01fa FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1415 01fc 374A     		ldr	r2, .L108
 1416 01fe 9B00     		lsls	r3, r3, #2
 1417 0200 1344     		add	r3, r3, r2
 1418 0202 0022     		movs	r2, #0
 1419 0204 DA70     		strb	r2, [r3, #3]
 585:.\SirenState_redo.c **** 						Speaker[bSpeakerIndex].bManualWailToneStatus = false;
 1420              		.loc 1 585 0
 1421 0206 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1422 0208 344A     		ldr	r2, .L108
 1423 020a 9B00     		lsls	r3, r3, #2
 1424 020c 1344     		add	r3, r3, r2
 1425 020e 0022     		movs	r2, #0
 1426 0210 9A70     		strb	r2, [r3, #2]
 586:.\SirenState_redo.c **** 						Speaker[bSpeakerIndex].currentTone = NO_TONE;
 1427              		.loc 1 586 0
 1428 0212 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1429 0214 314A     		ldr	r2, .L108
 1430 0216 0021     		movs	r1, #0
 1431 0218 02F82310 		strb	r1, [r2, r3, lsl #2]
 1432 021c 26E0     		b	.L99
 1433              	.L97:
 1434 021e 25E0     		b	.L99
 1435              	.L95:
 587:.\SirenState_redo.c **** 					}
 588:.\SirenState_redo.c **** 				}
 589:.\SirenState_redo.c **** 				else
 590:.\SirenState_redo.c **** 				{
 591:.\SirenState_redo.c **** 					if(bToneChangeOnHornRing)
 1436              		.loc 1 591 0
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 37


 1437 0220 314B     		ldr	r3, .L108+12
 1438 0222 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1439 0224 002B     		cmp	r3, #0
 1440 0226 13D0     		beq	.L100
 592:.\SirenState_redo.c **** 						Speaker[bSpeakerIndex].currentTone = getAlternatingTone(toneConfigurationList[bSpeakerIndex][
 1441              		.loc 1 592 0
 1442 0228 FC79     		ldrb	r4, [r7, #7]	@ zero_extendqisi2
 1443 022a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1444 022c 7979     		ldrb	r1, [r7, #5]	@ zero_extendqisi2
 1445 022e 2D48     		ldr	r0, .L108+8
 1446 0230 1346     		mov	r3, r2
 1447 0232 5B00     		lsls	r3, r3, #1
 1448 0234 1344     		add	r3, r3, r2
 1449 0236 5B00     		lsls	r3, r3, #1
 1450 0238 0B44     		add	r3, r3, r1
 1451 023a 0344     		add	r3, r3, r0
 1452 023c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1453 023e 1846     		mov	r0, r3
 1454 0240 FFF7FEFF 		bl	getAlternatingTone
 1455 0244 0346     		mov	r3, r0
 1456 0246 1A46     		mov	r2, r3
 1457 0248 244B     		ldr	r3, .L108
 1458 024a 03F82420 		strb	r2, [r3, r4, lsl #2]
 1459 024e 0DE0     		b	.L99
 1460              	.L100:
 593:.\SirenState_redo.c **** 					else
 594:.\SirenState_redo.c **** 						Speaker[bSpeakerIndex].currentTone = toneConfigurationList[bSpeakerIndex][currentChannel];
 1461              		.loc 1 594 0
 1462 0250 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1463 0252 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1464 0254 7879     		ldrb	r0, [r7, #5]	@ zero_extendqisi2
 1465 0256 234C     		ldr	r4, .L108+8
 1466 0258 1346     		mov	r3, r2
 1467 025a 5B00     		lsls	r3, r3, #1
 1468 025c 1344     		add	r3, r3, r2
 1469 025e 5B00     		lsls	r3, r3, #1
 1470 0260 0344     		add	r3, r3, r0
 1471 0262 2344     		add	r3, r3, r4
 1472 0264 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1473 0266 1D4B     		ldr	r3, .L108
 1474 0268 03F82120 		strb	r2, [r3, r1, lsl #2]
 1475              	.L99:
 571:.\SirenState_redo.c **** 			{
 1476              		.loc 1 571 0 discriminator 2
 1477 026c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1478 026e 0133     		adds	r3, r3, #1
 1479 0270 FB71     		strb	r3, [r7, #7]
 1480              	.L94:
 571:.\SirenState_redo.c **** 			{
 1481              		.loc 1 571 0 is_stmt 0 discriminator 1
 1482 0272 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1483 0274 012B     		cmp	r3, #1
 1484 0276 8ED9     		bls	.L101
 595:.\SirenState_redo.c **** 				}
 596:.\SirenState_redo.c **** 			}
 597:.\SirenState_redo.c **** 			break;
 1485              		.loc 1 597 0 is_stmt 1
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 38


 1486 0278 51E0     		b	.L73
 1487              	.L81:
 598:.\SirenState_redo.c **** 			
 599:.\SirenState_redo.c **** 		case NO_INPUT:
 600:.\SirenState_redo.c ****             bToneChangeOnHornRing = false;
 1488              		.loc 1 600 0
 1489 027a 1B4B     		ldr	r3, .L108+12
 1490 027c 0022     		movs	r2, #0
 1491 027e 1A70     		strb	r2, [r3]
 601:.\SirenState_redo.c **** 			for(bSpeakerIndex = 0; bSpeakerIndex < SPEAKER_COUNT; bSpeakerIndex++)
 1492              		.loc 1 601 0
 1493 0280 0023     		movs	r3, #0
 1494 0282 FB71     		strb	r3, [r7, #7]
 1495 0284 46E0     		b	.L102
 1496              	.L106:
 602:.\SirenState_redo.c **** 			{
 603:.\SirenState_redo.c **** 				if(isTrailingAudioTone(Speaker[bSpeakerIndex].currentTone) && isAudioActive())
 1497              		.loc 1 603 0
 1498 0286 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1499 0288 144A     		ldr	r2, .L108
 1500 028a 12F82330 		ldrb	r3, [r2, r3, lsl #2]	@ zero_extendqisi2
 1501 028e 1846     		mov	r0, r3
 1502 0290 FFF7FEFF 		bl	isTrailingAudioTone
 1503 0294 0346     		mov	r3, r0
 1504 0296 002B     		cmp	r3, #0
 1505 0298 0BD0     		beq	.L103
 1506              		.loc 1 603 0 is_stmt 0 discriminator 1
 1507 029a FFF7FEFF 		bl	isAudioActive
 1508 029e 0346     		mov	r3, r0
 1509 02a0 002B     		cmp	r3, #0
 1510 02a2 06D0     		beq	.L103
 604:.\SirenState_redo.c **** 					Speaker[bSpeakerIndex].bAudioToneStatus = true;
 1511              		.loc 1 604 0 is_stmt 1
 1512 02a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1513 02a6 0D4A     		ldr	r2, .L108
 1514 02a8 9B00     		lsls	r3, r3, #2
 1515 02aa 1344     		add	r3, r3, r2
 1516 02ac 0122     		movs	r2, #1
 1517 02ae DA70     		strb	r2, [r3, #3]
 1518 02b0 2DE0     		b	.L104
 1519              	.L103:
 605:.\SirenState_redo.c **** 				else if((Speaker[bSpeakerIndex].currentTone == MANUAL_WAIL) && 
 1520              		.loc 1 605 0
 1521 02b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1522 02b4 094A     		ldr	r2, .L108
 1523 02b6 12F82330 		ldrb	r3, [r2, r3, lsl #2]	@ zero_extendqisi2
 1524 02ba 072B     		cmp	r3, #7
 1525 02bc 16D1     		bne	.L105
 606:.\SirenState_redo.c ****                     isManualWailActive(bSpeakerIndex))
 1526              		.loc 1 606 0 discriminator 1
 1527 02be FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1528 02c0 1846     		mov	r0, r3
 1529 02c2 FFF7FEFF 		bl	isManualWailActive
 1530 02c6 0346     		mov	r3, r0
 605:.\SirenState_redo.c **** 				else if((Speaker[bSpeakerIndex].currentTone == MANUAL_WAIL) && 
 1531              		.loc 1 605 0 discriminator 1
 1532 02c8 002B     		cmp	r3, #0
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 39


 1533 02ca 0FD0     		beq	.L105
 607:.\SirenState_redo.c **** 					Speaker[bSpeakerIndex].bManualWailToneStatus = true;
 1534              		.loc 1 607 0
 1535 02cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1536 02ce 034A     		ldr	r2, .L108
 1537 02d0 9B00     		lsls	r3, r3, #2
 1538 02d2 1344     		add	r3, r3, r2
 1539 02d4 0122     		movs	r2, #1
 1540 02d6 9A70     		strb	r2, [r3, #2]
 1541 02d8 19E0     		b	.L104
 1542              	.L109:
 1543 02da 00BF     		.align	2
 1544              	.L108:
 1545 02dc 08000000 		.word	Speaker
 1546 02e0 00000000 		.word	InputRead
 1547 02e4 10000000 		.word	toneConfigurationList
 1548 02e8 1C000000 		.word	bToneChangeOnHornRing
 1549              	.L105:
 608:.\SirenState_redo.c **** 				else
 609:.\SirenState_redo.c **** 				{
 610:.\SirenState_redo.c **** 					Speaker[bSpeakerIndex].bAudioToneStatus = false;
 1550              		.loc 1 610 0
 1551 02ec FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1552 02ee 0D4A     		ldr	r2, .L110
 1553 02f0 9B00     		lsls	r3, r3, #2
 1554 02f2 1344     		add	r3, r3, r2
 1555 02f4 0022     		movs	r2, #0
 1556 02f6 DA70     		strb	r2, [r3, #3]
 611:.\SirenState_redo.c **** 					Speaker[bSpeakerIndex].bManualWailToneStatus = false;
 1557              		.loc 1 611 0
 1558 02f8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1559 02fa 0A4A     		ldr	r2, .L110
 1560 02fc 9B00     		lsls	r3, r3, #2
 1561 02fe 1344     		add	r3, r3, r2
 1562 0300 0022     		movs	r2, #0
 1563 0302 9A70     		strb	r2, [r3, #2]
 612:.\SirenState_redo.c **** 					Speaker[bSpeakerIndex].currentTone = NO_TONE;
 1564              		.loc 1 612 0
 1565 0304 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1566 0306 074A     		ldr	r2, .L110
 1567 0308 0021     		movs	r1, #0
 1568 030a 02F82310 		strb	r1, [r2, r3, lsl #2]
 1569              	.L104:
 601:.\SirenState_redo.c **** 			{
 1570              		.loc 1 601 0 discriminator 2
 1571 030e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1572 0310 0133     		adds	r3, r3, #1
 1573 0312 FB71     		strb	r3, [r7, #7]
 1574              	.L102:
 601:.\SirenState_redo.c **** 			{
 1575              		.loc 1 601 0 is_stmt 0 discriminator 1
 1576 0314 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1577 0316 012B     		cmp	r3, #1
 1578 0318 B5D9     		bls	.L106
 613:.\SirenState_redo.c **** 				}
 614:.\SirenState_redo.c **** 			}
 615:.\SirenState_redo.c **** 			break;
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 40


 1579              		.loc 1 615 0 is_stmt 1
 1580 031a 00E0     		b	.L73
 1581              	.L107:
 616:.\SirenState_redo.c **** 			
 617:.\SirenState_redo.c **** 		default: break;
 1582              		.loc 1 617 0
 1583 031c 00BF     		nop
 1584              	.L73:
 618:.\SirenState_redo.c **** 	}
 619:.\SirenState_redo.c **** }
 1585              		.loc 1 619 0
 1586 031e 0C37     		adds	r7, r7, #12
 1587              		.cfi_def_cfa_offset 12
 1588 0320 BD46     		mov	sp, r7
 1589              		.cfi_def_cfa_register 13
 1590              		@ sp needed
 1591 0322 90BD     		pop	{r4, r7, pc}
 1592              	.L111:
 1593              		.align	2
 1594              	.L110:
 1595 0324 08000000 		.word	Speaker
 1596              		.cfi_endproc
 1597              	.LFE74:
 1598              		.size	processInputLogic, .-processInputLogic
 1599              		.section	.text.updateAudio,"ax",%progbits
 1600              		.align	2
 1601              		.thumb
 1602              		.thumb_func
 1603              		.type	updateAudio, %function
 1604              	updateAudio:
 1605              	.LFB75:
 620:.\SirenState_redo.c **** 
 621:.\SirenState_redo.c **** /*******************************************************************************
 622:.\SirenState_redo.c **** * Function Name: 
 623:.\SirenState_redo.c **** ********************************************************************************
 624:.\SirenState_redo.c **** *
 625:.\SirenState_redo.c **** * Summary:
 626:.\SirenState_redo.c **** *  
 627:.\SirenState_redo.c **** *
 628:.\SirenState_redo.c **** * Parameters: 
 629:.\SirenState_redo.c **** *   
 630:.\SirenState_redo.c **** *
 631:.\SirenState_redo.c **** * Return:
 632:.\SirenState_redo.c **** *   
 633:.\SirenState_redo.c **** *
 634:.\SirenState_redo.c **** *******************************************************************************/
 635:.\SirenState_redo.c **** static void updateAudio(void)
 636:.\SirenState_redo.c **** {
 1606              		.loc 1 636 0
 1607              		.cfi_startproc
 1608              		@ args = 0, pretend = 0, frame = 8
 1609              		@ frame_needed = 1, uses_anonymous_args = 0
 1610 0000 80B5     		push	{r7, lr}
 1611              		.cfi_def_cfa_offset 8
 1612              		.cfi_offset 7, -8
 1613              		.cfi_offset 14, -4
 1614 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 41


 1615              		.cfi_def_cfa_offset 16
 1616 0004 00AF     		add	r7, sp, #0
 1617              		.cfi_def_cfa_register 7
 637:.\SirenState_redo.c ****     enum InputType highestPriorityInput = NO_INPUT;
 1618              		.loc 1 637 0
 1619 0006 0523     		movs	r3, #5
 1620 0008 BB71     		strb	r3, [r7, #6]
 638:.\SirenState_redo.c **** 	uint8 bSpeakerIndex = SPEAKER_1;
 1621              		.loc 1 638 0
 1622 000a 0023     		movs	r3, #0
 1623 000c FB71     		strb	r3, [r7, #7]
 639:.\SirenState_redo.c **** 	
 640:.\SirenState_redo.c **** 	for(bSpeakerIndex = 0; bSpeakerIndex < SPEAKER_COUNT; bSpeakerIndex++)
 1624              		.loc 1 640 0
 1625 000e 0023     		movs	r3, #0
 1626 0010 FB71     		strb	r3, [r7, #7]
 1627 0012 0AE0     		b	.L113
 1628              	.L114:
 641:.\SirenState_redo.c **** 	{
 642:.\SirenState_redo.c **** 		stopPWMTone(bSpeakerIndex);
 1629              		.loc 1 642 0 discriminator 3
 1630 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1631 0016 1846     		mov	r0, r3
 1632 0018 FFF7FEFF 		bl	stopPWMTone
 643:.\SirenState_redo.c **** 		stopAudioTone(bSpeakerIndex);
 1633              		.loc 1 643 0 discriminator 3
 1634 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1635 001e 1846     		mov	r0, r3
 1636 0020 FFF7FEFF 		bl	stopAudioTone
 640:.\SirenState_redo.c **** 	{
 1637              		.loc 1 640 0 discriminator 3
 1638 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1639 0026 0133     		adds	r3, r3, #1
 1640 0028 FB71     		strb	r3, [r7, #7]
 1641              	.L113:
 640:.\SirenState_redo.c **** 	{
 1642              		.loc 1 640 0 is_stmt 0 discriminator 1
 1643 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1644 002c 012B     		cmp	r3, #1
 1645 002e F1D9     		bls	.L114
 644:.\SirenState_redo.c **** 	}
 645:.\SirenState_redo.c ****     
 646:.\SirenState_redo.c ****     highestPriorityInput = getHighestPriorityInput();
 1646              		.loc 1 646 0 is_stmt 1
 1647 0030 FFF7FEFF 		bl	getHighestPriorityInput
 1648 0034 0346     		mov	r3, r0
 1649 0036 BB71     		strb	r3, [r7, #6]
 647:.\SirenState_redo.c **** 	
 648:.\SirenState_redo.c **** 	switch(highestPriorityInput)
 1650              		.loc 1 648 0
 1651 0038 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 1652 003a 052B     		cmp	r3, #5
 1653 003c 00F2BF80 		bhi	.L136
 1654 0040 01A2     		adr	r2, .L117
 1655 0042 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1656 0046 00BF     		.p2align 2
 1657              	.L117:
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 42


 1658 0048 61000000 		.word	.L116+1
 1659 004c 77000000 		.word	.L118+1
 1660 0050 EB000000 		.word	.L119+1
 1661 0054 01010000 		.word	.L120+1
 1662 0058 4D010000 		.word	.L121+1
 1663 005c 4D010000 		.word	.L121+1
 1664              		.p2align 1
 1665              	.L116:
 649:.\SirenState_redo.c **** 	{
 650:.\SirenState_redo.c **** 		case RADIO_MIC:
 651:.\SirenState_redo.c **** 			deactivateManualWail(); //Deactivate tones and leave one power amp on
 1666              		.loc 1 651 0
 1667 0060 FFF7FEFF 		bl	deactivateManualWail
 652:.\SirenState_redo.c **** 			deactivateAudio();
 1668              		.loc 1 652 0
 1669 0064 FFF7FEFF 		bl	deactivateAudio
 653:.\SirenState_redo.c **** 			PowerAmpOutput1_Write(true);
 1670              		.loc 1 653 0
 1671 0068 0120     		movs	r0, #1
 1672 006a FFF7FEFF 		bl	PowerAmpOutput1_Write
 654:.\SirenState_redo.c **** 			PowerAmpOutput2_Write(false);			
 1673              		.loc 1 654 0
 1674 006e 0020     		movs	r0, #0
 1675 0070 FFF7FEFF 		bl	PowerAmpOutput2_Write
 655:.\SirenState_redo.c **** 			break;
 1676              		.loc 1 655 0
 1677 0074 A4E0     		b	.L112
 1678              	.L118:
 656:.\SirenState_redo.c **** 			
 657:.\SirenState_redo.c **** 		case AUDIO_TONE:	//One of the speakers is configured to an audio tone
 658:.\SirenState_redo.c ****             deactivateManualWail();
 1679              		.loc 1 658 0
 1680 0076 FFF7FEFF 		bl	deactivateManualWail
 659:.\SirenState_redo.c **** 			if(isAudioTone(Speaker[SPEAKER_1].currentTone))
 1681              		.loc 1 659 0
 1682 007a 534B     		ldr	r3, .L137
 1683 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1684 007e 1846     		mov	r0, r3
 1685 0080 FFF7FEFF 		bl	isAudioTone
 1686 0084 0346     		mov	r3, r0
 1687 0086 002B     		cmp	r3, #0
 1688 0088 0FD0     		beq	.L123
 660:.\SirenState_redo.c **** 			{
 661:.\SirenState_redo.c ****                 playAudioTone(SPEAKER_1, Speaker[SPEAKER_1].currentTone, Speaker[SPEAKER_1].bAudioT
 1689              		.loc 1 661 0
 1690 008a 4F4B     		ldr	r3, .L137
 1691 008c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1692 008e 4E4B     		ldr	r3, .L137
 1693 0090 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1694 0092 0020     		movs	r0, #0
 1695 0094 1146     		mov	r1, r2
 1696 0096 1A46     		mov	r2, r3
 1697 0098 FFF7FEFF 		bl	playAudioTone
 662:.\SirenState_redo.c ****     			PowerAmpOutput1_Write(true);    //Enable both speakers
 1698              		.loc 1 662 0
 1699 009c 0120     		movs	r0, #1
 1700 009e FFF7FEFF 		bl	PowerAmpOutput1_Write
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 43


 663:.\SirenState_redo.c ****     			PowerAmpOutput2_Write(true);
 1701              		.loc 1 663 0
 1702 00a2 0120     		movs	r0, #1
 1703 00a4 FFF7FEFF 		bl	PowerAmpOutput2_Write
 1704 00a8 1EE0     		b	.L124
 1705              	.L123:
 664:.\SirenState_redo.c ****             }
 665:.\SirenState_redo.c ****             else if(isAudioTone(Speaker[SPEAKER_2].currentTone))
 1706              		.loc 1 665 0
 1707 00aa 474B     		ldr	r3, .L137
 1708 00ac 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1709 00ae 1846     		mov	r0, r3
 1710 00b0 FFF7FEFF 		bl	isAudioTone
 1711 00b4 0346     		mov	r3, r0
 1712 00b6 002B     		cmp	r3, #0
 1713 00b8 0FD0     		beq	.L125
 666:.\SirenState_redo.c **** 			{
 667:.\SirenState_redo.c ****                 playAudioTone(SPEAKER_2, Speaker[SPEAKER_2].currentTone, Speaker[SPEAKER_2].bAudioT
 1714              		.loc 1 667 0
 1715 00ba 434B     		ldr	r3, .L137
 1716 00bc 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 1717 00be 424B     		ldr	r3, .L137
 1718 00c0 DB79     		ldrb	r3, [r3, #7]	@ zero_extendqisi2
 1719 00c2 0120     		movs	r0, #1
 1720 00c4 1146     		mov	r1, r2
 1721 00c6 1A46     		mov	r2, r3
 1722 00c8 FFF7FEFF 		bl	playAudioTone
 668:.\SirenState_redo.c **** 			    PowerAmpOutput1_Write(true);    //Enable both speakers
 1723              		.loc 1 668 0
 1724 00cc 0120     		movs	r0, #1
 1725 00ce FFF7FEFF 		bl	PowerAmpOutput1_Write
 669:.\SirenState_redo.c **** 			    PowerAmpOutput2_Write(true);
 1726              		.loc 1 669 0
 1727 00d2 0120     		movs	r0, #1
 1728 00d4 FFF7FEFF 		bl	PowerAmpOutput2_Write
 1729 00d8 06E0     		b	.L124
 1730              	.L125:
 670:.\SirenState_redo.c ****             }
 671:.\SirenState_redo.c ****             else
 672:.\SirenState_redo.c ****             {
 673:.\SirenState_redo.c ****                 PowerAmpOutput1_Write(false);
 1731              		.loc 1 673 0
 1732 00da 0020     		movs	r0, #0
 1733 00dc FFF7FEFF 		bl	PowerAmpOutput1_Write
 674:.\SirenState_redo.c **** 			    PowerAmpOutput2_Write(false);
 1734              		.loc 1 674 0
 1735 00e0 0020     		movs	r0, #0
 1736 00e2 FFF7FEFF 		bl	PowerAmpOutput2_Write
 675:.\SirenState_redo.c ****             }
 676:.\SirenState_redo.c ****                 
 677:.\SirenState_redo.c **** 						
 678:.\SirenState_redo.c **** 			break;
 1737              		.loc 1 678 0
 1738 00e6 6BE0     		b	.L112
 1739              	.L124:
 1740 00e8 6AE0     		b	.L112
 1741              	.L119:
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 44


 679:.\SirenState_redo.c **** 			
 680:.\SirenState_redo.c **** 		case PARK_KILL:
 681:.\SirenState_redo.c **** 			deactivateManualWail(); //Deactivate tones and turn off both amplifiers
 1742              		.loc 1 681 0
 1743 00ea FFF7FEFF 		bl	deactivateManualWail
 682:.\SirenState_redo.c ****             deactivateAudio();
 1744              		.loc 1 682 0
 1745 00ee FFF7FEFF 		bl	deactivateAudio
 683:.\SirenState_redo.c ****     		PowerAmpOutput1_Write(false);
 1746              		.loc 1 683 0
 1747 00f2 0020     		movs	r0, #0
 1748 00f4 FFF7FEFF 		bl	PowerAmpOutput1_Write
 684:.\SirenState_redo.c ****             PowerAmpOutput2_Write(false);
 1749              		.loc 1 684 0
 1750 00f8 0020     		movs	r0, #0
 1751 00fa FFF7FEFF 		bl	PowerAmpOutput2_Write
 685:.\SirenState_redo.c **** 			break;
 1752              		.loc 1 685 0
 1753 00fe 5FE0     		b	.L112
 1754              	.L120:
 686:.\SirenState_redo.c **** 			
 687:.\SirenState_redo.c **** 		case HORN_RING:
 688:.\SirenState_redo.c **** 			deactivateManualWail(); //Deactivate tones and turn off both amplifiers
 1755              		.loc 1 688 0
 1756 0100 FFF7FEFF 		bl	deactivateManualWail
 689:.\SirenState_redo.c ****             deactivateAudio();			
 1757              		.loc 1 689 0
 1758 0104 FFF7FEFF 		bl	deactivateAudio
 690:.\SirenState_redo.c **** 			if((Speaker[SPEAKER_1].currentTone == HORN) &&
 1759              		.loc 1 690 0
 1760 0108 2F4B     		ldr	r3, .L137
 1761 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1762 010c 052B     		cmp	r3, #5
 1763 010e 16D1     		bne	.L126
 691:.\SirenState_redo.c **** 				(Speaker[SPEAKER_2].currentTone == HORN))
 1764              		.loc 1 691 0 discriminator 1
 1765 0110 2D4B     		ldr	r3, .L137
 1766 0112 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 690:.\SirenState_redo.c **** 			if((Speaker[SPEAKER_1].currentTone == HORN) &&
 1767              		.loc 1 690 0 discriminator 1
 1768 0114 052B     		cmp	r3, #5
 1769 0116 12D1     		bne	.L126
 692:.\SirenState_redo.c **** 			{
 693:.\SirenState_redo.c **** 				playPWMTone(SPEAKER_1, HORN, false, false);
 1770              		.loc 1 693 0
 1771 0118 0020     		movs	r0, #0
 1772 011a 0521     		movs	r1, #5
 1773 011c 0022     		movs	r2, #0
 1774 011e 0023     		movs	r3, #0
 1775 0120 FFF7FEFF 		bl	playPWMTone
 694:.\SirenState_redo.c **** 				playPWMTone(SPEAKER_2, HORN, false, false);
 1776              		.loc 1 694 0
 1777 0124 0120     		movs	r0, #1
 1778 0126 0521     		movs	r1, #5
 1779 0128 0022     		movs	r2, #0
 1780 012a 0023     		movs	r3, #0
 1781 012c FFF7FEFF 		bl	playPWMTone
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 45


 695:.\SirenState_redo.c **** 				PowerAmpOutput1_Write(true);    //Enable both speakers
 1782              		.loc 1 695 0
 1783 0130 0120     		movs	r0, #1
 1784 0132 FFF7FEFF 		bl	PowerAmpOutput1_Write
 696:.\SirenState_redo.c **** 				PowerAmpOutput2_Write(true);
 1785              		.loc 1 696 0
 1786 0136 0120     		movs	r0, #1
 1787 0138 FFF7FEFF 		bl	PowerAmpOutput2_Write
 697:.\SirenState_redo.c **** 			}
 698:.\SirenState_redo.c **** 			else
 699:.\SirenState_redo.c **** 			{
 700:.\SirenState_redo.c **** 				PowerAmpOutput1_Write(false);
 701:.\SirenState_redo.c **** 				PowerAmpOutput2_Write(false);
 702:.\SirenState_redo.c **** 			}
 703:.\SirenState_redo.c **** 			break;
 1788              		.loc 1 703 0
 1789 013c 40E0     		b	.L112
 1790              	.L126:
 700:.\SirenState_redo.c **** 				PowerAmpOutput2_Write(false);
 1791              		.loc 1 700 0
 1792 013e 0020     		movs	r0, #0
 1793 0140 FFF7FEFF 		bl	PowerAmpOutput1_Write
 701:.\SirenState_redo.c **** 			}
 1794              		.loc 1 701 0
 1795 0144 0020     		movs	r0, #0
 1796 0146 FFF7FEFF 		bl	PowerAmpOutput2_Write
 1797              		.loc 1 703 0
 1798 014a 39E0     		b	.L112
 1799              	.L121:
 704:.\SirenState_redo.c **** 			
 705:.\SirenState_redo.c **** 		case SIREN_TONE:
 706:.\SirenState_redo.c **** 		case NO_INPUT:
 707:.\SirenState_redo.c **** 			for(bSpeakerIndex = 0; bSpeakerIndex < SPEAKER_COUNT; bSpeakerIndex++)
 1800              		.loc 1 707 0
 1801 014c 0023     		movs	r3, #0
 1802 014e FB71     		strb	r3, [r7, #7]
 1803 0150 31E0     		b	.L128
 1804              	.L135:
 708:.\SirenState_redo.c **** 			{
 709:.\SirenState_redo.c **** 				playPWMTone(bSpeakerIndex, Speaker[bSpeakerIndex].currentTone, 
 1805              		.loc 1 709 0
 1806 0152 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1807 0154 1C4A     		ldr	r2, .L137
 1808 0156 12F82310 		ldrb	r1, [r2, r3, lsl #2]	@ zero_extendqisi2
 1809 015a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1810 015c 1A4A     		ldr	r2, .L137
 1811 015e 9B00     		lsls	r3, r3, #2
 1812 0160 1344     		add	r3, r3, r2
 1813 0162 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 1814 0164 194B     		ldr	r3, .L137+4
 1815 0166 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
 1816 0168 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 1817 016a FFF7FEFF 		bl	playPWMTone
 710:.\SirenState_redo.c **** 					Speaker[bSpeakerIndex].bManualWailToneStatus, InputRead.bDualDelay);
 711:.\SirenState_redo.c **** 				
 712:.\SirenState_redo.c **** 				if(Speaker[bSpeakerIndex].currentTone != NO_TONE)
 1818              		.loc 1 712 0
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 46


 1819 016e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1820 0170 154A     		ldr	r2, .L137
 1821 0172 12F82330 		ldrb	r3, [r2, r3, lsl #2]	@ zero_extendqisi2
 1822 0176 002B     		cmp	r3, #0
 1823 0178 0AD0     		beq	.L129
 713:.\SirenState_redo.c **** 				{
 714:.\SirenState_redo.c **** 					if(bSpeakerIndex)
 1824              		.loc 1 714 0
 1825 017a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1826 017c 002B     		cmp	r3, #0
 1827 017e 03D0     		beq	.L130
 715:.\SirenState_redo.c ****                         PowerAmpOutput2_Write(true);
 1828              		.loc 1 715 0
 1829 0180 0120     		movs	r0, #1
 1830 0182 FFF7FEFF 		bl	PowerAmpOutput2_Write
 1831 0186 13E0     		b	.L132
 1832              	.L130:
 716:.\SirenState_redo.c ****                     else
 717:.\SirenState_redo.c ****                         PowerAmpOutput1_Write(true);
 1833              		.loc 1 717 0
 1834 0188 0120     		movs	r0, #1
 1835 018a FFF7FEFF 		bl	PowerAmpOutput1_Write
 1836 018e 0FE0     		b	.L132
 1837              	.L129:
 718:.\SirenState_redo.c **** 				}
 719:.\SirenState_redo.c **** 				else
 720:.\SirenState_redo.c **** 				{
 721:.\SirenState_redo.c **** 					if(bSpeakerIndex)
 1838              		.loc 1 721 0
 1839 0190 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1840 0192 002B     		cmp	r3, #0
 1841 0194 03D0     		beq	.L133
 722:.\SirenState_redo.c ****                         PowerAmpOutput2_Write(false);
 1842              		.loc 1 722 0
 1843 0196 0020     		movs	r0, #0
 1844 0198 FFF7FEFF 		bl	PowerAmpOutput2_Write
 1845 019c 02E0     		b	.L134
 1846              	.L133:
 723:.\SirenState_redo.c ****                     else
 724:.\SirenState_redo.c ****                         PowerAmpOutput1_Write(false);
 1847              		.loc 1 724 0
 1848 019e 0020     		movs	r0, #0
 1849 01a0 FFF7FEFF 		bl	PowerAmpOutput1_Write
 1850              	.L134:
 725:.\SirenState_redo.c **** 					
 726:.\SirenState_redo.c **** 					playAudioTone(bSpeakerIndex, NO_TONE, false);
 1851              		.loc 1 726 0
 1852 01a4 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1853 01a6 1846     		mov	r0, r3
 1854 01a8 0021     		movs	r1, #0
 1855 01aa 0022     		movs	r2, #0
 1856 01ac FFF7FEFF 		bl	playAudioTone
 1857              	.L132:
 707:.\SirenState_redo.c **** 			{
 1858              		.loc 1 707 0 discriminator 2
 1859 01b0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1860 01b2 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 47


 1861 01b4 FB71     		strb	r3, [r7, #7]
 1862              	.L128:
 707:.\SirenState_redo.c **** 			{
 1863              		.loc 1 707 0 is_stmt 0 discriminator 1
 1864 01b6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1865 01b8 012B     		cmp	r3, #1
 1866 01ba CAD9     		bls	.L135
 727:.\SirenState_redo.c **** 				}
 728:.\SirenState_redo.c **** 			}
 729:.\SirenState_redo.c **** 			break;
 1867              		.loc 1 729 0 is_stmt 1
 1868 01bc 00E0     		b	.L112
 1869              	.L136:
 730:.\SirenState_redo.c **** 
 731:.\SirenState_redo.c **** 		default: break;
 1870              		.loc 1 731 0
 1871 01be 00BF     		nop
 1872              	.L112:
 732:.\SirenState_redo.c **** 	}
 733:.\SirenState_redo.c **** }
 1873              		.loc 1 733 0
 1874 01c0 0837     		adds	r7, r7, #8
 1875              		.cfi_def_cfa_offset 8
 1876 01c2 BD46     		mov	sp, r7
 1877              		.cfi_def_cfa_register 13
 1878              		@ sp needed
 1879 01c4 80BD     		pop	{r7, pc}
 1880              	.L138:
 1881 01c6 00BF     		.align	2
 1882              	.L137:
 1883 01c8 08000000 		.word	Speaker
 1884 01cc 00000000 		.word	InputRead
 1885              		.cfi_endproc
 1886              	.LFE75:
 1887              		.size	updateAudio, .-updateAudio
 1888              		.section	.text.getHighestPriorityInput,"ax",%progbits
 1889              		.align	2
 1890              		.thumb
 1891              		.thumb_func
 1892              		.type	getHighestPriorityInput, %function
 1893              	getHighestPriorityInput:
 1894              	.LFB76:
 734:.\SirenState_redo.c **** 
 735:.\SirenState_redo.c **** /*******************************************************************************
 736:.\SirenState_redo.c **** * Function Name: 
 737:.\SirenState_redo.c **** ********************************************************************************
 738:.\SirenState_redo.c **** *
 739:.\SirenState_redo.c **** * Summary:
 740:.\SirenState_redo.c **** *  
 741:.\SirenState_redo.c **** *
 742:.\SirenState_redo.c **** * Parameters: 
 743:.\SirenState_redo.c **** *   
 744:.\SirenState_redo.c **** *
 745:.\SirenState_redo.c **** * Return:
 746:.\SirenState_redo.c **** *   
 747:.\SirenState_redo.c **** *
 748:.\SirenState_redo.c **** *******************************************************************************/
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 48


 749:.\SirenState_redo.c **** static enum InputType getHighestPriorityInput(void)
 750:.\SirenState_redo.c **** {
 1895              		.loc 1 750 0
 1896              		.cfi_startproc
 1897              		@ args = 0, pretend = 0, frame = 8
 1898              		@ frame_needed = 1, uses_anonymous_args = 0
 1899 0000 90B5     		push	{r4, r7, lr}
 1900              		.cfi_def_cfa_offset 12
 1901              		.cfi_offset 4, -12
 1902              		.cfi_offset 7, -8
 1903              		.cfi_offset 14, -4
 1904 0002 83B0     		sub	sp, sp, #12
 1905              		.cfi_def_cfa_offset 24
 1906 0004 00AF     		add	r7, sp, #0
 1907              		.cfi_def_cfa_register 7
 751:.\SirenState_redo.c **** 	uint8 speakerIndex = SPEAKER_1;
 1908              		.loc 1 751 0
 1909 0006 0023     		movs	r3, #0
 1910 0008 FB71     		strb	r3, [r7, #7]
 752:.\SirenState_redo.c **** 	enum ToneChannelNumber channelNumber[SPEAKER_COUNT];
 753:.\SirenState_redo.c **** 	enum ToneType toneSelection[SPEAKER_COUNT];
 754:.\SirenState_redo.c **** 	
 755:.\SirenState_redo.c **** 	if(InputRead.bRadioAndMicKey)
 1911              		.loc 1 755 0
 1912 000a 344B     		ldr	r3, .L151
 1913 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1914 000e 002B     		cmp	r3, #0
 1915 0010 01D0     		beq	.L140
 756:.\SirenState_redo.c **** 		return RADIO_MIC;
 1916              		.loc 1 756 0
 1917 0012 0023     		movs	r3, #0
 1918 0014 5EE0     		b	.L150
 1919              	.L140:
 757:.\SirenState_redo.c **** 	
 758:.\SirenState_redo.c **** 	for(speakerIndex = 0; speakerIndex < SPEAKER_COUNT; speakerIndex++)
 1920              		.loc 1 758 0
 1921 0016 0023     		movs	r3, #0
 1922 0018 FB71     		strb	r3, [r7, #7]
 1923 001a 38E0     		b	.L142
 1924              	.L144:
 759:.\SirenState_redo.c **** 	{
 760:.\SirenState_redo.c **** 		channelNumber[speakerIndex] = InputRead.highestPriorityChannel[speakerIndex];		
 1925              		.loc 1 760 0
 1926 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1927 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1928 0020 2E49     		ldr	r1, .L151
 1929 0022 0A44     		add	r2, r2, r1
 1930 0024 5279     		ldrb	r2, [r2, #5]	@ zero_extendqisi2
 1931 0026 07F10801 		add	r1, r7, #8
 1932 002a 0B44     		add	r3, r3, r1
 1933 002c 03F8042C 		strb	r2, [r3, #-4]
 761:.\SirenState_redo.c **** 		if(channelNumber[speakerIndex] != NO_CHANNEL)
 1934              		.loc 1 761 0
 1935 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1936 0032 07F10802 		add	r2, r7, #8
 1937 0036 1344     		add	r3, r3, r2
 1938 0038 13F8043C 		ldrb	r3, [r3, #-4]	@ zero_extendqisi2
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 49


 1939 003c 062B     		cmp	r3, #6
 1940 003e 23D0     		beq	.L143
 762:.\SirenState_redo.c **** 		{
 763:.\SirenState_redo.c **** 			toneSelection[speakerIndex]	= toneConfigurationList[speakerIndex][channelNumber[speakerIndex]];
 1941              		.loc 1 763 0
 1942 0040 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1943 0042 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1944 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1945 0046 07F10800 		add	r0, r7, #8
 1946 004a 0344     		add	r3, r3, r0
 1947 004c 13F8043C 		ldrb	r3, [r3, #-4]	@ zero_extendqisi2
 1948 0050 1C46     		mov	r4, r3
 1949 0052 2348     		ldr	r0, .L151+4
 1950 0054 1346     		mov	r3, r2
 1951 0056 5B00     		lsls	r3, r3, #1
 1952 0058 1344     		add	r3, r3, r2
 1953 005a 5B00     		lsls	r3, r3, #1
 1954 005c 2344     		add	r3, r3, r4
 1955 005e 0344     		add	r3, r3, r0
 1956 0060 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1957 0062 07F10803 		add	r3, r7, #8
 1958 0066 0B44     		add	r3, r3, r1
 1959 0068 03F8082C 		strb	r2, [r3, #-8]
 764:.\SirenState_redo.c **** 			if(isAudioTone(toneSelection[speakerIndex]))
 1960              		.loc 1 764 0
 1961 006c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1962 006e 07F10802 		add	r2, r7, #8
 1963 0072 1344     		add	r3, r3, r2
 1964 0074 13F8083C 		ldrb	r3, [r3, #-8]	@ zero_extendqisi2
 1965 0078 1846     		mov	r0, r3
 1966 007a FFF7FEFF 		bl	isAudioTone
 1967 007e 0346     		mov	r3, r0
 1968 0080 002B     		cmp	r3, #0
 1969 0082 01D0     		beq	.L143
 765:.\SirenState_redo.c **** 				return AUDIO_TONE;
 1970              		.loc 1 765 0
 1971 0084 0123     		movs	r3, #1
 1972 0086 25E0     		b	.L150
 1973              	.L143:
 758:.\SirenState_redo.c **** 	{
 1974              		.loc 1 758 0 discriminator 2
 1975 0088 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1976 008a 0133     		adds	r3, r3, #1
 1977 008c FB71     		strb	r3, [r7, #7]
 1978              	.L142:
 758:.\SirenState_redo.c **** 	{
 1979              		.loc 1 758 0 is_stmt 0 discriminator 1
 1980 008e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1981 0090 012B     		cmp	r3, #1
 1982 0092 C3D9     		bls	.L144
 766:.\SirenState_redo.c **** 		}
 767:.\SirenState_redo.c **** 	}
 768:.\SirenState_redo.c **** 	
 769:.\SirenState_redo.c ****     if(InputRead.bParkKill)
 1983              		.loc 1 769 0 is_stmt 1
 1984 0094 114B     		ldr	r3, .L151
 1985 0096 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 50


 1986 0098 002B     		cmp	r3, #0
 1987 009a 01D0     		beq	.L145
 770:.\SirenState_redo.c **** 		return PARK_KILL;
 1988              		.loc 1 770 0
 1989 009c 0223     		movs	r3, #2
 1990 009e 19E0     		b	.L150
 1991              	.L145:
 771:.\SirenState_redo.c ****     if(InputRead.bHornRing)
 1992              		.loc 1 771 0
 1993 00a0 0E4B     		ldr	r3, .L151
 1994 00a2 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 1995 00a4 002B     		cmp	r3, #0
 1996 00a6 01D0     		beq	.L146
 772:.\SirenState_redo.c **** 		return HORN_RING;
 1997              		.loc 1 772 0
 1998 00a8 0323     		movs	r3, #3
 1999 00aa 13E0     		b	.L150
 2000              	.L146:
 773:.\SirenState_redo.c ****     
 774:.\SirenState_redo.c **** 	for(speakerIndex = 0; speakerIndex < SPEAKER_COUNT; speakerIndex++)
 2001              		.loc 1 774 0
 2002 00ac 0023     		movs	r3, #0
 2003 00ae FB71     		strb	r3, [r7, #7]
 2004 00b0 0CE0     		b	.L147
 2005              	.L149:
 775:.\SirenState_redo.c **** 	{
 776:.\SirenState_redo.c **** 		if(channelNumber[speakerIndex] != NO_CHANNEL)
 2006              		.loc 1 776 0
 2007 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2008 00b4 07F10802 		add	r2, r7, #8
 2009 00b8 1344     		add	r3, r3, r2
 2010 00ba 13F8043C 		ldrb	r3, [r3, #-4]	@ zero_extendqisi2
 2011 00be 062B     		cmp	r3, #6
 2012 00c0 01D0     		beq	.L148
 777:.\SirenState_redo.c **** 			return SIREN_TONE;
 2013              		.loc 1 777 0
 2014 00c2 0423     		movs	r3, #4
 2015 00c4 06E0     		b	.L150
 2016              	.L148:
 774:.\SirenState_redo.c **** 	{
 2017              		.loc 1 774 0 discriminator 2
 2018 00c6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2019 00c8 0133     		adds	r3, r3, #1
 2020 00ca FB71     		strb	r3, [r7, #7]
 2021              	.L147:
 774:.\SirenState_redo.c **** 	{
 2022              		.loc 1 774 0 is_stmt 0 discriminator 1
 2023 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2024 00ce 012B     		cmp	r3, #1
 2025 00d0 EFD9     		bls	.L149
 778:.\SirenState_redo.c **** 	}
 779:.\SirenState_redo.c **** 	
 780:.\SirenState_redo.c **** 	return NO_INPUT;
 2026              		.loc 1 780 0 is_stmt 1
 2027 00d2 0523     		movs	r3, #5
 2028              	.L150:
 781:.\SirenState_redo.c **** }
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 51


 2029              		.loc 1 781 0 discriminator 1
 2030 00d4 1846     		mov	r0, r3
 2031 00d6 0C37     		adds	r7, r7, #12
 2032              		.cfi_def_cfa_offset 12
 2033 00d8 BD46     		mov	sp, r7
 2034              		.cfi_def_cfa_register 13
 2035              		@ sp needed
 2036 00da 90BD     		pop	{r4, r7, pc}
 2037              	.L152:
 2038              		.align	2
 2039              	.L151:
 2040 00dc 00000000 		.word	InputRead
 2041 00e0 10000000 		.word	toneConfigurationList
 2042              		.cfi_endproc
 2043              	.LFE76:
 2044              		.size	getHighestPriorityInput, .-getHighestPriorityInput
 2045              		.section	.text.getAlternatingTone,"ax",%progbits
 2046              		.align	2
 2047              		.thumb
 2048              		.thumb_func
 2049              		.type	getAlternatingTone, %function
 2050              	getAlternatingTone:
 2051              	.LFB77:
 782:.\SirenState_redo.c **** 
 783:.\SirenState_redo.c **** /*******************************************************************************
 784:.\SirenState_redo.c **** * Function Name: 
 785:.\SirenState_redo.c **** ********************************************************************************
 786:.\SirenState_redo.c **** *
 787:.\SirenState_redo.c **** * Summary:
 788:.\SirenState_redo.c **** *  
 789:.\SirenState_redo.c **** *
 790:.\SirenState_redo.c **** * Parameters: 
 791:.\SirenState_redo.c **** *   
 792:.\SirenState_redo.c **** *
 793:.\SirenState_redo.c **** * Return:
 794:.\SirenState_redo.c **** *   
 795:.\SirenState_redo.c **** *
 796:.\SirenState_redo.c **** *******************************************************************************/
 797:.\SirenState_redo.c **** static enum ToneType getAlternatingTone(enum ToneType toneSelection)
 798:.\SirenState_redo.c **** {
 2052              		.loc 1 798 0
 2053              		.cfi_startproc
 2054              		@ args = 0, pretend = 0, frame = 8
 2055              		@ frame_needed = 1, uses_anonymous_args = 0
 2056 0000 80B5     		push	{r7, lr}
 2057              		.cfi_def_cfa_offset 8
 2058              		.cfi_offset 7, -8
 2059              		.cfi_offset 14, -4
 2060 0002 82B0     		sub	sp, sp, #8
 2061              		.cfi_def_cfa_offset 16
 2062 0004 00AF     		add	r7, sp, #0
 2063              		.cfi_def_cfa_register 7
 2064 0006 0346     		mov	r3, r0
 2065 0008 FB71     		strb	r3, [r7, #7]
 799:.\SirenState_redo.c **** 	if((toneSelection == NO_TONE) || isAudioTone(toneSelection) || (toneSelection == TEST_TONE))
 2066              		.loc 1 799 0
 2067 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 52


 2068 000c 002B     		cmp	r3, #0
 2069 000e 09D0     		beq	.L154
 2070              		.loc 1 799 0 is_stmt 0 discriminator 1
 2071 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2072 0012 1846     		mov	r0, r3
 2073 0014 FFF7FEFF 		bl	isAudioTone
 2074 0018 0346     		mov	r3, r0
 2075 001a 002B     		cmp	r3, #0
 2076 001c 02D1     		bne	.L154
 2077              		.loc 1 799 0 discriminator 2
 2078 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2079 0020 162B     		cmp	r3, #22
 2080 0022 01D1     		bne	.L155
 2081              	.L154:
 800:.\SirenState_redo.c **** 		return toneSelection;
 2082              		.loc 1 800 0 is_stmt 1
 2083 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2084 0026 0FE0     		b	.L156
 2085              	.L155:
 801:.\SirenState_redo.c **** 	
 802:.\SirenState_redo.c **** 	if((toneSelection == MECHANICAL) || (toneSelection == PCALL_FAST))
 2086              		.loc 1 802 0
 2087 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2088 002a 062B     		cmp	r3, #6
 2089 002c 02D0     		beq	.L157
 2090              		.loc 1 802 0 is_stmt 0 discriminator 1
 2091 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2092 0030 0A2B     		cmp	r3, #10
 2093 0032 01D1     		bne	.L158
 2094              	.L157:
 803:.\SirenState_redo.c **** 		return PHASER;
 2095              		.loc 1 803 0 is_stmt 1
 2096 0034 0423     		movs	r3, #4
 2097 0036 07E0     		b	.L156
 2098              	.L158:
 804:.\SirenState_redo.c **** 	
 805:.\SirenState_redo.c **** 	if(toneSelection == PHASER_YELP)
 2099              		.loc 1 805 0
 2100 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2101 003a 0D2B     		cmp	r3, #13
 2102 003c 01D1     		bne	.L159
 806:.\SirenState_redo.c **** 		return HORN_PHASER;
 2103              		.loc 1 806 0
 2104 003e 0B23     		movs	r3, #11
 2105 0040 02E0     		b	.L156
 2106              	.L159:
 807:.\SirenState_redo.c **** 	
 808:.\SirenState_redo.c **** 	return (toneSelection + 1);
 2107              		.loc 1 808 0
 2108 0042 FB79     		ldrb	r3, [r7, #7]
 2109 0044 0133     		adds	r3, r3, #1
 2110 0046 DBB2     		uxtb	r3, r3
 2111              	.L156:
 809:.\SirenState_redo.c **** }
 2112              		.loc 1 809 0
 2113 0048 1846     		mov	r0, r3
 2114 004a 0837     		adds	r7, r7, #8
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 53


 2115              		.cfi_def_cfa_offset 8
 2116 004c BD46     		mov	sp, r7
 2117              		.cfi_def_cfa_register 13
 2118              		@ sp needed
 2119 004e 80BD     		pop	{r7, pc}
 2120              		.cfi_endproc
 2121              	.LFE77:
 2122              		.size	getAlternatingTone, .-getAlternatingTone
 2123              		.section	.text.isTrailingAudioTone,"ax",%progbits
 2124              		.align	2
 2125              		.thumb
 2126              		.thumb_func
 2127              		.type	isTrailingAudioTone, %function
 2128              	isTrailingAudioTone:
 2129              	.LFB78:
 810:.\SirenState_redo.c **** 
 811:.\SirenState_redo.c **** /*******************************************************************************
 812:.\SirenState_redo.c **** * Function Name: 
 813:.\SirenState_redo.c **** ********************************************************************************
 814:.\SirenState_redo.c **** *
 815:.\SirenState_redo.c **** * Summary:
 816:.\SirenState_redo.c **** *  
 817:.\SirenState_redo.c **** *
 818:.\SirenState_redo.c **** * Parameters: 
 819:.\SirenState_redo.c **** *   
 820:.\SirenState_redo.c **** *
 821:.\SirenState_redo.c **** * Return:
 822:.\SirenState_redo.c **** *   
 823:.\SirenState_redo.c **** *
 824:.\SirenState_redo.c **** *******************************************************************************/
 825:.\SirenState_redo.c **** static uint8 isTrailingAudioTone(enum ToneType toneSelection)
 826:.\SirenState_redo.c **** {
 2130              		.loc 1 826 0
 2131              		.cfi_startproc
 2132              		@ args = 0, pretend = 0, frame = 8
 2133              		@ frame_needed = 1, uses_anonymous_args = 0
 2134 0000 80B5     		push	{r7, lr}
 2135              		.cfi_def_cfa_offset 8
 2136              		.cfi_offset 7, -8
 2137              		.cfi_offset 14, -4
 2138 0002 82B0     		sub	sp, sp, #8
 2139              		.cfi_def_cfa_offset 16
 2140 0004 00AF     		add	r7, sp, #0
 2141              		.cfi_def_cfa_register 7
 2142 0006 0346     		mov	r3, r0
 2143 0008 FB71     		strb	r3, [r7, #7]
 827:.\SirenState_redo.c **** 	if(!isAudioTone(toneSelection))
 2144              		.loc 1 827 0
 2145 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2146 000c 1846     		mov	r0, r3
 2147 000e FFF7FEFF 		bl	isAudioTone
 2148 0012 0346     		mov	r3, r0
 2149 0014 002B     		cmp	r3, #0
 2150 0016 01D1     		bne	.L161
 828:.\SirenState_redo.c **** 		return false;
 2151              		.loc 1 828 0
 2152 0018 0023     		movs	r3, #0
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 54


 2153 001a 05E0     		b	.L162
 2154              	.L161:
 829:.\SirenState_redo.c **** 
 830:.\SirenState_redo.c **** 	if(toneSelection == COPS_SONG)
 2155              		.loc 1 830 0
 2156 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2157 001e 0F2B     		cmp	r3, #15
 2158 0020 01D1     		bne	.L163
 831:.\SirenState_redo.c **** 		return false;
 2159              		.loc 1 831 0
 2160 0022 0023     		movs	r3, #0
 2161 0024 00E0     		b	.L162
 2162              	.L163:
 832:.\SirenState_redo.c **** 	
 833:.\SirenState_redo.c **** 	return true;
 2163              		.loc 1 833 0
 2164 0026 0123     		movs	r3, #1
 2165              	.L162:
 834:.\SirenState_redo.c **** }
 2166              		.loc 1 834 0
 2167 0028 1846     		mov	r0, r3
 2168 002a 0837     		adds	r7, r7, #8
 2169              		.cfi_def_cfa_offset 8
 2170 002c BD46     		mov	sp, r7
 2171              		.cfi_def_cfa_register 13
 2172              		@ sp needed
 2173 002e 80BD     		pop	{r7, pc}
 2174              		.cfi_endproc
 2175              	.LFE78:
 2176              		.size	isTrailingAudioTone, .-isTrailingAudioTone
 2177              		.section	.text.isSong,"ax",%progbits
 2178              		.align	2
 2179              		.thumb
 2180              		.thumb_func
 2181              		.type	isSong, %function
 2182              	isSong:
 2183              	.LFB79:
 835:.\SirenState_redo.c **** 
 836:.\SirenState_redo.c **** /*******************************************************************************
 837:.\SirenState_redo.c **** * Function Name: 
 838:.\SirenState_redo.c **** ********************************************************************************
 839:.\SirenState_redo.c **** *
 840:.\SirenState_redo.c **** * Summary:
 841:.\SirenState_redo.c **** *  
 842:.\SirenState_redo.c **** *
 843:.\SirenState_redo.c **** * Parameters: 
 844:.\SirenState_redo.c **** *   
 845:.\SirenState_redo.c **** *
 846:.\SirenState_redo.c **** * Return:
 847:.\SirenState_redo.c **** *   
 848:.\SirenState_redo.c **** *
 849:.\SirenState_redo.c **** *******************************************************************************/
 850:.\SirenState_redo.c **** static uint8 isSong(enum ToneType toneSelection)
 851:.\SirenState_redo.c **** {
 2184              		.loc 1 851 0
 2185              		.cfi_startproc
 2186              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 55


 2187              		@ frame_needed = 1, uses_anonymous_args = 0
 2188              		@ link register save eliminated.
 2189 0000 80B4     		push	{r7}
 2190              		.cfi_def_cfa_offset 4
 2191              		.cfi_offset 7, -4
 2192 0002 83B0     		sub	sp, sp, #12
 2193              		.cfi_def_cfa_offset 16
 2194 0004 00AF     		add	r7, sp, #0
 2195              		.cfi_def_cfa_register 7
 2196 0006 0346     		mov	r3, r0
 2197 0008 FB71     		strb	r3, [r7, #7]
 852:.\SirenState_redo.c **** 	if(toneSelection != COPS_SONG)
 2198              		.loc 1 852 0
 2199 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2200 000c 0F2B     		cmp	r3, #15
 2201 000e 01D0     		beq	.L165
 853:.\SirenState_redo.c **** 		return false;
 2202              		.loc 1 853 0
 2203 0010 0023     		movs	r3, #0
 2204 0012 00E0     		b	.L166
 2205              	.L165:
 854:.\SirenState_redo.c **** 	
 855:.\SirenState_redo.c **** 	return true;
 2206              		.loc 1 855 0
 2207 0014 0123     		movs	r3, #1
 2208              	.L166:
 856:.\SirenState_redo.c **** }
 2209              		.loc 1 856 0
 2210 0016 1846     		mov	r0, r3
 2211 0018 0C37     		adds	r7, r7, #12
 2212              		.cfi_def_cfa_offset 4
 2213 001a BD46     		mov	sp, r7
 2214              		.cfi_def_cfa_register 13
 2215              		@ sp needed
 2216 001c 5DF8047B 		ldr	r7, [sp], #4
 2217              		.cfi_restore 7
 2218              		.cfi_def_cfa_offset 0
 2219 0020 7047     		bx	lr
 2220              		.cfi_endproc
 2221              	.LFE79:
 2222              		.size	isSong, .-isSong
 2223 0022 00BF     		.section	.text.isAudioTone,"ax",%progbits
 2224              		.align	2
 2225              		.thumb
 2226              		.thumb_func
 2227              		.type	isAudioTone, %function
 2228              	isAudioTone:
 2229              	.LFB80:
 857:.\SirenState_redo.c **** 
 858:.\SirenState_redo.c **** /*******************************************************************************
 859:.\SirenState_redo.c **** * Function Name: 
 860:.\SirenState_redo.c **** ********************************************************************************
 861:.\SirenState_redo.c **** *
 862:.\SirenState_redo.c **** * Summary:
 863:.\SirenState_redo.c **** *  
 864:.\SirenState_redo.c **** *
 865:.\SirenState_redo.c **** * Parameters: 
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 56


 866:.\SirenState_redo.c **** *   
 867:.\SirenState_redo.c **** *
 868:.\SirenState_redo.c **** * Return:
 869:.\SirenState_redo.c **** *   
 870:.\SirenState_redo.c **** *
 871:.\SirenState_redo.c **** *******************************************************************************/
 872:.\SirenState_redo.c **** static uint8 isAudioTone(enum ToneType toneSelection)
 873:.\SirenState_redo.c **** {
 2230              		.loc 1 873 0
 2231              		.cfi_startproc
 2232              		@ args = 0, pretend = 0, frame = 8
 2233              		@ frame_needed = 1, uses_anonymous_args = 0
 2234              		@ link register save eliminated.
 2235 0000 80B4     		push	{r7}
 2236              		.cfi_def_cfa_offset 4
 2237              		.cfi_offset 7, -4
 2238 0002 83B0     		sub	sp, sp, #12
 2239              		.cfi_def_cfa_offset 16
 2240 0004 00AF     		add	r7, sp, #0
 2241              		.cfi_def_cfa_register 7
 2242 0006 0346     		mov	r3, r0
 2243 0008 FB71     		strb	r3, [r7, #7]
 874:.\SirenState_redo.c **** 	if((toneSelection < ECTOSIREN) || (toneSelection > REMAIN_WINDOW_DOWN))
 2244              		.loc 1 874 0
 2245 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2246 000c 0D2B     		cmp	r3, #13
 2247 000e 02D9     		bls	.L168
 2248              		.loc 1 874 0 is_stmt 0 discriminator 1
 2249 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2250 0012 152B     		cmp	r3, #21
 2251 0014 01D9     		bls	.L169
 2252              	.L168:
 875:.\SirenState_redo.c **** 		return false;
 2253              		.loc 1 875 0 is_stmt 1
 2254 0016 0023     		movs	r3, #0
 2255 0018 00E0     		b	.L170
 2256              	.L169:
 876:.\SirenState_redo.c **** 	
 877:.\SirenState_redo.c **** 	return true;
 2257              		.loc 1 877 0
 2258 001a 0123     		movs	r3, #1
 2259              	.L170:
 878:.\SirenState_redo.c **** }
 2260              		.loc 1 878 0
 2261 001c 1846     		mov	r0, r3
 2262 001e 0C37     		adds	r7, r7, #12
 2263              		.cfi_def_cfa_offset 4
 2264 0020 BD46     		mov	sp, r7
 2265              		.cfi_def_cfa_register 13
 2266              		@ sp needed
 2267 0022 5DF8047B 		ldr	r7, [sp], #4
 2268              		.cfi_restore 7
 2269              		.cfi_def_cfa_offset 0
 2270 0026 7047     		bx	lr
 2271              		.cfi_endproc
 2272              	.LFE80:
 2273              		.size	isAudioTone, .-isAudioTone
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 57


 2274              		.text
 2275              	.Letext0:
 2276              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2277              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.3\\psoc creator\\import\\gnu\\arm\\4.9.
 2278              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 2279              		.file 5 ".\\CommonVariables.h"
 2280              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 2281              		.section	.debug_info,"",%progbits
 2282              	.Ldebug_info0:
 2283 0000 23060000 		.4byte	0x623
 2284 0004 0400     		.2byte	0x4
 2285 0006 00000000 		.4byte	.Ldebug_abbrev0
 2286 000a 04       		.byte	0x4
 2287 000b 01       		.uleb128 0x1
 2288 000c 25020000 		.4byte	.LASF105
 2289 0010 01       		.byte	0x1
 2290 0011 8E060000 		.4byte	.LASF106
 2291 0015 A6000000 		.4byte	.LASF107
 2292 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2293 001d 00000000 		.4byte	0
 2294 0021 00000000 		.4byte	.Ldebug_line0
 2295 0025 02       		.uleb128 0x2
 2296 0026 01       		.byte	0x1
 2297 0027 06       		.byte	0x6
 2298 0028 AA030000 		.4byte	.LASF0
 2299 002c 02       		.uleb128 0x2
 2300 002d 01       		.byte	0x1
 2301 002e 08       		.byte	0x8
 2302 002f 54030000 		.4byte	.LASF1
 2303 0033 02       		.uleb128 0x2
 2304 0034 02       		.byte	0x2
 2305 0035 05       		.byte	0x5
 2306 0036 8A000000 		.4byte	.LASF2
 2307 003a 02       		.uleb128 0x2
 2308 003b 02       		.byte	0x2
 2309 003c 07       		.byte	0x7
 2310 003d 26040000 		.4byte	.LASF3
 2311 0041 03       		.uleb128 0x3
 2312 0042 BC050000 		.4byte	.LASF9
 2313 0046 02       		.byte	0x2
 2314 0047 3F       		.byte	0x3f
 2315 0048 4C000000 		.4byte	0x4c
 2316 004c 02       		.uleb128 0x2
 2317 004d 04       		.byte	0x4
 2318 004e 05       		.byte	0x5
 2319 004f 61040000 		.4byte	.LASF4
 2320 0053 02       		.uleb128 0x2
 2321 0054 04       		.byte	0x4
 2322 0055 07       		.byte	0x7
 2323 0056 EF030000 		.4byte	.LASF5
 2324 005a 02       		.uleb128 0x2
 2325 005b 08       		.byte	0x8
 2326 005c 05       		.byte	0x5
 2327 005d E7010000 		.4byte	.LASF6
 2328 0061 02       		.uleb128 0x2
 2329 0062 08       		.byte	0x8
 2330 0063 07       		.byte	0x7
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 58


 2331 0064 C0030000 		.4byte	.LASF7
 2332 0068 04       		.uleb128 0x4
 2333 0069 04       		.byte	0x4
 2334 006a 05       		.byte	0x5
 2335 006b 696E7400 		.ascii	"int\000"
 2336 006f 02       		.uleb128 0x2
 2337 0070 04       		.byte	0x4
 2338 0071 07       		.byte	0x7
 2339 0072 E2030000 		.4byte	.LASF8
 2340 0076 03       		.uleb128 0x3
 2341 0077 6A040000 		.4byte	.LASF10
 2342 007b 03       		.byte	0x3
 2343 007c 2C       		.byte	0x2c
 2344 007d 41000000 		.4byte	0x41
 2345 0081 03       		.uleb128 0x3
 2346 0082 8F010000 		.4byte	.LASF11
 2347 0086 04       		.byte	0x4
 2348 0087 C2       		.byte	0xc2
 2349 0088 2C000000 		.4byte	0x2c
 2350 008c 03       		.uleb128 0x3
 2351 008d 71010000 		.4byte	.LASF12
 2352 0091 04       		.byte	0x4
 2353 0092 C3       		.byte	0xc3
 2354 0093 3A000000 		.4byte	0x3a
 2355 0097 02       		.uleb128 0x2
 2356 0098 04       		.byte	0x4
 2357 0099 04       		.byte	0x4
 2358 009a C6010000 		.4byte	.LASF13
 2359 009e 02       		.uleb128 0x2
 2360 009f 08       		.byte	0x8
 2361 00a0 04       		.byte	0x4
 2362 00a1 2C060000 		.4byte	.LASF14
 2363 00a5 02       		.uleb128 0x2
 2364 00a6 01       		.byte	0x1
 2365 00a7 08       		.byte	0x8
 2366 00a8 5C040000 		.4byte	.LASF15
 2367 00ac 02       		.uleb128 0x2
 2368 00ad 04       		.byte	0x4
 2369 00ae 07       		.byte	0x7
 2370 00af 9D000000 		.4byte	.LASF16
 2371 00b3 05       		.uleb128 0x5
 2372 00b4 16000000 		.4byte	.LASF40
 2373 00b8 01       		.byte	0x1
 2374 00b9 05       		.byte	0x5
 2375 00ba 1D       		.byte	0x1d
 2376 00bb 4A010000 		.4byte	0x14a
 2377 00bf 06       		.uleb128 0x6
 2378 00c0 F5010000 		.4byte	.LASF17
 2379 00c4 00       		.sleb128 0
 2380 00c5 06       		.uleb128 0x6
 2381 00c6 35030000 		.4byte	.LASF18
 2382 00ca 01       		.sleb128 1
 2383 00cb 06       		.uleb128 0x6
 2384 00cc 84060000 		.4byte	.LASF19
 2385 00d0 02       		.sleb128 2
 2386 00d1 06       		.uleb128 0x6
 2387 00d2 FC020000 		.4byte	.LASF20
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 59


 2388 00d6 03       		.sleb128 3
 2389 00d7 06       		.uleb128 0x6
 2390 00d8 CA040000 		.4byte	.LASF21
 2391 00dc 04       		.sleb128 4
 2392 00dd 06       		.uleb128 0x6
 2393 00de CD020000 		.4byte	.LASF22
 2394 00e2 05       		.sleb128 5
 2395 00e3 06       		.uleb128 0x6
 2396 00e4 06030000 		.4byte	.LASF23
 2397 00e8 06       		.sleb128 6
 2398 00e9 06       		.uleb128 0x6
 2399 00ea D1040000 		.4byte	.LASF24
 2400 00ee 07       		.sleb128 7
 2401 00ef 06       		.uleb128 0x6
 2402 00f0 5D000000 		.4byte	.LASF25
 2403 00f4 08       		.sleb128 8
 2404 00f5 06       		.uleb128 0x6
 2405 00f6 97050000 		.4byte	.LASF26
 2406 00fa 09       		.sleb128 9
 2407 00fb 06       		.uleb128 0x6
 2408 00fc 2F050000 		.4byte	.LASF27
 2409 0100 0A       		.sleb128 10
 2410 0101 06       		.uleb128 0x6
 2411 0102 33060000 		.4byte	.LASF28
 2412 0106 0B       		.sleb128 11
 2413 0107 06       		.uleb128 0x6
 2414 0108 BC010000 		.4byte	.LASF29
 2415 010c 0C       		.sleb128 12
 2416 010d 06       		.uleb128 0x6
 2417 010e 01040000 		.4byte	.LASF30
 2418 0112 0D       		.sleb128 13
 2419 0113 06       		.uleb128 0x6
 2420 0114 F2020000 		.4byte	.LASF31
 2421 0118 0E       		.sleb128 14
 2422 0119 06       		.uleb128 0x6
 2423 011a B2010000 		.4byte	.LASF32
 2424 011e 0F       		.sleb128 15
 2425 011f 06       		.uleb128 0x6
 2426 0120 94000000 		.4byte	.LASF33
 2427 0124 10       		.sleb128 16
 2428 0125 06       		.uleb128 0x6
 2429 0126 52040000 		.4byte	.LASF34
 2430 012a 11       		.sleb128 17
 2431 012b 06       		.uleb128 0x6
 2432 012c 1C020000 		.4byte	.LASF35
 2433 0130 12       		.sleb128 18
 2434 0131 06       		.uleb128 0x6
 2435 0132 FC000000 		.4byte	.LASF36
 2436 0136 13       		.sleb128 19
 2437 0137 06       		.uleb128 0x6
 2438 0138 D9050000 		.4byte	.LASF37
 2439 013c 14       		.sleb128 20
 2440 013d 06       		.uleb128 0x6
 2441 013e EB050000 		.4byte	.LASF38
 2442 0142 15       		.sleb128 21
 2443 0143 06       		.uleb128 0x6
 2444 0144 FD010000 		.4byte	.LASF39
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 60


 2445 0148 16       		.sleb128 22
 2446 0149 00       		.byte	0
 2447 014a 05       		.uleb128 0x5
 2448 014b 95010000 		.4byte	.LASF41
 2449 014f 01       		.byte	0x1
 2450 0150 01       		.byte	0x1
 2451 0151 1B       		.byte	0x1b
 2452 0152 7B010000 		.4byte	0x17b
 2453 0156 06       		.uleb128 0x6
 2454 0157 7A060000 		.4byte	.LASF42
 2455 015b 00       		.sleb128 0
 2456 015c 06       		.uleb128 0x6
 2457 015d 0F060000 		.4byte	.LASF43
 2458 0161 01       		.sleb128 1
 2459 0162 06       		.uleb128 0x6
 2460 0163 39010000 		.4byte	.LASF44
 2461 0167 02       		.sleb128 2
 2462 0168 06       		.uleb128 0x6
 2463 0169 B6030000 		.4byte	.LASF45
 2464 016d 03       		.sleb128 3
 2465 016e 06       		.uleb128 0x6
 2466 016f B1050000 		.4byte	.LASF46
 2467 0173 04       		.sleb128 4
 2468 0174 06       		.uleb128 0x6
 2469 0175 9F010000 		.4byte	.LASF47
 2470 0179 05       		.sleb128 5
 2471 017a 00       		.byte	0
 2472 017b 05       		.uleb128 0x5
 2473 017c 62030000 		.4byte	.LASF48
 2474 0180 01       		.byte	0x1
 2475 0181 01       		.byte	0x1
 2476 0182 25       		.byte	0x25
 2477 0183 B2010000 		.4byte	0x1b2
 2478 0187 06       		.uleb128 0x6
 2479 0188 DD010000 		.4byte	.LASF49
 2480 018c 00       		.sleb128 0
 2481 018d 06       		.uleb128 0x6
 2482 018e 1F000000 		.4byte	.LASF50
 2483 0192 01       		.sleb128 1
 2484 0193 06       		.uleb128 0x6
 2485 0194 A2060000 		.4byte	.LASF51
 2486 0198 02       		.sleb128 2
 2487 0199 06       		.uleb128 0x6
 2488 019a 35000000 		.4byte	.LASF52
 2489 019e 03       		.sleb128 3
 2490 019f 06       		.uleb128 0x6
 2491 01a0 3F000000 		.4byte	.LASF53
 2492 01a4 04       		.sleb128 4
 2493 01a5 06       		.uleb128 0x6
 2494 01a6 49000000 		.4byte	.LASF54
 2495 01aa 05       		.sleb128 5
 2496 01ab 06       		.uleb128 0x6
 2497 01ac 39040000 		.4byte	.LASF55
 2498 01b0 06       		.sleb128 6
 2499 01b1 00       		.byte	0
 2500 01b2 07       		.uleb128 0x7
 2501 01b3 07       		.byte	0x7
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 61


 2502 01b4 01       		.byte	0x1
 2503 01b5 31       		.byte	0x31
 2504 01b6 03020000 		.4byte	0x203
 2505 01ba 08       		.uleb128 0x8
 2506 01bb 0E010000 		.4byte	.LASF56
 2507 01bf 01       		.byte	0x1
 2508 01c0 33       		.byte	0x33
 2509 01c1 81000000 		.4byte	0x81
 2510 01c5 00       		.byte	0
 2511 01c6 08       		.uleb128 0x8
 2512 01c7 66000000 		.4byte	.LASF57
 2513 01cb 01       		.byte	0x1
 2514 01cc 34       		.byte	0x34
 2515 01cd 81000000 		.4byte	0x81
 2516 01d1 01       		.byte	0x1
 2517 01d2 08       		.uleb128 0x8
 2518 01d3 7E000000 		.4byte	.LASF58
 2519 01d7 01       		.byte	0x1
 2520 01d8 35       		.byte	0x35
 2521 01d9 81000000 		.4byte	0x81
 2522 01dd 02       		.byte	0x2
 2523 01de 08       		.uleb128 0x8
 2524 01df A8010000 		.4byte	.LASF59
 2525 01e3 01       		.byte	0x1
 2526 01e4 36       		.byte	0x36
 2527 01e5 81000000 		.4byte	0x81
 2528 01e9 03       		.byte	0x3
 2529 01ea 08       		.uleb128 0x8
 2530 01eb D7030000 		.4byte	.LASF60
 2531 01ef 01       		.byte	0x1
 2532 01f0 37       		.byte	0x37
 2533 01f1 81000000 		.4byte	0x81
 2534 01f5 04       		.byte	0x4
 2535 01f6 08       		.uleb128 0x8
 2536 01f7 78010000 		.4byte	.LASF61
 2537 01fb 01       		.byte	0x1
 2538 01fc 38       		.byte	0x38
 2539 01fd 03020000 		.4byte	0x203
 2540 0201 05       		.byte	0x5
 2541 0202 00       		.byte	0
 2542 0203 09       		.uleb128 0x9
 2543 0204 7B010000 		.4byte	0x17b
 2544 0208 13020000 		.4byte	0x213
 2545 020c 0A       		.uleb128 0xa
 2546 020d AC000000 		.4byte	0xac
 2547 0211 01       		.byte	0x1
 2548 0212 00       		.byte	0
 2549 0213 07       		.uleb128 0x7
 2550 0214 04       		.byte	0x4
 2551 0215 01       		.byte	0x1
 2552 0216 3B       		.byte	0x3b
 2553 0217 4C020000 		.4byte	0x24c
 2554 021b 08       		.uleb128 0x8
 2555 021c 3A050000 		.4byte	.LASF62
 2556 0220 01       		.byte	0x1
 2557 0221 3D       		.byte	0x3d
 2558 0222 B3000000 		.4byte	0xb3
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 62


 2559 0226 00       		.byte	0
 2560 0227 08       		.uleb128 0x8
 2561 0228 11030000 		.4byte	.LASF63
 2562 022c 01       		.byte	0x1
 2563 022d 3E       		.byte	0x3e
 2564 022e 81000000 		.4byte	0x81
 2565 0232 01       		.byte	0x1
 2566 0233 08       		.uleb128 0x8
 2567 0234 00000000 		.4byte	.LASF64
 2568 0238 01       		.byte	0x1
 2569 0239 3F       		.byte	0x3f
 2570 023a 81000000 		.4byte	0x81
 2571 023e 02       		.byte	0x2
 2572 023f 08       		.uleb128 0x8
 2573 0240 FE050000 		.4byte	.LASF65
 2574 0244 01       		.byte	0x1
 2575 0245 40       		.byte	0x40
 2576 0246 81000000 		.4byte	0x81
 2577 024a 03       		.byte	0x3
 2578 024b 00       		.byte	0
 2579 024c 03       		.uleb128 0x3
 2580 024d 21050000 		.4byte	.LASF66
 2581 0251 01       		.byte	0x1
 2582 0252 41       		.byte	0x41
 2583 0253 13020000 		.4byte	0x213
 2584 0257 0B       		.uleb128 0xb
 2585 0258 E6040000 		.4byte	.LASF76
 2586 025c 01       		.byte	0x1
 2587 025d 63       		.byte	0x63
 2588 025e 00000000 		.4byte	.LFB63
 2589 0262 44010000 		.4byte	.LFE63-.LFB63
 2590 0266 01       		.uleb128 0x1
 2591 0267 9C       		.byte	0x9c
 2592 0268 A5020000 		.4byte	0x2a5
 2593 026c 0C       		.uleb128 0xc
 2594 026d AC060000 		.4byte	.LASF67
 2595 0271 01       		.byte	0x1
 2596 0272 65       		.byte	0x65
 2597 0273 81000000 		.4byte	0x81
 2598 0277 02       		.uleb128 0x2
 2599 0278 91       		.byte	0x91
 2600 0279 6F       		.sleb128 -17
 2601 027a 0C       		.uleb128 0xc
 2602 027b 70000000 		.4byte	.LASF68
 2603 027f 01       		.byte	0x1
 2604 0280 66       		.byte	0x66
 2605 0281 81000000 		.4byte	0x81
 2606 0285 02       		.uleb128 0x2
 2607 0286 91       		.byte	0x91
 2608 0287 6E       		.sleb128 -18
 2609 0288 0C       		.uleb128 0xc
 2610 0289 BD040000 		.4byte	.LASF69
 2611 028d 01       		.byte	0x1
 2612 028e 67       		.byte	0x67
 2613 028f 81000000 		.4byte	0x81
 2614 0293 02       		.uleb128 0x2
 2615 0294 91       		.byte	0x91
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 63


 2616 0295 6D       		.sleb128 -19
 2617 0296 0C       		.uleb128 0xc
 2618 0297 74030000 		.4byte	.LASF70
 2619 029b 01       		.byte	0x1
 2620 029c 68       		.byte	0x68
 2621 029d 8C000000 		.4byte	0x8c
 2622 02a1 02       		.uleb128 0x2
 2623 02a2 91       		.byte	0x91
 2624 02a3 6A       		.sleb128 -22
 2625 02a4 00       		.byte	0
 2626 02a5 0D       		.uleb128 0xd
 2627 02a6 3F060000 		.4byte	.LASF71
 2628 02aa 01       		.byte	0x1
 2629 02ab A1       		.byte	0xa1
 2630 02ac 00000000 		.4byte	.LFB64
 2631 02b0 70000000 		.4byte	.LFE64-.LFB64
 2632 02b4 01       		.uleb128 0x1
 2633 02b5 9C       		.byte	0x9c
 2634 02b6 0D       		.uleb128 0xd
 2635 02b7 8D040000 		.4byte	.LASF72
 2636 02bb 01       		.byte	0x1
 2637 02bc BB       		.byte	0xbb
 2638 02bd 00000000 		.4byte	.LFB65
 2639 02c1 26000000 		.4byte	.LFE65-.LFB65
 2640 02c5 01       		.uleb128 0x1
 2641 02c6 9C       		.byte	0x9c
 2642 02c7 0D       		.uleb128 0xd
 2643 02c8 72040000 		.4byte	.LASF73
 2644 02cc 01       		.byte	0x1
 2645 02cd D8       		.byte	0xd8
 2646 02ce 00000000 		.4byte	.LFB66
 2647 02d2 26000000 		.4byte	.LFE66-.LFB66
 2648 02d6 01       		.uleb128 0x1
 2649 02d7 9C       		.byte	0x9c
 2650 02d8 0D       		.uleb128 0xd
 2651 02d9 B3020000 		.4byte	.LASF74
 2652 02dd 01       		.byte	0x1
 2653 02de F6       		.byte	0xf6
 2654 02df 00000000 		.4byte	.LFB67
 2655 02e3 34000000 		.4byte	.LFE67-.LFB67
 2656 02e7 01       		.uleb128 0x1
 2657 02e8 9C       		.byte	0x9c
 2658 02e9 0E       		.uleb128 0xe
 2659 02ea 43010000 		.4byte	.LASF75
 2660 02ee 01       		.byte	0x1
 2661 02ef 0B01     		.2byte	0x10b
 2662 02f1 00000000 		.4byte	.LFB68
 2663 02f5 24000000 		.4byte	.LFE68-.LFB68
 2664 02f9 01       		.uleb128 0x1
 2665 02fa 9C       		.byte	0x9c
 2666 02fb 0F       		.uleb128 0xf
 2667 02fc 46050000 		.4byte	.LASF77
 2668 0300 01       		.byte	0x1
 2669 0301 2101     		.2byte	0x121
 2670 0303 00000000 		.4byte	.LFB69
 2671 0307 60010000 		.4byte	.LFE69-.LFB69
 2672 030b 01       		.uleb128 0x1
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 64


 2673 030c 9C       		.byte	0x9c
 2674 030d 4E030000 		.4byte	0x34e
 2675 0311 10       		.uleb128 0x10
 2676 0312 21060000 		.4byte	.LASF78
 2677 0316 01       		.byte	0x1
 2678 0317 2301     		.2byte	0x123
 2679 0319 B3000000 		.4byte	0xb3
 2680 031d 02       		.uleb128 0x2
 2681 031e 91       		.byte	0x91
 2682 031f 77       		.sleb128 -9
 2683 0320 10       		.uleb128 0x10
 2684 0321 74030000 		.4byte	.LASF70
 2685 0325 01       		.byte	0x1
 2686 0326 2401     		.2byte	0x124
 2687 0328 8C000000 		.4byte	0x8c
 2688 032c 02       		.uleb128 0x2
 2689 032d 91       		.byte	0x91
 2690 032e 74       		.sleb128 -12
 2691 032f 10       		.uleb128 0x10
 2692 0330 BD040000 		.4byte	.LASF69
 2693 0334 01       		.byte	0x1
 2694 0335 2501     		.2byte	0x125
 2695 0337 81000000 		.4byte	0x81
 2696 033b 02       		.uleb128 0x2
 2697 033c 91       		.byte	0x91
 2698 033d 73       		.sleb128 -13
 2699 033e 10       		.uleb128 0x10
 2700 033f 70000000 		.4byte	.LASF68
 2701 0343 01       		.byte	0x1
 2702 0344 2601     		.2byte	0x126
 2703 0346 81000000 		.4byte	0x81
 2704 034a 02       		.uleb128 0x2
 2705 034b 91       		.byte	0x91
 2706 034c 76       		.sleb128 -10
 2707 034d 00       		.byte	0
 2708 034e 0E       		.uleb128 0xe
 2709 034f 81030000 		.4byte	.LASF79
 2710 0353 01       		.byte	0x1
 2711 0354 6B01     		.2byte	0x16b
 2712 0356 00000000 		.4byte	.LFB70
 2713 035a 24000000 		.4byte	.LFE70-.LFB70
 2714 035e 01       		.uleb128 0x1
 2715 035f 9C       		.byte	0x9c
 2716 0360 0E       		.uleb128 0xe
 2717 0361 1D030000 		.4byte	.LASF80
 2718 0365 01       		.byte	0x1
 2719 0366 8001     		.2byte	0x180
 2720 0368 00000000 		.4byte	.LFB71
 2721 036c 24000000 		.4byte	.LFE71-.LFB71
 2722 0370 01       		.uleb128 0x1
 2723 0371 9C       		.byte	0x9c
 2724 0372 0F       		.uleb128 0xf
 2725 0373 0D040000 		.4byte	.LASF81
 2726 0377 01       		.byte	0x1
 2727 0378 9601     		.2byte	0x196
 2728 037a 00000000 		.4byte	.LFB72
 2729 037e A8000000 		.4byte	.LFE72-.LFB72
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 65


 2730 0382 01       		.uleb128 0x1
 2731 0383 9C       		.byte	0x9c
 2732 0384 A7030000 		.4byte	0x3a7
 2733 0388 11       		.uleb128 0x11
 2734 0389 DD040000 		.4byte	.LASF83
 2735 038d 01       		.byte	0x1
 2736 038e 9601     		.2byte	0x196
 2737 0390 81000000 		.4byte	0x81
 2738 0394 02       		.uleb128 0x2
 2739 0395 91       		.byte	0x91
 2740 0396 6F       		.sleb128 -17
 2741 0397 10       		.uleb128 0x10
 2742 0398 A2050000 		.4byte	.LASF82
 2743 039c 01       		.byte	0x1
 2744 039d 9801     		.2byte	0x198
 2745 039f 81000000 		.4byte	0x81
 2746 03a3 02       		.uleb128 0x2
 2747 03a4 91       		.byte	0x91
 2748 03a5 77       		.sleb128 -9
 2749 03a6 00       		.byte	0
 2750 03a7 12       		.uleb128 0x12
 2751 03a8 3A030000 		.4byte	.LASF89
 2752 03ac 01       		.byte	0x1
 2753 03ad BD01     		.2byte	0x1bd
 2754 03af 7B010000 		.4byte	0x17b
 2755 03b3 00000000 		.4byte	.LFB73
 2756 03b7 94000000 		.4byte	.LFE73-.LFB73
 2757 03bb 01       		.uleb128 0x1
 2758 03bc 9C       		.byte	0x9c
 2759 03bd E0030000 		.4byte	0x3e0
 2760 03c1 11       		.uleb128 0x11
 2761 03c2 62010000 		.4byte	.LASF84
 2762 03c6 01       		.byte	0x1
 2763 03c7 BD01     		.2byte	0x1bd
 2764 03c9 81000000 		.4byte	0x81
 2765 03cd 02       		.uleb128 0x2
 2766 03ce 91       		.byte	0x91
 2767 03cf 6F       		.sleb128 -17
 2768 03d0 10       		.uleb128 0x10
 2769 03d1 88050000 		.4byte	.LASF85
 2770 03d5 01       		.byte	0x1
 2771 03d6 BF01     		.2byte	0x1bf
 2772 03d8 81000000 		.4byte	0x81
 2773 03dc 02       		.uleb128 0x2
 2774 03dd 91       		.byte	0x91
 2775 03de 77       		.sleb128 -9
 2776 03df 00       		.byte	0
 2777 03e0 13       		.uleb128 0x13
 2778 03e1 98030000 		.4byte	.LASF87
 2779 03e5 01       		.byte	0x1
 2780 03e6 E701     		.2byte	0x1e7
 2781 03e8 00000000 		.4byte	.LFB74
 2782 03ec 28030000 		.4byte	.LFE74-.LFB74
 2783 03f0 01       		.uleb128 0x1
 2784 03f1 9C       		.byte	0x9c
 2785 03f2 24040000 		.4byte	0x424
 2786 03f6 10       		.uleb128 0x10
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 66


 2787 03f7 07020000 		.4byte	.LASF86
 2788 03fb 01       		.byte	0x1
 2789 03fc E901     		.2byte	0x1e9
 2790 03fe 4A010000 		.4byte	0x14a
 2791 0402 02       		.uleb128 0x2
 2792 0403 91       		.byte	0x91
 2793 0404 6E       		.sleb128 -18
 2794 0405 10       		.uleb128 0x10
 2795 0406 A2050000 		.4byte	.LASF82
 2796 040a 01       		.byte	0x1
 2797 040b EA01     		.2byte	0x1ea
 2798 040d 7B010000 		.4byte	0x17b
 2799 0411 02       		.uleb128 0x2
 2800 0412 91       		.byte	0x91
 2801 0413 6D       		.sleb128 -19
 2802 0414 10       		.uleb128 0x10
 2803 0415 70000000 		.4byte	.LASF68
 2804 0419 01       		.byte	0x1
 2805 041a EB01     		.2byte	0x1eb
 2806 041c 81000000 		.4byte	0x81
 2807 0420 02       		.uleb128 0x2
 2808 0421 91       		.byte	0x91
 2809 0422 6F       		.sleb128 -17
 2810 0423 00       		.byte	0
 2811 0424 13       		.uleb128 0x13
 2812 0425 29000000 		.4byte	.LASF88
 2813 0429 01       		.byte	0x1
 2814 042a 7B02     		.2byte	0x27b
 2815 042c 00000000 		.4byte	.LFB75
 2816 0430 D0010000 		.4byte	.LFE75-.LFB75
 2817 0434 01       		.uleb128 0x1
 2818 0435 9C       		.byte	0x9c
 2819 0436 59040000 		.4byte	0x459
 2820 043a 10       		.uleb128 0x10
 2821 043b 07020000 		.4byte	.LASF86
 2822 043f 01       		.byte	0x1
 2823 0440 7D02     		.2byte	0x27d
 2824 0442 4A010000 		.4byte	0x14a
 2825 0446 02       		.uleb128 0x2
 2826 0447 91       		.byte	0x91
 2827 0448 76       		.sleb128 -10
 2828 0449 10       		.uleb128 0x10
 2829 044a 70000000 		.4byte	.LASF68
 2830 044e 01       		.byte	0x1
 2831 044f 7E02     		.2byte	0x27e
 2832 0451 81000000 		.4byte	0x81
 2833 0455 02       		.uleb128 0x2
 2834 0456 91       		.byte	0x91
 2835 0457 77       		.sleb128 -9
 2836 0458 00       		.byte	0
 2837 0459 12       		.uleb128 0x12
 2838 045a 5F050000 		.4byte	.LASF90
 2839 045e 01       		.byte	0x1
 2840 045f ED02     		.2byte	0x2ed
 2841 0461 4A010000 		.4byte	0x14a
 2842 0465 00000000 		.4byte	.LFB76
 2843 0469 E4000000 		.4byte	.LFE76-.LFB76
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 67


 2844 046d 01       		.uleb128 0x1
 2845 046e 9C       		.byte	0x9c
 2846 046f A1040000 		.4byte	0x4a1
 2847 0473 10       		.uleb128 0x10
 2848 0474 14050000 		.4byte	.LASF91
 2849 0478 01       		.byte	0x1
 2850 0479 EF02     		.2byte	0x2ef
 2851 047b 81000000 		.4byte	0x81
 2852 047f 02       		.uleb128 0x2
 2853 0480 91       		.byte	0x91
 2854 0481 6F       		.sleb128 -17
 2855 0482 10       		.uleb128 0x10
 2856 0483 06050000 		.4byte	.LASF92
 2857 0487 01       		.byte	0x1
 2858 0488 F002     		.2byte	0x2f0
 2859 048a 03020000 		.4byte	0x203
 2860 048e 02       		.uleb128 0x2
 2861 048f 91       		.byte	0x91
 2862 0490 6C       		.sleb128 -20
 2863 0491 10       		.uleb128 0x10
 2864 0492 44040000 		.4byte	.LASF93
 2865 0496 01       		.byte	0x1
 2866 0497 F102     		.2byte	0x2f1
 2867 0499 A1040000 		.4byte	0x4a1
 2868 049d 02       		.uleb128 0x2
 2869 049e 91       		.byte	0x91
 2870 049f 68       		.sleb128 -24
 2871 04a0 00       		.byte	0
 2872 04a1 09       		.uleb128 0x9
 2873 04a2 B3000000 		.4byte	0xb3
 2874 04a6 B1040000 		.4byte	0x4b1
 2875 04aa 0A       		.uleb128 0xa
 2876 04ab AC000000 		.4byte	0xac
 2877 04af 01       		.byte	0x1
 2878 04b0 00       		.byte	0
 2879 04b1 12       		.uleb128 0x12
 2880 04b2 C6050000 		.4byte	.LASF94
 2881 04b6 01       		.byte	0x1
 2882 04b7 1D03     		.2byte	0x31d
 2883 04b9 B3000000 		.4byte	0xb3
 2884 04bd 00000000 		.4byte	.LFB77
 2885 04c1 50000000 		.4byte	.LFE77-.LFB77
 2886 04c5 01       		.uleb128 0x1
 2887 04c6 9C       		.byte	0x9c
 2888 04c7 DB040000 		.4byte	0x4db
 2889 04cb 11       		.uleb128 0x11
 2890 04cc 44040000 		.4byte	.LASF93
 2891 04d0 01       		.byte	0x1
 2892 04d1 1D03     		.2byte	0x31d
 2893 04d3 B3000000 		.4byte	0xb3
 2894 04d7 02       		.uleb128 0x2
 2895 04d8 91       		.byte	0x91
 2896 04d9 77       		.sleb128 -9
 2897 04da 00       		.byte	0
 2898 04db 12       		.uleb128 0x12
 2899 04dc DE020000 		.4byte	.LASF95
 2900 04e0 01       		.byte	0x1
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 68


 2901 04e1 3903     		.2byte	0x339
 2902 04e3 81000000 		.4byte	0x81
 2903 04e7 00000000 		.4byte	.LFB78
 2904 04eb 30000000 		.4byte	.LFE78-.LFB78
 2905 04ef 01       		.uleb128 0x1
 2906 04f0 9C       		.byte	0x9c
 2907 04f1 05050000 		.4byte	0x505
 2908 04f5 11       		.uleb128 0x11
 2909 04f6 44040000 		.4byte	.LASF93
 2910 04fa 01       		.byte	0x1
 2911 04fb 3903     		.2byte	0x339
 2912 04fd B3000000 		.4byte	0xb3
 2913 0501 02       		.uleb128 0x2
 2914 0502 91       		.byte	0x91
 2915 0503 77       		.sleb128 -9
 2916 0504 00       		.byte	0
 2917 0505 14       		.uleb128 0x14
 2918 0506 1A060000 		.4byte	.LASF96
 2919 050a 01       		.byte	0x1
 2920 050b 5203     		.2byte	0x352
 2921 050d 81000000 		.4byte	0x81
 2922 0511 00000000 		.4byte	.LFB79
 2923 0515 22000000 		.4byte	.LFE79-.LFB79
 2924 0519 01       		.uleb128 0x1
 2925 051a 9C       		.byte	0x9c
 2926 051b 2F050000 		.4byte	0x52f
 2927 051f 11       		.uleb128 0x11
 2928 0520 44040000 		.4byte	.LASF93
 2929 0524 01       		.byte	0x1
 2930 0525 5203     		.2byte	0x352
 2931 0527 B3000000 		.4byte	0xb3
 2932 052b 02       		.uleb128 0x2
 2933 052c 91       		.byte	0x91
 2934 052d 77       		.sleb128 -9
 2935 052e 00       		.byte	0
 2936 052f 14       		.uleb128 0x14
 2937 0530 D2020000 		.4byte	.LASF97
 2938 0534 01       		.byte	0x1
 2939 0535 6803     		.2byte	0x368
 2940 0537 81000000 		.4byte	0x81
 2941 053b 00000000 		.4byte	.LFB80
 2942 053f 28000000 		.4byte	.LFE80-.LFB80
 2943 0543 01       		.uleb128 0x1
 2944 0544 9C       		.byte	0x9c
 2945 0545 59050000 		.4byte	0x559
 2946 0549 11       		.uleb128 0x11
 2947 054a 44040000 		.4byte	.LASF93
 2948 054e 01       		.byte	0x1
 2949 054f 6803     		.2byte	0x368
 2950 0551 B3000000 		.4byte	0xb3
 2951 0555 02       		.uleb128 0x2
 2952 0556 91       		.byte	0x91
 2953 0557 77       		.sleb128 -9
 2954 0558 00       		.byte	0
 2955 0559 09       		.uleb128 0x9
 2956 055a 81000000 		.4byte	0x81
 2957 055e 69050000 		.4byte	0x569
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 69


 2958 0562 0A       		.uleb128 0xa
 2959 0563 AC000000 		.4byte	0xac
 2960 0567 0B       		.byte	0xb
 2961 0568 00       		.byte	0
 2962 0569 0C       		.uleb128 0xc
 2963 056a 1E010000 		.4byte	.LASF98
 2964 056e 01       		.byte	0x1
 2965 056f 14       		.byte	0x14
 2966 0570 7A050000 		.4byte	0x57a
 2967 0574 05       		.uleb128 0x5
 2968 0575 03       		.byte	0x3
 2969 0576 00000000 		.4byte	DEFAULT_CONFIGURATION_LIST
 2970 057a 15       		.uleb128 0x15
 2971 057b 59050000 		.4byte	0x559
 2972 057f 0C       		.uleb128 0xc
 2973 0580 CC010000 		.4byte	.LASF99
 2974 0584 01       		.byte	0x1
 2975 0585 18       		.byte	0x18
 2976 0586 90050000 		.4byte	0x590
 2977 058a 05       		.uleb128 0x5
 2978 058b 03       		.byte	0x3
 2979 058c 0C000000 		.4byte	EEPROM_KEY_INDEX
 2980 0590 15       		.uleb128 0x15
 2981 0591 8C000000 		.4byte	0x8c
 2982 0595 0C       		.uleb128 0xc
 2983 0596 77050000 		.4byte	.LASF100
 2984 059a 01       		.byte	0x1
 2985 059b 19       		.byte	0x19
 2986 059c A6050000 		.4byte	0x5a6
 2987 05a0 05       		.uleb128 0x5
 2988 05a1 03       		.byte	0x3
 2989 05a2 0E000000 		.4byte	EEPROM_KEY_VALUE
 2990 05a6 15       		.uleb128 0x15
 2991 05a7 81000000 		.4byte	0x81
 2992 05ab 0C       		.uleb128 0xc
 2993 05ac 53000000 		.4byte	.LASF101
 2994 05b0 01       		.byte	0x1
 2995 05b1 39       		.byte	0x39
 2996 05b2 B2010000 		.4byte	0x1b2
 2997 05b6 05       		.uleb128 0x5
 2998 05b7 03       		.byte	0x3
 2999 05b8 00000000 		.4byte	InputRead
 3000 05bc 09       		.uleb128 0x9
 3001 05bd 4C020000 		.4byte	0x24c
 3002 05c1 CC050000 		.4byte	0x5cc
 3003 05c5 0A       		.uleb128 0xa
 3004 05c6 AC000000 		.4byte	0xac
 3005 05ca 01       		.byte	0x1
 3006 05cb 00       		.byte	0
 3007 05cc 0C       		.uleb128 0xc
 3008 05cd 5A010000 		.4byte	.LASF102
 3009 05d1 01       		.byte	0x1
 3010 05d2 43       		.byte	0x43
 3011 05d3 BC050000 		.4byte	0x5bc
 3012 05d7 05       		.uleb128 0x5
 3013 05d8 03       		.byte	0x3
 3014 05d9 08000000 		.4byte	Speaker
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 70


 3015 05dd 09       		.uleb128 0x9
 3016 05de B3000000 		.4byte	0xb3
 3017 05e2 F3050000 		.4byte	0x5f3
 3018 05e6 0A       		.uleb128 0xa
 3019 05e7 AC000000 		.4byte	0xac
 3020 05eb 01       		.byte	0x1
 3021 05ec 0A       		.uleb128 0xa
 3022 05ed AC000000 		.4byte	0xac
 3023 05f1 05       		.byte	0x5
 3024 05f2 00       		.byte	0
 3025 05f3 0C       		.uleb128 0xc
 3026 05f4 64060000 		.4byte	.LASF103
 3027 05f8 01       		.byte	0x1
 3028 05f9 46       		.byte	0x46
 3029 05fa DD050000 		.4byte	0x5dd
 3030 05fe 05       		.uleb128 0x5
 3031 05ff 03       		.byte	0x3
 3032 0600 10000000 		.4byte	toneConfigurationList
 3033 0604 0C       		.uleb128 0xc
 3034 0605 A7040000 		.4byte	.LASF104
 3035 0609 01       		.byte	0x1
 3036 060a 47       		.byte	0x47
 3037 060b 81000000 		.4byte	0x81
 3038 060f 05       		.uleb128 0x5
 3039 0610 03       		.byte	0x3
 3040 0611 1C000000 		.4byte	bToneChangeOnHornRing
 3041 0615 16       		.uleb128 0x16
 3042 0616 57060000 		.4byte	.LASF108
 3043 061a 06       		.byte	0x6
 3044 061b 2A06     		.2byte	0x62a
 3045 061d 21060000 		.4byte	0x621
 3046 0621 17       		.uleb128 0x17
 3047 0622 76000000 		.4byte	0x76
 3048 0626 00       		.byte	0
 3049              		.section	.debug_abbrev,"",%progbits
 3050              	.Ldebug_abbrev0:
 3051 0000 01       		.uleb128 0x1
 3052 0001 11       		.uleb128 0x11
 3053 0002 01       		.byte	0x1
 3054 0003 25       		.uleb128 0x25
 3055 0004 0E       		.uleb128 0xe
 3056 0005 13       		.uleb128 0x13
 3057 0006 0B       		.uleb128 0xb
 3058 0007 03       		.uleb128 0x3
 3059 0008 0E       		.uleb128 0xe
 3060 0009 1B       		.uleb128 0x1b
 3061 000a 0E       		.uleb128 0xe
 3062 000b 55       		.uleb128 0x55
 3063 000c 17       		.uleb128 0x17
 3064 000d 11       		.uleb128 0x11
 3065 000e 01       		.uleb128 0x1
 3066 000f 10       		.uleb128 0x10
 3067 0010 17       		.uleb128 0x17
 3068 0011 00       		.byte	0
 3069 0012 00       		.byte	0
 3070 0013 02       		.uleb128 0x2
 3071 0014 24       		.uleb128 0x24
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 71


 3072 0015 00       		.byte	0
 3073 0016 0B       		.uleb128 0xb
 3074 0017 0B       		.uleb128 0xb
 3075 0018 3E       		.uleb128 0x3e
 3076 0019 0B       		.uleb128 0xb
 3077 001a 03       		.uleb128 0x3
 3078 001b 0E       		.uleb128 0xe
 3079 001c 00       		.byte	0
 3080 001d 00       		.byte	0
 3081 001e 03       		.uleb128 0x3
 3082 001f 16       		.uleb128 0x16
 3083 0020 00       		.byte	0
 3084 0021 03       		.uleb128 0x3
 3085 0022 0E       		.uleb128 0xe
 3086 0023 3A       		.uleb128 0x3a
 3087 0024 0B       		.uleb128 0xb
 3088 0025 3B       		.uleb128 0x3b
 3089 0026 0B       		.uleb128 0xb
 3090 0027 49       		.uleb128 0x49
 3091 0028 13       		.uleb128 0x13
 3092 0029 00       		.byte	0
 3093 002a 00       		.byte	0
 3094 002b 04       		.uleb128 0x4
 3095 002c 24       		.uleb128 0x24
 3096 002d 00       		.byte	0
 3097 002e 0B       		.uleb128 0xb
 3098 002f 0B       		.uleb128 0xb
 3099 0030 3E       		.uleb128 0x3e
 3100 0031 0B       		.uleb128 0xb
 3101 0032 03       		.uleb128 0x3
 3102 0033 08       		.uleb128 0x8
 3103 0034 00       		.byte	0
 3104 0035 00       		.byte	0
 3105 0036 05       		.uleb128 0x5
 3106 0037 04       		.uleb128 0x4
 3107 0038 01       		.byte	0x1
 3108 0039 03       		.uleb128 0x3
 3109 003a 0E       		.uleb128 0xe
 3110 003b 0B       		.uleb128 0xb
 3111 003c 0B       		.uleb128 0xb
 3112 003d 3A       		.uleb128 0x3a
 3113 003e 0B       		.uleb128 0xb
 3114 003f 3B       		.uleb128 0x3b
 3115 0040 0B       		.uleb128 0xb
 3116 0041 01       		.uleb128 0x1
 3117 0042 13       		.uleb128 0x13
 3118 0043 00       		.byte	0
 3119 0044 00       		.byte	0
 3120 0045 06       		.uleb128 0x6
 3121 0046 28       		.uleb128 0x28
 3122 0047 00       		.byte	0
 3123 0048 03       		.uleb128 0x3
 3124 0049 0E       		.uleb128 0xe
 3125 004a 1C       		.uleb128 0x1c
 3126 004b 0D       		.uleb128 0xd
 3127 004c 00       		.byte	0
 3128 004d 00       		.byte	0
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 72


 3129 004e 07       		.uleb128 0x7
 3130 004f 13       		.uleb128 0x13
 3131 0050 01       		.byte	0x1
 3132 0051 0B       		.uleb128 0xb
 3133 0052 0B       		.uleb128 0xb
 3134 0053 3A       		.uleb128 0x3a
 3135 0054 0B       		.uleb128 0xb
 3136 0055 3B       		.uleb128 0x3b
 3137 0056 0B       		.uleb128 0xb
 3138 0057 01       		.uleb128 0x1
 3139 0058 13       		.uleb128 0x13
 3140 0059 00       		.byte	0
 3141 005a 00       		.byte	0
 3142 005b 08       		.uleb128 0x8
 3143 005c 0D       		.uleb128 0xd
 3144 005d 00       		.byte	0
 3145 005e 03       		.uleb128 0x3
 3146 005f 0E       		.uleb128 0xe
 3147 0060 3A       		.uleb128 0x3a
 3148 0061 0B       		.uleb128 0xb
 3149 0062 3B       		.uleb128 0x3b
 3150 0063 0B       		.uleb128 0xb
 3151 0064 49       		.uleb128 0x49
 3152 0065 13       		.uleb128 0x13
 3153 0066 38       		.uleb128 0x38
 3154 0067 0B       		.uleb128 0xb
 3155 0068 00       		.byte	0
 3156 0069 00       		.byte	0
 3157 006a 09       		.uleb128 0x9
 3158 006b 01       		.uleb128 0x1
 3159 006c 01       		.byte	0x1
 3160 006d 49       		.uleb128 0x49
 3161 006e 13       		.uleb128 0x13
 3162 006f 01       		.uleb128 0x1
 3163 0070 13       		.uleb128 0x13
 3164 0071 00       		.byte	0
 3165 0072 00       		.byte	0
 3166 0073 0A       		.uleb128 0xa
 3167 0074 21       		.uleb128 0x21
 3168 0075 00       		.byte	0
 3169 0076 49       		.uleb128 0x49
 3170 0077 13       		.uleb128 0x13
 3171 0078 2F       		.uleb128 0x2f
 3172 0079 0B       		.uleb128 0xb
 3173 007a 00       		.byte	0
 3174 007b 00       		.byte	0
 3175 007c 0B       		.uleb128 0xb
 3176 007d 2E       		.uleb128 0x2e
 3177 007e 01       		.byte	0x1
 3178 007f 3F       		.uleb128 0x3f
 3179 0080 19       		.uleb128 0x19
 3180 0081 03       		.uleb128 0x3
 3181 0082 0E       		.uleb128 0xe
 3182 0083 3A       		.uleb128 0x3a
 3183 0084 0B       		.uleb128 0xb
 3184 0085 3B       		.uleb128 0x3b
 3185 0086 0B       		.uleb128 0xb
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 73


 3186 0087 27       		.uleb128 0x27
 3187 0088 19       		.uleb128 0x19
 3188 0089 11       		.uleb128 0x11
 3189 008a 01       		.uleb128 0x1
 3190 008b 12       		.uleb128 0x12
 3191 008c 06       		.uleb128 0x6
 3192 008d 40       		.uleb128 0x40
 3193 008e 18       		.uleb128 0x18
 3194 008f 9642     		.uleb128 0x2116
 3195 0091 19       		.uleb128 0x19
 3196 0092 01       		.uleb128 0x1
 3197 0093 13       		.uleb128 0x13
 3198 0094 00       		.byte	0
 3199 0095 00       		.byte	0
 3200 0096 0C       		.uleb128 0xc
 3201 0097 34       		.uleb128 0x34
 3202 0098 00       		.byte	0
 3203 0099 03       		.uleb128 0x3
 3204 009a 0E       		.uleb128 0xe
 3205 009b 3A       		.uleb128 0x3a
 3206 009c 0B       		.uleb128 0xb
 3207 009d 3B       		.uleb128 0x3b
 3208 009e 0B       		.uleb128 0xb
 3209 009f 49       		.uleb128 0x49
 3210 00a0 13       		.uleb128 0x13
 3211 00a1 02       		.uleb128 0x2
 3212 00a2 18       		.uleb128 0x18
 3213 00a3 00       		.byte	0
 3214 00a4 00       		.byte	0
 3215 00a5 0D       		.uleb128 0xd
 3216 00a6 2E       		.uleb128 0x2e
 3217 00a7 00       		.byte	0
 3218 00a8 3F       		.uleb128 0x3f
 3219 00a9 19       		.uleb128 0x19
 3220 00aa 03       		.uleb128 0x3
 3221 00ab 0E       		.uleb128 0xe
 3222 00ac 3A       		.uleb128 0x3a
 3223 00ad 0B       		.uleb128 0xb
 3224 00ae 3B       		.uleb128 0x3b
 3225 00af 0B       		.uleb128 0xb
 3226 00b0 27       		.uleb128 0x27
 3227 00b1 19       		.uleb128 0x19
 3228 00b2 11       		.uleb128 0x11
 3229 00b3 01       		.uleb128 0x1
 3230 00b4 12       		.uleb128 0x12
 3231 00b5 06       		.uleb128 0x6
 3232 00b6 40       		.uleb128 0x40
 3233 00b7 18       		.uleb128 0x18
 3234 00b8 9642     		.uleb128 0x2116
 3235 00ba 19       		.uleb128 0x19
 3236 00bb 00       		.byte	0
 3237 00bc 00       		.byte	0
 3238 00bd 0E       		.uleb128 0xe
 3239 00be 2E       		.uleb128 0x2e
 3240 00bf 00       		.byte	0
 3241 00c0 3F       		.uleb128 0x3f
 3242 00c1 19       		.uleb128 0x19
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 74


 3243 00c2 03       		.uleb128 0x3
 3244 00c3 0E       		.uleb128 0xe
 3245 00c4 3A       		.uleb128 0x3a
 3246 00c5 0B       		.uleb128 0xb
 3247 00c6 3B       		.uleb128 0x3b
 3248 00c7 05       		.uleb128 0x5
 3249 00c8 27       		.uleb128 0x27
 3250 00c9 19       		.uleb128 0x19
 3251 00ca 11       		.uleb128 0x11
 3252 00cb 01       		.uleb128 0x1
 3253 00cc 12       		.uleb128 0x12
 3254 00cd 06       		.uleb128 0x6
 3255 00ce 40       		.uleb128 0x40
 3256 00cf 18       		.uleb128 0x18
 3257 00d0 9642     		.uleb128 0x2116
 3258 00d2 19       		.uleb128 0x19
 3259 00d3 00       		.byte	0
 3260 00d4 00       		.byte	0
 3261 00d5 0F       		.uleb128 0xf
 3262 00d6 2E       		.uleb128 0x2e
 3263 00d7 01       		.byte	0x1
 3264 00d8 3F       		.uleb128 0x3f
 3265 00d9 19       		.uleb128 0x19
 3266 00da 03       		.uleb128 0x3
 3267 00db 0E       		.uleb128 0xe
 3268 00dc 3A       		.uleb128 0x3a
 3269 00dd 0B       		.uleb128 0xb
 3270 00de 3B       		.uleb128 0x3b
 3271 00df 05       		.uleb128 0x5
 3272 00e0 27       		.uleb128 0x27
 3273 00e1 19       		.uleb128 0x19
 3274 00e2 11       		.uleb128 0x11
 3275 00e3 01       		.uleb128 0x1
 3276 00e4 12       		.uleb128 0x12
 3277 00e5 06       		.uleb128 0x6
 3278 00e6 40       		.uleb128 0x40
 3279 00e7 18       		.uleb128 0x18
 3280 00e8 9642     		.uleb128 0x2116
 3281 00ea 19       		.uleb128 0x19
 3282 00eb 01       		.uleb128 0x1
 3283 00ec 13       		.uleb128 0x13
 3284 00ed 00       		.byte	0
 3285 00ee 00       		.byte	0
 3286 00ef 10       		.uleb128 0x10
 3287 00f0 34       		.uleb128 0x34
 3288 00f1 00       		.byte	0
 3289 00f2 03       		.uleb128 0x3
 3290 00f3 0E       		.uleb128 0xe
 3291 00f4 3A       		.uleb128 0x3a
 3292 00f5 0B       		.uleb128 0xb
 3293 00f6 3B       		.uleb128 0x3b
 3294 00f7 05       		.uleb128 0x5
 3295 00f8 49       		.uleb128 0x49
 3296 00f9 13       		.uleb128 0x13
 3297 00fa 02       		.uleb128 0x2
 3298 00fb 18       		.uleb128 0x18
 3299 00fc 00       		.byte	0
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 75


 3300 00fd 00       		.byte	0
 3301 00fe 11       		.uleb128 0x11
 3302 00ff 05       		.uleb128 0x5
 3303 0100 00       		.byte	0
 3304 0101 03       		.uleb128 0x3
 3305 0102 0E       		.uleb128 0xe
 3306 0103 3A       		.uleb128 0x3a
 3307 0104 0B       		.uleb128 0xb
 3308 0105 3B       		.uleb128 0x3b
 3309 0106 05       		.uleb128 0x5
 3310 0107 49       		.uleb128 0x49
 3311 0108 13       		.uleb128 0x13
 3312 0109 02       		.uleb128 0x2
 3313 010a 18       		.uleb128 0x18
 3314 010b 00       		.byte	0
 3315 010c 00       		.byte	0
 3316 010d 12       		.uleb128 0x12
 3317 010e 2E       		.uleb128 0x2e
 3318 010f 01       		.byte	0x1
 3319 0110 03       		.uleb128 0x3
 3320 0111 0E       		.uleb128 0xe
 3321 0112 3A       		.uleb128 0x3a
 3322 0113 0B       		.uleb128 0xb
 3323 0114 3B       		.uleb128 0x3b
 3324 0115 05       		.uleb128 0x5
 3325 0116 27       		.uleb128 0x27
 3326 0117 19       		.uleb128 0x19
 3327 0118 49       		.uleb128 0x49
 3328 0119 13       		.uleb128 0x13
 3329 011a 11       		.uleb128 0x11
 3330 011b 01       		.uleb128 0x1
 3331 011c 12       		.uleb128 0x12
 3332 011d 06       		.uleb128 0x6
 3333 011e 40       		.uleb128 0x40
 3334 011f 18       		.uleb128 0x18
 3335 0120 9642     		.uleb128 0x2116
 3336 0122 19       		.uleb128 0x19
 3337 0123 01       		.uleb128 0x1
 3338 0124 13       		.uleb128 0x13
 3339 0125 00       		.byte	0
 3340 0126 00       		.byte	0
 3341 0127 13       		.uleb128 0x13
 3342 0128 2E       		.uleb128 0x2e
 3343 0129 01       		.byte	0x1
 3344 012a 03       		.uleb128 0x3
 3345 012b 0E       		.uleb128 0xe
 3346 012c 3A       		.uleb128 0x3a
 3347 012d 0B       		.uleb128 0xb
 3348 012e 3B       		.uleb128 0x3b
 3349 012f 05       		.uleb128 0x5
 3350 0130 27       		.uleb128 0x27
 3351 0131 19       		.uleb128 0x19
 3352 0132 11       		.uleb128 0x11
 3353 0133 01       		.uleb128 0x1
 3354 0134 12       		.uleb128 0x12
 3355 0135 06       		.uleb128 0x6
 3356 0136 40       		.uleb128 0x40
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 76


 3357 0137 18       		.uleb128 0x18
 3358 0138 9642     		.uleb128 0x2116
 3359 013a 19       		.uleb128 0x19
 3360 013b 01       		.uleb128 0x1
 3361 013c 13       		.uleb128 0x13
 3362 013d 00       		.byte	0
 3363 013e 00       		.byte	0
 3364 013f 14       		.uleb128 0x14
 3365 0140 2E       		.uleb128 0x2e
 3366 0141 01       		.byte	0x1
 3367 0142 03       		.uleb128 0x3
 3368 0143 0E       		.uleb128 0xe
 3369 0144 3A       		.uleb128 0x3a
 3370 0145 0B       		.uleb128 0xb
 3371 0146 3B       		.uleb128 0x3b
 3372 0147 05       		.uleb128 0x5
 3373 0148 27       		.uleb128 0x27
 3374 0149 19       		.uleb128 0x19
 3375 014a 49       		.uleb128 0x49
 3376 014b 13       		.uleb128 0x13
 3377 014c 11       		.uleb128 0x11
 3378 014d 01       		.uleb128 0x1
 3379 014e 12       		.uleb128 0x12
 3380 014f 06       		.uleb128 0x6
 3381 0150 40       		.uleb128 0x40
 3382 0151 18       		.uleb128 0x18
 3383 0152 9742     		.uleb128 0x2117
 3384 0154 19       		.uleb128 0x19
 3385 0155 01       		.uleb128 0x1
 3386 0156 13       		.uleb128 0x13
 3387 0157 00       		.byte	0
 3388 0158 00       		.byte	0
 3389 0159 15       		.uleb128 0x15
 3390 015a 26       		.uleb128 0x26
 3391 015b 00       		.byte	0
 3392 015c 49       		.uleb128 0x49
 3393 015d 13       		.uleb128 0x13
 3394 015e 00       		.byte	0
 3395 015f 00       		.byte	0
 3396 0160 16       		.uleb128 0x16
 3397 0161 34       		.uleb128 0x34
 3398 0162 00       		.byte	0
 3399 0163 03       		.uleb128 0x3
 3400 0164 0E       		.uleb128 0xe
 3401 0165 3A       		.uleb128 0x3a
 3402 0166 0B       		.uleb128 0xb
 3403 0167 3B       		.uleb128 0x3b
 3404 0168 05       		.uleb128 0x5
 3405 0169 49       		.uleb128 0x49
 3406 016a 13       		.uleb128 0x13
 3407 016b 3F       		.uleb128 0x3f
 3408 016c 19       		.uleb128 0x19
 3409 016d 3C       		.uleb128 0x3c
 3410 016e 19       		.uleb128 0x19
 3411 016f 00       		.byte	0
 3412 0170 00       		.byte	0
 3413 0171 17       		.uleb128 0x17
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 77


 3414 0172 35       		.uleb128 0x35
 3415 0173 00       		.byte	0
 3416 0174 49       		.uleb128 0x49
 3417 0175 13       		.uleb128 0x13
 3418 0176 00       		.byte	0
 3419 0177 00       		.byte	0
 3420 0178 00       		.byte	0
 3421              		.section	.debug_aranges,"",%progbits
 3422 0000 A4000000 		.4byte	0xa4
 3423 0004 0200     		.2byte	0x2
 3424 0006 00000000 		.4byte	.Ldebug_info0
 3425 000a 04       		.byte	0x4
 3426 000b 00       		.byte	0
 3427 000c 0000     		.2byte	0
 3428 000e 0000     		.2byte	0
 3429 0010 00000000 		.4byte	.LFB63
 3430 0014 44010000 		.4byte	.LFE63-.LFB63
 3431 0018 00000000 		.4byte	.LFB64
 3432 001c 70000000 		.4byte	.LFE64-.LFB64
 3433 0020 00000000 		.4byte	.LFB65
 3434 0024 26000000 		.4byte	.LFE65-.LFB65
 3435 0028 00000000 		.4byte	.LFB66
 3436 002c 26000000 		.4byte	.LFE66-.LFB66
 3437 0030 00000000 		.4byte	.LFB67
 3438 0034 34000000 		.4byte	.LFE67-.LFB67
 3439 0038 00000000 		.4byte	.LFB68
 3440 003c 24000000 		.4byte	.LFE68-.LFB68
 3441 0040 00000000 		.4byte	.LFB69
 3442 0044 60010000 		.4byte	.LFE69-.LFB69
 3443 0048 00000000 		.4byte	.LFB70
 3444 004c 24000000 		.4byte	.LFE70-.LFB70
 3445 0050 00000000 		.4byte	.LFB71
 3446 0054 24000000 		.4byte	.LFE71-.LFB71
 3447 0058 00000000 		.4byte	.LFB72
 3448 005c A8000000 		.4byte	.LFE72-.LFB72
 3449 0060 00000000 		.4byte	.LFB73
 3450 0064 94000000 		.4byte	.LFE73-.LFB73
 3451 0068 00000000 		.4byte	.LFB74
 3452 006c 28030000 		.4byte	.LFE74-.LFB74
 3453 0070 00000000 		.4byte	.LFB75
 3454 0074 D0010000 		.4byte	.LFE75-.LFB75
 3455 0078 00000000 		.4byte	.LFB76
 3456 007c E4000000 		.4byte	.LFE76-.LFB76
 3457 0080 00000000 		.4byte	.LFB77
 3458 0084 50000000 		.4byte	.LFE77-.LFB77
 3459 0088 00000000 		.4byte	.LFB78
 3460 008c 30000000 		.4byte	.LFE78-.LFB78
 3461 0090 00000000 		.4byte	.LFB79
 3462 0094 22000000 		.4byte	.LFE79-.LFB79
 3463 0098 00000000 		.4byte	.LFB80
 3464 009c 28000000 		.4byte	.LFE80-.LFB80
 3465 00a0 00000000 		.4byte	0
 3466 00a4 00000000 		.4byte	0
 3467              		.section	.debug_ranges,"",%progbits
 3468              	.Ldebug_ranges0:
 3469 0000 00000000 		.4byte	.LFB63
 3470 0004 44010000 		.4byte	.LFE63
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 78


 3471 0008 00000000 		.4byte	.LFB64
 3472 000c 70000000 		.4byte	.LFE64
 3473 0010 00000000 		.4byte	.LFB65
 3474 0014 26000000 		.4byte	.LFE65
 3475 0018 00000000 		.4byte	.LFB66
 3476 001c 26000000 		.4byte	.LFE66
 3477 0020 00000000 		.4byte	.LFB67
 3478 0024 34000000 		.4byte	.LFE67
 3479 0028 00000000 		.4byte	.LFB68
 3480 002c 24000000 		.4byte	.LFE68
 3481 0030 00000000 		.4byte	.LFB69
 3482 0034 60010000 		.4byte	.LFE69
 3483 0038 00000000 		.4byte	.LFB70
 3484 003c 24000000 		.4byte	.LFE70
 3485 0040 00000000 		.4byte	.LFB71
 3486 0044 24000000 		.4byte	.LFE71
 3487 0048 00000000 		.4byte	.LFB72
 3488 004c A8000000 		.4byte	.LFE72
 3489 0050 00000000 		.4byte	.LFB73
 3490 0054 94000000 		.4byte	.LFE73
 3491 0058 00000000 		.4byte	.LFB74
 3492 005c 28030000 		.4byte	.LFE74
 3493 0060 00000000 		.4byte	.LFB75
 3494 0064 D0010000 		.4byte	.LFE75
 3495 0068 00000000 		.4byte	.LFB76
 3496 006c E4000000 		.4byte	.LFE76
 3497 0070 00000000 		.4byte	.LFB77
 3498 0074 50000000 		.4byte	.LFE77
 3499 0078 00000000 		.4byte	.LFB78
 3500 007c 30000000 		.4byte	.LFE78
 3501 0080 00000000 		.4byte	.LFB79
 3502 0084 22000000 		.4byte	.LFE79
 3503 0088 00000000 		.4byte	.LFB80
 3504 008c 28000000 		.4byte	.LFE80
 3505 0090 00000000 		.4byte	0
 3506 0094 00000000 		.4byte	0
 3507              		.section	.debug_line,"",%progbits
 3508              	.Ldebug_line0:
 3509 0000 76050000 		.section	.debug_str,"MS",%progbits,1
 3509      02006B01 
 3509      00000201 
 3509      FB0E0D00 
 3509      01010101 
 3510              	.LASF64:
 3511 0000 624D616E 		.ascii	"bManualWailToneStatus\000"
 3511      75616C57 
 3511      61696C54 
 3511      6F6E6553 
 3511      74617475 
 3512              	.LASF40:
 3513 0016 546F6E65 		.ascii	"ToneType\000"
 3513      54797065 
 3513      00
 3514              	.LASF50:
 3515 001f 4348414E 		.ascii	"CHANNEL_2\000"
 3515      4E454C5F 
 3515      3200
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 79


 3516              	.LASF88:
 3517 0029 75706461 		.ascii	"updateAudio\000"
 3517      74654175 
 3517      64696F00 
 3518              	.LASF52:
 3519 0035 4348414E 		.ascii	"CHANNEL_4\000"
 3519      4E454C5F 
 3519      3400
 3520              	.LASF53:
 3521 003f 4348414E 		.ascii	"CHANNEL_5\000"
 3521      4E454C5F 
 3521      3500
 3522              	.LASF54:
 3523 0049 4348414E 		.ascii	"CHANNEL_6\000"
 3523      4E454C5F 
 3523      3600
 3524              	.LASF101:
 3525 0053 496E7075 		.ascii	"InputRead\000"
 3525      74526561 
 3525      6400
 3526              	.LASF25:
 3527 005d 48494748 		.ascii	"HIGH_LOW\000"
 3527      5F4C4F57 
 3527      00
 3528              	.LASF57:
 3529 0066 62506172 		.ascii	"bParkKill\000"
 3529      6B4B696C 
 3529      6C00
 3530              	.LASF68:
 3531 0070 62537065 		.ascii	"bSpeakerIndex\000"
 3531      616B6572 
 3531      496E6465 
 3531      7800
 3532              	.LASF58:
 3533 007e 62546163 		.ascii	"bTackSwitch\000"
 3533      6B537769 
 3533      74636800 
 3534              	.LASF2:
 3535 008a 73686F72 		.ascii	"short int\000"
 3535      7420696E 
 3535      7400
 3536              	.LASF33:
 3537 0094 4D4F5645 		.ascii	"MOVE_OUT\000"
 3537      5F4F5554 
 3537      00
 3538              	.LASF16:
 3539 009d 73697A65 		.ascii	"sizetype\000"
 3539      74797065 
 3539      00
 3540              	.LASF107:
 3541 00a6 5C5C5345 		.ascii	"\\\\SERVER1\\Folder Redirection\\faith\\Desktop\\Si"
 3541      52564552 
 3541      315C466F 
 3541      6C646572 
 3541      20526564 
 3542 00d3 72656E50 		.ascii	"renProject200W_RevC\\ReleaseVersion.cydsn\000"
 3542      726F6A65 
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 80


 3542      63743230 
 3542      30575F52 
 3542      6576435C 
 3543              	.LASF36:
 3544 00fc 53544550 		.ascii	"STEP_OUT_HANDS_UP\000"
 3544      5F4F5554 
 3544      5F48414E 
 3544      44535F55 
 3544      5000
 3545              	.LASF56:
 3546 010e 62526164 		.ascii	"bRadioAndMicKey\000"
 3546      696F416E 
 3546      644D6963 
 3546      4B657900 
 3547              	.LASF98:
 3548 011e 44454641 		.ascii	"DEFAULT_CONFIGURATION_LIST\000"
 3548      554C545F 
 3548      434F4E46 
 3548      49475552 
 3548      4154494F 
 3549              	.LASF44:
 3550 0139 5041524B 		.ascii	"PARK_KILL\000"
 3550      5F4B494C 
 3550      4C00
 3551              	.LASF75:
 3552 0143 70726F63 		.ascii	"processParkKillRoutine\000"
 3552      65737350 
 3552      61726B4B 
 3552      696C6C52 
 3552      6F757469 
 3553              	.LASF102:
 3554 015a 53706561 		.ascii	"Speaker\000"
 3554      6B657200 
 3555              	.LASF84:
 3556 0162 62537065 		.ascii	"bSpeakerNumber\000"
 3556      616B6572 
 3556      4E756D62 
 3556      657200
 3557              	.LASF12:
 3558 0171 75696E74 		.ascii	"uint16\000"
 3558      313600
 3559              	.LASF61:
 3560 0178 68696768 		.ascii	"highestPriorityChannel\000"
 3560      65737450 
 3560      72696F72 
 3560      69747943 
 3560      68616E6E 
 3561              	.LASF11:
 3562 018f 75696E74 		.ascii	"uint8\000"
 3562      3800
 3563              	.LASF41:
 3564 0195 496E7075 		.ascii	"InputType\000"
 3564      74547970 
 3564      6500
 3565              	.LASF47:
 3566 019f 4E4F5F49 		.ascii	"NO_INPUT\000"
 3566      4E505554 
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 81


 3566      00
 3567              	.LASF59:
 3568 01a8 62486F72 		.ascii	"bHornRing\000"
 3568      6E52696E 
 3568      6700
 3569              	.LASF32:
 3570 01b2 434F5053 		.ascii	"COPS_SONG\000"
 3570      5F534F4E 
 3570      4700
 3571              	.LASF29:
 3572 01bc 484F524E 		.ascii	"HORN_YELP\000"
 3572      5F59454C 
 3572      5000
 3573              	.LASF13:
 3574 01c6 666C6F61 		.ascii	"float\000"
 3574      7400
 3575              	.LASF99:
 3576 01cc 45455052 		.ascii	"EEPROM_KEY_INDEX\000"
 3576      4F4D5F4B 
 3576      45595F49 
 3576      4E444558 
 3576      00
 3577              	.LASF49:
 3578 01dd 4348414E 		.ascii	"CHANNEL_1\000"
 3578      4E454C5F 
 3578      3100
 3579              	.LASF6:
 3580 01e7 6C6F6E67 		.ascii	"long long int\000"
 3580      206C6F6E 
 3580      6720696E 
 3580      7400
 3581              	.LASF17:
 3582 01f5 4E4F5F54 		.ascii	"NO_TONE\000"
 3582      4F4E4500 
 3583              	.LASF39:
 3584 01fd 54455354 		.ascii	"TEST_TONE\000"
 3584      5F544F4E 
 3584      4500
 3585              	.LASF86:
 3586 0207 68696768 		.ascii	"highestPriorityInput\000"
 3586      65737450 
 3586      72696F72 
 3586      69747949 
 3586      6E707574 
 3587              	.LASF35:
 3588 021c 53544550 		.ascii	"STEP_OUT\000"
 3588      5F4F5554 
 3588      00
 3589              	.LASF105:
 3590 0225 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3590      4320342E 
 3590      392E3320 
 3590      32303135 
 3590      30333033 
 3591 0258 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3591      20726576 
 3591      6973696F 
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 82


 3591      6E203232 
 3591      31323230 
 3592 028b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3592      66756E63 
 3592      74696F6E 
 3592      2D736563 
 3592      74696F6E 
 3593              	.LASF74:
 3594 02b3 70726F63 		.ascii	"processRadioMicKeyRoutine\000"
 3594      65737352 
 3594      6164696F 
 3594      4D69634B 
 3594      6579526F 
 3595              	.LASF22:
 3596 02cd 484F524E 		.ascii	"HORN\000"
 3596      00
 3597              	.LASF97:
 3598 02d2 69734175 		.ascii	"isAudioTone\000"
 3598      64696F54 
 3598      6F6E6500 
 3599              	.LASF95:
 3600 02de 69735472 		.ascii	"isTrailingAudioTone\000"
 3600      61696C69 
 3600      6E674175 
 3600      64696F54 
 3600      6F6E6500 
 3601              	.LASF31:
 3602 02f2 4543544F 		.ascii	"ECTOSIREN\000"
 3602      53495245 
 3602      4E00
 3603              	.LASF20:
 3604 02fc 46415354 		.ascii	"FAST_YELP\000"
 3604      5F59454C 
 3604      5000
 3605              	.LASF23:
 3606 0306 4D454348 		.ascii	"MECHANICAL\000"
 3606      414E4943 
 3606      414C00
 3607              	.LASF63:
 3608 0311 62526973 		.ascii	"bRisingEdge\000"
 3608      696E6745 
 3608      64676500 
 3609              	.LASF80:
 3610 031d 70726F63 		.ascii	"processDualDelayRoutine\000"
 3610      65737344 
 3610      75616C44 
 3610      656C6179 
 3610      526F7574 
 3611              	.LASF18:
 3612 0335 5741494C 		.ascii	"WAIL\000"
 3612      00
 3613              	.LASF89:
 3614 033a 67657448 		.ascii	"getHighestPriorityChannel\000"
 3614      69676865 
 3614      73745072 
 3614      696F7269 
 3614      74794368 
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 83


 3615              	.LASF1:
 3616 0354 756E7369 		.ascii	"unsigned char\000"
 3616      676E6564 
 3616      20636861 
 3616      7200
 3617              	.LASF48:
 3618 0362 546F6E65 		.ascii	"ToneChannelNumber\000"
 3618      4368616E 
 3618      6E656C4E 
 3618      756D6265 
 3618      7200
 3619              	.LASF70:
 3620 0374 61646472 		.ascii	"addressIndex\000"
 3620      65737349 
 3620      6E646578 
 3620      00
 3621              	.LASF79:
 3622 0381 70726F63 		.ascii	"processHornRingRoutine\000"
 3622      65737348 
 3622      6F726E52 
 3622      696E6752 
 3622      6F757469 
 3623              	.LASF87:
 3624 0398 70726F63 		.ascii	"processInputLogic\000"
 3624      65737349 
 3624      6E707574 
 3624      4C6F6769 
 3624      6300
 3625              	.LASF0:
 3626 03aa 7369676E 		.ascii	"signed char\000"
 3626      65642063 
 3626      68617200 
 3627              	.LASF45:
 3628 03b6 484F524E 		.ascii	"HORN_RING\000"
 3628      5F52494E 
 3628      4700
 3629              	.LASF7:
 3630 03c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 3630      206C6F6E 
 3630      6720756E 
 3630      7369676E 
 3630      65642069 
 3631              	.LASF60:
 3632 03d7 62447561 		.ascii	"bDualDelay\000"
 3632      6C44656C 
 3632      617900
 3633              	.LASF8:
 3634 03e2 756E7369 		.ascii	"unsigned int\000"
 3634      676E6564 
 3634      20696E74 
 3634      00
 3635              	.LASF5:
 3636 03ef 6C6F6E67 		.ascii	"long unsigned int\000"
 3636      20756E73 
 3636      69676E65 
 3636      6420696E 
 3636      7400
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 84


 3637              	.LASF30:
 3638 0401 50484153 		.ascii	"PHASER_YELP\000"
 3638      45525F59 
 3638      454C5000 
 3639              	.LASF81:
 3640 040d 70726F63 		.ascii	"processToneChangeRoutine\000"
 3640      65737354 
 3640      6F6E6543 
 3640      68616E67 
 3640      65526F75 
 3641              	.LASF3:
 3642 0426 73686F72 		.ascii	"short unsigned int\000"
 3642      7420756E 
 3642      7369676E 
 3642      65642069 
 3642      6E7400
 3643              	.LASF55:
 3644 0439 4E4F5F43 		.ascii	"NO_CHANNEL\000"
 3644      48414E4E 
 3644      454C00
 3645              	.LASF93:
 3646 0444 746F6E65 		.ascii	"toneSelection\000"
 3646      53656C65 
 3646      6374696F 
 3646      6E00
 3647              	.LASF34:
 3648 0452 50554C4C 		.ascii	"PULL_OVER\000"
 3648      5F4F5645 
 3648      5200
 3649              	.LASF15:
 3650 045c 63686172 		.ascii	"char\000"
 3650      00
 3651              	.LASF4:
 3652 0461 6C6F6E67 		.ascii	"long int\000"
 3652      20696E74 
 3652      00
 3653              	.LASF10:
 3654 046a 696E7433 		.ascii	"int32_t\000"
 3654      325F7400 
 3655              	.LASF73:
 3656 0472 64697361 		.ascii	"disableToneInputInterrupts\000"
 3656      626C6554 
 3656      6F6E6549 
 3656      6E707574 
 3656      496E7465 
 3657              	.LASF72:
 3658 048d 656E6162 		.ascii	"enableToneInputInterrupts\000"
 3658      6C65546F 
 3658      6E65496E 
 3658      70757449 
 3658      6E746572 
 3659              	.LASF104:
 3660 04a7 62546F6E 		.ascii	"bToneChangeOnHornRing\000"
 3660      65436861 
 3660      6E67654F 
 3660      6E486F72 
 3660      6E52696E 
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 85


 3661              	.LASF69:
 3662 04bd 6368616E 		.ascii	"channelIndex\000"
 3662      6E656C49 
 3662      6E646578 
 3662      00
 3663              	.LASF21:
 3664 04ca 50484153 		.ascii	"PHASER\000"
 3664      455200
 3665              	.LASF24:
 3666 04d1 4D414E55 		.ascii	"MANUAL_WAIL\000"
 3666      414C5F57 
 3666      41494C00 
 3667              	.LASF83:
 3668 04dd 62537065 		.ascii	"bSpeaker\000"
 3668      616B6572 
 3668      00
 3669              	.LASF76:
 3670 04e6 696E6974 		.ascii	"initializeToneConfigurationList\000"
 3670      69616C69 
 3670      7A65546F 
 3670      6E65436F 
 3670      6E666967 
 3671              	.LASF92:
 3672 0506 6368616E 		.ascii	"channelNumber\000"
 3672      6E656C4E 
 3672      756D6265 
 3672      7200
 3673              	.LASF91:
 3674 0514 73706561 		.ascii	"speakerIndex\000"
 3674      6B657249 
 3674      6E646578 
 3674      00
 3675              	.LASF66:
 3676 0521 53706561 		.ascii	"SpeakerStatus\000"
 3676      6B657253 
 3676      74617475 
 3676      7300
 3677              	.LASF27:
 3678 052f 5043414C 		.ascii	"PCALL_FAST\000"
 3678      4C5F4641 
 3678      535400
 3679              	.LASF62:
 3680 053a 63757272 		.ascii	"currentTone\000"
 3680      656E7454 
 3680      6F6E6500 
 3681              	.LASF77:
 3682 0546 70726F63 		.ascii	"processTackSwitchRoutine\000"
 3682      65737354 
 3682      61636B53 
 3682      77697463 
 3682      68526F75 
 3683              	.LASF90:
 3684 055f 67657448 		.ascii	"getHighestPriorityInput\000"
 3684      69676865 
 3684      73745072 
 3684      696F7269 
 3684      7479496E 
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 86


 3685              	.LASF100:
 3686 0577 45455052 		.ascii	"EEPROM_KEY_VALUE\000"
 3686      4F4D5F4B 
 3686      45595F56 
 3686      414C5545 
 3686      00
 3687              	.LASF85:
 3688 0588 6D6F6465 		.ascii	"modeStatusByte\000"
 3688      53746174 
 3688      75734279 
 3688      746500
 3689              	.LASF26:
 3690 0597 5043414C 		.ascii	"PCALL_SLOW\000"
 3690      4C5F534C 
 3690      4F5700
 3691              	.LASF82:
 3692 05a2 63757272 		.ascii	"currentChannel\000"
 3692      656E7443 
 3692      68616E6E 
 3692      656C00
 3693              	.LASF46:
 3694 05b1 53495245 		.ascii	"SIREN_TONE\000"
 3694      4E5F544F 
 3694      4E4500
 3695              	.LASF9:
 3696 05bc 5F5F696E 		.ascii	"__int32_t\000"
 3696      7433325F 
 3696      7400
 3697              	.LASF94:
 3698 05c6 67657441 		.ascii	"getAlternatingTone\000"
 3698      6C746572 
 3698      6E617469 
 3698      6E67546F 
 3698      6E6500
 3699              	.LASF37:
 3700 05d9 52454D41 		.ascii	"REMAIN_IN_VEHICLE\000"
 3700      494E5F49 
 3700      4E5F5645 
 3700      4849434C 
 3700      4500
 3701              	.LASF38:
 3702 05eb 52454D41 		.ascii	"REMAIN_WINDOW_DOWN\000"
 3702      494E5F57 
 3702      494E444F 
 3702      575F444F 
 3702      574E00
 3703              	.LASF65:
 3704 05fe 62417564 		.ascii	"bAudioToneStatus\000"
 3704      696F546F 
 3704      6E655374 
 3704      61747573 
 3704      00
 3705              	.LASF43:
 3706 060f 41554449 		.ascii	"AUDIO_TONE\000"
 3706      4F5F544F 
 3706      4E4500
 3707              	.LASF96:
ARM GAS  C:\Users\faith\AppData\Local\Temp\ccWV7M5L.s 			page 87


 3708 061a 6973536F 		.ascii	"isSong\000"
 3708      6E6700
 3709              	.LASF78:
 3710 0621 746F6E65 		.ascii	"toneToPlay\000"
 3710      546F506C 
 3710      617900
 3711              	.LASF14:
 3712 062c 646F7562 		.ascii	"double\000"
 3712      6C6500
 3713              	.LASF28:
 3714 0633 484F524E 		.ascii	"HORN_PHASER\000"
 3714      5F504841 
 3714      53455200 
 3715              	.LASF71:
 3716 063f 696E6974 		.ascii	"initializeInputReadings\000"
 3716      69616C69 
 3716      7A65496E 
 3716      70757452 
 3716      65616469 
 3717              	.LASF108:
 3718 0657 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3718      52784275 
 3718      66666572 
 3718      00
 3719              	.LASF103:
 3720 0664 746F6E65 		.ascii	"toneConfigurationList\000"
 3720      436F6E66 
 3720      69677572 
 3720      6174696F 
 3720      6E4C6973 
 3721              	.LASF42:
 3722 067a 52414449 		.ascii	"RADIO_MIC\000"
 3722      4F5F4D49 
 3722      4300
 3723              	.LASF19:
 3724 0684 534C4F57 		.ascii	"SLOW_YELP\000"
 3724      5F59454C 
 3724      5000
 3725              	.LASF106:
 3726 068e 2E5C5369 		.ascii	".\\SirenState_redo.c\000"
 3726      72656E53 
 3726      74617465 
 3726      5F726564 
 3726      6F2E6300 
 3727              	.LASF51:
 3728 06a2 4348414E 		.ascii	"CHANNEL_3\000"
 3728      4E454C5F 
 3728      3300
 3729              	.LASF67:
 3730 06ac 62486173 		.ascii	"bHasNoTone\000"
 3730      4E6F546F 
 3730      6E6500
 3731              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
