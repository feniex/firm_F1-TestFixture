ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"USBUART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	USBUART_initVar
  19              		.bss
  20              		.type	USBUART_initVar, %object
  21              		.size	USBUART_initVar, 1
  22              	USBUART_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.USBUART_Start,"ax",%progbits
  25              		.align	2
  26              		.global	USBUART_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	USBUART_Start, %function
  30              	USBUART_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\USBUART.c"
   1:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/USBUART.c **** * File Name: USBUART.c
   3:.\Generated_Source\PSoC5/USBUART.c **** * Version 2.80
   4:.\Generated_Source\PSoC5/USBUART.c **** *
   5:.\Generated_Source\PSoC5/USBUART.c **** * Description:
   6:.\Generated_Source\PSoC5/USBUART.c **** *  API for USBFS Component.
   7:.\Generated_Source\PSoC5/USBUART.c **** *
   8:.\Generated_Source\PSoC5/USBUART.c **** * Note:
   9:.\Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use endpoint number.  RAM arrays are sized with 9
  10:.\Generated_Source\PSoC5/USBUART.c **** *  elements so they are indexed directly by epNumber.  The SIE and ARB
  11:.\Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:.\Generated_Source\PSoC5/USBUART.c **** *
  13:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:.\Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  15:.\Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:.\Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:.\Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  18:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  19:.\Generated_Source\PSoC5/USBUART.c **** 
  20:.\Generated_Source\PSoC5/USBUART.c **** #include <CyDmac.h>
  21:.\Generated_Source\PSoC5/USBUART.c **** #include "USBUART.h"
  22:.\Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  23:.\Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA1_REMOVE == 0u)
  25:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep1_dma.h"
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 2


  26:.\Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA1_REMOVE */
  27:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA2_REMOVE == 0u)
  28:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep2_dma.h"
  29:.\Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA2_REMOVE */
  30:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA3_REMOVE == 0u)
  31:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep3_dma.h"
  32:.\Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA3_REMOVE */
  33:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA4_REMOVE == 0u)
  34:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep4_dma.h"
  35:.\Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA4_REMOVE */
  36:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA5_REMOVE == 0u)
  37:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep5_dma.h"
  38:.\Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA5_REMOVE */
  39:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA6_REMOVE == 0u)
  40:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep6_dma.h"
  41:.\Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA6_REMOVE */
  42:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA7_REMOVE == 0u)
  43:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep7_dma.h"
  44:.\Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA7_REMOVE */
  45:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA8_REMOVE == 0u)
  46:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep8_dma.h"
  47:.\Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA8_REMOVE */
  48:.\Generated_Source\PSoC5/USBUART.c **** #if((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
  49:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_EP_DMA_Done_isr.h"
  50:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_EP8_DMA_Done_SR.h"
  51:.\Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_EP17_DMA_Done_SR.h"
  52:.\Generated_Source\PSoC5/USBUART.c **** #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
  53:.\Generated_Source\PSoC5/USBUART.c **** 
  54:.\Generated_Source\PSoC5/USBUART.c **** 
  55:.\Generated_Source\PSoC5/USBUART.c **** /***************************************
  56:.\Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  57:.\Generated_Source\PSoC5/USBUART.c **** ***************************************/
  58:.\Generated_Source\PSoC5/USBUART.c **** 
  59:.\Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  60:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_EP_MM != USBUART__EP_MANUAL)
  61:.\Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:.\Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_DmaTd[USBUART_MAX_EP];
  63:.\Generated_Source\PSoC5/USBUART.c **** #endif /*  USBUART_EP_MM */
  64:.\Generated_Source\PSoC5/USBUART.c **** #if((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
  65:.\Generated_Source\PSoC5/USBUART.c ****     static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
  66:.\Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
  67:.\Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
  68:.\Generated_Source\PSoC5/USBUART.c ****     {   0u,
  69:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_TD_TERMOUT_EN,
  70:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_TD_TERMOUT_EN,
  71:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_TD_TERMOUT_EN,
  72:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_ep4_TD_TERMOUT_EN,
  73:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_ep5_TD_TERMOUT_EN,
  74:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_ep6_TD_TERMOUT_EN,
  75:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_ep7_TD_TERMOUT_EN,
  76:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_ep8_TD_TERMOUT_EN
  77:.\Generated_Source\PSoC5/USBUART.c ****     };
  78:.\Generated_Source\PSoC5/USBUART.c ****     volatile uint16 USBUART_inLength[USBUART_MAX_EP];
  79:.\Generated_Source\PSoC5/USBUART.c ****     const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
  80:.\Generated_Source\PSoC5/USBUART.c ****     volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
  81:.\Generated_Source\PSoC5/USBUART.c **** #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
  82:.\Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 3


  83:.\Generated_Source\PSoC5/USBUART.c **** 
  84:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
  85:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
  86:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  87:.\Generated_Source\PSoC5/USBUART.c **** *
  88:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
  89:.\Generated_Source\PSoC5/USBUART.c **** *  This function initialize the USB SIE, arbiter and the
  90:.\Generated_Source\PSoC5/USBUART.c **** *  endpoint APIs, including setting the D+ Pullup
  91:.\Generated_Source\PSoC5/USBUART.c **** *
  92:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
  93:.\Generated_Source\PSoC5/USBUART.c **** *  device: Contains the device number of the desired device descriptor.
  94:.\Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
  95:.\Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
  96:.\Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
  97:.\Generated_Source\PSoC5/USBUART.c **** *  mode: The operating voltage. This determines whether the voltage regulator
  98:.\Generated_Source\PSoC5/USBUART.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
  99:.\Generated_Source\PSoC5/USBUART.c **** *        operation. Symbolic names and their associated values are given in the
 100:.\Generated_Source\PSoC5/USBUART.c **** *        following table.
 101:.\Generated_Source\PSoC5/USBUART.c **** *       USBUART_3V_OPERATION - Disable voltage regulator and pass-thru
 102:.\Generated_Source\PSoC5/USBUART.c **** *                                       Vcc for pull-up
 103:.\Generated_Source\PSoC5/USBUART.c **** *       USBUART_5V_OPERATION - Enable voltage regulator and use
 104:.\Generated_Source\PSoC5/USBUART.c **** *                                       regulator for pull-up
 105:.\Generated_Source\PSoC5/USBUART.c **** *       USBUART_DWR_VDDD_OPERATION - Enable or Disable voltage
 106:.\Generated_Source\PSoC5/USBUART.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 107:.\Generated_Source\PSoC5/USBUART.c **** *
 108:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 109:.\Generated_Source\PSoC5/USBUART.c **** *   None.
 110:.\Generated_Source\PSoC5/USBUART.c **** *
 111:.\Generated_Source\PSoC5/USBUART.c **** * Global variables:
 112:.\Generated_Source\PSoC5/USBUART.c **** *  The USBUART_intiVar variable is used to indicate initial
 113:.\Generated_Source\PSoC5/USBUART.c **** *  configuration of this component. The variable is initialized to zero (0u)
 114:.\Generated_Source\PSoC5/USBUART.c **** *  and set to one (1u) the first time USBUART_Start() is called.
 115:.\Generated_Source\PSoC5/USBUART.c **** *  This allows for component Re-Start without unnecessary re-initialization
 116:.\Generated_Source\PSoC5/USBUART.c **** *  in all subsequent calls to the USBUART_Start() routine.
 117:.\Generated_Source\PSoC5/USBUART.c **** *  If re-initialization of the component is required the variable should be set
 118:.\Generated_Source\PSoC5/USBUART.c **** *  to zero before call of UART_Start() routine, or the user may call
 119:.\Generated_Source\PSoC5/USBUART.c **** *  USBUART_Init() and USBUART_InitComponent() as done
 120:.\Generated_Source\PSoC5/USBUART.c **** *  in the USBUART_Start() routine.
 121:.\Generated_Source\PSoC5/USBUART.c **** *
 122:.\Generated_Source\PSoC5/USBUART.c **** * Side Effects:
 123:.\Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 124:.\Generated_Source\PSoC5/USBUART.c **** *
 125:.\Generated_Source\PSoC5/USBUART.c **** * Reentrant:
 126:.\Generated_Source\PSoC5/USBUART.c **** *  No.
 127:.\Generated_Source\PSoC5/USBUART.c **** *
 128:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 129:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 130:.\Generated_Source\PSoC5/USBUART.c **** {
  33              		.loc 1 130 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 4


  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45 0006 0346     		mov	r3, r0
  46 0008 0A46     		mov	r2, r1
  47 000a FB71     		strb	r3, [r7, #7]
  48 000c 1346     		mov	r3, r2
  49 000e BB71     		strb	r3, [r7, #6]
 131:.\Generated_Source\PSoC5/USBUART.c ****     /* If not Initialized then initialize all required hardware and software */
 132:.\Generated_Source\PSoC5/USBUART.c ****     if(USBUART_initVar == 0u)
  50              		.loc 1 132 0
  51 0010 084B     		ldr	r3, .L3
  52 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  53 0014 002B     		cmp	r3, #0
  54 0016 04D1     		bne	.L2
 133:.\Generated_Source\PSoC5/USBUART.c ****     {
 134:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
  55              		.loc 1 134 0
  56 0018 FFF7FEFF 		bl	USBUART_Init
 135:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
  57              		.loc 1 135 0
  58 001c 054B     		ldr	r3, .L3
  59 001e 0122     		movs	r2, #1
  60 0020 1A70     		strb	r2, [r3]
  61              	.L2:
 136:.\Generated_Source\PSoC5/USBUART.c ****     }
 137:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
  62              		.loc 1 137 0
  63 0022 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  64 0024 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  65 0026 1046     		mov	r0, r2
  66 0028 1946     		mov	r1, r3
  67 002a FFF7FEFF 		bl	USBUART_InitComponent
 138:.\Generated_Source\PSoC5/USBUART.c **** }
  68              		.loc 1 138 0
  69 002e 0837     		adds	r7, r7, #8
  70              		.cfi_def_cfa_offset 8
  71 0030 BD46     		mov	sp, r7
  72              		.cfi_def_cfa_register 13
  73              		@ sp needed
  74 0032 80BD     		pop	{r7, pc}
  75              	.L4:
  76              		.align	2
  77              	.L3:
  78 0034 00000000 		.word	USBUART_initVar
  79              		.cfi_endproc
  80              	.LFE0:
  81              		.size	USBUART_Start, .-USBUART_Start
  82              		.section	.text.USBUART_Init,"ax",%progbits
  83              		.align	2
  84              		.global	USBUART_Init
  85              		.thumb
  86              		.thumb_func
  87              		.type	USBUART_Init, %function
  88              	USBUART_Init:
  89              	.LFB1:
 139:.\Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 5


 140:.\Generated_Source\PSoC5/USBUART.c **** 
 141:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 142:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 143:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 144:.\Generated_Source\PSoC5/USBUART.c **** *
 145:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 146:.\Generated_Source\PSoC5/USBUART.c **** *  Initialize component's hardware. Usually called in USBUART_Start().
 147:.\Generated_Source\PSoC5/USBUART.c **** *
 148:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 149:.\Generated_Source\PSoC5/USBUART.c **** *  None.
 150:.\Generated_Source\PSoC5/USBUART.c **** *
 151:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 152:.\Generated_Source\PSoC5/USBUART.c **** *  None.
 153:.\Generated_Source\PSoC5/USBUART.c **** *
 154:.\Generated_Source\PSoC5/USBUART.c **** * Reentrant:
 155:.\Generated_Source\PSoC5/USBUART.c **** *  No.
 156:.\Generated_Source\PSoC5/USBUART.c **** *
 157:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 158:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 159:.\Generated_Source\PSoC5/USBUART.c **** {
  90              		.loc 1 159 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 8
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94 0000 80B5     		push	{r7, lr}
  95              		.cfi_def_cfa_offset 8
  96              		.cfi_offset 7, -8
  97              		.cfi_offset 14, -4
  98 0002 82B0     		sub	sp, sp, #8
  99              		.cfi_def_cfa_offset 16
 100 0004 00AF     		add	r7, sp, #0
 101              		.cfi_def_cfa_register 7
 160:.\Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 161:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 162:.\Generated_Source\PSoC5/USBUART.c ****         uint16 i;
 163:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 164:.\Generated_Source\PSoC5/USBUART.c **** 
 165:.\Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 102              		.loc 1 165 0
 103 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 104 000a 0346     		mov	r3, r0
 105 000c FB71     		strb	r3, [r7, #7]
 166:.\Generated_Source\PSoC5/USBUART.c **** 
 167:.\Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block  */
 168:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
 106              		.loc 1 168 0
 107 000e 4F4A     		ldr	r2, .L6
 108 0010 4E4B     		ldr	r3, .L6
 109 0012 1B78     		ldrb	r3, [r3]
 110 0014 DBB2     		uxtb	r3, r3
 111 0016 43F00103 		orr	r3, r3, #1
 112 001a DBB2     		uxtb	r3, r3
 113 001c 1370     		strb	r3, [r2]
 169:.\Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode */
 170:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
 114              		.loc 1 170 0
 115 001e 4C4A     		ldr	r2, .L6+4
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 6


 116 0020 4B4B     		ldr	r3, .L6+4
 117 0022 1B78     		ldrb	r3, [r3]
 118 0024 DBB2     		uxtb	r3, r3
 119 0026 43F00103 		orr	r3, r3, #1
 120 002a DBB2     		uxtb	r3, r3
 121 002c 1370     		strb	r3, [r2]
 171:.\Generated_Source\PSoC5/USBUART.c **** 
 172:.\Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock */
 173:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
 122              		.loc 1 173 0
 123 002e 494B     		ldr	r3, .L6+8
 124 0030 0122     		movs	r2, #1
 125 0032 1A70     		strb	r2, [r3]
 174:.\Generated_Source\PSoC5/USBUART.c **** 
 175:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 126              		.loc 1 175 0
 127 0034 484B     		ldr	r3, .L6+12
 128 0036 0222     		movs	r2, #2
 129 0038 1A70     		strb	r2, [r3]
 176:.\Generated_Source\PSoC5/USBUART.c **** 
 177:.\Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE */
 178:.\Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled */
 179:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= ((uint8)(~USBUART_USBIO_CR0_TEN));
 130              		.loc 1 179 0
 131 003a 484A     		ldr	r2, .L6+16
 132 003c 474B     		ldr	r3, .L6+16
 133 003e 1B78     		ldrb	r3, [r3]
 134 0040 DBB2     		uxtb	r3, r3
 135 0042 03F07F03 		and	r3, r3, #127
 136 0046 DBB2     		uxtb	r3, r3
 137 0048 1370     		strb	r3, [r2]
 180:.\Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(0u);  /*~50ns delay */
 138              		.loc 1 180 0
 139 004a 0020     		movs	r0, #0
 140 004c FFF7FEFF 		bl	CyDelayUs
 181:.\Generated_Source\PSoC5/USBUART.c ****     /* Disable the USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted)
 182:.\Generated_Source\PSoC5/USBUART.c ****     *  high. This will have been set low by the power manger out of reset.
 183:.\Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up disabled
 184:.\Generated_Source\PSoC5/USBUART.c ****     */
 185:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= ((uint8)(~(USBUART_PM_USB_CR0_PD_N |
 141              		.loc 1 185 0
 142 0050 434A     		ldr	r2, .L6+20
 143 0052 434B     		ldr	r3, .L6+20
 144 0054 1B78     		ldrb	r3, [r3]
 145 0056 DBB2     		uxtb	r3, r3
 146 0058 23F00603 		bic	r3, r3, #6
 147 005c DBB2     		uxtb	r3, r3
 148 005e 1370     		strb	r3, [r2]
 186:.\Generated_Source\PSoC5/USBUART.c ****                                                   USBUART_PM_USB_CR0_PD_PULLUP_N)));
 187:.\Generated_Source\PSoC5/USBUART.c **** 
 188:.\Generated_Source\PSoC5/USBUART.c ****     /* Select iomode to USB mode*/
 189:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ((uint8)(~USBUART_USBIO_CR1_IOMODE));
 149              		.loc 1 189 0
 150 0060 404A     		ldr	r2, .L6+24
 151 0062 404B     		ldr	r3, .L6+24
 152 0064 1B78     		ldrb	r3, [r3]
 153 0066 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 7


 154 0068 23F02003 		bic	r3, r3, #32
 155 006c DBB2     		uxtb	r3, r3
 156 006e 1370     		strb	r3, [r2]
 190:.\Generated_Source\PSoC5/USBUART.c **** 
 191:.\Generated_Source\PSoC5/USBUART.c ****     /* Enable the USBIO reference by setting PM.USB_CR0.fsusbio_ref_en.*/
 192:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 157              		.loc 1 192 0
 158 0070 3B4A     		ldr	r2, .L6+20
 159 0072 3B4B     		ldr	r3, .L6+20
 160 0074 1B78     		ldrb	r3, [r3]
 161 0076 DBB2     		uxtb	r3, r3
 162 0078 43F00103 		orr	r3, r3, #1
 163 007c DBB2     		uxtb	r3, r3
 164 007e 1370     		strb	r3, [r2]
 193:.\Generated_Source\PSoC5/USBUART.c ****     /* The reference will be available 1 us after the regulator is enabled */
 194:.\Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(1u);
 165              		.loc 1 194 0
 166 0080 0120     		movs	r0, #1
 167 0082 FFF7FEFF 		bl	CyDelayUs
 195:.\Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power restored */
 196:.\Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(40u);
 168              		.loc 1 196 0
 169 0086 2820     		movs	r0, #40
 170 0088 FFF7FEFF 		bl	CyDelayUs
 197:.\Generated_Source\PSoC5/USBUART.c ****     /* Ensure the single ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). *
 198:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= ((uint8)(~USBUART_DM_MASK));
 171              		.loc 1 198 0
 172 008c 364A     		ldr	r2, .L6+28
 173 008e 364B     		ldr	r3, .L6+28
 174 0090 1B78     		ldrb	r3, [r3]
 175 0092 DBB2     		uxtb	r3, r3
 176 0094 03F07F03 		and	r3, r3, #127
 177 0098 DBB2     		uxtb	r3, r3
 178 009a 1370     		strb	r3, [r2]
 199:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= ((uint8)(~USBUART_DP_MASK));
 179              		.loc 1 199 0
 180 009c 324A     		ldr	r2, .L6+28
 181 009e 324B     		ldr	r3, .L6+28
 182 00a0 1B78     		ldrb	r3, [r3]
 183 00a2 DBB2     		uxtb	r3, r3
 184 00a4 23F04003 		bic	r3, r3, #64
 185 00a8 DBB2     		uxtb	r3, r3
 186 00aa 1370     		strb	r3, [r2]
 200:.\Generated_Source\PSoC5/USBUART.c **** 
 201:.\Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO */
 202:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 187              		.loc 1 202 0
 188 00ac 2C4A     		ldr	r2, .L6+20
 189 00ae 2C4B     		ldr	r3, .L6+20
 190 00b0 1B78     		ldrb	r3, [r3]
 191 00b2 DBB2     		uxtb	r3, r3
 192 00b4 43F00203 		orr	r3, r3, #2
 193 00b8 DBB2     		uxtb	r3, r3
 194 00ba 1370     		strb	r3, [r2]
 203:.\Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(2u);
 195              		.loc 1 203 0
 196 00bc 0220     		movs	r0, #2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 8


 197 00be FFF7FEFF 		bl	CyDelayUs
 204:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the USBIO pull-up enable */
 205:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 198              		.loc 1 205 0
 199 00c2 274A     		ldr	r2, .L6+20
 200 00c4 264B     		ldr	r3, .L6+20
 201 00c6 1B78     		ldrb	r3, [r3]
 202 00c8 DBB2     		uxtb	r3, r3
 203 00ca 43F00403 		orr	r3, r3, #4
 204 00ce DBB2     		uxtb	r3, r3
 205 00d0 1370     		strb	r3, [r2]
 206:.\Generated_Source\PSoC5/USBUART.c **** 
 207:.\Generated_Source\PSoC5/USBUART.c ****     /* Write WAx */
 208:.\Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 206              		.loc 1 208 0
 207 00d2 264B     		ldr	r3, .L6+32
 208 00d4 0022     		movs	r2, #0
 209 00d6 1A70     		strb	r2, [r3]
 209:.\Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 210              		.loc 1 209 0
 211 00d8 254B     		ldr	r3, .L6+36
 212 00da 0022     		movs	r2, #0
 213 00dc 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC5/USBUART.c **** 
 211:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 212:.\Generated_Source\PSoC5/USBUART.c ****         /* Init transfer descriptor. This will be used to detect the DMA state - initialized or not
 213:.\Generated_Source\PSoC5/USBUART.c ****         for (i = 0u; i < USBUART_MAX_EP; i++)
 214:.\Generated_Source\PSoC5/USBUART.c ****         {
 215:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[i] = DMA_INVALID_TD;
 216:.\Generated_Source\PSoC5/USBUART.c ****             #if ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
 217:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 218:.\Generated_Source\PSoC5/USBUART.c ****             #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) *
 219:.\Generated_Source\PSoC5/USBUART.c ****         }
 220:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 221:.\Generated_Source\PSoC5/USBUART.c **** 
 222:.\Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 214              		.loc 1 222 0
 215 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 216 00e0 1846     		mov	r0, r3
 217 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/USBUART.c **** 
 224:.\Generated_Source\PSoC5/USBUART.c **** 
 225:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the bus reset Interrupt. */
 226:.\Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 218              		.loc 1 226 0
 219 00e6 1720     		movs	r0, #23
 220 00e8 2249     		ldr	r1, .L6+40
 221 00ea FFF7FEFF 		bl	CyIntSetVector
 227:.\Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 222              		.loc 1 227 0
 223 00ee 1720     		movs	r0, #23
 224 00f0 0721     		movs	r1, #7
 225 00f2 FFF7FEFF 		bl	CyIntSetPriority
 228:.\Generated_Source\PSoC5/USBUART.c **** 
 229:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the SOF Interrupt. */
 230:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_SOF_ISR_REMOVE == 0u)
 231:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM,   &USBUART_SOF_ISR);
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 9


 226              		.loc 1 231 0
 227 00f6 1520     		movs	r0, #21
 228 00f8 1F49     		ldr	r1, .L6+44
 229 00fa FFF7FEFF 		bl	CyIntSetVector
 232:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_SOF_VECT_NUM, USBUART_SOF_PRIOR);
 230              		.loc 1 232 0
 231 00fe 1520     		movs	r0, #21
 232 0100 0721     		movs	r1, #7
 233 0102 FFF7FEFF 		bl	CyIntSetPriority
 233:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_SOF_ISR_REMOVE */
 234:.\Generated_Source\PSoC5/USBUART.c **** 
 235:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the Control Endpoint Interrupt. */
 236:.\Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 234              		.loc 1 236 0
 235 0106 1820     		movs	r0, #24
 236 0108 1C49     		ldr	r1, .L6+48
 237 010a FFF7FEFF 		bl	CyIntSetVector
 237:.\Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 238              		.loc 1 237 0
 239 010e 1820     		movs	r0, #24
 240 0110 0721     		movs	r1, #7
 241 0112 FFF7FEFF 		bl	CyIntSetPriority
 238:.\Generated_Source\PSoC5/USBUART.c **** 
 239:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 1 Interrupt. */
 240:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP1_ISR_REMOVE == 0u)
 241:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,   &USBUART_EP_1_ISR);
 242              		.loc 1 241 0
 243 0116 0D20     		movs	r0, #13
 244 0118 1949     		ldr	r1, .L6+52
 245 011a FFF7FEFF 		bl	CyIntSetVector
 242:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_1_VECT_NUM, USBUART_EP_1_PRIOR);
 246              		.loc 1 242 0
 247 011e 0D20     		movs	r0, #13
 248 0120 0721     		movs	r1, #7
 249 0122 FFF7FEFF 		bl	CyIntSetPriority
 243:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP1_ISR_REMOVE */
 244:.\Generated_Source\PSoC5/USBUART.c **** 
 245:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 2 Interrupt. */
 246:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP2_ISR_REMOVE == 0u)
 247:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM,   &USBUART_EP_2_ISR);
 250              		.loc 1 247 0
 251 0126 0E20     		movs	r0, #14
 252 0128 1649     		ldr	r1, .L6+56
 253 012a FFF7FEFF 		bl	CyIntSetVector
 248:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_2_VECT_NUM, USBUART_EP_2_PRIOR);
 254              		.loc 1 248 0
 255 012e 0E20     		movs	r0, #14
 256 0130 0721     		movs	r1, #7
 257 0132 FFF7FEFF 		bl	CyIntSetPriority
 249:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP2_ISR_REMOVE */
 250:.\Generated_Source\PSoC5/USBUART.c **** 
 251:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 3 Interrupt. */
 252:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP3_ISR_REMOVE == 0u)
 253:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM,   &USBUART_EP_3_ISR);
 258              		.loc 1 253 0
 259 0136 0F20     		movs	r0, #15
 260 0138 1349     		ldr	r1, .L6+60
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 10


 261 013a FFF7FEFF 		bl	CyIntSetVector
 254:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_3_VECT_NUM, USBUART_EP_3_PRIOR);
 262              		.loc 1 254 0
 263 013e 0F20     		movs	r0, #15
 264 0140 0721     		movs	r1, #7
 265 0142 FFF7FEFF 		bl	CyIntSetPriority
 255:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP3_ISR_REMOVE */
 256:.\Generated_Source\PSoC5/USBUART.c **** 
 257:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 4 Interrupt. */
 258:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP4_ISR_REMOVE == 0u)
 259:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM,   &USBUART_EP_4_ISR);
 260:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_4_VECT_NUM, USBUART_EP_4_PRIOR);
 261:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP4_ISR_REMOVE */
 262:.\Generated_Source\PSoC5/USBUART.c **** 
 263:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 5 Interrupt. */
 264:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP5_ISR_REMOVE == 0u)
 265:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM,   &USBUART_EP_5_ISR);
 266:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_5_VECT_NUM, USBUART_EP_5_PRIOR);
 267:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP5_ISR_REMOVE */
 268:.\Generated_Source\PSoC5/USBUART.c **** 
 269:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 6 Interrupt. */
 270:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP6_ISR_REMOVE == 0u)
 271:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM,   &USBUART_EP_6_ISR);
 272:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_6_VECT_NUM, USBUART_EP_6_PRIOR);
 273:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP6_ISR_REMOVE */
 274:.\Generated_Source\PSoC5/USBUART.c **** 
 275:.\Generated_Source\PSoC5/USBUART.c ****      /* Set the Data Endpoint 7 Interrupt. */
 276:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP7_ISR_REMOVE == 0u)
 277:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM,   &USBUART_EP_7_ISR);
 278:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_7_VECT_NUM, USBUART_EP_7_PRIOR);
 279:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP7_ISR_REMOVE */
 280:.\Generated_Source\PSoC5/USBUART.c **** 
 281:.\Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 8 Interrupt. */
 282:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP8_ISR_REMOVE == 0u)
 283:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM,   &USBUART_EP_8_ISR);
 284:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_8_VECT_NUM, USBUART_EP_8_PRIOR);
 285:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP8_ISR_REMOVE */
 286:.\Generated_Source\PSoC5/USBUART.c **** 
 287:.\Generated_Source\PSoC5/USBUART.c ****     #if((USBUART_EP_MM != USBUART__EP_MANUAL) && (USBUART_ARB_ISR_REMOVE == 0u))
 288:.\Generated_Source\PSoC5/USBUART.c ****         /* Set the ARB Interrupt. */
 289:.\Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM,   &USBUART_ARB_ISR);
 290:.\Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_ARB_VECT_NUM, USBUART_ARB_PRIOR);
 291:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 292:.\Generated_Source\PSoC5/USBUART.c **** 
 293:.\Generated_Source\PSoC5/USBUART.c **** }
 266              		.loc 1 293 0
 267 0146 0837     		adds	r7, r7, #8
 268              		.cfi_def_cfa_offset 8
 269 0148 BD46     		mov	sp, r7
 270              		.cfi_def_cfa_register 13
 271              		@ sp needed
 272 014a 80BD     		pop	{r7, pc}
 273              	.L7:
 274              		.align	2
 275              	.L6:
 276 014c A5430040 		.word	1073759141
 277 0150 B5430040 		.word	1073759157
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 11


 278 0154 9D600040 		.word	1073766557
 279 0158 09600040 		.word	1073766409
 280 015c 10600040 		.word	1073766416
 281 0160 94430040 		.word	1073759124
 282 0164 12600040 		.word	1073766418
 283 0168 F8510040 		.word	1073762808
 284 016c 84600040 		.word	1073766532
 285 0170 85600040 		.word	1073766533
 286 0174 00000000 		.word	USBUART_BUS_RESET_ISR
 287 0178 00000000 		.word	USBUART_SOF_ISR
 288 017c 00000000 		.word	USBUART_EP_0_ISR
 289 0180 00000000 		.word	USBUART_EP_1_ISR
 290 0184 00000000 		.word	USBUART_EP_2_ISR
 291 0188 00000000 		.word	USBUART_EP_3_ISR
 292              		.cfi_endproc
 293              	.LFE1:
 294              		.size	USBUART_Init, .-USBUART_Init
 295              		.section	.text.USBUART_InitComponent,"ax",%progbits
 296              		.align	2
 297              		.global	USBUART_InitComponent
 298              		.thumb
 299              		.thumb_func
 300              		.type	USBUART_InitComponent, %function
 301              	USBUART_InitComponent:
 302              	.LFB2:
 294:.\Generated_Source\PSoC5/USBUART.c **** 
 295:.\Generated_Source\PSoC5/USBUART.c **** 
 296:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 297:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 298:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 299:.\Generated_Source\PSoC5/USBUART.c **** *
 300:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 301:.\Generated_Source\PSoC5/USBUART.c **** *  Initialize the component, except for the HW which is done one time in
 302:.\Generated_Source\PSoC5/USBUART.c **** *  the Start function.  This function pulls up D+.
 303:.\Generated_Source\PSoC5/USBUART.c **** *
 304:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 305:.\Generated_Source\PSoC5/USBUART.c **** *  device: Contains the device number of the desired device descriptor.
 306:.\Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 307:.\Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 308:.\Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 309:.\Generated_Source\PSoC5/USBUART.c **** *  mode: The operating voltage. This determines whether the voltage regulator
 310:.\Generated_Source\PSoC5/USBUART.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
 311:.\Generated_Source\PSoC5/USBUART.c **** *        operation. Symbolic names and their associated values are given in the
 312:.\Generated_Source\PSoC5/USBUART.c **** *        following table.
 313:.\Generated_Source\PSoC5/USBUART.c **** *       USBUART_3V_OPERATION - Disable voltage regulator and pass-thru
 314:.\Generated_Source\PSoC5/USBUART.c **** *                                       Vcc for pull-up
 315:.\Generated_Source\PSoC5/USBUART.c **** *       USBUART_5V_OPERATION - Enable voltage regulator and use
 316:.\Generated_Source\PSoC5/USBUART.c **** *                                       regulator for pull-up
 317:.\Generated_Source\PSoC5/USBUART.c **** *       USBUART_DWR_VDDD_OPERATION - Enable or Disable voltage
 318:.\Generated_Source\PSoC5/USBUART.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 319:.\Generated_Source\PSoC5/USBUART.c **** *
 320:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 321:.\Generated_Source\PSoC5/USBUART.c **** *   None.
 322:.\Generated_Source\PSoC5/USBUART.c **** *
 323:.\Generated_Source\PSoC5/USBUART.c **** * Global variables:
 324:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_device: Contains the device number of the desired device
 325:.\Generated_Source\PSoC5/USBUART.c **** *       descriptor. The device number can be found in the Device Descriptor Tab
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 12


 326:.\Generated_Source\PSoC5/USBUART.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 327:.\Generated_Source\PSoC5/USBUART.c **** *       in the "Device Number" field.
 328:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState: This variable used by the communication
 329:.\Generated_Source\PSoC5/USBUART.c **** *       functions to handle current transfer state. Initialized to
 330:.\Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 331:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration: Contains current configuration number
 332:.\Generated_Source\PSoC5/USBUART.c **** *       which is set by the Host using SET_CONFIGURATION request.
 333:.\Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 334:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress: Contains current device address. This
 335:.\Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. Host starts to communicate
 336:.\Generated_Source\PSoC5/USBUART.c **** *      to device with address 0 and then set it to whatever value using
 337:.\Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 338:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus: initialized to 0.
 339:.\Generated_Source\PSoC5/USBUART.c **** *       This is two bit variable which contain power status in first bit
 340:.\Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 341:.\Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 342:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize initialized to 0;
 343:.\Generated_Source\PSoC5/USBUART.c **** *
 344:.\Generated_Source\PSoC5/USBUART.c **** * Reentrant:
 345:.\Generated_Source\PSoC5/USBUART.c **** *  No.
 346:.\Generated_Source\PSoC5/USBUART.c **** *
 347:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 348:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 349:.\Generated_Source\PSoC5/USBUART.c **** {
 303              		.loc 1 349 0
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 8
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 80B5     		push	{r7, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 7, -8
 310              		.cfi_offset 14, -4
 311 0002 82B0     		sub	sp, sp, #8
 312              		.cfi_def_cfa_offset 16
 313 0004 00AF     		add	r7, sp, #0
 314              		.cfi_def_cfa_register 7
 315 0006 0346     		mov	r3, r0
 316 0008 0A46     		mov	r2, r1
 317 000a FB71     		strb	r3, [r7, #7]
 318 000c 1346     		mov	r3, r2
 319 000e BB71     		strb	r3, [r7, #6]
 350:.\Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 351:.\Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 352:.\Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 353:.\Generated_Source\PSoC5/USBUART.c ****     */
 354:.\Generated_Source\PSoC5/USBUART.c ****     #if defined(USBUART_ENABLE_HID_CLASS)
 355:.\Generated_Source\PSoC5/USBUART.c ****         uint8 i;
 356:.\Generated_Source\PSoC5/USBUART.c **** 
 357:.\Generated_Source\PSoC5/USBUART.c ****         for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 358:.\Generated_Source\PSoC5/USBUART.c ****         {
 359:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 360:.\Generated_Source\PSoC5/USBUART.c ****         }
 361:.\Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_ENABLE_HID_CLASS */
 362:.\Generated_Source\PSoC5/USBUART.c **** 
 363:.\Generated_Source\PSoC5/USBUART.c ****     /* Enable Interrupts. */
 364:.\Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 320              		.loc 1 364 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 13


 321 0010 264B     		ldr	r3, .L14
 322 0012 4FF40002 		mov	r2, #8388608
 323 0016 1A60     		str	r2, [r3]
 365:.\Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 324              		.loc 1 365 0
 325 0018 244B     		ldr	r3, .L14
 326 001a 4FF08072 		mov	r2, #16777216
 327 001e 1A60     		str	r2, [r3]
 366:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP1_ISR_REMOVE == 0u)
 367:.\Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 328              		.loc 1 367 0
 329 0020 224B     		ldr	r3, .L14
 330 0022 4FF40052 		mov	r2, #8192
 331 0026 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP1_ISR_REMOVE */
 369:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP2_ISR_REMOVE == 0u)
 370:.\Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 332              		.loc 1 370 0
 333 0028 204B     		ldr	r3, .L14
 334 002a 4FF48042 		mov	r2, #16384
 335 002e 1A60     		str	r2, [r3]
 371:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP2_ISR_REMOVE */
 372:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP3_ISR_REMOVE == 0u)
 373:.\Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 336              		.loc 1 373 0
 337 0030 1E4B     		ldr	r3, .L14
 338 0032 4FF40042 		mov	r2, #32768
 339 0036 1A60     		str	r2, [r3]
 374:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP3_ISR_REMOVE */
 375:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP4_ISR_REMOVE == 0u)
 376:.\Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 377:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP4_ISR_REMOVE */
 378:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP5_ISR_REMOVE == 0u)
 379:.\Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 380:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP5_ISR_REMOVE */
 381:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP6_ISR_REMOVE == 0u)
 382:.\Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 383:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP6_ISR_REMOVE */
 384:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP7_ISR_REMOVE == 0u)
 385:.\Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 386:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP7_ISR_REMOVE */
 387:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP8_ISR_REMOVE == 0u)
 388:.\Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 389:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP8_ISR_REMOVE */
 390:.\Generated_Source\PSoC5/USBUART.c ****     #if((USBUART_EP_MM != USBUART__EP_MANUAL) && (USBUART_ARB_ISR_REMOVE == 0u))
 391:.\Generated_Source\PSoC5/USBUART.c ****         /* usb arb interrupt enable */
 392:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_ARB_INT_EN_REG = USBUART_ARB_INT_MASK;
 393:.\Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 394:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 395:.\Generated_Source\PSoC5/USBUART.c **** 
 396:.\Generated_Source\PSoC5/USBUART.c ****     /* Arbiter configuration for DMA transfers */
 397:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 398:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAMANUAL)
 399:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_CFG_REG = USBUART_ARB_CFG_MANUAL_DMA;
 400:.\Generated_Source\PSoC5/USBUART.c ****         #endif   /*  USBUART_EP_MM == USBUART__EP_DMAMANUAL */
 401:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAAUTO)
 402:.\Generated_Source\PSoC5/USBUART.c ****             /*Set cfg cmplt this rises DMA request when the full configuration is done */
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 14


 403:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_CFG_REG = USBUART_ARB_CFG_AUTO_DMA | USBUART_ARB_CFG_AUTO_MEM;
 404:.\Generated_Source\PSoC5/USBUART.c ****             #if(USBUART_EP_DMA_AUTO_OPT == 0u)
 405:.\Generated_Source\PSoC5/USBUART.c ****                 /* Init interrupt which handles verification of the successful DMA transaction */
 406:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 407:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 408:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 409:.\Generated_Source\PSoC5/USBUART.c ****             #endif /* USBUART_EP_DMA_AUTO_OPT == 0u */
 410:.\Generated_Source\PSoC5/USBUART.c ****         #endif   /*  USBUART_EP_MM == USBUART__EP_DMAAUTO */
 411:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 412:.\Generated_Source\PSoC5/USBUART.c **** 
 413:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState = USBUART_TRANS_STATE_IDLE;
 340              		.loc 1 413 0
 341 0038 1D4B     		ldr	r3, .L14+4
 342 003a 0022     		movs	r2, #0
 343 003c 1A70     		strb	r2, [r3]
 414:.\Generated_Source\PSoC5/USBUART.c **** 
 415:.\Generated_Source\PSoC5/USBUART.c ****     /* USB Locking: Enabled, VRegulator: depend on mode or DWR Voltage configuration*/
 416:.\Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 344              		.loc 1 416 0
 345 003e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 346 0040 002B     		cmp	r3, #0
 347 0042 02D0     		beq	.L10
 348 0044 012B     		cmp	r3, #1
 349 0046 04D0     		beq	.L11
 350 0048 07E0     		b	.L13
 351              	.L10:
 417:.\Generated_Source\PSoC5/USBUART.c ****     {
 418:.\Generated_Source\PSoC5/USBUART.c ****         case USBUART_3V_OPERATION:
 419:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 352              		.loc 1 419 0
 353 004a 1A4B     		ldr	r3, .L14+8
 354 004c 0222     		movs	r2, #2
 355 004e 1A70     		strb	r2, [r3]
 420:.\Generated_Source\PSoC5/USBUART.c ****             break;
 356              		.loc 1 420 0
 357 0050 07E0     		b	.L12
 358              	.L11:
 421:.\Generated_Source\PSoC5/USBUART.c ****         case USBUART_5V_OPERATION:
 422:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK | USBUART_CR1_REG_ENABLE;
 359              		.loc 1 422 0
 360 0052 184B     		ldr	r3, .L14+8
 361 0054 0322     		movs	r2, #3
 362 0056 1A70     		strb	r2, [r3]
 423:.\Generated_Source\PSoC5/USBUART.c ****             break;
 363              		.loc 1 423 0
 364 0058 03E0     		b	.L12
 365              	.L13:
 424:.\Generated_Source\PSoC5/USBUART.c ****         default:   /*USBUART_DWR_VDDD_OPERATION */
 425:.\Generated_Source\PSoC5/USBUART.c ****             #if(USBUART_VDDD_MV < USBUART_3500MV)
 426:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 427:.\Generated_Source\PSoC5/USBUART.c ****             #else
 428:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK | USBUART_CR1_REG_ENABLE;
 366              		.loc 1 428 0
 367 005a 164B     		ldr	r3, .L14+8
 368 005c 0322     		movs	r2, #3
 369 005e 1A70     		strb	r2, [r3]
 429:.\Generated_Source\PSoC5/USBUART.c ****             #endif /*  USBUART_VDDD_MV < USBUART_3500MV */
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 15


 430:.\Generated_Source\PSoC5/USBUART.c ****             break;
 370              		.loc 1 430 0
 371 0060 00BF     		nop
 372              	.L12:
 431:.\Generated_Source\PSoC5/USBUART.c ****     }
 432:.\Generated_Source\PSoC5/USBUART.c **** 
 433:.\Generated_Source\PSoC5/USBUART.c ****     /* Record the descriptor selection */
 434:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 373              		.loc 1 434 0
 374 0062 154A     		ldr	r2, .L14+12
 375 0064 FB79     		ldrb	r3, [r7, #7]
 376 0066 1370     		strb	r3, [r2]
 435:.\Generated_Source\PSoC5/USBUART.c **** 
 436:.\Generated_Source\PSoC5/USBUART.c ****     /* Clear all of the component data */
 437:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration = 0u;
 377              		.loc 1 437 0
 378 0068 144B     		ldr	r3, .L14+16
 379 006a 0022     		movs	r2, #0
 380 006c 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 381              		.loc 1 438 0
 382 006e 144B     		ldr	r3, .L14+20
 383 0070 0022     		movs	r2, #0
 384 0072 1A70     		strb	r2, [r3]
 439:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 385              		.loc 1 439 0
 386 0074 134B     		ldr	r3, .L14+24
 387 0076 0022     		movs	r2, #0
 388 0078 1A70     		strb	r2, [r3]
 440:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress  = 0u;
 389              		.loc 1 440 0
 390 007a 134B     		ldr	r3, .L14+28
 391 007c 0022     		movs	r2, #0
 392 007e 1A70     		strb	r2, [r3]
 441:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus = 0u;
 393              		.loc 1 441 0
 394 0080 124B     		ldr	r3, .L14+32
 395 0082 0022     		movs	r2, #0
 396 0084 1A70     		strb	r2, [r3]
 442:.\Generated_Source\PSoC5/USBUART.c **** 
 443:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize = 0u;
 397              		.loc 1 443 0
 398 0086 124B     		ldr	r3, .L14+36
 399 0088 0022     		movs	r2, #0
 400 008a 1A70     		strb	r2, [r3]
 444:.\Generated_Source\PSoC5/USBUART.c **** 
 445:.\Generated_Source\PSoC5/USBUART.c ****     /*  ACK Setup, Stall IN/OUT */
 446:.\Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_EP0_CR_PTR, USBUART_MODE_STALL_IN_OUT);
 401              		.loc 1 446 0
 402 008c 114B     		ldr	r3, .L14+40
 403 008e 0322     		movs	r2, #3
 404 0090 1A70     		strb	r2, [r3]
 447:.\Generated_Source\PSoC5/USBUART.c **** 
 448:.\Generated_Source\PSoC5/USBUART.c ****     /* Enable the SIE with an address 0 */
 449:.\Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_CR0_PTR, USBUART_CR0_ENABLE);
 405              		.loc 1 449 0
 406 0092 114B     		ldr	r3, .L14+44
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 16


 407 0094 8022     		movs	r2, #128
 408 0096 1A70     		strb	r2, [r3]
 450:.\Generated_Source\PSoC5/USBUART.c **** 
 451:.\Generated_Source\PSoC5/USBUART.c ****     /* Workaround for PSOC5LP */
 452:.\Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(1u);
 409              		.loc 1 452 0
 410 0098 0120     		movs	r0, #1
 411 009a FFF7FEFF 		bl	CyDelayCycles
 453:.\Generated_Source\PSoC5/USBUART.c **** 
 454:.\Generated_Source\PSoC5/USBUART.c ****     /* Finally, Enable d+ pullup and select iomode to USB mode*/
 455:.\Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_USBIO_CR1_PTR, USBUART_USBIO_CR1_USBPUEN);
 412              		.loc 1 455 0
 413 009e 0F4B     		ldr	r3, .L14+48
 414 00a0 0422     		movs	r2, #4
 415 00a2 1A70     		strb	r2, [r3]
 456:.\Generated_Source\PSoC5/USBUART.c **** }
 416              		.loc 1 456 0
 417 00a4 0837     		adds	r7, r7, #8
 418              		.cfi_def_cfa_offset 8
 419 00a6 BD46     		mov	sp, r7
 420              		.cfi_def_cfa_register 13
 421              		@ sp needed
 422 00a8 80BD     		pop	{r7, pc}
 423              	.L15:
 424 00aa 00BF     		.align	2
 425              	.L14:
 426 00ac 00E100E0 		.word	-536813312
 427 00b0 00000000 		.word	USBUART_transferState
 428 00b4 09600040 		.word	1073766409
 429 00b8 00000000 		.word	USBUART_device
 430 00bc 00000000 		.word	USBUART_configuration
 431 00c0 00000000 		.word	USBUART_interfaceNumber
 432 00c4 00000000 		.word	USBUART_configurationChanged
 433 00c8 00000000 		.word	USBUART_deviceAddress
 434 00cc 00000000 		.word	USBUART_deviceStatus
 435 00d0 00000000 		.word	USBUART_lastPacketSize
 436 00d4 28600040 		.word	1073766440
 437 00d8 08600040 		.word	1073766408
 438 00dc 12600040 		.word	1073766418
 439              		.cfi_endproc
 440              	.LFE2:
 441              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 442              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 443              		.align	2
 444              		.global	USBUART_ReInitComponent
 445              		.thumb
 446              		.thumb_func
 447              		.type	USBUART_ReInitComponent, %function
 448              	USBUART_ReInitComponent:
 449              	.LFB3:
 457:.\Generated_Source\PSoC5/USBUART.c **** 
 458:.\Generated_Source\PSoC5/USBUART.c **** 
 459:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 460:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 461:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 462:.\Generated_Source\PSoC5/USBUART.c **** *
 463:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 17


 464:.\Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 465:.\Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 466:.\Generated_Source\PSoC5/USBUART.c **** *
 467:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 468:.\Generated_Source\PSoC5/USBUART.c **** *  None.
 469:.\Generated_Source\PSoC5/USBUART.c **** *
 470:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 471:.\Generated_Source\PSoC5/USBUART.c **** *   None.
 472:.\Generated_Source\PSoC5/USBUART.c **** *
 473:.\Generated_Source\PSoC5/USBUART.c **** * Global variables:
 474:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_device: Contains the device number of the desired device
 475:.\Generated_Source\PSoC5/USBUART.c **** *        descriptor. The device number can be found in the Device Descriptor Tab
 476:.\Generated_Source\PSoC5/USBUART.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 477:.\Generated_Source\PSoC5/USBUART.c **** *       in the "Device Number" field.
 478:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState: This variable used by the communication
 479:.\Generated_Source\PSoC5/USBUART.c **** *       functions to handle current transfer state. Initialized to
 480:.\Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 481:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration: Contains current configuration number
 482:.\Generated_Source\PSoC5/USBUART.c **** *       which is set by the Host using SET_CONFIGURATION request.
 483:.\Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 484:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress: Contains current device address. This
 485:.\Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. Host starts to communicate
 486:.\Generated_Source\PSoC5/USBUART.c **** *      to device with address 0 and then set it to whatever value using
 487:.\Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 488:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus: initialized to 0.
 489:.\Generated_Source\PSoC5/USBUART.c **** *       This is two bit variable which contain power status in first bit
 490:.\Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 491:.\Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 492:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize initialized to 0;
 493:.\Generated_Source\PSoC5/USBUART.c **** *
 494:.\Generated_Source\PSoC5/USBUART.c **** * Reentrant:
 495:.\Generated_Source\PSoC5/USBUART.c **** *  No.
 496:.\Generated_Source\PSoC5/USBUART.c **** *
 497:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 498:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 499:.\Generated_Source\PSoC5/USBUART.c **** {
 450              		.loc 1 499 0
 451              		.cfi_startproc
 452              		@ args = 0, pretend = 0, frame = 0
 453              		@ frame_needed = 1, uses_anonymous_args = 0
 454              		@ link register save eliminated.
 455 0000 80B4     		push	{r7}
 456              		.cfi_def_cfa_offset 4
 457              		.cfi_offset 7, -4
 458 0002 00AF     		add	r7, sp, #0
 459              		.cfi_def_cfa_register 7
 500:.\Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 501:.\Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 502:.\Generated_Source\PSoC5/USBUART.c ****     */
 503:.\Generated_Source\PSoC5/USBUART.c ****     #if defined(USBUART_ENABLE_HID_CLASS)
 504:.\Generated_Source\PSoC5/USBUART.c ****         uint8 i;
 505:.\Generated_Source\PSoC5/USBUART.c **** 
 506:.\Generated_Source\PSoC5/USBUART.c ****         for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 507:.\Generated_Source\PSoC5/USBUART.c ****         {
 508:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 509:.\Generated_Source\PSoC5/USBUART.c ****         }
 510:.\Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_ENABLE_HID_CLASS */
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 18


 511:.\Generated_Source\PSoC5/USBUART.c **** 
 512:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState = USBUART_TRANS_STATE_IDLE;
 460              		.loc 1 512 0
 461 0004 0F4B     		ldr	r3, .L17
 462 0006 0022     		movs	r2, #0
 463 0008 1A70     		strb	r2, [r3]
 513:.\Generated_Source\PSoC5/USBUART.c **** 
 514:.\Generated_Source\PSoC5/USBUART.c ****     /* Clear all of the component data */
 515:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration = 0u;
 464              		.loc 1 515 0
 465 000a 0F4B     		ldr	r3, .L17+4
 466 000c 0022     		movs	r2, #0
 467 000e 1A70     		strb	r2, [r3]
 516:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 468              		.loc 1 516 0
 469 0010 0E4B     		ldr	r3, .L17+8
 470 0012 0022     		movs	r2, #0
 471 0014 1A70     		strb	r2, [r3]
 517:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 472              		.loc 1 517 0
 473 0016 0E4B     		ldr	r3, .L17+12
 474 0018 0022     		movs	r2, #0
 475 001a 1A70     		strb	r2, [r3]
 518:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress  = 0u;
 476              		.loc 1 518 0
 477 001c 0D4B     		ldr	r3, .L17+16
 478 001e 0022     		movs	r2, #0
 479 0020 1A70     		strb	r2, [r3]
 519:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus = 0u;
 480              		.loc 1 519 0
 481 0022 0D4B     		ldr	r3, .L17+20
 482 0024 0022     		movs	r2, #0
 483 0026 1A70     		strb	r2, [r3]
 520:.\Generated_Source\PSoC5/USBUART.c **** 
 521:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize = 0u;
 484              		.loc 1 521 0
 485 0028 0C4B     		ldr	r3, .L17+24
 486 002a 0022     		movs	r2, #0
 487 002c 1A70     		strb	r2, [r3]
 522:.\Generated_Source\PSoC5/USBUART.c **** 
 523:.\Generated_Source\PSoC5/USBUART.c **** 
 524:.\Generated_Source\PSoC5/USBUART.c ****     /*  ACK Setup, Stall IN/OUT */
 525:.\Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_EP0_CR_PTR, USBUART_MODE_STALL_IN_OUT);
 488              		.loc 1 525 0
 489 002e 0C4B     		ldr	r3, .L17+28
 490 0030 0322     		movs	r2, #3
 491 0032 1A70     		strb	r2, [r3]
 526:.\Generated_Source\PSoC5/USBUART.c **** 
 527:.\Generated_Source\PSoC5/USBUART.c ****     /* Enable the SIE with an address 0 */
 528:.\Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_CR0_PTR, USBUART_CR0_ENABLE);
 492              		.loc 1 528 0
 493 0034 0B4B     		ldr	r3, .L17+32
 494 0036 8022     		movs	r2, #128
 495 0038 1A70     		strb	r2, [r3]
 529:.\Generated_Source\PSoC5/USBUART.c **** 
 530:.\Generated_Source\PSoC5/USBUART.c **** }
 496              		.loc 1 530 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 19


 497 003a BD46     		mov	sp, r7
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 003c 5DF8047B 		ldr	r7, [sp], #4
 501              		.cfi_restore 7
 502              		.cfi_def_cfa_offset 0
 503 0040 7047     		bx	lr
 504              	.L18:
 505 0042 00BF     		.align	2
 506              	.L17:
 507 0044 00000000 		.word	USBUART_transferState
 508 0048 00000000 		.word	USBUART_configuration
 509 004c 00000000 		.word	USBUART_interfaceNumber
 510 0050 00000000 		.word	USBUART_configurationChanged
 511 0054 00000000 		.word	USBUART_deviceAddress
 512 0058 00000000 		.word	USBUART_deviceStatus
 513 005c 00000000 		.word	USBUART_lastPacketSize
 514 0060 28600040 		.word	1073766440
 515 0064 08600040 		.word	1073766408
 516              		.cfi_endproc
 517              	.LFE3:
 518              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 519              		.section	.text.USBUART_Stop,"ax",%progbits
 520              		.align	2
 521              		.global	USBUART_Stop
 522              		.thumb
 523              		.thumb_func
 524              		.type	USBUART_Stop, %function
 525              	USBUART_Stop:
 526              	.LFB4:
 531:.\Generated_Source\PSoC5/USBUART.c **** 
 532:.\Generated_Source\PSoC5/USBUART.c **** 
 533:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 535:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 536:.\Generated_Source\PSoC5/USBUART.c **** *
 537:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 538:.\Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 539:.\Generated_Source\PSoC5/USBUART.c **** *  the D+ Pullup and disabling the SIE.
 540:.\Generated_Source\PSoC5/USBUART.c **** *
 541:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 542:.\Generated_Source\PSoC5/USBUART.c **** *  None.
 543:.\Generated_Source\PSoC5/USBUART.c **** *
 544:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 545:.\Generated_Source\PSoC5/USBUART.c **** *  None.
 546:.\Generated_Source\PSoC5/USBUART.c **** *
 547:.\Generated_Source\PSoC5/USBUART.c **** * Global variables:
 548:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration: Contains current configuration number
 549:.\Generated_Source\PSoC5/USBUART.c **** *       which is set by the Host using SET_CONFIGURATION request.
 550:.\Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 551:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress: Contains current device address. This
 552:.\Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. Host starts to communicate
 553:.\Generated_Source\PSoC5/USBUART.c **** *      to device with address 0 and then set it to whatever value using
 554:.\Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 555:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus: initialized to 0.
 556:.\Generated_Source\PSoC5/USBUART.c **** *       This is two bit variable which contain power status in first bit
 557:.\Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 20


 558:.\Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 559:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_configurationChanged: This variable is set to one after
 560:.\Generated_Source\PSoC5/USBUART.c **** *       SET_CONFIGURATION request and cleared in this function.
 561:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar variable is set to zero
 562:.\Generated_Source\PSoC5/USBUART.c **** *
 563:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 564:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 565:.\Generated_Source\PSoC5/USBUART.c **** {
 527              		.loc 1 565 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 1, uses_anonymous_args = 0
 531              		@ link register save eliminated.
 532 0000 80B4     		push	{r7}
 533              		.cfi_def_cfa_offset 4
 534              		.cfi_offset 7, -4
 535 0002 00AF     		add	r7, sp, #0
 536              		.cfi_def_cfa_register 7
 566:.\Generated_Source\PSoC5/USBUART.c **** 
 567:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 568:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_Stop_DMA(USBUART_MAX_EP);     /* Stop all DMAs */
 569:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 570:.\Generated_Source\PSoC5/USBUART.c **** 
 571:.\Generated_Source\PSoC5/USBUART.c ****     /* Disable the SIE */
 572:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8)(~USBUART_CR0_ENABLE);
 537              		.loc 1 572 0
 538 0004 244A     		ldr	r2, .L20
 539 0006 244B     		ldr	r3, .L20
 540 0008 1B78     		ldrb	r3, [r3]
 541 000a DBB2     		uxtb	r3, r3
 542 000c 03F07F03 		and	r3, r3, #127
 543 0010 DBB2     		uxtb	r3, r3
 544 0012 1370     		strb	r3, [r2]
 573:.\Generated_Source\PSoC5/USBUART.c ****     /* Disable the d+ pullup */
 574:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8)(~USBUART_USBIO_CR1_USBPUEN);
 545              		.loc 1 574 0
 546 0014 214A     		ldr	r2, .L20+4
 547 0016 214B     		ldr	r3, .L20+4
 548 0018 1B78     		ldrb	r3, [r3]
 549 001a DBB2     		uxtb	r3, r3
 550 001c 23F00403 		bic	r3, r3, #4
 551 0020 DBB2     		uxtb	r3, r3
 552 0022 1370     		strb	r3, [r2]
 575:.\Generated_Source\PSoC5/USBUART.c ****     /* Disable USB in ACT PM */
 576:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG &= (uint8)(~USBUART_PM_ACT_EN_FSUSB);
 553              		.loc 1 576 0
 554 0024 1E4A     		ldr	r2, .L20+8
 555 0026 1E4B     		ldr	r3, .L20+8
 556 0028 1B78     		ldrb	r3, [r3]
 557 002a DBB2     		uxtb	r3, r3
 558 002c 23F00103 		bic	r3, r3, #1
 559 0030 DBB2     		uxtb	r3, r3
 560 0032 1370     		strb	r3, [r2]
 577:.\Generated_Source\PSoC5/USBUART.c ****     /* Disable USB block for Standby Power Mode */
 578:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8)(~USBUART_PM_STBY_EN_FSUSB);
 561              		.loc 1 578 0
 562 0034 1B4A     		ldr	r2, .L20+12
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 21


 563 0036 1B4B     		ldr	r3, .L20+12
 564 0038 1B78     		ldrb	r3, [r3]
 565 003a DBB2     		uxtb	r3, r3
 566 003c 23F00103 		bic	r3, r3, #1
 567 0040 DBB2     		uxtb	r3, r3
 568 0042 1370     		strb	r3, [r2]
 579:.\Generated_Source\PSoC5/USBUART.c **** 
 580:.\Generated_Source\PSoC5/USBUART.c ****     /* Disable the reset and EP interrupts */
 581:.\Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 569              		.loc 1 581 0
 570 0044 184B     		ldr	r3, .L20+16
 571 0046 4FF40002 		mov	r2, #8388608
 572 004a 1A60     		str	r2, [r3]
 582:.\Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 573              		.loc 1 582 0
 574 004c 164B     		ldr	r3, .L20+16
 575 004e 4FF08072 		mov	r2, #16777216
 576 0052 1A60     		str	r2, [r3]
 583:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP1_ISR_REMOVE == 0u)
 584:.\Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 577              		.loc 1 584 0
 578 0054 144B     		ldr	r3, .L20+16
 579 0056 4FF40052 		mov	r2, #8192
 580 005a 1A60     		str	r2, [r3]
 585:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP1_ISR_REMOVE */
 586:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP2_ISR_REMOVE == 0u)
 587:.\Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 581              		.loc 1 587 0
 582 005c 124B     		ldr	r3, .L20+16
 583 005e 4FF48042 		mov	r2, #16384
 584 0062 1A60     		str	r2, [r3]
 588:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP2_ISR_REMOVE */
 589:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP3_ISR_REMOVE == 0u)
 590:.\Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 585              		.loc 1 590 0
 586 0064 104B     		ldr	r3, .L20+16
 587 0066 4FF40042 		mov	r2, #32768
 588 006a 1A60     		str	r2, [r3]
 591:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP3_ISR_REMOVE */
 592:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP4_ISR_REMOVE == 0u)
 593:.\Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 594:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP4_ISR_REMOVE */
 595:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP5_ISR_REMOVE == 0u)
 596:.\Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 597:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP5_ISR_REMOVE */
 598:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP6_ISR_REMOVE == 0u)
 599:.\Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 600:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP6_ISR_REMOVE */
 601:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP7_ISR_REMOVE == 0u)
 602:.\Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 603:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP7_ISR_REMOVE */
 604:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP8_ISR_REMOVE == 0u)
 605:.\Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 606:.\Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP8_ISR_REMOVE */
 607:.\Generated_Source\PSoC5/USBUART.c **** 
 608:.\Generated_Source\PSoC5/USBUART.c ****     /* Clear all of the component data */
 609:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration = 0u;
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 22


 589              		.loc 1 609 0
 590 006c 0F4B     		ldr	r3, .L20+20
 591 006e 0022     		movs	r2, #0
 592 0070 1A70     		strb	r2, [r3]
 610:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 593              		.loc 1 610 0
 594 0072 0F4B     		ldr	r3, .L20+24
 595 0074 0022     		movs	r2, #0
 596 0076 1A70     		strb	r2, [r3]
 611:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 597              		.loc 1 611 0
 598 0078 0E4B     		ldr	r3, .L20+28
 599 007a 0022     		movs	r2, #0
 600 007c 1A70     		strb	r2, [r3]
 612:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress  = 0u;
 601              		.loc 1 612 0
 602 007e 0E4B     		ldr	r3, .L20+32
 603 0080 0022     		movs	r2, #0
 604 0082 1A70     		strb	r2, [r3]
 613:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus = 0u;
 605              		.loc 1 613 0
 606 0084 0D4B     		ldr	r3, .L20+36
 607 0086 0022     		movs	r2, #0
 608 0088 1A70     		strb	r2, [r3]
 614:.\Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 609              		.loc 1 614 0
 610 008a 0D4B     		ldr	r3, .L20+40
 611 008c 0022     		movs	r2, #0
 612 008e 1A70     		strb	r2, [r3]
 615:.\Generated_Source\PSoC5/USBUART.c **** 
 616:.\Generated_Source\PSoC5/USBUART.c **** }
 613              		.loc 1 616 0
 614 0090 BD46     		mov	sp, r7
 615              		.cfi_def_cfa_register 13
 616              		@ sp needed
 617 0092 5DF8047B 		ldr	r7, [sp], #4
 618              		.cfi_restore 7
 619              		.cfi_def_cfa_offset 0
 620 0096 7047     		bx	lr
 621              	.L21:
 622              		.align	2
 623              	.L20:
 624 0098 08600040 		.word	1073766408
 625 009c 12600040 		.word	1073766418
 626 00a0 A5430040 		.word	1073759141
 627 00a4 B5430040 		.word	1073759157
 628 00a8 80E100E0 		.word	-536813184
 629 00ac 00000000 		.word	USBUART_configuration
 630 00b0 00000000 		.word	USBUART_interfaceNumber
 631 00b4 00000000 		.word	USBUART_configurationChanged
 632 00b8 00000000 		.word	USBUART_deviceAddress
 633 00bc 00000000 		.word	USBUART_deviceStatus
 634 00c0 00000000 		.word	USBUART_initVar
 635              		.cfi_endproc
 636              	.LFE4:
 637              		.size	USBUART_Stop, .-USBUART_Stop
 638              		.section	.text.USBUART_CheckActivity,"ax",%progbits
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 23


 639              		.align	2
 640              		.global	USBUART_CheckActivity
 641              		.thumb
 642              		.thumb_func
 643              		.type	USBUART_CheckActivity, %function
 644              	USBUART_CheckActivity:
 645              	.LFB5:
 617:.\Generated_Source\PSoC5/USBUART.c **** 
 618:.\Generated_Source\PSoC5/USBUART.c **** 
 619:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 620:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 621:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 622:.\Generated_Source\PSoC5/USBUART.c **** *
 623:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 624:.\Generated_Source\PSoC5/USBUART.c **** *  Returns the activity status of the bus.  Clears the status hardware to
 625:.\Generated_Source\PSoC5/USBUART.c **** *  provide fresh activity status on the next call of this routine.
 626:.\Generated_Source\PSoC5/USBUART.c **** *
 627:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 628:.\Generated_Source\PSoC5/USBUART.c **** *  None.
 629:.\Generated_Source\PSoC5/USBUART.c **** *
 630:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 631:.\Generated_Source\PSoC5/USBUART.c **** *  1 - If bus activity was detected since the last call to this function
 632:.\Generated_Source\PSoC5/USBUART.c **** *  0 - If bus activity not was detected since the last call to this function
 633:.\Generated_Source\PSoC5/USBUART.c **** *
 634:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 636:.\Generated_Source\PSoC5/USBUART.c **** {
 646              		.loc 1 636 0
 647              		.cfi_startproc
 648              		@ args = 0, pretend = 0, frame = 8
 649              		@ frame_needed = 1, uses_anonymous_args = 0
 650              		@ link register save eliminated.
 651 0000 80B4     		push	{r7}
 652              		.cfi_def_cfa_offset 4
 653              		.cfi_offset 7, -4
 654 0002 83B0     		sub	sp, sp, #12
 655              		.cfi_def_cfa_offset 16
 656 0004 00AF     		add	r7, sp, #0
 657              		.cfi_def_cfa_register 7
 637:.\Generated_Source\PSoC5/USBUART.c ****     uint8 r;
 638:.\Generated_Source\PSoC5/USBUART.c **** 
 639:.\Generated_Source\PSoC5/USBUART.c ****     r = CY_GET_REG8(USBUART_CR1_PTR);
 658              		.loc 1 639 0
 659 0006 0A4B     		ldr	r3, .L24
 660 0008 1B78     		ldrb	r3, [r3]
 661 000a FB71     		strb	r3, [r7, #7]
 640:.\Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_CR1_PTR, (r & ((uint8)(~USBUART_CR1_BUS_ACTIVITY))));
 662              		.loc 1 640 0
 663 000c 084A     		ldr	r2, .L24
 664 000e FB79     		ldrb	r3, [r7, #7]
 665 0010 23F00403 		bic	r3, r3, #4
 666 0014 DBB2     		uxtb	r3, r3
 667 0016 1370     		strb	r3, [r2]
 641:.\Generated_Source\PSoC5/USBUART.c **** 
 642:.\Generated_Source\PSoC5/USBUART.c ****     return((r & USBUART_CR1_BUS_ACTIVITY) >> USBUART_CR1_BUS_ACTIVITY_SHIFT);
 668              		.loc 1 642 0
 669 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 24


 670 001a 03F00403 		and	r3, r3, #4
 671 001e 9B10     		asrs	r3, r3, #2
 672 0020 DBB2     		uxtb	r3, r3
 643:.\Generated_Source\PSoC5/USBUART.c **** }
 673              		.loc 1 643 0
 674 0022 1846     		mov	r0, r3
 675 0024 0C37     		adds	r7, r7, #12
 676              		.cfi_def_cfa_offset 4
 677 0026 BD46     		mov	sp, r7
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 0028 5DF8047B 		ldr	r7, [sp], #4
 681              		.cfi_restore 7
 682              		.cfi_def_cfa_offset 0
 683 002c 7047     		bx	lr
 684              	.L25:
 685 002e 00BF     		.align	2
 686              	.L24:
 687 0030 09600040 		.word	1073766409
 688              		.cfi_endproc
 689              	.LFE5:
 690              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 691              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 692              		.align	2
 693              		.global	USBUART_GetConfiguration
 694              		.thumb
 695              		.thumb_func
 696              		.type	USBUART_GetConfiguration, %function
 697              	USBUART_GetConfiguration:
 698              	.LFB6:
 644:.\Generated_Source\PSoC5/USBUART.c **** 
 645:.\Generated_Source\PSoC5/USBUART.c **** 
 646:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 648:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/USBUART.c **** *
 650:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 651:.\Generated_Source\PSoC5/USBUART.c **** *  Returns the current configuration setting
 652:.\Generated_Source\PSoC5/USBUART.c **** *
 653:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 654:.\Generated_Source\PSoC5/USBUART.c **** *  None.
 655:.\Generated_Source\PSoC5/USBUART.c **** *
 656:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 657:.\Generated_Source\PSoC5/USBUART.c **** *  configuration.
 658:.\Generated_Source\PSoC5/USBUART.c **** *
 659:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 661:.\Generated_Source\PSoC5/USBUART.c **** {
 699              		.loc 1 661 0
 700              		.cfi_startproc
 701              		@ args = 0, pretend = 0, frame = 0
 702              		@ frame_needed = 1, uses_anonymous_args = 0
 703              		@ link register save eliminated.
 704 0000 80B4     		push	{r7}
 705              		.cfi_def_cfa_offset 4
 706              		.cfi_offset 7, -4
 707 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 25


 708              		.cfi_def_cfa_register 7
 662:.\Generated_Source\PSoC5/USBUART.c ****     return(USBUART_configuration);
 709              		.loc 1 662 0
 710 0004 034B     		ldr	r3, .L28
 711 0006 1B78     		ldrb	r3, [r3]
 712 0008 DBB2     		uxtb	r3, r3
 663:.\Generated_Source\PSoC5/USBUART.c **** }
 713              		.loc 1 663 0
 714 000a 1846     		mov	r0, r3
 715 000c BD46     		mov	sp, r7
 716              		.cfi_def_cfa_register 13
 717              		@ sp needed
 718 000e 5DF8047B 		ldr	r7, [sp], #4
 719              		.cfi_restore 7
 720              		.cfi_def_cfa_offset 0
 721 0012 7047     		bx	lr
 722              	.L29:
 723              		.align	2
 724              	.L28:
 725 0014 00000000 		.word	USBUART_configuration
 726              		.cfi_endproc
 727              	.LFE6:
 728              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 729              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 730              		.align	2
 731              		.global	USBUART_IsConfigurationChanged
 732              		.thumb
 733              		.thumb_func
 734              		.type	USBUART_IsConfigurationChanged, %function
 735              	USBUART_IsConfigurationChanged:
 736              	.LFB7:
 664:.\Generated_Source\PSoC5/USBUART.c **** 
 665:.\Generated_Source\PSoC5/USBUART.c **** 
 666:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 668:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 669:.\Generated_Source\PSoC5/USBUART.c **** *
 670:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 671:.\Generated_Source\PSoC5/USBUART.c **** *  Returns the clear on read configuration state. It is usefull when PC send
 672:.\Generated_Source\PSoC5/USBUART.c **** *  double SET_CONFIGURATION request with same configuration number.
 673:.\Generated_Source\PSoC5/USBUART.c **** *
 674:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 675:.\Generated_Source\PSoC5/USBUART.c **** *  None.
 676:.\Generated_Source\PSoC5/USBUART.c **** *
 677:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 678:.\Generated_Source\PSoC5/USBUART.c **** *  Not zero value when new configuration has been changed, otherwise zero is
 679:.\Generated_Source\PSoC5/USBUART.c **** *  returned.
 680:.\Generated_Source\PSoC5/USBUART.c **** *
 681:.\Generated_Source\PSoC5/USBUART.c **** * Global variables:
 682:.\Generated_Source\PSoC5/USBUART.c **** *   USBUART_configurationChanged: This variable is set to one after
 683:.\Generated_Source\PSoC5/USBUART.c **** *       SET_CONFIGURATION request and cleared in this function.
 684:.\Generated_Source\PSoC5/USBUART.c **** *
 685:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 686:.\Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 687:.\Generated_Source\PSoC5/USBUART.c **** {
 737              		.loc 1 687 0
 738              		.cfi_startproc
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 26


 739              		@ args = 0, pretend = 0, frame = 8
 740              		@ frame_needed = 1, uses_anonymous_args = 0
 741              		@ link register save eliminated.
 742 0000 80B4     		push	{r7}
 743              		.cfi_def_cfa_offset 4
 744              		.cfi_offset 7, -4
 745 0002 83B0     		sub	sp, sp, #12
 746              		.cfi_def_cfa_offset 16
 747 0004 00AF     		add	r7, sp, #0
 748              		.cfi_def_cfa_register 7
 688:.\Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 749              		.loc 1 688 0
 750 0006 0023     		movs	r3, #0
 751 0008 FB71     		strb	r3, [r7, #7]
 689:.\Generated_Source\PSoC5/USBUART.c **** 
 690:.\Generated_Source\PSoC5/USBUART.c ****     if(USBUART_configurationChanged != 0u)
 752              		.loc 1 690 0
 753 000a 094B     		ldr	r3, .L33
 754 000c 1B78     		ldrb	r3, [r3]
 755 000e DBB2     		uxtb	r3, r3
 756 0010 002B     		cmp	r3, #0
 757 0012 05D0     		beq	.L31
 691:.\Generated_Source\PSoC5/USBUART.c ****     {
 692:.\Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
 758              		.loc 1 692 0
 759 0014 064B     		ldr	r3, .L33
 760 0016 1B78     		ldrb	r3, [r3]
 761 0018 FB71     		strb	r3, [r7, #7]
 693:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 762              		.loc 1 693 0
 763 001a 054B     		ldr	r3, .L33
 764 001c 0022     		movs	r2, #0
 765 001e 1A70     		strb	r2, [r3]
 766              	.L31:
 694:.\Generated_Source\PSoC5/USBUART.c ****     }
 695:.\Generated_Source\PSoC5/USBUART.c **** 
 696:.\Generated_Source\PSoC5/USBUART.c ****     return(res);
 767              		.loc 1 696 0
 768 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 697:.\Generated_Source\PSoC5/USBUART.c **** }
 769              		.loc 1 697 0
 770 0022 1846     		mov	r0, r3
 771 0024 0C37     		adds	r7, r7, #12
 772              		.cfi_def_cfa_offset 4
 773 0026 BD46     		mov	sp, r7
 774              		.cfi_def_cfa_register 13
 775              		@ sp needed
 776 0028 5DF8047B 		ldr	r7, [sp], #4
 777              		.cfi_restore 7
 778              		.cfi_def_cfa_offset 0
 779 002c 7047     		bx	lr
 780              	.L34:
 781 002e 00BF     		.align	2
 782              	.L33:
 783 0030 00000000 		.word	USBUART_configurationChanged
 784              		.cfi_endproc
 785              	.LFE7:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 27


 786              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 787              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 788              		.align	2
 789              		.global	USBUART_GetInterfaceSetting
 790              		.thumb
 791              		.thumb_func
 792              		.type	USBUART_GetInterfaceSetting, %function
 793              	USBUART_GetInterfaceSetting:
 794              	.LFB8:
 698:.\Generated_Source\PSoC5/USBUART.c **** 
 699:.\Generated_Source\PSoC5/USBUART.c **** 
 700:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 701:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 702:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 703:.\Generated_Source\PSoC5/USBUART.c **** *
 704:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 705:.\Generated_Source\PSoC5/USBUART.c **** *  Returns the alternate setting from current interface
 706:.\Generated_Source\PSoC5/USBUART.c **** *
 707:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 708:.\Generated_Source\PSoC5/USBUART.c **** *  uint8 interfaceNumber, interface number
 709:.\Generated_Source\PSoC5/USBUART.c **** *
 710:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 711:.\Generated_Source\PSoC5/USBUART.c **** *  Alternate setting.
 712:.\Generated_Source\PSoC5/USBUART.c **** *
 713:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 714:.\Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 715:.\Generated_Source\PSoC5/USBUART.c ****                                                     
 716:.\Generated_Source\PSoC5/USBUART.c **** {
 795              		.loc 1 716 0
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 8
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800 0000 80B4     		push	{r7}
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 7, -4
 803 0002 83B0     		sub	sp, sp, #12
 804              		.cfi_def_cfa_offset 16
 805 0004 00AF     		add	r7, sp, #0
 806              		.cfi_def_cfa_register 7
 807 0006 0346     		mov	r3, r0
 808 0008 FB71     		strb	r3, [r7, #7]
 717:.\Generated_Source\PSoC5/USBUART.c ****     return(USBUART_interfaceSetting[interfaceNumber]);
 809              		.loc 1 717 0
 810 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 811 000c 044A     		ldr	r2, .L37
 812 000e D35C     		ldrb	r3, [r2, r3]
 813 0010 DBB2     		uxtb	r3, r3
 718:.\Generated_Source\PSoC5/USBUART.c **** }
 814              		.loc 1 718 0
 815 0012 1846     		mov	r0, r3
 816 0014 0C37     		adds	r7, r7, #12
 817              		.cfi_def_cfa_offset 4
 818 0016 BD46     		mov	sp, r7
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 0018 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 28


 822              		.cfi_restore 7
 823              		.cfi_def_cfa_offset 0
 824 001c 7047     		bx	lr
 825              	.L38:
 826 001e 00BF     		.align	2
 827              	.L37:
 828 0020 00000000 		.word	USBUART_interfaceSetting
 829              		.cfi_endproc
 830              	.LFE8:
 831              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 832              		.section	.text.USBUART_GetEPState,"ax",%progbits
 833              		.align	2
 834              		.global	USBUART_GetEPState
 835              		.thumb
 836              		.thumb_func
 837              		.type	USBUART_GetEPState, %function
 838              	USBUART_GetEPState:
 839              	.LFB9:
 719:.\Generated_Source\PSoC5/USBUART.c **** 
 720:.\Generated_Source\PSoC5/USBUART.c **** 
 721:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 722:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 723:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 724:.\Generated_Source\PSoC5/USBUART.c **** *
 725:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 726:.\Generated_Source\PSoC5/USBUART.c **** *  Returned the state of the requested endpoint.
 727:.\Generated_Source\PSoC5/USBUART.c **** *
 728:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 729:.\Generated_Source\PSoC5/USBUART.c **** *  epNumber: Endpoint Number
 730:.\Generated_Source\PSoC5/USBUART.c **** *
 731:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 732:.\Generated_Source\PSoC5/USBUART.c **** *  State of the requested endpoint.
 733:.\Generated_Source\PSoC5/USBUART.c **** *
 734:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 735:.\Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 736:.\Generated_Source\PSoC5/USBUART.c **** {
 840              		.loc 1 736 0
 841              		.cfi_startproc
 842              		@ args = 0, pretend = 0, frame = 8
 843              		@ frame_needed = 1, uses_anonymous_args = 0
 844              		@ link register save eliminated.
 845 0000 80B4     		push	{r7}
 846              		.cfi_def_cfa_offset 4
 847              		.cfi_offset 7, -4
 848 0002 83B0     		sub	sp, sp, #12
 849              		.cfi_def_cfa_offset 16
 850 0004 00AF     		add	r7, sp, #0
 851              		.cfi_def_cfa_register 7
 852 0006 0346     		mov	r3, r0
 853 0008 FB71     		strb	r3, [r7, #7]
 737:.\Generated_Source\PSoC5/USBUART.c ****     return(USBUART_EP[epNumber].apiEpState);
 854              		.loc 1 737 0
 855 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 856 000c 0649     		ldr	r1, .L41
 857 000e 1346     		mov	r3, r2
 858 0010 5B00     		lsls	r3, r3, #1
 859 0012 1344     		add	r3, r3, r2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 29


 860 0014 9B00     		lsls	r3, r3, #2
 861 0016 0B44     		add	r3, r3, r1
 862 0018 5B78     		ldrb	r3, [r3, #1]
 863 001a DBB2     		uxtb	r3, r3
 738:.\Generated_Source\PSoC5/USBUART.c **** }
 864              		.loc 1 738 0
 865 001c 1846     		mov	r0, r3
 866 001e 0C37     		adds	r7, r7, #12
 867              		.cfi_def_cfa_offset 4
 868 0020 BD46     		mov	sp, r7
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 0022 5DF8047B 		ldr	r7, [sp], #4
 872              		.cfi_restore 7
 873              		.cfi_def_cfa_offset 0
 874 0026 7047     		bx	lr
 875              	.L42:
 876              		.align	2
 877              	.L41:
 878 0028 00000000 		.word	USBUART_EP
 879              		.cfi_endproc
 880              	.LFE9:
 881              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 882              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 883              		.align	2
 884              		.global	USBUART_GetEPCount
 885              		.thumb
 886              		.thumb_func
 887              		.type	USBUART_GetEPCount, %function
 888              	USBUART_GetEPCount:
 889              	.LFB10:
 739:.\Generated_Source\PSoC5/USBUART.c **** 
 740:.\Generated_Source\PSoC5/USBUART.c **** 
 741:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 742:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 743:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 744:.\Generated_Source\PSoC5/USBUART.c **** *
 745:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 746:.\Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 747:.\Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 748:.\Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 749:.\Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 750:.\Generated_Source\PSoC5/USBUART.c **** *
 751:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 752:.\Generated_Source\PSoC5/USBUART.c **** *  epNumber: Data Endpoint Number.
 753:.\Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
 754:.\Generated_Source\PSoC5/USBUART.c **** *
 755:.\Generated_Source\PSoC5/USBUART.c **** * Return:
 756:.\Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 757:.\Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 758:.\Generated_Source\PSoC5/USBUART.c **** *
 759:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 761:.\Generated_Source\PSoC5/USBUART.c **** {
 890              		.loc 1 761 0
 891              		.cfi_startproc
 892              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 30


 893              		@ frame_needed = 1, uses_anonymous_args = 0
 894              		@ link register save eliminated.
 895 0000 80B4     		push	{r7}
 896              		.cfi_def_cfa_offset 4
 897              		.cfi_offset 7, -4
 898 0002 85B0     		sub	sp, sp, #20
 899              		.cfi_def_cfa_offset 24
 900 0004 00AF     		add	r7, sp, #0
 901              		.cfi_def_cfa_register 7
 902 0006 0346     		mov	r3, r0
 903 0008 FB71     		strb	r3, [r7, #7]
 762:.\Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
 763:.\Generated_Source\PSoC5/USBUART.c ****     uint16 result = 0u;
 904              		.loc 1 763 0
 905 000a 0023     		movs	r3, #0
 906 000c FB81     		strh	r3, [r7, #14]	@ movhi
 764:.\Generated_Source\PSoC5/USBUART.c **** 
 765:.\Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 907              		.loc 1 765 0
 908 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 909 0010 002B     		cmp	r3, #0
 910 0012 20D0     		beq	.L44
 911              		.loc 1 765 0 is_stmt 0 discriminator 1
 912 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 913 0016 082B     		cmp	r3, #8
 914 0018 1DD8     		bhi	.L44
 766:.\Generated_Source\PSoC5/USBUART.c ****     {
 767:.\Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 915              		.loc 1 767 0 is_stmt 1
 916 001a FB79     		ldrb	r3, [r7, #7]
 917 001c 013B     		subs	r3, r3, #1
 918 001e DBB2     		uxtb	r3, r3
 919 0020 1B01     		lsls	r3, r3, #4
 920 0022 7B73     		strb	r3, [r7, #13]
 768:.\Generated_Source\PSoC5/USBUART.c **** 
 769:.\Generated_Source\PSoC5/USBUART.c ****         result = (uint8)(CY_GET_REG8((reg8 *)(USBUART_SIE_EP1_CNT0_IND + ri)) &
 921              		.loc 1 769 0
 922 0024 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 923 0026 0F4B     		ldr	r3, .L46
 924 0028 1344     		add	r3, r3, r2
 925 002a 1B78     		ldrb	r3, [r3]
 926 002c DBB2     		uxtb	r3, r3
 927 002e 9BB2     		uxth	r3, r3
 928 0030 03F00F03 		and	r3, r3, #15
 929 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 770:.\Generated_Source\PSoC5/USBUART.c ****                           USBUART_EPX_CNT0_MASK);
 771:.\Generated_Source\PSoC5/USBUART.c ****         result = (result << 8u) | CY_GET_REG8((reg8 *)(USBUART_SIE_EP1_CNT1_IND + ri));
 930              		.loc 1 771 0
 931 0036 FB89     		ldrh	r3, [r7, #14]
 932 0038 1B02     		lsls	r3, r3, #8
 933 003a 99B2     		uxth	r1, r3
 934 003c 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 935 003e 0A4B     		ldr	r3, .L46+4
 936 0040 1344     		add	r3, r3, r2
 937 0042 1B78     		ldrb	r3, [r3]
 938 0044 DBB2     		uxtb	r3, r3
 939 0046 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 31


 940 0048 0A46     		mov	r2, r1	@ movhi
 941 004a 1343     		orrs	r3, r3, r2
 942 004c 9BB2     		uxth	r3, r3
 943 004e FB81     		strh	r3, [r7, #14]	@ movhi
 772:.\Generated_Source\PSoC5/USBUART.c ****         result -= USBUART_EPX_CNTX_CRC_COUNT;
 944              		.loc 1 772 0
 945 0050 FB89     		ldrh	r3, [r7, #14]	@ movhi
 946 0052 023B     		subs	r3, r3, #2
 947 0054 FB81     		strh	r3, [r7, #14]	@ movhi
 948              	.L44:
 773:.\Generated_Source\PSoC5/USBUART.c ****     }
 774:.\Generated_Source\PSoC5/USBUART.c ****     return(result);
 949              		.loc 1 774 0
 950 0056 FB89     		ldrh	r3, [r7, #14]
 775:.\Generated_Source\PSoC5/USBUART.c **** }
 951              		.loc 1 775 0
 952 0058 1846     		mov	r0, r3
 953 005a 1437     		adds	r7, r7, #20
 954              		.cfi_def_cfa_offset 4
 955 005c BD46     		mov	sp, r7
 956              		.cfi_def_cfa_register 13
 957              		@ sp needed
 958 005e 5DF8047B 		ldr	r7, [sp], #4
 959              		.cfi_restore 7
 960              		.cfi_def_cfa_offset 0
 961 0062 7047     		bx	lr
 962              	.L47:
 963              		.align	2
 964              	.L46:
 965 0064 0C600040 		.word	1073766412
 966 0068 0D600040 		.word	1073766413
 967              		.cfi_endproc
 968              	.LFE10:
 969              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 970              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 971              		.align	2
 972              		.global	USBUART_LoadInEP
 973              		.thumb
 974              		.thumb_func
 975              		.type	USBUART_LoadInEP, %function
 976              	USBUART_LoadInEP:
 977              	.LFB11:
 776:.\Generated_Source\PSoC5/USBUART.c **** 
 777:.\Generated_Source\PSoC5/USBUART.c **** 
 778:.\Generated_Source\PSoC5/USBUART.c **** #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 779:.\Generated_Source\PSoC5/USBUART.c **** 
 780:.\Generated_Source\PSoC5/USBUART.c **** 
 781:.\Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
 782:.\Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
 783:.\Generated_Source\PSoC5/USBUART.c ****     ********************************************************************************
 784:.\Generated_Source\PSoC5/USBUART.c ****     *
 785:.\Generated_Source\PSoC5/USBUART.c ****     * Summary:
 786:.\Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
 787:.\Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
 788:.\Generated_Source\PSoC5/USBUART.c ****     *  transfer.
 789:.\Generated_Source\PSoC5/USBUART.c ****     *
 790:.\Generated_Source\PSoC5/USBUART.c ****     * Parameters:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 32


 791:.\Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
 792:.\Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
 793:.\Generated_Source\PSoC5/USBUART.c ****     *  *pData: Pointer to a data array that is related to the EP transfers.
 794:.\Generated_Source\PSoC5/USBUART.c ****     *
 795:.\Generated_Source\PSoC5/USBUART.c ****     * Return:
 796:.\Generated_Source\PSoC5/USBUART.c ****     *  None.
 797:.\Generated_Source\PSoC5/USBUART.c ****     *
 798:.\Generated_Source\PSoC5/USBUART.c ****     * Reentrant:
 799:.\Generated_Source\PSoC5/USBUART.c ****     *  No.
 800:.\Generated_Source\PSoC5/USBUART.c ****     *
 801:.\Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
 802:.\Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8* pData)
 803:.\Generated_Source\PSoC5/USBUART.c ****                                                                     
 804:.\Generated_Source\PSoC5/USBUART.c ****     {
 805:.\Generated_Source\PSoC5/USBUART.c ****         uint16 src;
 806:.\Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
 807:.\Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3)                  /* PSoC 3 */
 808:.\Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_SRAM_BASE);
 809:.\Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
 810:.\Generated_Source\PSoC5/USBUART.c ****             pData = pData;
 811:.\Generated_Source\PSoC5/USBUART.c ****         #else                           /* PSoC 5 */
 812:.\Generated_Source\PSoC5/USBUART.c ****             if((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u )
 813:.\Generated_Source\PSoC5/USBUART.c ****             {   /* for the IN EP source is the SRAM memory buffer */
 814:.\Generated_Source\PSoC5/USBUART.c ****                 src = HI16(pData);
 815:.\Generated_Source\PSoC5/USBUART.c ****                 dst = HI16(CYDEV_PERIPH_BASE);
 816:.\Generated_Source\PSoC5/USBUART.c ****             }
 817:.\Generated_Source\PSoC5/USBUART.c ****             else
 818:.\Generated_Source\PSoC5/USBUART.c ****             {   /* for the OUT EP source is the SIE register */
 819:.\Generated_Source\PSoC5/USBUART.c ****                 src = HI16(CYDEV_PERIPH_BASE);
 820:.\Generated_Source\PSoC5/USBUART.c ****                 dst = HI16(pData);
 821:.\Generated_Source\PSoC5/USBUART.c ****             }
 822:.\Generated_Source\PSoC5/USBUART.c ****         #endif  /*  C51 */
 823:.\Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
 824:.\Generated_Source\PSoC5/USBUART.c ****         {
 825:.\Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP1:
 826:.\Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA1_REMOVE == 0u)
 827:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(
 828:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 829:.\Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA1_REMOVE */
 830:.\Generated_Source\PSoC5/USBUART.c ****                 break;
 831:.\Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP2:
 832:.\Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA2_REMOVE == 0u)
 833:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(
 834:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 835:.\Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA2_REMOVE */
 836:.\Generated_Source\PSoC5/USBUART.c ****                 break;
 837:.\Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
 838:.\Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA3_REMOVE == 0u)
 839:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(
 840:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 841:.\Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA3_REMOVE */
 842:.\Generated_Source\PSoC5/USBUART.c ****                 break;
 843:.\Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
 844:.\Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA4_REMOVE == 0u)
 845:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(
 846:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 847:.\Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA4_REMOVE */
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 33


 848:.\Generated_Source\PSoC5/USBUART.c ****                 break;
 849:.\Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
 850:.\Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA5_REMOVE == 0u)
 851:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(
 852:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 853:.\Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA5_REMOVE */
 854:.\Generated_Source\PSoC5/USBUART.c ****                 break;
 855:.\Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP6:
 856:.\Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA6_REMOVE == 0u)
 857:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(
 858:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 859:.\Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA6_REMOVE */
 860:.\Generated_Source\PSoC5/USBUART.c ****                 break;
 861:.\Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP7:
 862:.\Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA7_REMOVE == 0u)
 863:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(
 864:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 865:.\Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA7_REMOVE */
 866:.\Generated_Source\PSoC5/USBUART.c ****                 break;
 867:.\Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP8:
 868:.\Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA8_REMOVE == 0u)
 869:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(
 870:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 871:.\Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA8_REMOVE */
 872:.\Generated_Source\PSoC5/USBUART.c ****                 break;
 873:.\Generated_Source\PSoC5/USBUART.c ****             default:
 874:.\Generated_Source\PSoC5/USBUART.c ****                 /* Do not support EP0 DMA transfers */
 875:.\Generated_Source\PSoC5/USBUART.c ****                 break;
 876:.\Generated_Source\PSoC5/USBUART.c ****         }
 877:.\Generated_Source\PSoC5/USBUART.c ****         if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 878:.\Generated_Source\PSoC5/USBUART.c ****         {
 879:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
 880:.\Generated_Source\PSoC5/USBUART.c ****             #if ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
 881:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
 882:.\Generated_Source\PSoC5/USBUART.c ****             #endif /*  ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) 
 883:.\Generated_Source\PSoC5/USBUART.c **** 
 884:.\Generated_Source\PSoC5/USBUART.c ****         }
 885:.\Generated_Source\PSoC5/USBUART.c ****     }
 886:.\Generated_Source\PSoC5/USBUART.c **** 
 887:.\Generated_Source\PSoC5/USBUART.c **** 
 888:.\Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
 889:.\Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
 890:.\Generated_Source\PSoC5/USBUART.c ****     ********************************************************************************
 891:.\Generated_Source\PSoC5/USBUART.c ****     *
 892:.\Generated_Source\PSoC5/USBUART.c ****     * Summary: Stops and free DMA
 893:.\Generated_Source\PSoC5/USBUART.c ****     *
 894:.\Generated_Source\PSoC5/USBUART.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number or
 896:.\Generated_Source\PSoC5/USBUART.c ****     *           USBUART_MAX_EP to stop all DMAs
 897:.\Generated_Source\PSoC5/USBUART.c ****     *
 898:.\Generated_Source\PSoC5/USBUART.c ****     * Return:
 899:.\Generated_Source\PSoC5/USBUART.c ****     *  None.
 900:.\Generated_Source\PSoC5/USBUART.c ****     *
 901:.\Generated_Source\PSoC5/USBUART.c ****     * Reentrant:
 902:.\Generated_Source\PSoC5/USBUART.c ****     *  No.
 903:.\Generated_Source\PSoC5/USBUART.c ****     *
 904:.\Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 34


 905:.\Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
 906:.\Generated_Source\PSoC5/USBUART.c ****     {
 907:.\Generated_Source\PSoC5/USBUART.c ****         uint8 i;
 908:.\Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
 909:.\Generated_Source\PSoC5/USBUART.c ****         do
 910:.\Generated_Source\PSoC5/USBUART.c ****         {
 911:.\Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
 912:.\Generated_Source\PSoC5/USBUART.c ****             {
 913:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
 914:.\Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
 915:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
 916:.\Generated_Source\PSoC5/USBUART.c ****             }
 917:.\Generated_Source\PSoC5/USBUART.c ****             #if ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
 918:.\Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
 919:.\Generated_Source\PSoC5/USBUART.c ****                 {
 920:.\Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
 921:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 922:.\Generated_Source\PSoC5/USBUART.c ****                 }
 923:.\Generated_Source\PSoC5/USBUART.c ****             #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) *
 924:.\Generated_Source\PSoC5/USBUART.c ****             i++;
 925:.\Generated_Source\PSoC5/USBUART.c ****         }while((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
 926:.\Generated_Source\PSoC5/USBUART.c ****     }
 927:.\Generated_Source\PSoC5/USBUART.c **** 
 928:.\Generated_Source\PSoC5/USBUART.c **** #endif /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 929:.\Generated_Source\PSoC5/USBUART.c **** 
 930:.\Generated_Source\PSoC5/USBUART.c **** 
 931:.\Generated_Source\PSoC5/USBUART.c **** #if ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
 932:.\Generated_Source\PSoC5/USBUART.c **** 
 933:.\Generated_Source\PSoC5/USBUART.c **** 
 934:.\Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
 935:.\Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
 936:.\Generated_Source\PSoC5/USBUART.c ****     ********************************************************************************
 937:.\Generated_Source\PSoC5/USBUART.c ****     *
 938:.\Generated_Source\PSoC5/USBUART.c ****     * Summary:
 939:.\Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
 940:.\Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
 941:.\Generated_Source\PSoC5/USBUART.c ****     *
 942:.\Generated_Source\PSoC5/USBUART.c ****     * Parameters:
 943:.\Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
 944:.\Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
 945:.\Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
 946:.\Generated_Source\PSoC5/USBUART.c ****     *
 947:.\Generated_Source\PSoC5/USBUART.c ****     * Return:
 948:.\Generated_Source\PSoC5/USBUART.c ****     *  None.
 949:.\Generated_Source\PSoC5/USBUART.c ****     *
 950:.\Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
 951:.\Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
 952:.\Generated_Source\PSoC5/USBUART.c ****     {
 953:.\Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
 954:.\Generated_Source\PSoC5/USBUART.c **** 
 955:.\Generated_Source\PSoC5/USBUART.c ****         if(mode == 0u)
 956:.\Generated_Source\PSoC5/USBUART.c ****         {
 957:.\Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send the the rest of data */
 958:.\Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimised to change only transfer length and configur
 959:.\Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
 960:.\Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length */
 961:.\Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 35


 962:.\Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change only source address */
 963:.\Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
 964:.\Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
 965:.\Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
 966:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
 967:.\Generated_Source\PSoC5/USBUART.c ****         }
 968:.\Generated_Source\PSoC5/USBUART.c ****         else
 969:.\Generated_Source\PSoC5/USBUART.c ****         {
 970:.\Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
 971:.\Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimised to change only transfer length and configur
 972:.\Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
 973:.\Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length */
 974:.\Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
 975:.\Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change only source address */
 976:.\Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
 977:.\Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
 978:.\Generated_Source\PSoC5/USBUART.c ****                                    USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT));
 979:.\Generated_Source\PSoC5/USBUART.c ****         }
 980:.\Generated_Source\PSoC5/USBUART.c **** 
 981:.\Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimised to init TD */
 982:.\Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
 983:.\Generated_Source\PSoC5/USBUART.c ****     }
 984:.\Generated_Source\PSoC5/USBUART.c **** #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 985:.\Generated_Source\PSoC5/USBUART.c **** 
 986:.\Generated_Source\PSoC5/USBUART.c **** 
 987:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 988:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
 989:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 990:.\Generated_Source\PSoC5/USBUART.c **** *
 991:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
 992:.\Generated_Source\PSoC5/USBUART.c **** *  Loads and enables the specified USB data endpoint for an IN transfer.
 993:.\Generated_Source\PSoC5/USBUART.c **** *
 994:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
 995:.\Generated_Source\PSoC5/USBUART.c **** *  epNumber: Contains the data endpoint number.
 996:.\Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
 997:.\Generated_Source\PSoC5/USBUART.c **** *  *pData: A pointer to a data array from which the data for the endpoint space
 998:.\Generated_Source\PSoC5/USBUART.c **** *          is loaded.
 999:.\Generated_Source\PSoC5/USBUART.c **** *  length: The number of bytes to transfer from the array and then send as a
1000:.\Generated_Source\PSoC5/USBUART.c **** *          result of an IN request. Valid values are between 0 and 512.
1001:.\Generated_Source\PSoC5/USBUART.c **** *
1002:.\Generated_Source\PSoC5/USBUART.c **** * Return:
1003:.\Generated_Source\PSoC5/USBUART.c **** *  None.
1004:.\Generated_Source\PSoC5/USBUART.c **** *
1005:.\Generated_Source\PSoC5/USBUART.c **** * Reentrant:
1006:.\Generated_Source\PSoC5/USBUART.c **** *  No.
1007:.\Generated_Source\PSoC5/USBUART.c **** *
1008:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1009:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1010:.\Generated_Source\PSoC5/USBUART.c ****                                                                         
1011:.\Generated_Source\PSoC5/USBUART.c **** {
 978              		.loc 1 1011 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 16
 981              		@ frame_needed = 1, uses_anonymous_args = 0
 982              		@ link register save eliminated.
 983 0000 90B4     		push	{r4, r7}
 984              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 36


 985              		.cfi_offset 4, -8
 986              		.cfi_offset 7, -4
 987 0002 84B0     		sub	sp, sp, #16
 988              		.cfi_def_cfa_offset 24
 989 0004 00AF     		add	r7, sp, #0
 990              		.cfi_def_cfa_register 7
 991 0006 0346     		mov	r3, r0
 992 0008 3960     		str	r1, [r7]
 993 000a FB71     		strb	r3, [r7, #7]
 994 000c 1346     		mov	r3, r2	@ movhi
 995 000e BB80     		strh	r3, [r7, #4]	@ movhi
1012:.\Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
1013:.\Generated_Source\PSoC5/USBUART.c ****     reg8 *p;
1014:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM == USBUART__EP_MANUAL)
1015:.\Generated_Source\PSoC5/USBUART.c ****         uint16 i;
1016:.\Generated_Source\PSoC5/USBUART.c ****     #endif /*  USBUART_EP_MM == USBUART__EP_MANUAL */
1017:.\Generated_Source\PSoC5/USBUART.c **** 
1018:.\Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 996              		.loc 1 1018 0
 997 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 998 0012 002B     		cmp	r3, #0
 999 0014 69D0     		beq	.L48
 1000              		.loc 1 1018 0 is_stmt 0 discriminator 1
 1001 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1002 0018 082B     		cmp	r3, #8
 1003 001a 66D8     		bhi	.L48
1019:.\Generated_Source\PSoC5/USBUART.c ****     {
1020:.\Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1004              		.loc 1 1020 0 is_stmt 1
 1005 001c FB79     		ldrb	r3, [r7, #7]
 1006 001e 013B     		subs	r3, r3, #1
 1007 0020 DBB2     		uxtb	r3, r3
 1008 0022 1B01     		lsls	r3, r3, #4
 1009 0024 7B73     		strb	r3, [r7, #13]
1021:.\Generated_Source\PSoC5/USBUART.c ****         p = (reg8 *)(USBUART_ARB_RW1_DR_IND + ri);
 1010              		.loc 1 1021 0
 1011 0026 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1012 0028 324B     		ldr	r3, .L54
 1013 002a 1344     		add	r3, r3, r2
 1014 002c BB60     		str	r3, [r7, #8]
1022:.\Generated_Source\PSoC5/USBUART.c **** 
1023:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM != USBUART__EP_DMAAUTO)
1024:.\Generated_Source\PSoC5/USBUART.c ****             /* Limits length to available buffer space, auto MM could send packets up to 1024 bytes
1025:.\Generated_Source\PSoC5/USBUART.c ****             if(length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 1015              		.loc 1 1025 0
 1016 002e B988     		ldrh	r1, [r7, #4]
 1017 0030 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1018 0032 3148     		ldr	r0, .L54+4
 1019 0034 1346     		mov	r3, r2
 1020 0036 5B00     		lsls	r3, r3, #1
 1021 0038 1344     		add	r3, r3, r2
 1022 003a 9B00     		lsls	r3, r3, #2
 1023 003c 0344     		add	r3, r3, r0
 1024 003e DB88     		ldrh	r3, [r3, #6]	@ movhi
 1025 0040 9BB2     		uxth	r3, r3
 1026 0042 C3F50073 		rsb	r3, r3, #512
 1027 0046 9942     		cmp	r1, r3
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 37


 1028 0048 0BD9     		bls	.L50
1026:.\Generated_Source\PSoC5/USBUART.c ****             {
1027:.\Generated_Source\PSoC5/USBUART.c ****                 length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 1029              		.loc 1 1027 0
 1030 004a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1031 004c 2A49     		ldr	r1, .L54+4
 1032 004e 1346     		mov	r3, r2
 1033 0050 5B00     		lsls	r3, r3, #1
 1034 0052 1344     		add	r3, r3, r2
 1035 0054 9B00     		lsls	r3, r3, #2
 1036 0056 0B44     		add	r3, r3, r1
 1037 0058 DB88     		ldrh	r3, [r3, #6]	@ movhi
 1038 005a 9BB2     		uxth	r3, r3
 1039 005c C3F50073 		rsb	r3, r3, #512
 1040 0060 BB80     		strh	r3, [r7, #4]	@ movhi
 1041              	.L50:
1028:.\Generated_Source\PSoC5/USBUART.c ****             }
1029:.\Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM != USBUART__EP_DMAAUTO */
1030:.\Generated_Source\PSoC5/USBUART.c **** 
1031:.\Generated_Source\PSoC5/USBUART.c ****         /* Set the count and data toggle */
1032:.\Generated_Source\PSoC5/USBUART.c ****         CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CNT0_IND + ri),
 1042              		.loc 1 1032 0
 1043 0062 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1044 0064 254B     		ldr	r3, .L54+8
 1045 0066 1344     		add	r3, r3, r2
 1046 0068 1C46     		mov	r4, r3
 1047 006a BB88     		ldrh	r3, [r7, #4]
 1048 006c 1B0A     		lsrs	r3, r3, #8
 1049 006e 9BB2     		uxth	r3, r3
 1050 0070 D9B2     		uxtb	r1, r3
 1051 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1052 0074 2048     		ldr	r0, .L54+4
 1053 0076 1346     		mov	r3, r2
 1054 0078 5B00     		lsls	r3, r3, #1
 1055 007a 1344     		add	r3, r3, r2
 1056 007c 9B00     		lsls	r3, r3, #2
 1057 007e 0344     		add	r3, r3, r0
 1058 0080 DB78     		ldrb	r3, [r3, #3]
 1059 0082 DBB2     		uxtb	r3, r3
 1060 0084 0B43     		orrs	r3, r3, r1
 1061 0086 DBB2     		uxtb	r3, r3
 1062 0088 2370     		strb	r3, [r4]
1033:.\Generated_Source\PSoC5/USBUART.c ****                             (length >> 8u) | (USBUART_EP[epNumber].epToggle));
1034:.\Generated_Source\PSoC5/USBUART.c ****         CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CNT1_IND + ri),  length & 0xFFu);
 1063              		.loc 1 1034 0
 1064 008a 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1065 008c 1C4B     		ldr	r3, .L54+12
 1066 008e 1344     		add	r3, r3, r2
 1067 0090 BA88     		ldrh	r2, [r7, #4]	@ movhi
 1068 0092 D2B2     		uxtb	r2, r2
 1069 0094 1A70     		strb	r2, [r3]
1035:.\Generated_Source\PSoC5/USBUART.c **** 
1036:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_MANUAL)
1037:.\Generated_Source\PSoC5/USBUART.c ****             if(pData != NULL)
 1070              		.loc 1 1037 0
 1071 0096 3B68     		ldr	r3, [r7]
 1072 0098 002B     		cmp	r3, #0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 38


 1073 009a 0FD0     		beq	.L51
1038:.\Generated_Source\PSoC5/USBUART.c ****             {
1039:.\Generated_Source\PSoC5/USBUART.c ****                 /* Copy the data using the arbiter data register */
1040:.\Generated_Source\PSoC5/USBUART.c ****                 for (i = 0u; i < length; i++)
 1074              		.loc 1 1040 0
 1075 009c 0023     		movs	r3, #0
 1076 009e FB81     		strh	r3, [r7, #14]	@ movhi
 1077 00a0 08E0     		b	.L52
 1078              	.L53:
1041:.\Generated_Source\PSoC5/USBUART.c ****                 {
1042:.\Generated_Source\PSoC5/USBUART.c ****                     CY_SET_REG8(p, pData[i]);
 1079              		.loc 1 1042 0 discriminator 3
 1080 00a2 FB89     		ldrh	r3, [r7, #14]
 1081 00a4 3A68     		ldr	r2, [r7]
 1082 00a6 1344     		add	r3, r3, r2
 1083 00a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1084 00aa BB68     		ldr	r3, [r7, #8]
 1085 00ac 1A70     		strb	r2, [r3]
1040:.\Generated_Source\PSoC5/USBUART.c ****                 {
 1086              		.loc 1 1040 0 discriminator 3
 1087 00ae FB89     		ldrh	r3, [r7, #14]
 1088 00b0 0133     		adds	r3, r3, #1
 1089 00b2 FB81     		strh	r3, [r7, #14]	@ movhi
 1090              	.L52:
1040:.\Generated_Source\PSoC5/USBUART.c ****                 {
 1091              		.loc 1 1040 0 is_stmt 0 discriminator 1
 1092 00b4 FA89     		ldrh	r2, [r7, #14]
 1093 00b6 BB88     		ldrh	r3, [r7, #4]
 1094 00b8 9A42     		cmp	r2, r3
 1095 00ba F2D3     		bcc	.L53
 1096              	.L51:
1043:.\Generated_Source\PSoC5/USBUART.c ****                 }
1044:.\Generated_Source\PSoC5/USBUART.c ****             }
1045:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1097              		.loc 1 1045 0 is_stmt 1
 1098 00bc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1099 00be 0E49     		ldr	r1, .L54+4
 1100 00c0 1346     		mov	r3, r2
 1101 00c2 5B00     		lsls	r3, r3, #1
 1102 00c4 1344     		add	r3, r3, r2
 1103 00c6 9B00     		lsls	r3, r3, #2
 1104 00c8 0B44     		add	r3, r3, r1
 1105 00ca 0022     		movs	r2, #0
 1106 00cc 5A70     		strb	r2, [r3, #1]
1046:.\Generated_Source\PSoC5/USBUART.c ****             /* Write the Mode register */
1047:.\Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_EP[epNumber].epMode);
 1107              		.loc 1 1047 0
 1108 00ce 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1109 00d0 0C4B     		ldr	r3, .L54+16
 1110 00d2 1344     		add	r3, r3, r2
 1111 00d4 1846     		mov	r0, r3
 1112 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1113 00d8 0749     		ldr	r1, .L54+4
 1114 00da 1346     		mov	r3, r2
 1115 00dc 5B00     		lsls	r3, r3, #1
 1116 00de 1344     		add	r3, r3, r2
 1117 00e0 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 39


 1118 00e2 0B44     		add	r3, r3, r1
 1119 00e4 5B79     		ldrb	r3, [r3, #5]
 1120 00e6 DBB2     		uxtb	r3, r3
 1121 00e8 0370     		strb	r3, [r0]
 1122              	.L48:
1048:.\Generated_Source\PSoC5/USBUART.c ****         #else
1049:.\Generated_Source\PSoC5/USBUART.c ****             /* Init DMA if it was not initialized */
1050:.\Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaTd[epNumber] == DMA_INVALID_TD)
1051:.\Generated_Source\PSoC5/USBUART.c ****             {
1052:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1053:.\Generated_Source\PSoC5/USBUART.c ****             }
1054:.\Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_MANUAL */
1055:.\Generated_Source\PSoC5/USBUART.c **** 
1056:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAMANUAL)
1057:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1058:.\Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1059:.\Generated_Source\PSoC5/USBUART.c ****             {
1060:.\Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA in mode2 for transferring data */
1061:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1062:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD,
1063:.\Generated_Source\PSoC5/USBUART.c ****                                                                                  TD_TERMIN_EN | TD_
1064:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint3
1065:.\Generated_Source\PSoC5/USBUART.c ****                 /* Enable the DMA */
1066:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1067:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1068:.\Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request */
1069:.\Generated_Source\PSoC5/USBUART.c ****                 * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) |= USBUART_ARB_EPX_CFG_DMA_REQ;
1070:.\Generated_Source\PSoC5/USBUART.c ****                 * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) &= ((uint8)(~USBUART_ARB_EPX_CFG_DMA_REQ))
1071:.\Generated_Source\PSoC5/USBUART.c ****                 /* Mode register will be written in arb ISR after DMA transfer complete */
1072:.\Generated_Source\PSoC5/USBUART.c ****             }
1073:.\Generated_Source\PSoC5/USBUART.c ****             else
1074:.\Generated_Source\PSoC5/USBUART.c ****             {
1075:.\Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet - write the Mode register directly */
1076:.\Generated_Source\PSoC5/USBUART.c ****                 CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_EP[epNumber].epMode);
1077:.\Generated_Source\PSoC5/USBUART.c ****             }
1078:.\Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_DMAMANUAL */
1079:.\Generated_Source\PSoC5/USBUART.c **** 
1080:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAAUTO)
1081:.\Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1082:.\Generated_Source\PSoC5/USBUART.c ****             {
1083:.\Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA in mode3 for transferring data */
1084:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1085:.\Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1086:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_inLength[epNumber] = length;
1087:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_inDataPointer[epNumber] = pData;
1088:.\Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to send the data only for the first burst */
1089:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1090:.\Generated_Source\PSoC5/USBUART.c ****                     (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : length,
1091:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1092:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint3
1093:.\Generated_Source\PSoC5/USBUART.c ****                 /* The second TD will be executed only when the first one fails.
1094:.\Generated_Source\PSoC5/USBUART.c ****                 *  The intention of this TD is to generate NRQ interrupt
1095:.\Generated_Source\PSoC5/USBUART.c ****                 *  and repeat 2 last bytes of the first burst.
1096:.\Generated_Source\PSoC5/USBUART.c ****                 */
1097:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1098:.\Generated_Source\PSoC5/USBUART.c ****                                                USBUART_DmaNextTd[epNumber],
1099:.\Generated_Source\PSoC5/USBUART.c ****                                                USBUART_epX_TD_TERMOUT_EN[epNumber]);
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 40


1100:.\Generated_Source\PSoC5/USBUART.c ****                 /* Configure DmaNextTd to clear Data ready status */
1101:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber],  LO16((uint32)&clearInDataRdy
1102:.\Generated_Source\PSoC5/USBUART.c ****                                                                 LO16((uint32)(USBUART_ARB_EP1_CFG_I
1103:.\Generated_Source\PSoC5/USBUART.c ****             #else /* Configure DMA to send all data*/
1104:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1105:.\Generated_Source\PSoC5/USBUART.c ****                                                USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_A
1106:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint3
1107:.\Generated_Source\PSoC5/USBUART.c ****             #endif /* USBUART_EP_DMA_AUTO_OPT == 0u */
1108:.\Generated_Source\PSoC5/USBUART.c **** 
1109:.\Generated_Source\PSoC5/USBUART.c ****                 /* Clear Any potential pending DMA requests before starting the DMA channel to tran
1110:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1111:.\Generated_Source\PSoC5/USBUART.c ****                 /* Enable the DMA */
1112:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1113:.\Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1114:.\Generated_Source\PSoC5/USBUART.c ****             }
1115:.\Generated_Source\PSoC5/USBUART.c ****             else
1116:.\Generated_Source\PSoC5/USBUART.c ****             {
1117:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1118:.\Generated_Source\PSoC5/USBUART.c ****                 if(length > 0u)
1119:.\Generated_Source\PSoC5/USBUART.c ****                 {
1120:.\Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1121:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1122:.\Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1123:.\Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1124:.\Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send the data only for the first burst */
1125:.\Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1126:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1127:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1128:.\Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1129:.\Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],
1130:.\Generated_Source\PSoC5/USBUART.c ****                                              LO16((uint32)USBUART_inDataPointer[epNumber]), LO16((u
1131:.\Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting the DMA channel to 
1132:.\Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1133:.\Generated_Source\PSoC5/USBUART.c ****                     /* Enable the DMA */
1134:.\Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1135:.\Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1136:.\Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1137:.\Generated_Source\PSoC5/USBUART.c **** 
1138:.\Generated_Source\PSoC5/USBUART.c ****                     /* Set Data ready status, This will generate DMA request */
1139:.\Generated_Source\PSoC5/USBUART.c ****                     #ifndef USBUART_MANUAL_IN_EP_ARM
1140:.\Generated_Source\PSoC5/USBUART.c ****                         * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) |= USBUART_ARB_EPX_CFG_IN_DATA_RDY
1141:.\Generated_Source\PSoC5/USBUART.c ****                     #endif  /* USBUART_MANUAL_IN_EP_ARM */
1142:.\Generated_Source\PSoC5/USBUART.c ****                     /* Mode register will be written in arb ISR(In Buffer Full) after first DMA tra
1143:.\Generated_Source\PSoC5/USBUART.c ****                 }
1144:.\Generated_Source\PSoC5/USBUART.c ****                 else
1145:.\Generated_Source\PSoC5/USBUART.c ****                 {
1146:.\Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet - write the Mode register directly */
1147:.\Generated_Source\PSoC5/USBUART.c ****                     CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_EP[epNumber].epMode
1148:.\Generated_Source\PSoC5/USBUART.c ****                 }
1149:.\Generated_Source\PSoC5/USBUART.c ****             }
1150:.\Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_DMAAUTO */
1151:.\Generated_Source\PSoC5/USBUART.c ****     }
1152:.\Generated_Source\PSoC5/USBUART.c **** }
 1123              		.loc 1 1152 0
 1124 00ea 1037     		adds	r7, r7, #16
 1125              		.cfi_def_cfa_offset 8
 1126 00ec BD46     		mov	sp, r7
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 41


 1127              		.cfi_def_cfa_register 13
 1128              		@ sp needed
 1129 00ee 90BC     		pop	{r4, r7}
 1130              		.cfi_restore 7
 1131              		.cfi_restore 4
 1132              		.cfi_def_cfa_offset 0
 1133 00f0 7047     		bx	lr
 1134              	.L55:
 1135 00f2 00BF     		.align	2
 1136              	.L54:
 1137 00f4 88600040 		.word	1073766536
 1138 00f8 00000000 		.word	USBUART_EP
 1139 00fc 0C600040 		.word	1073766412
 1140 0100 0D600040 		.word	1073766413
 1141 0104 0E600040 		.word	1073766414
 1142              		.cfi_endproc
 1143              	.LFE11:
 1144              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 1145              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1146              		.align	2
 1147              		.global	USBUART_ReadOutEP
 1148              		.thumb
 1149              		.thumb_func
 1150              		.type	USBUART_ReadOutEP, %function
 1151              	USBUART_ReadOutEP:
 1152              	.LFB12:
1153:.\Generated_Source\PSoC5/USBUART.c **** 
1154:.\Generated_Source\PSoC5/USBUART.c **** 
1155:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1156:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1157:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1158:.\Generated_Source\PSoC5/USBUART.c **** *
1159:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
1160:.\Generated_Source\PSoC5/USBUART.c **** *  Read data from an endpoint.  The application must call
1161:.\Generated_Source\PSoC5/USBUART.c **** *  USBUART_GetEPState to see if an event is pending.
1162:.\Generated_Source\PSoC5/USBUART.c **** *
1163:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
1164:.\Generated_Source\PSoC5/USBUART.c **** *  epNumber: Contains the data endpoint number.
1165:.\Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1166:.\Generated_Source\PSoC5/USBUART.c **** *  pData: A pointer to a data array from which the data for the endpoint space
1167:.\Generated_Source\PSoC5/USBUART.c **** *         is loaded.
1168:.\Generated_Source\PSoC5/USBUART.c **** *  length: The number of bytes to transfer from the USB Out endpoint and loads
1169:.\Generated_Source\PSoC5/USBUART.c **** *          it into data array. Valid values are between 0 and 1023. The function
1170:.\Generated_Source\PSoC5/USBUART.c **** *          moves fewer than the requested number of bytes if the host sends
1171:.\Generated_Source\PSoC5/USBUART.c **** *          fewer bytes than requested.
1172:.\Generated_Source\PSoC5/USBUART.c **** *
1173:.\Generated_Source\PSoC5/USBUART.c **** * Returns:
1174:.\Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1175:.\Generated_Source\PSoC5/USBUART.c **** *
1176:.\Generated_Source\PSoC5/USBUART.c **** * Reentrant:
1177:.\Generated_Source\PSoC5/USBUART.c **** *  No.
1178:.\Generated_Source\PSoC5/USBUART.c **** *
1179:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1180:.\Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1181:.\Generated_Source\PSoC5/USBUART.c ****                                                                         
1182:.\Generated_Source\PSoC5/USBUART.c **** {
 1153              		.loc 1 1182 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 42


 1154              		.cfi_startproc
 1155              		@ args = 0, pretend = 0, frame = 24
 1156              		@ frame_needed = 1, uses_anonymous_args = 0
 1157 0000 80B5     		push	{r7, lr}
 1158              		.cfi_def_cfa_offset 8
 1159              		.cfi_offset 7, -8
 1160              		.cfi_offset 14, -4
 1161 0002 86B0     		sub	sp, sp, #24
 1162              		.cfi_def_cfa_offset 32
 1163 0004 00AF     		add	r7, sp, #0
 1164              		.cfi_def_cfa_register 7
 1165 0006 0346     		mov	r3, r0
 1166 0008 3960     		str	r1, [r7]
 1167 000a FB71     		strb	r3, [r7, #7]
 1168 000c 1346     		mov	r3, r2	@ movhi
 1169 000e BB80     		strh	r3, [r7, #4]	@ movhi
1183:.\Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
1184:.\Generated_Source\PSoC5/USBUART.c ****     reg8 *p;
1185:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM == USBUART__EP_MANUAL)
1186:.\Generated_Source\PSoC5/USBUART.c ****         uint16 i;
1187:.\Generated_Source\PSoC5/USBUART.c ****     #endif /*  USBUART_EP_MM == USBUART__EP_MANUAL */
1188:.\Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_DMAAUTO)
1189:.\Generated_Source\PSoC5/USBUART.c ****         uint16 xferCount;
1190:.\Generated_Source\PSoC5/USBUART.c ****     #endif /*  USBUART_EP_MM != USBUART__EP_DMAAUTO */
1191:.\Generated_Source\PSoC5/USBUART.c **** 
1192:.\Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP) && (pData != NULL))
 1170              		.loc 1 1192 0
 1171 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1172 0012 002B     		cmp	r3, #0
 1173 0014 30D0     		beq	.L57
 1174              		.loc 1 1192 0 is_stmt 0 discriminator 1
 1175 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1176 0018 082B     		cmp	r3, #8
 1177 001a 2DD8     		bhi	.L57
 1178              		.loc 1 1192 0 discriminator 2
 1179 001c 3B68     		ldr	r3, [r7]
 1180 001e 002B     		cmp	r3, #0
 1181 0020 2AD0     		beq	.L57
1193:.\Generated_Source\PSoC5/USBUART.c ****     {
1194:.\Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1182              		.loc 1 1194 0 is_stmt 1
 1183 0022 FB79     		ldrb	r3, [r7, #7]
 1184 0024 013B     		subs	r3, r3, #1
 1185 0026 DBB2     		uxtb	r3, r3
 1186 0028 1B01     		lsls	r3, r3, #4
 1187 002a 7B75     		strb	r3, [r7, #21]
1195:.\Generated_Source\PSoC5/USBUART.c ****         p = (reg8 *)(USBUART_ARB_RW1_DR_IND + ri);
 1188              		.loc 1 1195 0
 1189 002c 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1190 002e 164B     		ldr	r3, .L63
 1191 0030 1344     		add	r3, r3, r2
 1192 0032 3B61     		str	r3, [r7, #16]
1196:.\Generated_Source\PSoC5/USBUART.c **** 
1197:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM != USBUART__EP_DMAAUTO)
1198:.\Generated_Source\PSoC5/USBUART.c ****             /* Determine which is smaller the requested data or the available data */
1199:.\Generated_Source\PSoC5/USBUART.c ****             xferCount = USBUART_GetEPCount(epNumber);
 1193              		.loc 1 1199 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 43


 1194 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1195 0036 1846     		mov	r0, r3
 1196 0038 FFF7FEFF 		bl	USBUART_GetEPCount
 1197 003c 0346     		mov	r3, r0
 1198 003e FB81     		strh	r3, [r7, #14]	@ movhi
1200:.\Generated_Source\PSoC5/USBUART.c ****             if (length > xferCount)
 1199              		.loc 1 1200 0
 1200 0040 BA88     		ldrh	r2, [r7, #4]
 1201 0042 FB89     		ldrh	r3, [r7, #14]
 1202 0044 9A42     		cmp	r2, r3
 1203 0046 01D9     		bls	.L58
1201:.\Generated_Source\PSoC5/USBUART.c ****             {
1202:.\Generated_Source\PSoC5/USBUART.c ****                 length = xferCount;
 1204              		.loc 1 1202 0
 1205 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1206 004a BB80     		strh	r3, [r7, #4]	@ movhi
 1207              	.L58:
1203:.\Generated_Source\PSoC5/USBUART.c ****             }
1204:.\Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM != USBUART__EP_DMAAUTO */
1205:.\Generated_Source\PSoC5/USBUART.c **** 
1206:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_MANUAL)
1207:.\Generated_Source\PSoC5/USBUART.c ****             /* Copy the data using the arbiter data register */
1208:.\Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; i++)
 1208              		.loc 1 1208 0
 1209 004c 0023     		movs	r3, #0
 1210 004e FB82     		strh	r3, [r7, #22]	@ movhi
 1211 0050 09E0     		b	.L59
 1212              	.L60:
1209:.\Generated_Source\PSoC5/USBUART.c ****             {
1210:.\Generated_Source\PSoC5/USBUART.c ****                 pData[i] = CY_GET_REG8(p);
 1213              		.loc 1 1210 0 discriminator 3
 1214 0052 FB8A     		ldrh	r3, [r7, #22]
 1215 0054 3A68     		ldr	r2, [r7]
 1216 0056 1344     		add	r3, r3, r2
 1217 0058 3A69     		ldr	r2, [r7, #16]
 1218 005a 1278     		ldrb	r2, [r2]
 1219 005c D2B2     		uxtb	r2, r2
 1220 005e 1A70     		strb	r2, [r3]
1208:.\Generated_Source\PSoC5/USBUART.c ****             {
 1221              		.loc 1 1208 0 discriminator 3
 1222 0060 FB8A     		ldrh	r3, [r7, #22]
 1223 0062 0133     		adds	r3, r3, #1
 1224 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 1225              	.L59:
1208:.\Generated_Source\PSoC5/USBUART.c ****             {
 1226              		.loc 1 1208 0 is_stmt 0 discriminator 1
 1227 0066 FA8A     		ldrh	r2, [r7, #22]
 1228 0068 BB88     		ldrh	r3, [r7, #4]
 1229 006a 9A42     		cmp	r2, r3
 1230 006c F1D3     		bcc	.L60
1211:.\Generated_Source\PSoC5/USBUART.c ****             }
1212:.\Generated_Source\PSoC5/USBUART.c **** 
1213:.\Generated_Source\PSoC5/USBUART.c ****             /* (re)arming of OUT endpoint */
1214:.\Generated_Source\PSoC5/USBUART.c ****             USBUART_EnableOutEP(epNumber);
 1231              		.loc 1 1214 0 is_stmt 1
 1232 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1233 0070 1846     		mov	r0, r3
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 44


 1234 0072 FFF7FEFF 		bl	USBUART_EnableOutEP
 1235 0076 01E0     		b	.L61
 1236              	.L57:
1215:.\Generated_Source\PSoC5/USBUART.c ****         #else
1216:.\Generated_Source\PSoC5/USBUART.c ****             /*Init DMA if it was not initialized */
1217:.\Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[epNumber] == DMA_INVALID_TD)
1218:.\Generated_Source\PSoC5/USBUART.c ****             {
1219:.\Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1220:.\Generated_Source\PSoC5/USBUART.c ****             }
1221:.\Generated_Source\PSoC5/USBUART.c **** 
1222:.\Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_MANUAL */
1223:.\Generated_Source\PSoC5/USBUART.c **** 
1224:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAMANUAL)
1225:.\Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA in mode2 for transferring data */
1226:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1227:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD,
1228:.\Generated_Source\PSoC5/USBUART.c ****                                                                                 TD_TERMIN_EN | TD_I
1229:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData)
1230:.\Generated_Source\PSoC5/USBUART.c ****             /* Enable the DMA */
1231:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1232:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1233:.\Generated_Source\PSoC5/USBUART.c **** 
1234:.\Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request */
1235:.\Generated_Source\PSoC5/USBUART.c ****             * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) |= USBUART_ARB_EPX_CFG_DMA_REQ;
1236:.\Generated_Source\PSoC5/USBUART.c ****             * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) &= ((uint8)(~USBUART_ARB_EPX_CFG_DMA_REQ));
1237:.\Generated_Source\PSoC5/USBUART.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1238:.\Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_DMAMANUAL */
1239:.\Generated_Source\PSoC5/USBUART.c **** 
1240:.\Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAAUTO)
1241:.\Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA in mode3 for transferring data */
1242:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1243:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, USBUART_DmaTd[epNumber]
1244:.\Generated_Source\PSoC5/USBUART.c ****                                                                                 TD_TERMIN_EN | TD_I
1245:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData)
1246:.\Generated_Source\PSoC5/USBUART.c **** 
1247:.\Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting the DMA channel to transfer
1248:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1249:.\Generated_Source\PSoC5/USBUART.c ****             /* Enable the DMA */
1250:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1251:.\Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1252:.\Generated_Source\PSoC5/USBUART.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1253:.\Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_DMAAUTO */
1254:.\Generated_Source\PSoC5/USBUART.c **** 
1255:.\Generated_Source\PSoC5/USBUART.c ****     }
1256:.\Generated_Source\PSoC5/USBUART.c ****     else
1257:.\Generated_Source\PSoC5/USBUART.c ****     {
1258:.\Generated_Source\PSoC5/USBUART.c ****         length = 0u;
 1237              		.loc 1 1258 0
 1238 0078 0023     		movs	r3, #0
 1239 007a BB80     		strh	r3, [r7, #4]	@ movhi
 1240              	.L61:
1259:.\Generated_Source\PSoC5/USBUART.c ****     }
1260:.\Generated_Source\PSoC5/USBUART.c **** 
1261:.\Generated_Source\PSoC5/USBUART.c ****     return(length);
 1241              		.loc 1 1261 0
 1242 007c BB88     		ldrh	r3, [r7, #4]
1262:.\Generated_Source\PSoC5/USBUART.c **** }
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 45


 1243              		.loc 1 1262 0
 1244 007e 1846     		mov	r0, r3
 1245 0080 1837     		adds	r7, r7, #24
 1246              		.cfi_def_cfa_offset 8
 1247 0082 BD46     		mov	sp, r7
 1248              		.cfi_def_cfa_register 13
 1249              		@ sp needed
 1250 0084 80BD     		pop	{r7, pc}
 1251              	.L64:
 1252 0086 00BF     		.align	2
 1253              	.L63:
 1254 0088 88600040 		.word	1073766536
 1255              		.cfi_endproc
 1256              	.LFE12:
 1257              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1258              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1259              		.align	2
 1260              		.global	USBUART_EnableOutEP
 1261              		.thumb
 1262              		.thumb_func
 1263              		.type	USBUART_EnableOutEP, %function
 1264              	USBUART_EnableOutEP:
 1265              	.LFB13:
1263:.\Generated_Source\PSoC5/USBUART.c **** 
1264:.\Generated_Source\PSoC5/USBUART.c **** 
1265:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1266:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
1267:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1268:.\Generated_Source\PSoC5/USBUART.c **** *
1269:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
1270:.\Generated_Source\PSoC5/USBUART.c **** *  This function enables an OUT endpoint.  It should not be
1271:.\Generated_Source\PSoC5/USBUART.c **** *  called for an IN endpoint.
1272:.\Generated_Source\PSoC5/USBUART.c **** *
1273:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
1274:.\Generated_Source\PSoC5/USBUART.c **** *  epNumber: Endpoint Number
1275:.\Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1276:.\Generated_Source\PSoC5/USBUART.c **** *
1277:.\Generated_Source\PSoC5/USBUART.c **** * Return:
1278:.\Generated_Source\PSoC5/USBUART.c **** *   None.
1279:.\Generated_Source\PSoC5/USBUART.c **** *
1280:.\Generated_Source\PSoC5/USBUART.c **** * Global variables:
1281:.\Generated_Source\PSoC5/USBUART.c **** *  USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
1282:.\Generated_Source\PSoC5/USBUART.c **** *
1283:.\Generated_Source\PSoC5/USBUART.c **** * Reentrant:
1284:.\Generated_Source\PSoC5/USBUART.c **** *  No.
1285:.\Generated_Source\PSoC5/USBUART.c **** *
1286:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1287:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
1288:.\Generated_Source\PSoC5/USBUART.c **** {
 1266              		.loc 1 1288 0
 1267              		.cfi_startproc
 1268              		@ args = 0, pretend = 0, frame = 16
 1269              		@ frame_needed = 1, uses_anonymous_args = 0
 1270              		@ link register save eliminated.
 1271 0000 80B4     		push	{r7}
 1272              		.cfi_def_cfa_offset 4
 1273              		.cfi_offset 7, -4
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 46


 1274 0002 85B0     		sub	sp, sp, #20
 1275              		.cfi_def_cfa_offset 24
 1276 0004 00AF     		add	r7, sp, #0
 1277              		.cfi_def_cfa_register 7
 1278 0006 0346     		mov	r3, r0
 1279 0008 FB71     		strb	r3, [r7, #7]
1289:.\Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
1290:.\Generated_Source\PSoC5/USBUART.c **** 
1291:.\Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1280              		.loc 1 1291 0
 1281 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1282 000c 002B     		cmp	r3, #0
 1283 000e 1ED0     		beq	.L65
 1284              		.loc 1 1291 0 is_stmt 0 discriminator 1
 1285 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1286 0012 082B     		cmp	r3, #8
 1287 0014 1BD8     		bhi	.L65
1292:.\Generated_Source\PSoC5/USBUART.c ****     {
1293:.\Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1288              		.loc 1 1293 0 is_stmt 1
 1289 0016 FB79     		ldrb	r3, [r7, #7]
 1290 0018 013B     		subs	r3, r3, #1
 1291 001a DBB2     		uxtb	r3, r3
 1292 001c 1B01     		lsls	r3, r3, #4
 1293 001e FB73     		strb	r3, [r7, #15]
1294:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1294              		.loc 1 1294 0
 1295 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1296 0022 0D49     		ldr	r1, .L67
 1297 0024 1346     		mov	r3, r2
 1298 0026 5B00     		lsls	r3, r3, #1
 1299 0028 1344     		add	r3, r3, r2
 1300 002a 9B00     		lsls	r3, r3, #2
 1301 002c 0B44     		add	r3, r3, r1
 1302 002e 0022     		movs	r2, #0
 1303 0030 5A70     		strb	r2, [r3, #1]
1295:.\Generated_Source\PSoC5/USBUART.c ****         /* Write the Mode register */
1296:.\Generated_Source\PSoC5/USBUART.c ****         CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_EP[epNumber].epMode);
 1304              		.loc 1 1296 0
 1305 0032 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1306 0034 094B     		ldr	r3, .L67+4
 1307 0036 1344     		add	r3, r3, r2
 1308 0038 1846     		mov	r0, r3
 1309 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1310 003c 0649     		ldr	r1, .L67
 1311 003e 1346     		mov	r3, r2
 1312 0040 5B00     		lsls	r3, r3, #1
 1313 0042 1344     		add	r3, r3, r2
 1314 0044 9B00     		lsls	r3, r3, #2
 1315 0046 0B44     		add	r3, r3, r1
 1316 0048 5B79     		ldrb	r3, [r3, #5]
 1317 004a DBB2     		uxtb	r3, r3
 1318 004c 0370     		strb	r3, [r0]
 1319              	.L65:
1297:.\Generated_Source\PSoC5/USBUART.c ****     }
1298:.\Generated_Source\PSoC5/USBUART.c **** }
 1320              		.loc 1 1298 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 47


 1321 004e 1437     		adds	r7, r7, #20
 1322              		.cfi_def_cfa_offset 4
 1323 0050 BD46     		mov	sp, r7
 1324              		.cfi_def_cfa_register 13
 1325              		@ sp needed
 1326 0052 5DF8047B 		ldr	r7, [sp], #4
 1327              		.cfi_restore 7
 1328              		.cfi_def_cfa_offset 0
 1329 0056 7047     		bx	lr
 1330              	.L68:
 1331              		.align	2
 1332              	.L67:
 1333 0058 00000000 		.word	USBUART_EP
 1334 005c 0E600040 		.word	1073766414
 1335              		.cfi_endproc
 1336              	.LFE13:
 1337              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1338              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1339              		.align	2
 1340              		.global	USBUART_DisableOutEP
 1341              		.thumb
 1342              		.thumb_func
 1343              		.type	USBUART_DisableOutEP, %function
 1344              	USBUART_DisableOutEP:
 1345              	.LFB14:
1299:.\Generated_Source\PSoC5/USBUART.c **** 
1300:.\Generated_Source\PSoC5/USBUART.c **** 
1301:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
1303:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1304:.\Generated_Source\PSoC5/USBUART.c **** *
1305:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
1306:.\Generated_Source\PSoC5/USBUART.c **** *  This function disables an OUT endpoint.  It should not be
1307:.\Generated_Source\PSoC5/USBUART.c **** *  called for an IN endpoint.
1308:.\Generated_Source\PSoC5/USBUART.c **** *
1309:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
1310:.\Generated_Source\PSoC5/USBUART.c **** *  epNumber: Endpoint Number
1311:.\Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1312:.\Generated_Source\PSoC5/USBUART.c **** *
1313:.\Generated_Source\PSoC5/USBUART.c **** * Return:
1314:.\Generated_Source\PSoC5/USBUART.c **** *  None.
1315:.\Generated_Source\PSoC5/USBUART.c **** *
1316:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
1318:.\Generated_Source\PSoC5/USBUART.c **** {
 1346              		.loc 1 1318 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 16
 1349              		@ frame_needed = 1, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351 0000 80B4     		push	{r7}
 1352              		.cfi_def_cfa_offset 4
 1353              		.cfi_offset 7, -4
 1354 0002 85B0     		sub	sp, sp, #20
 1355              		.cfi_def_cfa_offset 24
 1356 0004 00AF     		add	r7, sp, #0
 1357              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 48


 1358 0006 0346     		mov	r3, r0
 1359 0008 FB71     		strb	r3, [r7, #7]
1319:.\Generated_Source\PSoC5/USBUART.c ****     uint8 ri ;
1320:.\Generated_Source\PSoC5/USBUART.c **** 
1321:.\Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1360              		.loc 1 1321 0
 1361 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1362 000c 002B     		cmp	r3, #0
 1363 000e 0CD0     		beq	.L69
 1364              		.loc 1 1321 0 is_stmt 0 discriminator 1
 1365 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1366 0012 082B     		cmp	r3, #8
 1367 0014 09D8     		bhi	.L69
1322:.\Generated_Source\PSoC5/USBUART.c ****     {
1323:.\Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1368              		.loc 1 1323 0 is_stmt 1
 1369 0016 FB79     		ldrb	r3, [r7, #7]
 1370 0018 013B     		subs	r3, r3, #1
 1371 001a DBB2     		uxtb	r3, r3
 1372 001c 1B01     		lsls	r3, r3, #4
 1373 001e FB73     		strb	r3, [r7, #15]
1324:.\Generated_Source\PSoC5/USBUART.c ****         /* Write the Mode register */
1325:.\Generated_Source\PSoC5/USBUART.c ****         CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_MODE_NAK_OUT);
 1374              		.loc 1 1325 0
 1375 0020 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1376 0022 044B     		ldr	r3, .L71
 1377 0024 1344     		add	r3, r3, r2
 1378 0026 0822     		movs	r2, #8
 1379 0028 1A70     		strb	r2, [r3]
 1380              	.L69:
1326:.\Generated_Source\PSoC5/USBUART.c ****     }
1327:.\Generated_Source\PSoC5/USBUART.c **** }
 1381              		.loc 1 1327 0
 1382 002a 1437     		adds	r7, r7, #20
 1383              		.cfi_def_cfa_offset 4
 1384 002c BD46     		mov	sp, r7
 1385              		.cfi_def_cfa_register 13
 1386              		@ sp needed
 1387 002e 5DF8047B 		ldr	r7, [sp], #4
 1388              		.cfi_restore 7
 1389              		.cfi_def_cfa_offset 0
 1390 0032 7047     		bx	lr
 1391              	.L72:
 1392              		.align	2
 1393              	.L71:
 1394 0034 0E600040 		.word	1073766414
 1395              		.cfi_endproc
 1396              	.LFE14:
 1397              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1398              		.section	.text.USBUART_Force,"ax",%progbits
 1399              		.align	2
 1400              		.global	USBUART_Force
 1401              		.thumb
 1402              		.thumb_func
 1403              		.type	USBUART_Force, %function
 1404              	USBUART_Force:
 1405              	.LFB15:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 49


1328:.\Generated_Source\PSoC5/USBUART.c **** 
1329:.\Generated_Source\PSoC5/USBUART.c **** 
1330:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1331:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
1332:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1333:.\Generated_Source\PSoC5/USBUART.c **** *
1334:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
1335:.\Generated_Source\PSoC5/USBUART.c **** *  Forces the bus state
1336:.\Generated_Source\PSoC5/USBUART.c **** *
1337:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
1338:.\Generated_Source\PSoC5/USBUART.c **** *  bState
1339:.\Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J
1340:.\Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K
1341:.\Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0
1342:.\Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE
1343:.\Generated_Source\PSoC5/USBUART.c **** *
1344:.\Generated_Source\PSoC5/USBUART.c **** * Return:
1345:.\Generated_Source\PSoC5/USBUART.c **** *  None.
1346:.\Generated_Source\PSoC5/USBUART.c **** *
1347:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1348:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
1349:.\Generated_Source\PSoC5/USBUART.c **** {
 1406              		.loc 1 1349 0
 1407              		.cfi_startproc
 1408              		@ args = 0, pretend = 0, frame = 8
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410              		@ link register save eliminated.
 1411 0000 80B4     		push	{r7}
 1412              		.cfi_def_cfa_offset 4
 1413              		.cfi_offset 7, -4
 1414 0002 83B0     		sub	sp, sp, #12
 1415              		.cfi_def_cfa_offset 16
 1416 0004 00AF     		add	r7, sp, #0
 1417              		.cfi_def_cfa_register 7
 1418 0006 0346     		mov	r3, r0
 1419 0008 FB71     		strb	r3, [r7, #7]
1350:.\Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_USBIO_CR0_PTR, bState);
 1420              		.loc 1 1350 0
 1421 000a 044A     		ldr	r2, .L74
 1422 000c FB79     		ldrb	r3, [r7, #7]
 1423 000e 1370     		strb	r3, [r2]
1351:.\Generated_Source\PSoC5/USBUART.c **** }
 1424              		.loc 1 1351 0
 1425 0010 0C37     		adds	r7, r7, #12
 1426              		.cfi_def_cfa_offset 4
 1427 0012 BD46     		mov	sp, r7
 1428              		.cfi_def_cfa_register 13
 1429              		@ sp needed
 1430 0014 5DF8047B 		ldr	r7, [sp], #4
 1431              		.cfi_restore 7
 1432              		.cfi_def_cfa_offset 0
 1433 0018 7047     		bx	lr
 1434              	.L75:
 1435 001a 00BF     		.align	2
 1436              	.L74:
 1437 001c 10600040 		.word	1073766416
 1438              		.cfi_endproc
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 50


 1439              	.LFE15:
 1440              		.size	USBUART_Force, .-USBUART_Force
 1441              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1442              		.align	2
 1443              		.global	USBUART_GetEPAckState
 1444              		.thumb
 1445              		.thumb_func
 1446              		.type	USBUART_GetEPAckState, %function
 1447              	USBUART_GetEPAckState:
 1448              	.LFB16:
1352:.\Generated_Source\PSoC5/USBUART.c **** 
1353:.\Generated_Source\PSoC5/USBUART.c **** 
1354:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1355:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
1356:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1357:.\Generated_Source\PSoC5/USBUART.c **** *
1358:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
1359:.\Generated_Source\PSoC5/USBUART.c **** *  Returns the ACK of the CR0 Register (ACKD)
1360:.\Generated_Source\PSoC5/USBUART.c **** *
1361:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
1362:.\Generated_Source\PSoC5/USBUART.c **** *  epNumber: Endpoint Number
1363:.\Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1364:.\Generated_Source\PSoC5/USBUART.c **** *
1365:.\Generated_Source\PSoC5/USBUART.c **** * Returns
1366:.\Generated_Source\PSoC5/USBUART.c **** *  0 if nothing has been ACKD, non-=zero something has been ACKD
1367:.\Generated_Source\PSoC5/USBUART.c **** *
1368:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1369:.\Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
1370:.\Generated_Source\PSoC5/USBUART.c **** {
 1449              		.loc 1 1370 0
 1450              		.cfi_startproc
 1451              		@ args = 0, pretend = 0, frame = 16
 1452              		@ frame_needed = 1, uses_anonymous_args = 0
 1453              		@ link register save eliminated.
 1454 0000 80B4     		push	{r7}
 1455              		.cfi_def_cfa_offset 4
 1456              		.cfi_offset 7, -4
 1457 0002 85B0     		sub	sp, sp, #20
 1458              		.cfi_def_cfa_offset 24
 1459 0004 00AF     		add	r7, sp, #0
 1460              		.cfi_def_cfa_register 7
 1461 0006 0346     		mov	r3, r0
 1462 0008 FB71     		strb	r3, [r7, #7]
1371:.\Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
1372:.\Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1463              		.loc 1 1372 0
 1464 000a 0023     		movs	r3, #0
 1465 000c FB73     		strb	r3, [r7, #15]
1373:.\Generated_Source\PSoC5/USBUART.c **** 
1374:.\Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1466              		.loc 1 1374 0
 1467 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1468 0010 002B     		cmp	r3, #0
 1469 0012 0FD0     		beq	.L77
 1470              		.loc 1 1374 0 is_stmt 0 discriminator 1
 1471 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1472 0016 082B     		cmp	r3, #8
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 51


 1473 0018 0CD8     		bhi	.L77
1375:.\Generated_Source\PSoC5/USBUART.c ****     {
1376:.\Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1474              		.loc 1 1376 0 is_stmt 1
 1475 001a FB79     		ldrb	r3, [r7, #7]
 1476 001c 013B     		subs	r3, r3, #1
 1477 001e DBB2     		uxtb	r3, r3
 1478 0020 1B01     		lsls	r3, r3, #4
 1479 0022 BB73     		strb	r3, [r7, #14]
1377:.\Generated_Source\PSoC5/USBUART.c ****         cr = CY_GET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri)) & USBUART_MODE_ACKD;
 1480              		.loc 1 1377 0
 1481 0024 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1482 0026 074B     		ldr	r3, .L79
 1483 0028 1344     		add	r3, r3, r2
 1484 002a 1B78     		ldrb	r3, [r3]
 1485 002c DBB2     		uxtb	r3, r3
 1486 002e 03F01003 		and	r3, r3, #16
 1487 0032 FB73     		strb	r3, [r7, #15]
 1488              	.L77:
1378:.\Generated_Source\PSoC5/USBUART.c ****     }
1379:.\Generated_Source\PSoC5/USBUART.c **** 
1380:.\Generated_Source\PSoC5/USBUART.c ****     return(cr);
 1489              		.loc 1 1380 0
 1490 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1381:.\Generated_Source\PSoC5/USBUART.c **** }
 1491              		.loc 1 1381 0
 1492 0036 1846     		mov	r0, r3
 1493 0038 1437     		adds	r7, r7, #20
 1494              		.cfi_def_cfa_offset 4
 1495 003a BD46     		mov	sp, r7
 1496              		.cfi_def_cfa_register 13
 1497              		@ sp needed
 1498 003c 5DF8047B 		ldr	r7, [sp], #4
 1499              		.cfi_restore 7
 1500              		.cfi_def_cfa_offset 0
 1501 0040 7047     		bx	lr
 1502              	.L80:
 1503 0042 00BF     		.align	2
 1504              	.L79:
 1505 0044 0E600040 		.word	1073766414
 1506              		.cfi_endproc
 1507              	.LFE16:
 1508              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1509              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1510              		.align	2
 1511              		.global	USBUART_SetPowerStatus
 1512              		.thumb
 1513              		.thumb_func
 1514              		.type	USBUART_SetPowerStatus, %function
 1515              	USBUART_SetPowerStatus:
 1516              	.LFB17:
1382:.\Generated_Source\PSoC5/USBUART.c **** 
1383:.\Generated_Source\PSoC5/USBUART.c **** 
1384:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1385:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
1386:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1387:.\Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 52


1388:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
1389:.\Generated_Source\PSoC5/USBUART.c **** *  Sets the device power status for reporting in the Get Device Status
1390:.\Generated_Source\PSoC5/USBUART.c **** *  request
1391:.\Generated_Source\PSoC5/USBUART.c **** *
1392:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
1393:.\Generated_Source\PSoC5/USBUART.c **** *  powerStatus: USBUART_DEVICE_STATUS_BUS_POWERED(0) - Bus Powered,
1394:.\Generated_Source\PSoC5/USBUART.c **** *               USBUART_DEVICE_STATUS_SELF_POWERED(1) - Self Powered
1395:.\Generated_Source\PSoC5/USBUART.c **** *
1396:.\Generated_Source\PSoC5/USBUART.c **** * Return:
1397:.\Generated_Source\PSoC5/USBUART.c **** *   None.
1398:.\Generated_Source\PSoC5/USBUART.c **** *
1399:.\Generated_Source\PSoC5/USBUART.c **** * Global variables:
1400:.\Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - set power status
1401:.\Generated_Source\PSoC5/USBUART.c **** *
1402:.\Generated_Source\PSoC5/USBUART.c **** * Reentrant:
1403:.\Generated_Source\PSoC5/USBUART.c **** *  No.
1404:.\Generated_Source\PSoC5/USBUART.c **** *
1405:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1406:.\Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
1407:.\Generated_Source\PSoC5/USBUART.c **** {
 1517              		.loc 1 1407 0
 1518              		.cfi_startproc
 1519              		@ args = 0, pretend = 0, frame = 8
 1520              		@ frame_needed = 1, uses_anonymous_args = 0
 1521              		@ link register save eliminated.
 1522 0000 80B4     		push	{r7}
 1523              		.cfi_def_cfa_offset 4
 1524              		.cfi_offset 7, -4
 1525 0002 83B0     		sub	sp, sp, #12
 1526              		.cfi_def_cfa_offset 16
 1527 0004 00AF     		add	r7, sp, #0
 1528              		.cfi_def_cfa_register 7
 1529 0006 0346     		mov	r3, r0
 1530 0008 FB71     		strb	r3, [r7, #7]
1408:.\Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1531              		.loc 1 1408 0
 1532 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1533 000c 002B     		cmp	r3, #0
 1534 000e 08D0     		beq	.L82
1409:.\Generated_Source\PSoC5/USBUART.c ****     {
1410:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |=  USBUART_DEVICE_STATUS_SELF_POWERED;
 1535              		.loc 1 1410 0
 1536 0010 0A4B     		ldr	r3, .L84
 1537 0012 1B78     		ldrb	r3, [r3]
 1538 0014 DBB2     		uxtb	r3, r3
 1539 0016 43F00103 		orr	r3, r3, #1
 1540 001a DAB2     		uxtb	r2, r3
 1541 001c 074B     		ldr	r3, .L84
 1542 001e 1A70     		strb	r2, [r3]
 1543 0020 07E0     		b	.L81
 1544              	.L82:
1411:.\Generated_Source\PSoC5/USBUART.c ****     }
1412:.\Generated_Source\PSoC5/USBUART.c ****     else
1413:.\Generated_Source\PSoC5/USBUART.c ****     {
1414:.\Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &=  ((uint8)(~USBUART_DEVICE_STATUS_SELF_POWERED));
 1545              		.loc 1 1414 0
 1546 0022 064B     		ldr	r3, .L84
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 53


 1547 0024 1B78     		ldrb	r3, [r3]
 1548 0026 DBB2     		uxtb	r3, r3
 1549 0028 23F00103 		bic	r3, r3, #1
 1550 002c DAB2     		uxtb	r2, r3
 1551 002e 034B     		ldr	r3, .L84
 1552 0030 1A70     		strb	r2, [r3]
 1553              	.L81:
1415:.\Generated_Source\PSoC5/USBUART.c ****     }
1416:.\Generated_Source\PSoC5/USBUART.c **** }
 1554              		.loc 1 1416 0
 1555 0032 0C37     		adds	r7, r7, #12
 1556              		.cfi_def_cfa_offset 4
 1557 0034 BD46     		mov	sp, r7
 1558              		.cfi_def_cfa_register 13
 1559              		@ sp needed
 1560 0036 5DF8047B 		ldr	r7, [sp], #4
 1561              		.cfi_restore 7
 1562              		.cfi_def_cfa_offset 0
 1563 003a 7047     		bx	lr
 1564              	.L85:
 1565              		.align	2
 1566              	.L84:
 1567 003c 00000000 		.word	USBUART_deviceStatus
 1568              		.cfi_endproc
 1569              	.LFE17:
 1570              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1571              		.section	.text.USBUART_VBusPresent,"ax",%progbits
 1572              		.align	2
 1573              		.global	USBUART_VBusPresent
 1574              		.thumb
 1575              		.thumb_func
 1576              		.type	USBUART_VBusPresent, %function
 1577              	USBUART_VBusPresent:
 1578              	.LFB18:
1417:.\Generated_Source\PSoC5/USBUART.c **** 
1418:.\Generated_Source\PSoC5/USBUART.c **** 
1419:.\Generated_Source\PSoC5/USBUART.c **** #if (USBUART_MON_VBUS == 1u)
1420:.\Generated_Source\PSoC5/USBUART.c **** 
1421:.\Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1422:.\Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
1423:.\Generated_Source\PSoC5/USBUART.c ****     ********************************************************************************
1424:.\Generated_Source\PSoC5/USBUART.c ****     *
1425:.\Generated_Source\PSoC5/USBUART.c ****     * Summary:
1426:.\Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for Self Powered Devices.
1427:.\Generated_Source\PSoC5/USBUART.c ****     *
1428:.\Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1429:.\Generated_Source\PSoC5/USBUART.c ****     *  None.
1430:.\Generated_Source\PSoC5/USBUART.c ****     *
1431:.\Generated_Source\PSoC5/USBUART.c ****     * Return:
1432:.\Generated_Source\PSoC5/USBUART.c ****     *  1 if VBUS is present, otherwise 0.
1433:.\Generated_Source\PSoC5/USBUART.c ****     *
1434:.\Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1435:.\Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
1436:.\Generated_Source\PSoC5/USBUART.c ****     {
 1579              		.loc 1 1436 0
 1580              		.cfi_startproc
 1581              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 54


 1582              		@ frame_needed = 1, uses_anonymous_args = 0
 1583              		@ link register save eliminated.
 1584 0000 80B4     		push	{r7}
 1585              		.cfi_def_cfa_offset 4
 1586              		.cfi_offset 7, -4
 1587 0002 00AF     		add	r7, sp, #0
 1588              		.cfi_def_cfa_register 7
1437:.\Generated_Source\PSoC5/USBUART.c ****         return((0u != (CY_GET_REG8(USBUART_VBUS_PS_PTR) & USBUART_VBUS_MASK)) ? 1u : 0u);
 1589              		.loc 1 1437 0
 1590 0004 074B     		ldr	r3, .L90
 1591 0006 1B78     		ldrb	r3, [r3]
 1592 0008 DBB2     		uxtb	r3, r3
 1593 000a DBB2     		uxtb	r3, r3
 1594 000c 5BB2     		sxtb	r3, r3
 1595 000e 002B     		cmp	r3, #0
 1596 0010 01DA     		bge	.L87
 1597              		.loc 1 1437 0 is_stmt 0 discriminator 1
 1598 0012 0123     		movs	r3, #1
 1599 0014 00E0     		b	.L88
 1600              	.L87:
 1601              		.loc 1 1437 0 discriminator 2
 1602 0016 0023     		movs	r3, #0
 1603              	.L88:
1438:.\Generated_Source\PSoC5/USBUART.c ****     }
 1604              		.loc 1 1438 0 is_stmt 1 discriminator 4
 1605 0018 1846     		mov	r0, r3
 1606 001a BD46     		mov	sp, r7
 1607              		.cfi_def_cfa_register 13
 1608              		@ sp needed
 1609 001c 5DF8047B 		ldr	r7, [sp], #4
 1610              		.cfi_restore 7
 1611              		.cfi_def_cfa_offset 0
 1612 0020 7047     		bx	lr
 1613              	.L91:
 1614 0022 00BF     		.align	2
 1615              	.L90:
 1616 0024 51510040 		.word	1073762641
 1617              		.cfi_endproc
 1618              	.LFE18:
 1619              		.size	USBUART_VBusPresent, .-USBUART_VBusPresent
 1620              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1621              		.align	2
 1622              		.global	USBUART_RWUEnabled
 1623              		.thumb
 1624              		.thumb_func
 1625              		.type	USBUART_RWUEnabled, %function
 1626              	USBUART_RWUEnabled:
 1627              	.LFB19:
1439:.\Generated_Source\PSoC5/USBUART.c **** 
1440:.\Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_MON_VBUS */
1441:.\Generated_Source\PSoC5/USBUART.c **** 
1442:.\Generated_Source\PSoC5/USBUART.c **** 
1443:.\Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1444:.\Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
1445:.\Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1446:.\Generated_Source\PSoC5/USBUART.c **** *
1447:.\Generated_Source\PSoC5/USBUART.c **** * Summary:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 55


1448:.\Generated_Source\PSoC5/USBUART.c **** *  Returns TRUE if Remote Wake Up is enabled, otherwise FALSE
1449:.\Generated_Source\PSoC5/USBUART.c **** *
1450:.\Generated_Source\PSoC5/USBUART.c **** * Parameters:
1451:.\Generated_Source\PSoC5/USBUART.c **** *   None.
1452:.\Generated_Source\PSoC5/USBUART.c **** *
1453:.\Generated_Source\PSoC5/USBUART.c **** * Return:
1454:.\Generated_Source\PSoC5/USBUART.c **** *  TRUE -  Remote Wake Up Enabled
1455:.\Generated_Source\PSoC5/USBUART.c **** *  FALSE - Remote Wake Up Disabled
1456:.\Generated_Source\PSoC5/USBUART.c **** *
1457:.\Generated_Source\PSoC5/USBUART.c **** * Global variables:
1458:.\Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
1459:.\Generated_Source\PSoC5/USBUART.c **** *
1460:.\Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1461:.\Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
1462:.\Generated_Source\PSoC5/USBUART.c **** {
 1628              		.loc 1 1462 0
 1629              		.cfi_startproc
 1630              		@ args = 0, pretend = 0, frame = 8
 1631              		@ frame_needed = 1, uses_anonymous_args = 0
 1632              		@ link register save eliminated.
 1633 0000 80B4     		push	{r7}
 1634              		.cfi_def_cfa_offset 4
 1635              		.cfi_offset 7, -4
 1636 0002 83B0     		sub	sp, sp, #12
 1637              		.cfi_def_cfa_offset 16
 1638 0004 00AF     		add	r7, sp, #0
 1639              		.cfi_def_cfa_register 7
1463:.\Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
 1640              		.loc 1 1463 0
 1641 0006 0023     		movs	r3, #0
 1642 0008 FB71     		strb	r3, [r7, #7]
1464:.\Generated_Source\PSoC5/USBUART.c ****     if((USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP) != 0u)
 1643              		.loc 1 1464 0
 1644 000a 084B     		ldr	r3, .L95
 1645 000c 1B78     		ldrb	r3, [r3]
 1646 000e DBB2     		uxtb	r3, r3
 1647 0010 03F00203 		and	r3, r3, #2
 1648 0014 002B     		cmp	r3, #0
 1649 0016 01D0     		beq	.L93
1465:.\Generated_Source\PSoC5/USBUART.c ****     {
1466:.\Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
 1650              		.loc 1 1466 0
 1651 0018 0123     		movs	r3, #1
 1652 001a FB71     		strb	r3, [r7, #7]
 1653              	.L93:
1467:.\Generated_Source\PSoC5/USBUART.c ****     }
1468:.\Generated_Source\PSoC5/USBUART.c **** 
1469:.\Generated_Source\PSoC5/USBUART.c ****     return(result);
 1654              		.loc 1 1469 0
 1655 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1470:.\Generated_Source\PSoC5/USBUART.c **** }
 1656              		.loc 1 1470 0
 1657 001e 1846     		mov	r0, r3
 1658 0020 0C37     		adds	r7, r7, #12
 1659              		.cfi_def_cfa_offset 4
 1660 0022 BD46     		mov	sp, r7
 1661              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 56


 1662              		@ sp needed
 1663 0024 5DF8047B 		ldr	r7, [sp], #4
 1664              		.cfi_restore 7
 1665              		.cfi_def_cfa_offset 0
 1666 0028 7047     		bx	lr
 1667              	.L96:
 1668 002a 00BF     		.align	2
 1669              	.L95:
 1670 002c 00000000 		.word	USBUART_deviceStatus
 1671              		.cfi_endproc
 1672              	.LFE19:
 1673              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1674              		.text
 1675              	.Letext0:
 1676              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 1677              		.file 3 ".\\Generated_Source\\PSoC5\\USBUART.h"
 1678              		.file 4 ".\\Generated_Source\\PSoC5\\USBUART_pvt.h"
 1679              		.section	.debug_info,"",%progbits
 1680              	.Ldebug_info0:
 1681 0000 E3050000 		.4byte	0x5e3
 1682 0004 0400     		.2byte	0x4
 1683 0006 00000000 		.4byte	.Ldebug_abbrev0
 1684 000a 04       		.byte	0x4
 1685 000b 01       		.uleb128 0x1
 1686 000c 77020000 		.4byte	.LASF70
 1687 0010 01       		.byte	0x1
 1688 0011 4D020000 		.4byte	.LASF71
 1689 0015 00040000 		.4byte	.LASF72
 1690 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1691 001d 00000000 		.4byte	0
 1692 0021 00000000 		.4byte	.Ldebug_line0
 1693 0025 02       		.uleb128 0x2
 1694 0026 01       		.byte	0x1
 1695 0027 06       		.byte	0x6
 1696 0028 C1000000 		.4byte	.LASF0
 1697 002c 02       		.uleb128 0x2
 1698 002d 01       		.byte	0x1
 1699 002e 08       		.byte	0x8
 1700 002f 46030000 		.4byte	.LASF1
 1701 0033 02       		.uleb128 0x2
 1702 0034 02       		.byte	0x2
 1703 0035 05       		.byte	0x5
 1704 0036 54030000 		.4byte	.LASF2
 1705 003a 02       		.uleb128 0x2
 1706 003b 02       		.byte	0x2
 1707 003c 07       		.byte	0x7
 1708 003d CA010000 		.4byte	.LASF3
 1709 0041 02       		.uleb128 0x2
 1710 0042 04       		.byte	0x4
 1711 0043 05       		.byte	0x5
 1712 0044 18010000 		.4byte	.LASF4
 1713 0048 02       		.uleb128 0x2
 1714 0049 04       		.byte	0x4
 1715 004a 07       		.byte	0x7
 1716 004b B8010000 		.4byte	.LASF5
 1717 004f 02       		.uleb128 0x2
 1718 0050 08       		.byte	0x8
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 57


 1719 0051 05       		.byte	0x5
 1720 0052 B3000000 		.4byte	.LASF6
 1721 0056 02       		.uleb128 0x2
 1722 0057 08       		.byte	0x8
 1723 0058 07       		.byte	0x7
 1724 0059 5E000000 		.4byte	.LASF7
 1725 005d 03       		.uleb128 0x3
 1726 005e 04       		.byte	0x4
 1727 005f 05       		.byte	0x5
 1728 0060 696E7400 		.ascii	"int\000"
 1729 0064 02       		.uleb128 0x2
 1730 0065 04       		.byte	0x4
 1731 0066 07       		.byte	0x7
 1732 0067 AB010000 		.4byte	.LASF8
 1733 006b 04       		.uleb128 0x4
 1734 006c 21010000 		.4byte	.LASF9
 1735 0070 02       		.byte	0x2
 1736 0071 C2       		.byte	0xc2
 1737 0072 2C000000 		.4byte	0x2c
 1738 0076 04       		.uleb128 0x4
 1739 0077 00000000 		.4byte	.LASF10
 1740 007b 02       		.byte	0x2
 1741 007c C3       		.byte	0xc3
 1742 007d 3A000000 		.4byte	0x3a
 1743 0081 04       		.uleb128 0x4
 1744 0082 82010000 		.4byte	.LASF11
 1745 0086 02       		.byte	0x2
 1746 0087 C4       		.byte	0xc4
 1747 0088 48000000 		.4byte	0x48
 1748 008c 02       		.uleb128 0x2
 1749 008d 04       		.byte	0x4
 1750 008e 04       		.byte	0x4
 1751 008f 05030000 		.4byte	.LASF12
 1752 0093 02       		.uleb128 0x2
 1753 0094 08       		.byte	0x8
 1754 0095 04       		.byte	0x4
 1755 0096 30010000 		.4byte	.LASF13
 1756 009a 02       		.uleb128 0x2
 1757 009b 01       		.byte	0x1
 1758 009c 08       		.byte	0x8
 1759 009d A2030000 		.4byte	.LASF14
 1760 00a1 05       		.uleb128 0x5
 1761 00a2 28030000 		.4byte	.LASF15
 1762 00a6 02       		.byte	0x2
 1763 00a7 6C01     		.2byte	0x16c
 1764 00a9 AD000000 		.4byte	0xad
 1765 00ad 06       		.uleb128 0x6
 1766 00ae 6B000000 		.4byte	0x6b
 1767 00b2 05       		.uleb128 0x5
 1768 00b3 1E020000 		.4byte	.LASF16
 1769 00b7 02       		.byte	0x2
 1770 00b8 6E01     		.2byte	0x16e
 1771 00ba BE000000 		.4byte	0xbe
 1772 00be 06       		.uleb128 0x6
 1773 00bf 81000000 		.4byte	0x81
 1774 00c3 02       		.uleb128 0x2
 1775 00c4 04       		.byte	0x4
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 58


 1776 00c5 07       		.byte	0x7
 1777 00c6 44020000 		.4byte	.LASF17
 1778 00ca 07       		.uleb128 0x7
 1779 00cb 0C       		.byte	0xc
 1780 00cc 03       		.byte	0x3
 1781 00cd 7A       		.byte	0x7a
 1782 00ce 3F010000 		.4byte	0x13f
 1783 00d2 08       		.uleb128 0x8
 1784 00d3 70020000 		.4byte	.LASF18
 1785 00d7 03       		.byte	0x3
 1786 00d8 7C       		.byte	0x7c
 1787 00d9 6B000000 		.4byte	0x6b
 1788 00dd 00       		.byte	0
 1789 00de 08       		.uleb128 0x8
 1790 00df 1D030000 		.4byte	.LASF19
 1791 00e3 03       		.byte	0x3
 1792 00e4 7D       		.byte	0x7d
 1793 00e5 6B000000 		.4byte	0x6b
 1794 00e9 01       		.byte	0x1
 1795 00ea 08       		.uleb128 0x8
 1796 00eb 3A020000 		.4byte	.LASF20
 1797 00ef 03       		.byte	0x3
 1798 00f0 7E       		.byte	0x7e
 1799 00f1 6B000000 		.4byte	0x6b
 1800 00f5 02       		.byte	0x2
 1801 00f6 08       		.uleb128 0x8
 1802 00f7 27010000 		.4byte	.LASF21
 1803 00fb 03       		.byte	0x3
 1804 00fc 7F       		.byte	0x7f
 1805 00fd 6B000000 		.4byte	0x6b
 1806 0101 03       		.byte	0x3
 1807 0102 08       		.uleb128 0x8
 1808 0103 75000000 		.4byte	.LASF22
 1809 0107 03       		.byte	0x3
 1810 0108 80       		.byte	0x80
 1811 0109 6B000000 		.4byte	0x6b
 1812 010d 04       		.byte	0x4
 1813 010e 08       		.uleb128 0x8
 1814 010f 8F010000 		.4byte	.LASF23
 1815 0113 03       		.byte	0x3
 1816 0114 81       		.byte	0x81
 1817 0115 6B000000 		.4byte	0x6b
 1818 0119 05       		.byte	0x5
 1819 011a 08       		.uleb128 0x8
 1820 011b E2030000 		.4byte	.LASF24
 1821 011f 03       		.byte	0x3
 1822 0120 82       		.byte	0x82
 1823 0121 76000000 		.4byte	0x76
 1824 0125 06       		.byte	0x6
 1825 0126 08       		.uleb128 0x8
 1826 0127 AC030000 		.4byte	.LASF25
 1827 012b 03       		.byte	0x3
 1828 012c 83       		.byte	0x83
 1829 012d 76000000 		.4byte	0x76
 1830 0131 08       		.byte	0x8
 1831 0132 08       		.uleb128 0x8
 1832 0133 14020000 		.4byte	.LASF26
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 59


 1833 0137 03       		.byte	0x3
 1834 0138 84       		.byte	0x84
 1835 0139 6B000000 		.4byte	0x6b
 1836 013d 0A       		.byte	0xa
 1837 013e 00       		.byte	0
 1838 013f 04       		.uleb128 0x4
 1839 0140 CB030000 		.4byte	.LASF27
 1840 0144 03       		.byte	0x3
 1841 0145 85       		.byte	0x85
 1842 0146 CA000000 		.4byte	0xca
 1843 014a 09       		.uleb128 0x9
 1844 014b DD010000 		.4byte	.LASF30
 1845 014f 01       		.byte	0x1
 1846 0150 81       		.byte	0x81
 1847 0151 00000000 		.4byte	.LFB0
 1848 0155 38000000 		.4byte	.LFE0-.LFB0
 1849 0159 01       		.uleb128 0x1
 1850 015a 9C       		.byte	0x9c
 1851 015b 7C010000 		.4byte	0x17c
 1852 015f 0A       		.uleb128 0xa
 1853 0160 93000000 		.4byte	.LASF28
 1854 0164 01       		.byte	0x1
 1855 0165 81       		.byte	0x81
 1856 0166 6B000000 		.4byte	0x6b
 1857 016a 02       		.uleb128 0x2
 1858 016b 91       		.byte	0x91
 1859 016c 77       		.sleb128 -9
 1860 016d 0A       		.uleb128 0xa
 1861 016e A7030000 		.4byte	.LASF29
 1862 0172 01       		.byte	0x1
 1863 0173 81       		.byte	0x81
 1864 0174 6B000000 		.4byte	0x6b
 1865 0178 02       		.uleb128 0x2
 1866 0179 91       		.byte	0x91
 1867 017a 76       		.sleb128 -10
 1868 017b 00       		.byte	0
 1869 017c 09       		.uleb128 0x9
 1870 017d 07020000 		.4byte	.LASF31
 1871 0181 01       		.byte	0x1
 1872 0182 9E       		.byte	0x9e
 1873 0183 00000000 		.4byte	.LFB1
 1874 0187 8C010000 		.4byte	.LFE1-.LFB1
 1875 018b 01       		.uleb128 0x1
 1876 018c 9C       		.byte	0x9c
 1877 018d A0010000 		.4byte	0x1a0
 1878 0191 0B       		.uleb128 0xb
 1879 0192 83040000 		.4byte	.LASF35
 1880 0196 01       		.byte	0x1
 1881 0197 A0       		.byte	0xa0
 1882 0198 6B000000 		.4byte	0x6b
 1883 019c 02       		.uleb128 0x2
 1884 019d 91       		.byte	0x91
 1885 019e 77       		.sleb128 -9
 1886 019f 00       		.byte	0
 1887 01a0 0C       		.uleb128 0xc
 1888 01a1 94040000 		.4byte	.LASF32
 1889 01a5 01       		.byte	0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 60


 1890 01a6 5C01     		.2byte	0x15c
 1891 01a8 00000000 		.4byte	.LFB2
 1892 01ac E0000000 		.4byte	.LFE2-.LFB2
 1893 01b0 01       		.uleb128 0x1
 1894 01b1 9C       		.byte	0x9c
 1895 01b2 D5010000 		.4byte	0x1d5
 1896 01b6 0D       		.uleb128 0xd
 1897 01b7 93000000 		.4byte	.LASF28
 1898 01bb 01       		.byte	0x1
 1899 01bc 5C01     		.2byte	0x15c
 1900 01be 6B000000 		.4byte	0x6b
 1901 01c2 02       		.uleb128 0x2
 1902 01c3 91       		.byte	0x91
 1903 01c4 77       		.sleb128 -9
 1904 01c5 0D       		.uleb128 0xd
 1905 01c6 A7030000 		.4byte	.LASF29
 1906 01ca 01       		.byte	0x1
 1907 01cb 5C01     		.2byte	0x15c
 1908 01cd 6B000000 		.4byte	0x6b
 1909 01d1 02       		.uleb128 0x2
 1910 01d2 91       		.byte	0x91
 1911 01d3 76       		.sleb128 -10
 1912 01d4 00       		.byte	0
 1913 01d5 0E       		.uleb128 0xe
 1914 01d6 E9040000 		.4byte	.LASF33
 1915 01da 01       		.byte	0x1
 1916 01db F201     		.2byte	0x1f2
 1917 01dd 00000000 		.4byte	.LFB3
 1918 01e1 68000000 		.4byte	.LFE3-.LFB3
 1919 01e5 01       		.uleb128 0x1
 1920 01e6 9C       		.byte	0x9c
 1921 01e7 0E       		.uleb128 0xe
 1922 01e8 16000000 		.4byte	.LASF34
 1923 01ec 01       		.byte	0x1
 1924 01ed 3402     		.2byte	0x234
 1925 01ef 00000000 		.4byte	.LFB4
 1926 01f3 C4000000 		.4byte	.LFE4-.LFB4
 1927 01f7 01       		.uleb128 0x1
 1928 01f8 9C       		.byte	0x9c
 1929 01f9 0F       		.uleb128 0xf
 1930 01fa 02010000 		.4byte	.LASF36
 1931 01fe 01       		.byte	0x1
 1932 01ff 7B02     		.2byte	0x27b
 1933 0201 6B000000 		.4byte	0x6b
 1934 0205 00000000 		.4byte	.LFB5
 1935 0209 34000000 		.4byte	.LFE5-.LFB5
 1936 020d 01       		.uleb128 0x1
 1937 020e 9C       		.byte	0x9c
 1938 020f 21020000 		.4byte	0x221
 1939 0213 10       		.uleb128 0x10
 1940 0214 7200     		.ascii	"r\000"
 1941 0216 01       		.byte	0x1
 1942 0217 7D02     		.2byte	0x27d
 1943 0219 6B000000 		.4byte	0x6b
 1944 021d 02       		.uleb128 0x2
 1945 021e 91       		.byte	0x91
 1946 021f 77       		.sleb128 -9
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 61


 1947 0220 00       		.byte	0
 1948 0221 11       		.uleb128 0x11
 1949 0222 9A000000 		.4byte	.LASF56
 1950 0226 01       		.byte	0x1
 1951 0227 9402     		.2byte	0x294
 1952 0229 6B000000 		.4byte	0x6b
 1953 022d 00000000 		.4byte	.LFB6
 1954 0231 18000000 		.4byte	.LFE6-.LFB6
 1955 0235 01       		.uleb128 0x1
 1956 0236 9C       		.byte	0x9c
 1957 0237 0F       		.uleb128 0xf
 1958 0238 CA040000 		.4byte	.LASF37
 1959 023c 01       		.byte	0x1
 1960 023d AE02     		.2byte	0x2ae
 1961 023f 6B000000 		.4byte	0x6b
 1962 0243 00000000 		.4byte	.LFB7
 1963 0247 34000000 		.4byte	.LFE7-.LFB7
 1964 024b 01       		.uleb128 0x1
 1965 024c 9C       		.byte	0x9c
 1966 024d 61020000 		.4byte	0x261
 1967 0251 10       		.uleb128 0x10
 1968 0252 72657300 		.ascii	"res\000"
 1969 0256 01       		.byte	0x1
 1970 0257 B002     		.2byte	0x2b0
 1971 0259 6B000000 		.4byte	0x6b
 1972 025d 02       		.uleb128 0x2
 1973 025e 91       		.byte	0x91
 1974 025f 77       		.sleb128 -9
 1975 0260 00       		.byte	0
 1976 0261 0F       		.uleb128 0xf
 1977 0262 EB010000 		.4byte	.LASF38
 1978 0266 01       		.byte	0x1
 1979 0267 CA02     		.2byte	0x2ca
 1980 0269 6B000000 		.4byte	0x6b
 1981 026d 00000000 		.4byte	.LFB8
 1982 0271 24000000 		.4byte	.LFE8-.LFB8
 1983 0275 01       		.uleb128 0x1
 1984 0276 9C       		.byte	0x9c
 1985 0277 8B020000 		.4byte	0x28b
 1986 027b 0D       		.uleb128 0xd
 1987 027c 7A000000 		.4byte	.LASF39
 1988 0280 01       		.byte	0x1
 1989 0281 CA02     		.2byte	0x2ca
 1990 0283 6B000000 		.4byte	0x6b
 1991 0287 02       		.uleb128 0x2
 1992 0288 91       		.byte	0x91
 1993 0289 77       		.sleb128 -9
 1994 028a 00       		.byte	0
 1995 028b 0F       		.uleb128 0xf
 1996 028c 5E030000 		.4byte	.LASF40
 1997 0290 01       		.byte	0x1
 1998 0291 DF02     		.2byte	0x2df
 1999 0293 6B000000 		.4byte	0x6b
 2000 0297 00000000 		.4byte	.LFB9
 2001 029b 2C000000 		.4byte	.LFE9-.LFB9
 2002 029f 01       		.uleb128 0x1
 2003 02a0 9C       		.byte	0x9c
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 62


 2004 02a1 B5020000 		.4byte	0x2b5
 2005 02a5 0D       		.uleb128 0xd
 2006 02a6 8A000000 		.4byte	.LASF41
 2007 02aa 01       		.byte	0x1
 2008 02ab DF02     		.2byte	0x2df
 2009 02ad 6B000000 		.4byte	0x6b
 2010 02b1 02       		.uleb128 0x2
 2011 02b2 91       		.byte	0x91
 2012 02b3 77       		.sleb128 -9
 2013 02b4 00       		.byte	0
 2014 02b5 0F       		.uleb128 0xf
 2015 02b6 ED030000 		.4byte	.LASF42
 2016 02ba 01       		.byte	0x1
 2017 02bb F802     		.2byte	0x2f8
 2018 02bd 76000000 		.4byte	0x76
 2019 02c1 00000000 		.4byte	.LFB10
 2020 02c5 6C000000 		.4byte	.LFE10-.LFB10
 2021 02c9 01       		.uleb128 0x1
 2022 02ca 9C       		.byte	0x9c
 2023 02cb FC020000 		.4byte	0x2fc
 2024 02cf 0D       		.uleb128 0xd
 2025 02d0 8A000000 		.4byte	.LASF41
 2026 02d4 01       		.byte	0x1
 2027 02d5 F802     		.2byte	0x2f8
 2028 02d7 6B000000 		.4byte	0x6b
 2029 02db 02       		.uleb128 0x2
 2030 02dc 91       		.byte	0x91
 2031 02dd 6F       		.sleb128 -17
 2032 02de 10       		.uleb128 0x10
 2033 02df 726900   		.ascii	"ri\000"
 2034 02e2 01       		.byte	0x1
 2035 02e3 FA02     		.2byte	0x2fa
 2036 02e5 6B000000 		.4byte	0x6b
 2037 02e9 02       		.uleb128 0x2
 2038 02ea 91       		.byte	0x91
 2039 02eb 75       		.sleb128 -11
 2040 02ec 12       		.uleb128 0x12
 2041 02ed 34050000 		.4byte	.LASF43
 2042 02f1 01       		.byte	0x1
 2043 02f2 FB02     		.2byte	0x2fb
 2044 02f4 76000000 		.4byte	0x76
 2045 02f8 02       		.uleb128 0x2
 2046 02f9 91       		.byte	0x91
 2047 02fa 76       		.sleb128 -10
 2048 02fb 00       		.byte	0
 2049 02fc 13       		.uleb128 0x13
 2050 02fd 4D000000 		.4byte	.LASF44
 2051 0301 01       		.byte	0x1
 2052 0302 F103     		.2byte	0x3f1
 2053 0304 00000000 		.4byte	.LFB11
 2054 0308 08010000 		.4byte	.LFE11-.LFB11
 2055 030c 01       		.uleb128 0x1
 2056 030d 9C       		.byte	0x9c
 2057 030e 68030000 		.4byte	0x368
 2058 0312 0D       		.uleb128 0xd
 2059 0313 8A000000 		.4byte	.LASF41
 2060 0317 01       		.byte	0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 63


 2061 0318 F103     		.2byte	0x3f1
 2062 031a 6B000000 		.4byte	0x6b
 2063 031e 02       		.uleb128 0x2
 2064 031f 91       		.byte	0x91
 2065 0320 6F       		.sleb128 -17
 2066 0321 0D       		.uleb128 0xd
 2067 0322 89010000 		.4byte	.LASF45
 2068 0326 01       		.byte	0x1
 2069 0327 F103     		.2byte	0x3f1
 2070 0329 68030000 		.4byte	0x368
 2071 032d 02       		.uleb128 0x2
 2072 032e 91       		.byte	0x91
 2073 032f 68       		.sleb128 -24
 2074 0330 0D       		.uleb128 0xd
 2075 0331 9B030000 		.4byte	.LASF46
 2076 0335 01       		.byte	0x1
 2077 0336 F103     		.2byte	0x3f1
 2078 0338 76000000 		.4byte	0x76
 2079 033c 02       		.uleb128 0x2
 2080 033d 91       		.byte	0x91
 2081 033e 6C       		.sleb128 -20
 2082 033f 10       		.uleb128 0x10
 2083 0340 726900   		.ascii	"ri\000"
 2084 0343 01       		.byte	0x1
 2085 0344 F403     		.2byte	0x3f4
 2086 0346 6B000000 		.4byte	0x6b
 2087 034a 02       		.uleb128 0x2
 2088 034b 91       		.byte	0x91
 2089 034c 75       		.sleb128 -11
 2090 034d 10       		.uleb128 0x10
 2091 034e 7000     		.ascii	"p\000"
 2092 0350 01       		.byte	0x1
 2093 0351 F503     		.2byte	0x3f5
 2094 0353 73030000 		.4byte	0x373
 2095 0357 02       		.uleb128 0x2
 2096 0358 91       		.byte	0x91
 2097 0359 70       		.sleb128 -16
 2098 035a 10       		.uleb128 0x10
 2099 035b 6900     		.ascii	"i\000"
 2100 035d 01       		.byte	0x1
 2101 035e F703     		.2byte	0x3f7
 2102 0360 76000000 		.4byte	0x76
 2103 0364 02       		.uleb128 0x2
 2104 0365 91       		.byte	0x91
 2105 0366 76       		.sleb128 -10
 2106 0367 00       		.byte	0
 2107 0368 14       		.uleb128 0x14
 2108 0369 04       		.byte	0x4
 2109 036a 6E030000 		.4byte	0x36e
 2110 036e 15       		.uleb128 0x15
 2111 036f 6B000000 		.4byte	0x6b
 2112 0373 14       		.uleb128 0x14
 2113 0374 04       		.byte	0x4
 2114 0375 A1000000 		.4byte	0xa1
 2115 0379 16       		.uleb128 0x16
 2116 037a 0B030000 		.4byte	.LASF47
 2117 037e 01       		.byte	0x1
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 64


 2118 037f 9C04     		.2byte	0x49c
 2119 0381 76000000 		.4byte	0x76
 2120 0385 00000000 		.4byte	.LFB12
 2121 0389 8C000000 		.4byte	.LFE12-.LFB12
 2122 038d 01       		.uleb128 0x1
 2123 038e 9C       		.byte	0x9c
 2124 038f F8030000 		.4byte	0x3f8
 2125 0393 0D       		.uleb128 0xd
 2126 0394 8A000000 		.4byte	.LASF41
 2127 0398 01       		.byte	0x1
 2128 0399 9C04     		.2byte	0x49c
 2129 039b 6B000000 		.4byte	0x6b
 2130 039f 02       		.uleb128 0x2
 2131 03a0 91       		.byte	0x91
 2132 03a1 67       		.sleb128 -25
 2133 03a2 0D       		.uleb128 0xd
 2134 03a3 89010000 		.4byte	.LASF45
 2135 03a7 01       		.byte	0x1
 2136 03a8 9C04     		.2byte	0x49c
 2137 03aa F8030000 		.4byte	0x3f8
 2138 03ae 02       		.uleb128 0x2
 2139 03af 91       		.byte	0x91
 2140 03b0 60       		.sleb128 -32
 2141 03b1 0D       		.uleb128 0xd
 2142 03b2 9B030000 		.4byte	.LASF46
 2143 03b6 01       		.byte	0x1
 2144 03b7 9C04     		.2byte	0x49c
 2145 03b9 76000000 		.4byte	0x76
 2146 03bd 02       		.uleb128 0x2
 2147 03be 91       		.byte	0x91
 2148 03bf 64       		.sleb128 -28
 2149 03c0 10       		.uleb128 0x10
 2150 03c1 726900   		.ascii	"ri\000"
 2151 03c4 01       		.byte	0x1
 2152 03c5 9F04     		.2byte	0x49f
 2153 03c7 6B000000 		.4byte	0x6b
 2154 03cb 02       		.uleb128 0x2
 2155 03cc 91       		.byte	0x91
 2156 03cd 75       		.sleb128 -11
 2157 03ce 10       		.uleb128 0x10
 2158 03cf 7000     		.ascii	"p\000"
 2159 03d1 01       		.byte	0x1
 2160 03d2 A004     		.2byte	0x4a0
 2161 03d4 73030000 		.4byte	0x373
 2162 03d8 02       		.uleb128 0x2
 2163 03d9 91       		.byte	0x91
 2164 03da 70       		.sleb128 -16
 2165 03db 10       		.uleb128 0x10
 2166 03dc 6900     		.ascii	"i\000"
 2167 03de 01       		.byte	0x1
 2168 03df A204     		.2byte	0x4a2
 2169 03e1 76000000 		.4byte	0x76
 2170 03e5 02       		.uleb128 0x2
 2171 03e6 91       		.byte	0x91
 2172 03e7 76       		.sleb128 -10
 2173 03e8 12       		.uleb128 0x12
 2174 03e9 C0040000 		.4byte	.LASF48
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 65


 2175 03ed 01       		.byte	0x1
 2176 03ee A504     		.2byte	0x4a5
 2177 03f0 76000000 		.4byte	0x76
 2178 03f4 02       		.uleb128 0x2
 2179 03f5 91       		.byte	0x91
 2180 03f6 6E       		.sleb128 -18
 2181 03f7 00       		.byte	0
 2182 03f8 14       		.uleb128 0x14
 2183 03f9 04       		.byte	0x4
 2184 03fa 6B000000 		.4byte	0x6b
 2185 03fe 13       		.uleb128 0x13
 2186 03ff CD000000 		.4byte	.LASF49
 2187 0403 01       		.byte	0x1
 2188 0404 0705     		.2byte	0x507
 2189 0406 00000000 		.4byte	.LFB13
 2190 040a 60000000 		.4byte	.LFE13-.LFB13
 2191 040e 01       		.uleb128 0x1
 2192 040f 9C       		.byte	0x9c
 2193 0410 32040000 		.4byte	0x432
 2194 0414 0D       		.uleb128 0xd
 2195 0415 8A000000 		.4byte	.LASF41
 2196 0419 01       		.byte	0x1
 2197 041a 0705     		.2byte	0x507
 2198 041c 6B000000 		.4byte	0x6b
 2199 0420 02       		.uleb128 0x2
 2200 0421 91       		.byte	0x91
 2201 0422 6F       		.sleb128 -17
 2202 0423 10       		.uleb128 0x10
 2203 0424 726900   		.ascii	"ri\000"
 2204 0427 01       		.byte	0x1
 2205 0428 0905     		.2byte	0x509
 2206 042a 6B000000 		.4byte	0x6b
 2207 042e 02       		.uleb128 0x2
 2208 042f 91       		.byte	0x91
 2209 0430 77       		.sleb128 -9
 2210 0431 00       		.byte	0
 2211 0432 13       		.uleb128 0x13
 2212 0433 71030000 		.4byte	.LASF50
 2213 0437 01       		.byte	0x1
 2214 0438 2505     		.2byte	0x525
 2215 043a 00000000 		.4byte	.LFB14
 2216 043e 38000000 		.4byte	.LFE14-.LFB14
 2217 0442 01       		.uleb128 0x1
 2218 0443 9C       		.byte	0x9c
 2219 0444 66040000 		.4byte	0x466
 2220 0448 0D       		.uleb128 0xd
 2221 0449 8A000000 		.4byte	.LASF41
 2222 044d 01       		.byte	0x1
 2223 044e 2505     		.2byte	0x525
 2224 0450 6B000000 		.4byte	0x6b
 2225 0454 02       		.uleb128 0x2
 2226 0455 91       		.byte	0x91
 2227 0456 6F       		.sleb128 -17
 2228 0457 10       		.uleb128 0x10
 2229 0458 726900   		.ascii	"ri\000"
 2230 045b 01       		.byte	0x1
 2231 045c 2705     		.2byte	0x527
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 66


 2232 045e 6B000000 		.4byte	0x6b
 2233 0462 02       		.uleb128 0x2
 2234 0463 91       		.byte	0x91
 2235 0464 77       		.sleb128 -9
 2236 0465 00       		.byte	0
 2237 0466 13       		.uleb128 0x13
 2238 0467 86030000 		.4byte	.LASF51
 2239 046b 01       		.byte	0x1
 2240 046c 4405     		.2byte	0x544
 2241 046e 00000000 		.4byte	.LFB15
 2242 0472 20000000 		.4byte	.LFE15-.LFB15
 2243 0476 01       		.uleb128 0x1
 2244 0477 9C       		.byte	0x9c
 2245 0478 8C040000 		.4byte	0x48c
 2246 047c 0D       		.uleb128 0xd
 2247 047d 94030000 		.4byte	.LASF52
 2248 0481 01       		.byte	0x1
 2249 0482 4405     		.2byte	0x544
 2250 0484 6B000000 		.4byte	0x6b
 2251 0488 02       		.uleb128 0x2
 2252 0489 91       		.byte	0x91
 2253 048a 77       		.sleb128 -9
 2254 048b 00       		.byte	0
 2255 048c 0F       		.uleb128 0xf
 2256 048d E1000000 		.4byte	.LASF53
 2257 0491 01       		.byte	0x1
 2258 0492 5905     		.2byte	0x559
 2259 0494 6B000000 		.4byte	0x6b
 2260 0498 00000000 		.4byte	.LFB16
 2261 049c 48000000 		.4byte	.LFE16-.LFB16
 2262 04a0 01       		.uleb128 0x1
 2263 04a1 9C       		.byte	0x9c
 2264 04a2 D2040000 		.4byte	0x4d2
 2265 04a6 0D       		.uleb128 0xd
 2266 04a7 8A000000 		.4byte	.LASF41
 2267 04ab 01       		.byte	0x1
 2268 04ac 5905     		.2byte	0x559
 2269 04ae 6B000000 		.4byte	0x6b
 2270 04b2 02       		.uleb128 0x2
 2271 04b3 91       		.byte	0x91
 2272 04b4 6F       		.sleb128 -17
 2273 04b5 10       		.uleb128 0x10
 2274 04b6 726900   		.ascii	"ri\000"
 2275 04b9 01       		.byte	0x1
 2276 04ba 5B05     		.2byte	0x55b
 2277 04bc 6B000000 		.4byte	0x6b
 2278 04c0 02       		.uleb128 0x2
 2279 04c1 91       		.byte	0x91
 2280 04c2 76       		.sleb128 -10
 2281 04c3 10       		.uleb128 0x10
 2282 04c4 637200   		.ascii	"cr\000"
 2283 04c7 01       		.byte	0x1
 2284 04c8 5C05     		.2byte	0x55c
 2285 04ca 6B000000 		.4byte	0x6b
 2286 04ce 02       		.uleb128 0x2
 2287 04cf 91       		.byte	0x91
 2288 04d0 77       		.sleb128 -9
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 67


 2289 04d1 00       		.byte	0
 2290 04d2 13       		.uleb128 0x13
 2291 04d3 43010000 		.4byte	.LASF54
 2292 04d7 01       		.byte	0x1
 2293 04d8 7E05     		.2byte	0x57e
 2294 04da 00000000 		.4byte	.LFB17
 2295 04de 40000000 		.4byte	.LFE17-.LFB17
 2296 04e2 01       		.uleb128 0x1
 2297 04e3 9C       		.byte	0x9c
 2298 04e4 F8040000 		.4byte	0x4f8
 2299 04e8 0D       		.uleb128 0xd
 2300 04e9 37010000 		.4byte	.LASF55
 2301 04ed 01       		.byte	0x1
 2302 04ee 7E05     		.2byte	0x57e
 2303 04f0 6B000000 		.4byte	0x6b
 2304 04f4 02       		.uleb128 0x2
 2305 04f5 91       		.byte	0x91
 2306 04f6 77       		.sleb128 -9
 2307 04f7 00       		.byte	0
 2308 04f8 11       		.uleb128 0x11
 2309 04f9 B7030000 		.4byte	.LASF57
 2310 04fd 01       		.byte	0x1
 2311 04fe 9B05     		.2byte	0x59b
 2312 0500 6B000000 		.4byte	0x6b
 2313 0504 00000000 		.4byte	.LFB18
 2314 0508 28000000 		.4byte	.LFE18-.LFB18
 2315 050c 01       		.uleb128 0x1
 2316 050d 9C       		.byte	0x9c
 2317 050e 0F       		.uleb128 0xf
 2318 050f 23000000 		.4byte	.LASF58
 2319 0513 01       		.byte	0x1
 2320 0514 B505     		.2byte	0x5b5
 2321 0516 6B000000 		.4byte	0x6b
 2322 051a 00000000 		.4byte	.LFB19
 2323 051e 30000000 		.4byte	.LFE19-.LFB19
 2324 0522 01       		.uleb128 0x1
 2325 0523 9C       		.byte	0x9c
 2326 0524 38050000 		.4byte	0x538
 2327 0528 12       		.uleb128 0x12
 2328 0529 34050000 		.4byte	.LASF43
 2329 052d 01       		.byte	0x1
 2330 052e B705     		.2byte	0x5b7
 2331 0530 6B000000 		.4byte	0x6b
 2332 0534 02       		.uleb128 0x2
 2333 0535 91       		.byte	0x91
 2334 0536 77       		.sleb128 -9
 2335 0537 00       		.byte	0
 2336 0538 17       		.uleb128 0x17
 2337 0539 5A010000 		.4byte	.LASF59
 2338 053d 01       		.byte	0x1
 2339 053e 3B       		.byte	0x3b
 2340 053f 6B000000 		.4byte	0x6b
 2341 0543 05       		.uleb128 0x5
 2342 0544 03       		.byte	0x3
 2343 0545 00000000 		.4byte	USBUART_initVar
 2344 0549 18       		.uleb128 0x18
 2345 054a 07000000 		.4byte	.LASF60
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 68


 2346 054e 03       		.byte	0x3
 2347 054f 4C02     		.2byte	0x24c
 2348 0551 AD000000 		.4byte	0xad
 2349 0555 18       		.uleb128 0x18
 2350 0556 01050000 		.4byte	.LASF61
 2351 055a 03       		.byte	0x3
 2352 055b 4D02     		.2byte	0x24d
 2353 055d AD000000 		.4byte	0xad
 2354 0561 18       		.uleb128 0x18
 2355 0562 AA040000 		.4byte	.LASF62
 2356 0566 03       		.byte	0x3
 2357 0567 4E02     		.2byte	0x24e
 2358 0569 AD000000 		.4byte	0xad
 2359 056d 18       		.uleb128 0x18
 2360 056e 17050000 		.4byte	.LASF63
 2361 0572 03       		.byte	0x3
 2362 0573 4F02     		.2byte	0x24f
 2363 0575 AD000000 		.4byte	0xad
 2364 0579 18       		.uleb128 0x18
 2365 057a 96010000 		.4byte	.LASF64
 2366 057e 03       		.byte	0x3
 2367 057f 5002     		.2byte	0x250
 2368 0581 AD000000 		.4byte	0xad
 2369 0585 19       		.uleb128 0x19
 2370 0586 6A010000 		.4byte	.LASF65
 2371 058a 04       		.byte	0x4
 2372 058b 2D       		.byte	0x2d
 2373 058c AD000000 		.4byte	0xad
 2374 0590 1A       		.uleb128 0x1a
 2375 0591 6B000000 		.4byte	0x6b
 2376 0595 A0050000 		.4byte	0x5a0
 2377 0599 1B       		.uleb128 0x1b
 2378 059a C3000000 		.4byte	0xc3
 2379 059e 01       		.byte	0x1
 2380 059f 00       		.byte	0
 2381 05a0 19       		.uleb128 0x19
 2382 05a1 2D030000 		.4byte	.LASF66
 2383 05a5 04       		.byte	0x4
 2384 05a6 2E       		.byte	0x2e
 2385 05a7 AB050000 		.4byte	0x5ab
 2386 05ab 06       		.uleb128 0x6
 2387 05ac 90050000 		.4byte	0x590
 2388 05b0 19       		.uleb128 0x19
 2389 05b1 24020000 		.4byte	.LASF67
 2390 05b5 04       		.byte	0x4
 2391 05b6 30       		.byte	0x30
 2392 05b7 AD000000 		.4byte	0xad
 2393 05bb 1A       		.uleb128 0x1a
 2394 05bc 3F010000 		.4byte	0x13f
 2395 05c0 CB050000 		.4byte	0x5cb
 2396 05c4 1B       		.uleb128 0x1b
 2397 05c5 C3000000 		.4byte	0xc3
 2398 05c9 08       		.byte	0x8
 2399 05ca 00       		.byte	0
 2400 05cb 19       		.uleb128 0x19
 2401 05cc F7000000 		.4byte	.LASF68
 2402 05d0 04       		.byte	0x4
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 69


 2403 05d1 34       		.byte	0x34
 2404 05d2 D6050000 		.4byte	0x5d6
 2405 05d6 06       		.uleb128 0x6
 2406 05d7 BB050000 		.4byte	0x5bb
 2407 05db 19       		.uleb128 0x19
 2408 05dc 36000000 		.4byte	.LASF69
 2409 05e0 04       		.byte	0x4
 2410 05e1 44       		.byte	0x44
 2411 05e2 AD000000 		.4byte	0xad
 2412 05e6 00       		.byte	0
 2413              		.section	.debug_abbrev,"",%progbits
 2414              	.Ldebug_abbrev0:
 2415 0000 01       		.uleb128 0x1
 2416 0001 11       		.uleb128 0x11
 2417 0002 01       		.byte	0x1
 2418 0003 25       		.uleb128 0x25
 2419 0004 0E       		.uleb128 0xe
 2420 0005 13       		.uleb128 0x13
 2421 0006 0B       		.uleb128 0xb
 2422 0007 03       		.uleb128 0x3
 2423 0008 0E       		.uleb128 0xe
 2424 0009 1B       		.uleb128 0x1b
 2425 000a 0E       		.uleb128 0xe
 2426 000b 55       		.uleb128 0x55
 2427 000c 17       		.uleb128 0x17
 2428 000d 11       		.uleb128 0x11
 2429 000e 01       		.uleb128 0x1
 2430 000f 10       		.uleb128 0x10
 2431 0010 17       		.uleb128 0x17
 2432 0011 00       		.byte	0
 2433 0012 00       		.byte	0
 2434 0013 02       		.uleb128 0x2
 2435 0014 24       		.uleb128 0x24
 2436 0015 00       		.byte	0
 2437 0016 0B       		.uleb128 0xb
 2438 0017 0B       		.uleb128 0xb
 2439 0018 3E       		.uleb128 0x3e
 2440 0019 0B       		.uleb128 0xb
 2441 001a 03       		.uleb128 0x3
 2442 001b 0E       		.uleb128 0xe
 2443 001c 00       		.byte	0
 2444 001d 00       		.byte	0
 2445 001e 03       		.uleb128 0x3
 2446 001f 24       		.uleb128 0x24
 2447 0020 00       		.byte	0
 2448 0021 0B       		.uleb128 0xb
 2449 0022 0B       		.uleb128 0xb
 2450 0023 3E       		.uleb128 0x3e
 2451 0024 0B       		.uleb128 0xb
 2452 0025 03       		.uleb128 0x3
 2453 0026 08       		.uleb128 0x8
 2454 0027 00       		.byte	0
 2455 0028 00       		.byte	0
 2456 0029 04       		.uleb128 0x4
 2457 002a 16       		.uleb128 0x16
 2458 002b 00       		.byte	0
 2459 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 70


 2460 002d 0E       		.uleb128 0xe
 2461 002e 3A       		.uleb128 0x3a
 2462 002f 0B       		.uleb128 0xb
 2463 0030 3B       		.uleb128 0x3b
 2464 0031 0B       		.uleb128 0xb
 2465 0032 49       		.uleb128 0x49
 2466 0033 13       		.uleb128 0x13
 2467 0034 00       		.byte	0
 2468 0035 00       		.byte	0
 2469 0036 05       		.uleb128 0x5
 2470 0037 16       		.uleb128 0x16
 2471 0038 00       		.byte	0
 2472 0039 03       		.uleb128 0x3
 2473 003a 0E       		.uleb128 0xe
 2474 003b 3A       		.uleb128 0x3a
 2475 003c 0B       		.uleb128 0xb
 2476 003d 3B       		.uleb128 0x3b
 2477 003e 05       		.uleb128 0x5
 2478 003f 49       		.uleb128 0x49
 2479 0040 13       		.uleb128 0x13
 2480 0041 00       		.byte	0
 2481 0042 00       		.byte	0
 2482 0043 06       		.uleb128 0x6
 2483 0044 35       		.uleb128 0x35
 2484 0045 00       		.byte	0
 2485 0046 49       		.uleb128 0x49
 2486 0047 13       		.uleb128 0x13
 2487 0048 00       		.byte	0
 2488 0049 00       		.byte	0
 2489 004a 07       		.uleb128 0x7
 2490 004b 13       		.uleb128 0x13
 2491 004c 01       		.byte	0x1
 2492 004d 0B       		.uleb128 0xb
 2493 004e 0B       		.uleb128 0xb
 2494 004f 3A       		.uleb128 0x3a
 2495 0050 0B       		.uleb128 0xb
 2496 0051 3B       		.uleb128 0x3b
 2497 0052 0B       		.uleb128 0xb
 2498 0053 01       		.uleb128 0x1
 2499 0054 13       		.uleb128 0x13
 2500 0055 00       		.byte	0
 2501 0056 00       		.byte	0
 2502 0057 08       		.uleb128 0x8
 2503 0058 0D       		.uleb128 0xd
 2504 0059 00       		.byte	0
 2505 005a 03       		.uleb128 0x3
 2506 005b 0E       		.uleb128 0xe
 2507 005c 3A       		.uleb128 0x3a
 2508 005d 0B       		.uleb128 0xb
 2509 005e 3B       		.uleb128 0x3b
 2510 005f 0B       		.uleb128 0xb
 2511 0060 49       		.uleb128 0x49
 2512 0061 13       		.uleb128 0x13
 2513 0062 38       		.uleb128 0x38
 2514 0063 0B       		.uleb128 0xb
 2515 0064 00       		.byte	0
 2516 0065 00       		.byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 71


 2517 0066 09       		.uleb128 0x9
 2518 0067 2E       		.uleb128 0x2e
 2519 0068 01       		.byte	0x1
 2520 0069 3F       		.uleb128 0x3f
 2521 006a 19       		.uleb128 0x19
 2522 006b 03       		.uleb128 0x3
 2523 006c 0E       		.uleb128 0xe
 2524 006d 3A       		.uleb128 0x3a
 2525 006e 0B       		.uleb128 0xb
 2526 006f 3B       		.uleb128 0x3b
 2527 0070 0B       		.uleb128 0xb
 2528 0071 27       		.uleb128 0x27
 2529 0072 19       		.uleb128 0x19
 2530 0073 11       		.uleb128 0x11
 2531 0074 01       		.uleb128 0x1
 2532 0075 12       		.uleb128 0x12
 2533 0076 06       		.uleb128 0x6
 2534 0077 40       		.uleb128 0x40
 2535 0078 18       		.uleb128 0x18
 2536 0079 9642     		.uleb128 0x2116
 2537 007b 19       		.uleb128 0x19
 2538 007c 01       		.uleb128 0x1
 2539 007d 13       		.uleb128 0x13
 2540 007e 00       		.byte	0
 2541 007f 00       		.byte	0
 2542 0080 0A       		.uleb128 0xa
 2543 0081 05       		.uleb128 0x5
 2544 0082 00       		.byte	0
 2545 0083 03       		.uleb128 0x3
 2546 0084 0E       		.uleb128 0xe
 2547 0085 3A       		.uleb128 0x3a
 2548 0086 0B       		.uleb128 0xb
 2549 0087 3B       		.uleb128 0x3b
 2550 0088 0B       		.uleb128 0xb
 2551 0089 49       		.uleb128 0x49
 2552 008a 13       		.uleb128 0x13
 2553 008b 02       		.uleb128 0x2
 2554 008c 18       		.uleb128 0x18
 2555 008d 00       		.byte	0
 2556 008e 00       		.byte	0
 2557 008f 0B       		.uleb128 0xb
 2558 0090 34       		.uleb128 0x34
 2559 0091 00       		.byte	0
 2560 0092 03       		.uleb128 0x3
 2561 0093 0E       		.uleb128 0xe
 2562 0094 3A       		.uleb128 0x3a
 2563 0095 0B       		.uleb128 0xb
 2564 0096 3B       		.uleb128 0x3b
 2565 0097 0B       		.uleb128 0xb
 2566 0098 49       		.uleb128 0x49
 2567 0099 13       		.uleb128 0x13
 2568 009a 02       		.uleb128 0x2
 2569 009b 18       		.uleb128 0x18
 2570 009c 00       		.byte	0
 2571 009d 00       		.byte	0
 2572 009e 0C       		.uleb128 0xc
 2573 009f 2E       		.uleb128 0x2e
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 72


 2574 00a0 01       		.byte	0x1
 2575 00a1 3F       		.uleb128 0x3f
 2576 00a2 19       		.uleb128 0x19
 2577 00a3 03       		.uleb128 0x3
 2578 00a4 0E       		.uleb128 0xe
 2579 00a5 3A       		.uleb128 0x3a
 2580 00a6 0B       		.uleb128 0xb
 2581 00a7 3B       		.uleb128 0x3b
 2582 00a8 05       		.uleb128 0x5
 2583 00a9 27       		.uleb128 0x27
 2584 00aa 19       		.uleb128 0x19
 2585 00ab 11       		.uleb128 0x11
 2586 00ac 01       		.uleb128 0x1
 2587 00ad 12       		.uleb128 0x12
 2588 00ae 06       		.uleb128 0x6
 2589 00af 40       		.uleb128 0x40
 2590 00b0 18       		.uleb128 0x18
 2591 00b1 9642     		.uleb128 0x2116
 2592 00b3 19       		.uleb128 0x19
 2593 00b4 01       		.uleb128 0x1
 2594 00b5 13       		.uleb128 0x13
 2595 00b6 00       		.byte	0
 2596 00b7 00       		.byte	0
 2597 00b8 0D       		.uleb128 0xd
 2598 00b9 05       		.uleb128 0x5
 2599 00ba 00       		.byte	0
 2600 00bb 03       		.uleb128 0x3
 2601 00bc 0E       		.uleb128 0xe
 2602 00bd 3A       		.uleb128 0x3a
 2603 00be 0B       		.uleb128 0xb
 2604 00bf 3B       		.uleb128 0x3b
 2605 00c0 05       		.uleb128 0x5
 2606 00c1 49       		.uleb128 0x49
 2607 00c2 13       		.uleb128 0x13
 2608 00c3 02       		.uleb128 0x2
 2609 00c4 18       		.uleb128 0x18
 2610 00c5 00       		.byte	0
 2611 00c6 00       		.byte	0
 2612 00c7 0E       		.uleb128 0xe
 2613 00c8 2E       		.uleb128 0x2e
 2614 00c9 00       		.byte	0
 2615 00ca 3F       		.uleb128 0x3f
 2616 00cb 19       		.uleb128 0x19
 2617 00cc 03       		.uleb128 0x3
 2618 00cd 0E       		.uleb128 0xe
 2619 00ce 3A       		.uleb128 0x3a
 2620 00cf 0B       		.uleb128 0xb
 2621 00d0 3B       		.uleb128 0x3b
 2622 00d1 05       		.uleb128 0x5
 2623 00d2 27       		.uleb128 0x27
 2624 00d3 19       		.uleb128 0x19
 2625 00d4 11       		.uleb128 0x11
 2626 00d5 01       		.uleb128 0x1
 2627 00d6 12       		.uleb128 0x12
 2628 00d7 06       		.uleb128 0x6
 2629 00d8 40       		.uleb128 0x40
 2630 00d9 18       		.uleb128 0x18
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 73


 2631 00da 9742     		.uleb128 0x2117
 2632 00dc 19       		.uleb128 0x19
 2633 00dd 00       		.byte	0
 2634 00de 00       		.byte	0
 2635 00df 0F       		.uleb128 0xf
 2636 00e0 2E       		.uleb128 0x2e
 2637 00e1 01       		.byte	0x1
 2638 00e2 3F       		.uleb128 0x3f
 2639 00e3 19       		.uleb128 0x19
 2640 00e4 03       		.uleb128 0x3
 2641 00e5 0E       		.uleb128 0xe
 2642 00e6 3A       		.uleb128 0x3a
 2643 00e7 0B       		.uleb128 0xb
 2644 00e8 3B       		.uleb128 0x3b
 2645 00e9 05       		.uleb128 0x5
 2646 00ea 27       		.uleb128 0x27
 2647 00eb 19       		.uleb128 0x19
 2648 00ec 49       		.uleb128 0x49
 2649 00ed 13       		.uleb128 0x13
 2650 00ee 11       		.uleb128 0x11
 2651 00ef 01       		.uleb128 0x1
 2652 00f0 12       		.uleb128 0x12
 2653 00f1 06       		.uleb128 0x6
 2654 00f2 40       		.uleb128 0x40
 2655 00f3 18       		.uleb128 0x18
 2656 00f4 9742     		.uleb128 0x2117
 2657 00f6 19       		.uleb128 0x19
 2658 00f7 01       		.uleb128 0x1
 2659 00f8 13       		.uleb128 0x13
 2660 00f9 00       		.byte	0
 2661 00fa 00       		.byte	0
 2662 00fb 10       		.uleb128 0x10
 2663 00fc 34       		.uleb128 0x34
 2664 00fd 00       		.byte	0
 2665 00fe 03       		.uleb128 0x3
 2666 00ff 08       		.uleb128 0x8
 2667 0100 3A       		.uleb128 0x3a
 2668 0101 0B       		.uleb128 0xb
 2669 0102 3B       		.uleb128 0x3b
 2670 0103 05       		.uleb128 0x5
 2671 0104 49       		.uleb128 0x49
 2672 0105 13       		.uleb128 0x13
 2673 0106 02       		.uleb128 0x2
 2674 0107 18       		.uleb128 0x18
 2675 0108 00       		.byte	0
 2676 0109 00       		.byte	0
 2677 010a 11       		.uleb128 0x11
 2678 010b 2E       		.uleb128 0x2e
 2679 010c 00       		.byte	0
 2680 010d 3F       		.uleb128 0x3f
 2681 010e 19       		.uleb128 0x19
 2682 010f 03       		.uleb128 0x3
 2683 0110 0E       		.uleb128 0xe
 2684 0111 3A       		.uleb128 0x3a
 2685 0112 0B       		.uleb128 0xb
 2686 0113 3B       		.uleb128 0x3b
 2687 0114 05       		.uleb128 0x5
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 74


 2688 0115 27       		.uleb128 0x27
 2689 0116 19       		.uleb128 0x19
 2690 0117 49       		.uleb128 0x49
 2691 0118 13       		.uleb128 0x13
 2692 0119 11       		.uleb128 0x11
 2693 011a 01       		.uleb128 0x1
 2694 011b 12       		.uleb128 0x12
 2695 011c 06       		.uleb128 0x6
 2696 011d 40       		.uleb128 0x40
 2697 011e 18       		.uleb128 0x18
 2698 011f 9742     		.uleb128 0x2117
 2699 0121 19       		.uleb128 0x19
 2700 0122 00       		.byte	0
 2701 0123 00       		.byte	0
 2702 0124 12       		.uleb128 0x12
 2703 0125 34       		.uleb128 0x34
 2704 0126 00       		.byte	0
 2705 0127 03       		.uleb128 0x3
 2706 0128 0E       		.uleb128 0xe
 2707 0129 3A       		.uleb128 0x3a
 2708 012a 0B       		.uleb128 0xb
 2709 012b 3B       		.uleb128 0x3b
 2710 012c 05       		.uleb128 0x5
 2711 012d 49       		.uleb128 0x49
 2712 012e 13       		.uleb128 0x13
 2713 012f 02       		.uleb128 0x2
 2714 0130 18       		.uleb128 0x18
 2715 0131 00       		.byte	0
 2716 0132 00       		.byte	0
 2717 0133 13       		.uleb128 0x13
 2718 0134 2E       		.uleb128 0x2e
 2719 0135 01       		.byte	0x1
 2720 0136 3F       		.uleb128 0x3f
 2721 0137 19       		.uleb128 0x19
 2722 0138 03       		.uleb128 0x3
 2723 0139 0E       		.uleb128 0xe
 2724 013a 3A       		.uleb128 0x3a
 2725 013b 0B       		.uleb128 0xb
 2726 013c 3B       		.uleb128 0x3b
 2727 013d 05       		.uleb128 0x5
 2728 013e 27       		.uleb128 0x27
 2729 013f 19       		.uleb128 0x19
 2730 0140 11       		.uleb128 0x11
 2731 0141 01       		.uleb128 0x1
 2732 0142 12       		.uleb128 0x12
 2733 0143 06       		.uleb128 0x6
 2734 0144 40       		.uleb128 0x40
 2735 0145 18       		.uleb128 0x18
 2736 0146 9742     		.uleb128 0x2117
 2737 0148 19       		.uleb128 0x19
 2738 0149 01       		.uleb128 0x1
 2739 014a 13       		.uleb128 0x13
 2740 014b 00       		.byte	0
 2741 014c 00       		.byte	0
 2742 014d 14       		.uleb128 0x14
 2743 014e 0F       		.uleb128 0xf
 2744 014f 00       		.byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 75


 2745 0150 0B       		.uleb128 0xb
 2746 0151 0B       		.uleb128 0xb
 2747 0152 49       		.uleb128 0x49
 2748 0153 13       		.uleb128 0x13
 2749 0154 00       		.byte	0
 2750 0155 00       		.byte	0
 2751 0156 15       		.uleb128 0x15
 2752 0157 26       		.uleb128 0x26
 2753 0158 00       		.byte	0
 2754 0159 49       		.uleb128 0x49
 2755 015a 13       		.uleb128 0x13
 2756 015b 00       		.byte	0
 2757 015c 00       		.byte	0
 2758 015d 16       		.uleb128 0x16
 2759 015e 2E       		.uleb128 0x2e
 2760 015f 01       		.byte	0x1
 2761 0160 3F       		.uleb128 0x3f
 2762 0161 19       		.uleb128 0x19
 2763 0162 03       		.uleb128 0x3
 2764 0163 0E       		.uleb128 0xe
 2765 0164 3A       		.uleb128 0x3a
 2766 0165 0B       		.uleb128 0xb
 2767 0166 3B       		.uleb128 0x3b
 2768 0167 05       		.uleb128 0x5
 2769 0168 27       		.uleb128 0x27
 2770 0169 19       		.uleb128 0x19
 2771 016a 49       		.uleb128 0x49
 2772 016b 13       		.uleb128 0x13
 2773 016c 11       		.uleb128 0x11
 2774 016d 01       		.uleb128 0x1
 2775 016e 12       		.uleb128 0x12
 2776 016f 06       		.uleb128 0x6
 2777 0170 40       		.uleb128 0x40
 2778 0171 18       		.uleb128 0x18
 2779 0172 9642     		.uleb128 0x2116
 2780 0174 19       		.uleb128 0x19
 2781 0175 01       		.uleb128 0x1
 2782 0176 13       		.uleb128 0x13
 2783 0177 00       		.byte	0
 2784 0178 00       		.byte	0
 2785 0179 17       		.uleb128 0x17
 2786 017a 34       		.uleb128 0x34
 2787 017b 00       		.byte	0
 2788 017c 03       		.uleb128 0x3
 2789 017d 0E       		.uleb128 0xe
 2790 017e 3A       		.uleb128 0x3a
 2791 017f 0B       		.uleb128 0xb
 2792 0180 3B       		.uleb128 0x3b
 2793 0181 0B       		.uleb128 0xb
 2794 0182 49       		.uleb128 0x49
 2795 0183 13       		.uleb128 0x13
 2796 0184 3F       		.uleb128 0x3f
 2797 0185 19       		.uleb128 0x19
 2798 0186 02       		.uleb128 0x2
 2799 0187 18       		.uleb128 0x18
 2800 0188 00       		.byte	0
 2801 0189 00       		.byte	0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 76


 2802 018a 18       		.uleb128 0x18
 2803 018b 34       		.uleb128 0x34
 2804 018c 00       		.byte	0
 2805 018d 03       		.uleb128 0x3
 2806 018e 0E       		.uleb128 0xe
 2807 018f 3A       		.uleb128 0x3a
 2808 0190 0B       		.uleb128 0xb
 2809 0191 3B       		.uleb128 0x3b
 2810 0192 05       		.uleb128 0x5
 2811 0193 49       		.uleb128 0x49
 2812 0194 13       		.uleb128 0x13
 2813 0195 3F       		.uleb128 0x3f
 2814 0196 19       		.uleb128 0x19
 2815 0197 3C       		.uleb128 0x3c
 2816 0198 19       		.uleb128 0x19
 2817 0199 00       		.byte	0
 2818 019a 00       		.byte	0
 2819 019b 19       		.uleb128 0x19
 2820 019c 34       		.uleb128 0x34
 2821 019d 00       		.byte	0
 2822 019e 03       		.uleb128 0x3
 2823 019f 0E       		.uleb128 0xe
 2824 01a0 3A       		.uleb128 0x3a
 2825 01a1 0B       		.uleb128 0xb
 2826 01a2 3B       		.uleb128 0x3b
 2827 01a3 0B       		.uleb128 0xb
 2828 01a4 49       		.uleb128 0x49
 2829 01a5 13       		.uleb128 0x13
 2830 01a6 3F       		.uleb128 0x3f
 2831 01a7 19       		.uleb128 0x19
 2832 01a8 3C       		.uleb128 0x3c
 2833 01a9 19       		.uleb128 0x19
 2834 01aa 00       		.byte	0
 2835 01ab 00       		.byte	0
 2836 01ac 1A       		.uleb128 0x1a
 2837 01ad 01       		.uleb128 0x1
 2838 01ae 01       		.byte	0x1
 2839 01af 49       		.uleb128 0x49
 2840 01b0 13       		.uleb128 0x13
 2841 01b1 01       		.uleb128 0x1
 2842 01b2 13       		.uleb128 0x13
 2843 01b3 00       		.byte	0
 2844 01b4 00       		.byte	0
 2845 01b5 1B       		.uleb128 0x1b
 2846 01b6 21       		.uleb128 0x21
 2847 01b7 00       		.byte	0
 2848 01b8 49       		.uleb128 0x49
 2849 01b9 13       		.uleb128 0x13
 2850 01ba 2F       		.uleb128 0x2f
 2851 01bb 0B       		.uleb128 0xb
 2852 01bc 00       		.byte	0
 2853 01bd 00       		.byte	0
 2854 01be 00       		.byte	0
 2855              		.section	.debug_aranges,"",%progbits
 2856 0000 B4000000 		.4byte	0xb4
 2857 0004 0200     		.2byte	0x2
 2858 0006 00000000 		.4byte	.Ldebug_info0
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 77


 2859 000a 04       		.byte	0x4
 2860 000b 00       		.byte	0
 2861 000c 0000     		.2byte	0
 2862 000e 0000     		.2byte	0
 2863 0010 00000000 		.4byte	.LFB0
 2864 0014 38000000 		.4byte	.LFE0-.LFB0
 2865 0018 00000000 		.4byte	.LFB1
 2866 001c 8C010000 		.4byte	.LFE1-.LFB1
 2867 0020 00000000 		.4byte	.LFB2
 2868 0024 E0000000 		.4byte	.LFE2-.LFB2
 2869 0028 00000000 		.4byte	.LFB3
 2870 002c 68000000 		.4byte	.LFE3-.LFB3
 2871 0030 00000000 		.4byte	.LFB4
 2872 0034 C4000000 		.4byte	.LFE4-.LFB4
 2873 0038 00000000 		.4byte	.LFB5
 2874 003c 34000000 		.4byte	.LFE5-.LFB5
 2875 0040 00000000 		.4byte	.LFB6
 2876 0044 18000000 		.4byte	.LFE6-.LFB6
 2877 0048 00000000 		.4byte	.LFB7
 2878 004c 34000000 		.4byte	.LFE7-.LFB7
 2879 0050 00000000 		.4byte	.LFB8
 2880 0054 24000000 		.4byte	.LFE8-.LFB8
 2881 0058 00000000 		.4byte	.LFB9
 2882 005c 2C000000 		.4byte	.LFE9-.LFB9
 2883 0060 00000000 		.4byte	.LFB10
 2884 0064 6C000000 		.4byte	.LFE10-.LFB10
 2885 0068 00000000 		.4byte	.LFB11
 2886 006c 08010000 		.4byte	.LFE11-.LFB11
 2887 0070 00000000 		.4byte	.LFB12
 2888 0074 8C000000 		.4byte	.LFE12-.LFB12
 2889 0078 00000000 		.4byte	.LFB13
 2890 007c 60000000 		.4byte	.LFE13-.LFB13
 2891 0080 00000000 		.4byte	.LFB14
 2892 0084 38000000 		.4byte	.LFE14-.LFB14
 2893 0088 00000000 		.4byte	.LFB15
 2894 008c 20000000 		.4byte	.LFE15-.LFB15
 2895 0090 00000000 		.4byte	.LFB16
 2896 0094 48000000 		.4byte	.LFE16-.LFB16
 2897 0098 00000000 		.4byte	.LFB17
 2898 009c 40000000 		.4byte	.LFE17-.LFB17
 2899 00a0 00000000 		.4byte	.LFB18
 2900 00a4 28000000 		.4byte	.LFE18-.LFB18
 2901 00a8 00000000 		.4byte	.LFB19
 2902 00ac 30000000 		.4byte	.LFE19-.LFB19
 2903 00b0 00000000 		.4byte	0
 2904 00b4 00000000 		.4byte	0
 2905              		.section	.debug_ranges,"",%progbits
 2906              	.Ldebug_ranges0:
 2907 0000 00000000 		.4byte	.LFB0
 2908 0004 38000000 		.4byte	.LFE0
 2909 0008 00000000 		.4byte	.LFB1
 2910 000c 8C010000 		.4byte	.LFE1
 2911 0010 00000000 		.4byte	.LFB2
 2912 0014 E0000000 		.4byte	.LFE2
 2913 0018 00000000 		.4byte	.LFB3
 2914 001c 68000000 		.4byte	.LFE3
 2915 0020 00000000 		.4byte	.LFB4
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 78


 2916 0024 C4000000 		.4byte	.LFE4
 2917 0028 00000000 		.4byte	.LFB5
 2918 002c 34000000 		.4byte	.LFE5
 2919 0030 00000000 		.4byte	.LFB6
 2920 0034 18000000 		.4byte	.LFE6
 2921 0038 00000000 		.4byte	.LFB7
 2922 003c 34000000 		.4byte	.LFE7
 2923 0040 00000000 		.4byte	.LFB8
 2924 0044 24000000 		.4byte	.LFE8
 2925 0048 00000000 		.4byte	.LFB9
 2926 004c 2C000000 		.4byte	.LFE9
 2927 0050 00000000 		.4byte	.LFB10
 2928 0054 6C000000 		.4byte	.LFE10
 2929 0058 00000000 		.4byte	.LFB11
 2930 005c 08010000 		.4byte	.LFE11
 2931 0060 00000000 		.4byte	.LFB12
 2932 0064 8C000000 		.4byte	.LFE12
 2933 0068 00000000 		.4byte	.LFB13
 2934 006c 60000000 		.4byte	.LFE13
 2935 0070 00000000 		.4byte	.LFB14
 2936 0074 38000000 		.4byte	.LFE14
 2937 0078 00000000 		.4byte	.LFB15
 2938 007c 20000000 		.4byte	.LFE15
 2939 0080 00000000 		.4byte	.LFB16
 2940 0084 48000000 		.4byte	.LFE16
 2941 0088 00000000 		.4byte	.LFB17
 2942 008c 40000000 		.4byte	.LFE17
 2943 0090 00000000 		.4byte	.LFB18
 2944 0094 28000000 		.4byte	.LFE18
 2945 0098 00000000 		.4byte	.LFB19
 2946 009c 30000000 		.4byte	.LFE19
 2947 00a0 00000000 		.4byte	0
 2948 00a4 00000000 		.4byte	0
 2949              		.section	.debug_line,"",%progbits
 2950              	.Ldebug_line0:
 2951 0000 DA020000 		.section	.debug_str,"MS",%progbits,1
 2951      02007B00 
 2951      00000201 
 2951      FB0E0D00 
 2951      01010101 
 2952              	.LASF10:
 2953 0000 75696E74 		.ascii	"uint16\000"
 2953      313600
 2954              	.LASF60:
 2955 0007 55534255 		.ascii	"USBUART_device\000"
 2955      4152545F 
 2955      64657669 
 2955      636500
 2956              	.LASF34:
 2957 0016 55534255 		.ascii	"USBUART_Stop\000"
 2957      4152545F 
 2957      53746F70 
 2957      00
 2958              	.LASF58:
 2959 0023 55534255 		.ascii	"USBUART_RWUEnabled\000"
 2959      4152545F 
 2959      52575545 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 79


 2959      6E61626C 
 2959      656400
 2960              	.LASF69:
 2961 0036 55534255 		.ascii	"USBUART_lastPacketSize\000"
 2961      4152545F 
 2961      6C617374 
 2961      5061636B 
 2961      65745369 
 2962              	.LASF44:
 2963 004d 55534255 		.ascii	"USBUART_LoadInEP\000"
 2963      4152545F 
 2963      4C6F6164 
 2963      496E4550 
 2963      00
 2964              	.LASF7:
 2965 005e 6C6F6E67 		.ascii	"long long unsigned int\000"
 2965      206C6F6E 
 2965      6720756E 
 2965      7369676E 
 2965      65642069 
 2966              	.LASF22:
 2967 0075 61646472 		.ascii	"addr\000"
 2967      00
 2968              	.LASF39:
 2969 007a 696E7465 		.ascii	"interfaceNumber\000"
 2969      72666163 
 2969      654E756D 
 2969      62657200 
 2970              	.LASF41:
 2971 008a 65704E75 		.ascii	"epNumber\000"
 2971      6D626572 
 2971      00
 2972              	.LASF28:
 2973 0093 64657669 		.ascii	"device\000"
 2973      636500
 2974              	.LASF56:
 2975 009a 55534255 		.ascii	"USBUART_GetConfiguration\000"
 2975      4152545F 
 2975      47657443 
 2975      6F6E6669 
 2975      67757261 
 2976              	.LASF6:
 2977 00b3 6C6F6E67 		.ascii	"long long int\000"
 2977      206C6F6E 
 2977      6720696E 
 2977      7400
 2978              	.LASF0:
 2979 00c1 7369676E 		.ascii	"signed char\000"
 2979      65642063 
 2979      68617200 
 2980              	.LASF49:
 2981 00cd 55534255 		.ascii	"USBUART_EnableOutEP\000"
 2981      4152545F 
 2981      456E6162 
 2981      6C654F75 
 2981      74455000 
 2982              	.LASF53:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 80


 2983 00e1 55534255 		.ascii	"USBUART_GetEPAckState\000"
 2983      4152545F 
 2983      47657445 
 2983      5041636B 
 2983      53746174 
 2984              	.LASF68:
 2985 00f7 55534255 		.ascii	"USBUART_EP\000"
 2985      4152545F 
 2985      455000
 2986              	.LASF36:
 2987 0102 55534255 		.ascii	"USBUART_CheckActivity\000"
 2987      4152545F 
 2987      43686563 
 2987      6B416374 
 2987      69766974 
 2988              	.LASF4:
 2989 0118 6C6F6E67 		.ascii	"long int\000"
 2989      20696E74 
 2989      00
 2990              	.LASF9:
 2991 0121 75696E74 		.ascii	"uint8\000"
 2991      3800
 2992              	.LASF21:
 2993 0127 6570546F 		.ascii	"epToggle\000"
 2993      67676C65 
 2993      00
 2994              	.LASF13:
 2995 0130 646F7562 		.ascii	"double\000"
 2995      6C6500
 2996              	.LASF55:
 2997 0137 706F7765 		.ascii	"powerStatus\000"
 2997      72537461 
 2997      74757300 
 2998              	.LASF54:
 2999 0143 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 2999      4152545F 
 2999      53657450 
 2999      6F776572 
 2999      53746174 
 3000              	.LASF59:
 3001 015a 55534255 		.ascii	"USBUART_initVar\000"
 3001      4152545F 
 3001      696E6974 
 3001      56617200 
 3002              	.LASF65:
 3003 016a 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3003      4152545F 
 3003      696E7465 
 3003      72666163 
 3003      654E756D 
 3004              	.LASF11:
 3005 0182 75696E74 		.ascii	"uint32\000"
 3005      333200
 3006              	.LASF45:
 3007 0189 70446174 		.ascii	"pData\000"
 3007      6100
 3008              	.LASF23:
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 81


 3009 018f 65704D6F 		.ascii	"epMode\000"
 3009      646500
 3010              	.LASF64:
 3011 0196 55534255 		.ascii	"USBUART_deviceStatus\000"
 3011      4152545F 
 3011      64657669 
 3011      63655374 
 3011      61747573 
 3012              	.LASF8:
 3013 01ab 756E7369 		.ascii	"unsigned int\000"
 3013      676E6564 
 3013      20696E74 
 3013      00
 3014              	.LASF5:
 3015 01b8 6C6F6E67 		.ascii	"long unsigned int\000"
 3015      20756E73 
 3015      69676E65 
 3015      6420696E 
 3015      7400
 3016              	.LASF3:
 3017 01ca 73686F72 		.ascii	"short unsigned int\000"
 3017      7420756E 
 3017      7369676E 
 3017      65642069 
 3017      6E7400
 3018              	.LASF30:
 3019 01dd 55534255 		.ascii	"USBUART_Start\000"
 3019      4152545F 
 3019      53746172 
 3019      7400
 3020              	.LASF38:
 3021 01eb 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3021      4152545F 
 3021      47657449 
 3021      6E746572 
 3021      66616365 
 3022              	.LASF31:
 3023 0207 55534255 		.ascii	"USBUART_Init\000"
 3023      4152545F 
 3023      496E6974 
 3023      00
 3024              	.LASF26:
 3025 0214 696E7465 		.ascii	"interface\000"
 3025      72666163 
 3025      6500
 3026              	.LASF16:
 3027 021e 72656733 		.ascii	"reg32\000"
 3027      3200
 3028              	.LASF67:
 3029 0224 55534255 		.ascii	"USBUART_deviceAddress\000"
 3029      4152545F 
 3029      64657669 
 3029      63654164 
 3029      64726573 
 3030              	.LASF20:
 3031 023a 68774570 		.ascii	"hwEpState\000"
 3031      53746174 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 82


 3031      6500
 3032              	.LASF17:
 3033 0244 73697A65 		.ascii	"sizetype\000"
 3033      74797065 
 3033      00
 3034              	.LASF71:
 3035 024d 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\USBUART.c\000"
 3035      6E657261 
 3035      7465645F 
 3035      536F7572 
 3035      63655C50 
 3036              	.LASF18:
 3037 0270 61747472 		.ascii	"attrib\000"
 3037      696200
 3038              	.LASF70:
 3039 0277 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3039      4320342E 
 3039      392E3320 
 3039      32303135 
 3039      30333033 
 3040 02aa 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 3040      20726576 
 3040      6973696F 
 3040      6E203232 
 3040      31323230 
 3041 02dd 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3041      66756E63 
 3041      74696F6E 
 3041      2D736563 
 3041      74696F6E 
 3042              	.LASF12:
 3043 0305 666C6F61 		.ascii	"float\000"
 3043      7400
 3044              	.LASF47:
 3045 030b 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3045      4152545F 
 3045      52656164 
 3045      4F757445 
 3045      5000
 3046              	.LASF19:
 3047 031d 61706945 		.ascii	"apiEpState\000"
 3047      70537461 
 3047      746500
 3048              	.LASF15:
 3049 0328 72656738 		.ascii	"reg8\000"
 3049      00
 3050              	.LASF66:
 3051 032d 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3051      4152545F 
 3051      696E7465 
 3051      72666163 
 3051      65536574 
 3052              	.LASF1:
 3053 0346 756E7369 		.ascii	"unsigned char\000"
 3053      676E6564 
 3053      20636861 
 3053      7200
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 83


 3054              	.LASF2:
 3055 0354 73686F72 		.ascii	"short int\000"
 3055      7420696E 
 3055      7400
 3056              	.LASF40:
 3057 035e 55534255 		.ascii	"USBUART_GetEPState\000"
 3057      4152545F 
 3057      47657445 
 3057      50537461 
 3057      746500
 3058              	.LASF50:
 3059 0371 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3059      4152545F 
 3059      44697361 
 3059      626C654F 
 3059      75744550 
 3060              	.LASF51:
 3061 0386 55534255 		.ascii	"USBUART_Force\000"
 3061      4152545F 
 3061      466F7263 
 3061      6500
 3062              	.LASF52:
 3063 0394 62537461 		.ascii	"bState\000"
 3063      746500
 3064              	.LASF46:
 3065 039b 6C656E67 		.ascii	"length\000"
 3065      746800
 3066              	.LASF14:
 3067 03a2 63686172 		.ascii	"char\000"
 3067      00
 3068              	.LASF29:
 3069 03a7 6D6F6465 		.ascii	"mode\000"
 3069      00
 3070              	.LASF25:
 3071 03ac 62756666 		.ascii	"bufferSize\000"
 3071      65725369 
 3071      7A6500
 3072              	.LASF57:
 3073 03b7 55534255 		.ascii	"USBUART_VBusPresent\000"
 3073      4152545F 
 3073      56427573 
 3073      50726573 
 3073      656E7400 
 3074              	.LASF27:
 3075 03cb 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3075      42554152 
 3075      545F4550 
 3075      5F43544C 
 3075      5F424C4F 
 3076              	.LASF24:
 3077 03e2 62756666 		.ascii	"buffOffset\000"
 3077      4F666673 
 3077      657400
 3078              	.LASF42:
 3079 03ed 55534255 		.ascii	"USBUART_GetEPCount\000"
 3079      4152545F 
 3079      47657445 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 84


 3079      50436F75 
 3079      6E7400
 3080              	.LASF72:
 3081 0400 5C5C4441 		.ascii	"\\\\DATA\\Folder Redirection\\faithc\\Desktop\\FAIT"
 3081      54415C46 
 3081      6F6C6465 
 3081      72205265 
 3081      64697265 
 3082 042d 48532052 		.ascii	"HS RELEASED FIRMWARE\\SirenProject200W_RevF\\SirenP"
 3082      454C4541 
 3082      53454420 
 3082      4649524D 
 3082      57415245 
 3083 045e 726F6A65 		.ascii	"roject200W_RevD\\ReleaseVersion.cydsn\000"
 3083      63743230 
 3083      30575F52 
 3083      6576445C 
 3083      52656C65 
 3084              	.LASF35:
 3085 0483 656E6162 		.ascii	"enableInterrupts\000"
 3085      6C65496E 
 3085      74657272 
 3085      75707473 
 3085      00
 3086              	.LASF32:
 3087 0494 55534255 		.ascii	"USBUART_InitComponent\000"
 3087      4152545F 
 3087      496E6974 
 3087      436F6D70 
 3087      6F6E656E 
 3088              	.LASF62:
 3089 04aa 55534255 		.ascii	"USBUART_configuration\000"
 3089      4152545F 
 3089      636F6E66 
 3089      69677572 
 3089      6174696F 
 3090              	.LASF48:
 3091 04c0 78666572 		.ascii	"xferCount\000"
 3091      436F756E 
 3091      7400
 3092              	.LASF37:
 3093 04ca 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3093      4152545F 
 3093      4973436F 
 3093      6E666967 
 3093      75726174 
 3094              	.LASF33:
 3095 04e9 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3095      4152545F 
 3095      5265496E 
 3095      6974436F 
 3095      6D706F6E 
 3096              	.LASF61:
 3097 0501 55534255 		.ascii	"USBUART_transferState\000"
 3097      4152545F 
 3097      7472616E 
 3097      73666572 
ARM GAS  C:\Users\faithc\AppData\Local\Temp\cclUXarR.s 			page 85


 3097      53746174 
 3098              	.LASF63:
 3099 0517 55534255 		.ascii	"USBUART_configurationChanged\000"
 3099      4152545F 
 3099      636F6E66 
 3099      69677572 
 3099      6174696F 
 3100              	.LASF43:
 3101 0534 72657375 		.ascii	"result\000"
 3101      6C7400
 3102              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
