ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"isr_Timer_50ms.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Test,3,4
  20              		.comm	CurrentTest,3,4
  21              		.bss
  22              	blinkcounter:
  23 0000 00       		.space	1
  24              		.section	.text.isr_Timer_50ms_Start,"ax",%progbits
  25              		.align	2
  26              		.global	isr_Timer_50ms_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	isr_Timer_50ms_Start, %function
  30              	isr_Timer_50ms_Start:
  31              	.LFB63:
  32              		.file 1 "Generated_Source\\PSoC5\\isr_Timer_50ms.c"
   1:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/isr_Timer_50ms.c **** * File Name: isr_Timer_50ms.c  
   3:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Version 1.70
   4:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
   5:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Description:
   6:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
   8:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
   9:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Note:
  10:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  11:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
  12:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/isr_Timer_50ms.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/isr_Timer_50ms.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/isr_Timer_50ms.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  18:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  19:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include <isr_Timer_50ms.h>
  22:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include "cyapicallbacks.h"
  23:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  24:Generated_Source\PSoC5/isr_Timer_50ms.c **** #if !defined(isr_Timer_50ms__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 2


  26:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/isr_Timer_50ms.c **** /* `#START isr_Timer_50ms_intc` */
  30:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  31:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "CommonVariables.h"
  32:Generated_Source\PSoC5/isr_Timer_50ms.c ****     //#include "UART_230400_Functions.h"
  33:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "ControllerTest.h"
  34:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "RelayTest.h"
  35:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "SirenTest.h"
  36:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  37:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #define BLINKTIME   2       // How many 50msec periods of on time
  38:Generated_Source\PSoC5/isr_Timer_50ms.c ****      
  39:Generated_Source\PSoC5/isr_Timer_50ms.c ****     //uint8 SelectedTest;
  40:Generated_Source\PSoC5/isr_Timer_50ms.c ****     //struct structTestInfo CurrentTest;
  41:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  42:Generated_Source\PSoC5/isr_Timer_50ms.c ****     StructTestInfo CurrentTest;
  43:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  44:Generated_Source\PSoC5/isr_Timer_50ms.c ****     static uint8 blinkcounter = 0;
  45:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  46:Generated_Source\PSoC5/isr_Timer_50ms.c ****     enum DataType
  47:Generated_Source\PSoC5/isr_Timer_50ms.c ****     { 
  48:Generated_Source\PSoC5/isr_Timer_50ms.c ****         CTEST, 
  49:Generated_Source\PSoC5/isr_Timer_50ms.c ****         RTEST,
  50:Generated_Source\PSoC5/isr_Timer_50ms.c ****         STEST
  51:Generated_Source\PSoC5/isr_Timer_50ms.c ****     };
  52:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  53:Generated_Source\PSoC5/isr_Timer_50ms.c **** /* `#END` */
  54:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  55:Generated_Source\PSoC5/isr_Timer_50ms.c **** #ifndef CYINT_IRQ_BASE
  56:Generated_Source\PSoC5/isr_Timer_50ms.c **** #define CYINT_IRQ_BASE      16
  57:Generated_Source\PSoC5/isr_Timer_50ms.c **** #endif /* CYINT_IRQ_BASE */
  58:Generated_Source\PSoC5/isr_Timer_50ms.c **** #ifndef CYINT_VECT_TABLE
  59:Generated_Source\PSoC5/isr_Timer_50ms.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  60:Generated_Source\PSoC5/isr_Timer_50ms.c **** #endif /* CYINT_VECT_TABLE */
  61:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  62:Generated_Source\PSoC5/isr_Timer_50ms.c **** /* Declared in startup, used to set unused interrupts to. */
  63:Generated_Source\PSoC5/isr_Timer_50ms.c **** CY_ISR_PROTO(IntDefaultHandler);
  64:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  65:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  66:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
  67:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Start
  68:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
  69:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  70:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
  71:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  72:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  sets the default interrupt vector, sets the priority from the value in the
  73:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  74:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  interrupt controller.
  75:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  76:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
  77:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
  78:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  79:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
  80:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
  81:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  82:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 3


  83:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Start(void)
  84:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
  33              		.loc 1 84 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* For all we know the interrupt is active. */
  86:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Disable();
  43              		.loc 1 86 0
  44 0004 FFF7FEFF 		bl	isr_Timer_50ms_Disable
  87:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  88:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the ISR to point to the isr_Timer_50ms Interrupt. */
  89:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetVector(&isr_Timer_50ms_Interrupt);
  45              		.loc 1 89 0
  46 0008 0448     		ldr	r0, .L2
  47 000a FFF7FEFF 		bl	isr_Timer_50ms_SetVector
  90:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  91:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the priority. */
  92:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetPriority((uint8)isr_Timer_50ms_INTC_PRIOR_NUMBER);
  48              		.loc 1 92 0
  49 000e 0720     		movs	r0, #7
  50 0010 FFF7FEFF 		bl	isr_Timer_50ms_SetPriority
  93:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  94:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Enable it. */
  95:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Enable();
  51              		.loc 1 95 0
  52 0014 FFF7FEFF 		bl	isr_Timer_50ms_Enable
  96:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
  53              		.loc 1 96 0
  54 0018 00BF     		nop
  55 001a 80BD     		pop	{r7, pc}
  56              	.L3:
  57              		.align	2
  58              	.L2:
  59 001c 00000000 		.word	isr_Timer_50ms_Interrupt
  60              		.cfi_endproc
  61              	.LFE63:
  62              		.size	isr_Timer_50ms_Start, .-isr_Timer_50ms_Start
  63              		.section	.text.isr_Timer_50ms_StartEx,"ax",%progbits
  64              		.align	2
  65              		.global	isr_Timer_50ms_StartEx
  66              		.thumb
  67              		.thumb_func
  68              		.type	isr_Timer_50ms_StartEx, %function
  69              	isr_Timer_50ms_StartEx:
  70              	.LFB64:
  97:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  98:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  99:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 100:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_StartEx
 101:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 4


 102:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 103:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 104:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
 105:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
 106:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
 107:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  the interrupt to the interrupt controller.
 108:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  
 109:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 110:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  used to provide consistent definition across compilers:
 111:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  
 112:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Function definition example:
 113:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   CY_ISR(MyISR)
 114:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   {
 115:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   }
 116:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Function prototype example:
 117:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   CY_ISR_PROTO(MyISR);
 118:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 119:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
 120:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   address: Address of the ISR to set in the interrupt vector table.
 121:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 122:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 123:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 124:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 125:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 126:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_StartEx(cyisraddress address)
 127:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
  71              		.loc 1 127 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 8
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 82B0     		sub	sp, sp, #8
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  83 0006 7860     		str	r0, [r7, #4]
 128:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* For all we know the interrupt is active. */
 129:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Disable();
  84              		.loc 1 129 0
  85 0008 FFF7FEFF 		bl	isr_Timer_50ms_Disable
 130:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 131:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the ISR to point to the isr_Timer_50ms Interrupt. */
 132:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetVector(address);
  86              		.loc 1 132 0
  87 000c 7868     		ldr	r0, [r7, #4]
  88 000e FFF7FEFF 		bl	isr_Timer_50ms_SetVector
 133:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 134:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the priority. */
 135:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetPriority((uint8)isr_Timer_50ms_INTC_PRIOR_NUMBER);
  89              		.loc 1 135 0
  90 0012 0720     		movs	r0, #7
  91 0014 FFF7FEFF 		bl	isr_Timer_50ms_SetPriority
 136:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 137:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Enable it. */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 5


 138:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Enable();
  92              		.loc 1 138 0
  93 0018 FFF7FEFF 		bl	isr_Timer_50ms_Enable
 139:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
  94              		.loc 1 139 0
  95 001c 00BF     		nop
  96 001e 0837     		adds	r7, r7, #8
  97              		.cfi_def_cfa_offset 8
  98 0020 BD46     		mov	sp, r7
  99              		.cfi_def_cfa_register 13
 100              		@ sp needed
 101 0022 80BD     		pop	{r7, pc}
 102              		.cfi_endproc
 103              	.LFE64:
 104              		.size	isr_Timer_50ms_StartEx, .-isr_Timer_50ms_StartEx
 105              		.section	.text.isr_Timer_50ms_Stop,"ax",%progbits
 106              		.align	2
 107              		.global	isr_Timer_50ms_Stop
 108              		.thumb
 109              		.thumb_func
 110              		.type	isr_Timer_50ms_Stop, %function
 111              	isr_Timer_50ms_Stop:
 112              	.LFB65:
 140:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 141:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 142:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 143:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Stop
 144:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 145:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 146:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 147:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Disables and removes the interrupt.
 148:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 149:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
 150:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 151:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 152:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 153:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 154:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 155:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 156:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Stop(void)
 157:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 113              		.loc 1 157 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 00AF     		add	r7, sp, #0
 122              		.cfi_def_cfa_register 7
 158:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Disable this interrupt. */
 159:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Disable();
 123              		.loc 1 159 0
 124 0004 FFF7FEFF 		bl	isr_Timer_50ms_Disable
 160:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 161:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the ISR to point to the passive one. */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 6


 162:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetVector(&IntDefaultHandler);
 125              		.loc 1 162 0
 126 0008 0248     		ldr	r0, .L6
 127 000a FFF7FEFF 		bl	isr_Timer_50ms_SetVector
 163:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 128              		.loc 1 163 0
 129 000e 00BF     		nop
 130 0010 80BD     		pop	{r7, pc}
 131              	.L7:
 132 0012 00BF     		.align	2
 133              	.L6:
 134 0014 00000000 		.word	IntDefaultHandler
 135              		.cfi_endproc
 136              	.LFE65:
 137              		.size	isr_Timer_50ms_Stop, .-isr_Timer_50ms_Stop
 138              		.section	.text.isr_Timer_50ms_Interrupt,"ax",%progbits
 139              		.align	2
 140              		.global	isr_Timer_50ms_Interrupt
 141              		.thumb
 142              		.thumb_func
 143              		.type	isr_Timer_50ms_Interrupt, %function
 144              	isr_Timer_50ms_Interrupt:
 145              	.LFB66:
 164:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 165:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 166:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Interrupt
 168:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 169:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 170:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 171:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   The default Interrupt Service Routine for isr_Timer_50ms.
 172:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 173:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Add custom code between the coments to keep the next version of this file
 174:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   from over writting your code.
 175:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 176:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
 177:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 178:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 179:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 180:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 181:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 182:Generated_Source\PSoC5/isr_Timer_50ms.c **** CY_ISR(isr_Timer_50ms_Interrupt)
 183:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 146              		.loc 1 183 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 184:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #ifdef isr_Timer_50ms_INTERRUPT_INTERRUPT_CALLBACK
 185:Generated_Source\PSoC5/isr_Timer_50ms.c ****         isr_Timer_50ms_Interrupt_InterruptCallback();
 186:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #endif /* isr_Timer_50ms_INTERRUPT_INTERRUPT_CALLBACK */ 
 187:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 7


 188:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /*  Place your Interrupt code here. */
 189:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* `#START isr_Timer_50ms_Interrupt` */
 190:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 191:Generated_Source\PSoC5/isr_Timer_50ms.c ****     blinkcounter++;
 156              		.loc 1 191 0
 157 0004 764B     		ldr	r3, .L37
 158 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159 0008 0133     		adds	r3, r3, #1
 160 000a DAB2     		uxtb	r2, r3
 161 000c 744B     		ldr	r3, .L37
 162 000e 1A70     		strb	r2, [r3]
 192:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 193:Generated_Source\PSoC5/isr_Timer_50ms.c ****     if(CurrentTest.SelectedTest == 0)
 163              		.loc 1 193 0
 164 0010 744B     		ldr	r3, .L37+4
 165 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 166 0014 002B     		cmp	r3, #0
 167 0016 02D1     		bne	.L9
 194:Generated_Source\PSoC5/isr_Timer_50ms.c ****         CTest_50ms_isr();
 168              		.loc 1 194 0
 169 0018 FFF7FEFF 		bl	CTest_50ms_isr
 170 001c 0CE0     		b	.L10
 171              	.L9:
 195:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.SelectedTest == 1)
 172              		.loc 1 195 0
 173 001e 714B     		ldr	r3, .L37+4
 174 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 175 0022 012B     		cmp	r3, #1
 176 0024 02D1     		bne	.L11
 196:Generated_Source\PSoC5/isr_Timer_50ms.c ****         RTest_50ms_isr();
 177              		.loc 1 196 0
 178 0026 FFF7FEFF 		bl	RTest_50ms_isr
 179 002a 05E0     		b	.L10
 180              	.L11:
 197:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.SelectedTest == 2)
 181              		.loc 1 197 0
 182 002c 6D4B     		ldr	r3, .L37+4
 183 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 184 0030 022B     		cmp	r3, #2
 185 0032 01D1     		bne	.L10
 198:Generated_Source\PSoC5/isr_Timer_50ms.c ****         STest_50ms_isr();
 186              		.loc 1 198 0
 187 0034 FFF7FEFF 		bl	STest_50ms_isr
 188              	.L10:
 199:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 200:Generated_Source\PSoC5/isr_Timer_50ms.c ****     // *** Add LED stuff here
 201:Generated_Source\PSoC5/isr_Timer_50ms.c ****     if( (CurrentTest.Status == 'I') || (CurrentTest.Status == 'B') )
 189              		.loc 1 201 0
 190 0038 6A4B     		ldr	r3, .L37+4
 191 003a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 192 003c 492B     		cmp	r3, #73
 193 003e 03D0     		beq	.L12
 194              		.loc 1 201 0 is_stmt 0 discriminator 1
 195 0040 684B     		ldr	r3, .L37+4
 196 0042 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 197 0044 422B     		cmp	r3, #66
 198 0046 06D1     		bne	.L13
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 8


 199              	.L12:
 202:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 203:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED1_Write(1);
 200              		.loc 1 203 0 is_stmt 1
 201 0048 0120     		movs	r0, #1
 202 004a FFF7FEFF 		bl	LED1_Write
 204:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED2_Write(1);
 203              		.loc 1 204 0
 204 004e 0120     		movs	r0, #1
 205 0050 FFF7FEFF 		bl	LED2_Write
 206 0054 BAE0     		b	.L14
 207              	.L13:
 205:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 206:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'W')
 208              		.loc 1 206 0
 209 0056 634B     		ldr	r3, .L37+4
 210 0058 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 211 005a 572B     		cmp	r3, #87
 212 005c 22D1     		bne	.L15
 207:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 208:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 213              		.loc 1 208 0
 214 005e 604B     		ldr	r3, .L37
 215 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 216 0062 012B     		cmp	r3, #1
 217 0064 06D8     		bhi	.L16
 209:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 210:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(1);
 218              		.loc 1 210 0
 219 0066 0120     		movs	r0, #1
 220 0068 FFF7FEFF 		bl	LED1_Write
 211:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(1); 
 221              		.loc 1 211 0
 222 006c 0120     		movs	r0, #1
 223 006e FFF7FEFF 		bl	LED2_Write
 224 0072 ABE0     		b	.L14
 225              	.L16:
 212:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 213:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 226              		.loc 1 213 0
 227 0074 5A4B     		ldr	r3, .L37
 228 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 229 0078 022B     		cmp	r3, #2
 230 007a 0AD9     		bls	.L18
 231              		.loc 1 213 0 is_stmt 0 discriminator 1
 232 007c 584B     		ldr	r3, .L37
 233 007e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 234 0080 032B     		cmp	r3, #3
 235 0082 06D8     		bhi	.L18
 214:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 215:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 236              		.loc 1 215 0 is_stmt 1
 237 0084 0020     		movs	r0, #0
 238 0086 FFF7FEFF 		bl	LED1_Write
 216:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 239              		.loc 1 216 0
 240 008a 0020     		movs	r0, #0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 9


 241 008c FFF7FEFF 		bl	LED2_Write
 242 0090 9CE0     		b	.L14
 243              	.L18:
 217:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 218:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 244              		.loc 1 218 0
 245 0092 534B     		ldr	r3, .L37
 246 0094 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 247 0096 042B     		cmp	r3, #4
 248 0098 40F29880 		bls	.L14
 219:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 220:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 249              		.loc 1 220 0
 250 009c 504B     		ldr	r3, .L37
 251 009e 0022     		movs	r2, #0
 252 00a0 1A70     		strb	r2, [r3]
 253 00a2 93E0     		b	.L14
 254              	.L15:
 221:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 222:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 223:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'P')
 255              		.loc 1 223 0
 256 00a4 4F4B     		ldr	r3, .L37+4
 257 00a6 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 258 00a8 502B     		cmp	r3, #80
 259 00aa 30D1     		bne	.L19
 224:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 225:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if( (CurrentTest.SelectedTest == RTEST) && (CurrentTest.TestStep == 10) )           // If l
 260              		.loc 1 225 0
 261 00ac 4D4B     		ldr	r3, .L37+4
 262 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 263 00b0 012B     		cmp	r3, #1
 264 00b2 25D1     		bne	.L20
 265              		.loc 1 225 0 is_stmt 0 discriminator 1
 266 00b4 4B4B     		ldr	r3, .L37+4
 267 00b6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 268 00b8 0A2B     		cmp	r3, #10
 269 00ba 21D1     		bne	.L20
 226:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 227:Generated_Source\PSoC5/isr_Timer_50ms.c ****             if(blinkcounter < BLINKTIME)
 270              		.loc 1 227 0 is_stmt 1
 271 00bc 484B     		ldr	r3, .L37
 272 00be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 273 00c0 012B     		cmp	r3, #1
 274 00c2 06D8     		bhi	.L21
 228:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 229:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED1_Write(1);
 275              		.loc 1 229 0
 276 00c4 0120     		movs	r0, #1
 277 00c6 FFF7FEFF 		bl	LED1_Write
 230:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED2_Write(0); 
 278              		.loc 1 230 0
 279 00ca 0020     		movs	r0, #0
 280 00cc FFF7FEFF 		bl	LED2_Write
 227:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 281              		.loc 1 227 0
 282 00d0 7BE0     		b	.L35
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 10


 283              	.L21:
 231:Generated_Source\PSoC5/isr_Timer_50ms.c ****             }
 232:Generated_Source\PSoC5/isr_Timer_50ms.c ****             else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 284              		.loc 1 232 0
 285 00d2 434B     		ldr	r3, .L37
 286 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 00d6 022B     		cmp	r3, #2
 288 00d8 0AD9     		bls	.L23
 289              		.loc 1 232 0 is_stmt 0 discriminator 1
 290 00da 414B     		ldr	r3, .L37
 291 00dc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 292 00de 032B     		cmp	r3, #3
 293 00e0 06D8     		bhi	.L23
 233:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 234:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED1_Write(0);
 294              		.loc 1 234 0 is_stmt 1
 295 00e2 0020     		movs	r0, #0
 296 00e4 FFF7FEFF 		bl	LED1_Write
 235:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED2_Write(0); 
 297              		.loc 1 235 0
 298 00e8 0020     		movs	r0, #0
 299 00ea FFF7FEFF 		bl	LED2_Write
 227:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 300              		.loc 1 227 0
 301 00ee 6CE0     		b	.L35
 302              	.L23:
 236:Generated_Source\PSoC5/isr_Timer_50ms.c ****             }
 237:Generated_Source\PSoC5/isr_Timer_50ms.c ****             else if( blinkcounter > (2*BLINKTIME) )
 303              		.loc 1 237 0
 304 00f0 3B4B     		ldr	r3, .L37
 305 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 306 00f4 042B     		cmp	r3, #4
 307 00f6 68D9     		bls	.L35
 238:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 239:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 blinkcounter = 0;
 308              		.loc 1 239 0
 309 00f8 394B     		ldr	r3, .L37
 310 00fa 0022     		movs	r2, #0
 311 00fc 1A70     		strb	r2, [r3]
 227:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 312              		.loc 1 227 0
 313 00fe 64E0     		b	.L35
 314              	.L20:
 240:Generated_Source\PSoC5/isr_Timer_50ms.c ****             }    
 241:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 242:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else
 243:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 244:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(1);
 315              		.loc 1 244 0
 316 0100 0120     		movs	r0, #1
 317 0102 FFF7FEFF 		bl	LED1_Write
 245:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 318              		.loc 1 245 0
 319 0106 0020     		movs	r0, #0
 320 0108 FFF7FEFF 		bl	LED2_Write
 321 010c 5EE0     		b	.L14
 322              	.L19:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 11


 246:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }   
 247:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 248:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'F')
 323              		.loc 1 248 0
 324 010e 354B     		ldr	r3, .L37+4
 325 0110 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 326 0112 462B     		cmp	r3, #70
 327 0114 06D1     		bne	.L25
 249:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 250:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED1_Write(0);
 328              		.loc 1 250 0
 329 0116 0020     		movs	r0, #0
 330 0118 FFF7FEFF 		bl	LED1_Write
 251:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED2_Write(1); 
 331              		.loc 1 251 0
 332 011c 0120     		movs	r0, #1
 333 011e FFF7FEFF 		bl	LED2_Write
 334 0122 53E0     		b	.L14
 335              	.L25:
 252:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 253:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'p')
 336              		.loc 1 253 0
 337 0124 2F4B     		ldr	r3, .L37+4
 338 0126 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 339 0128 702B     		cmp	r3, #112
 340 012a 21D1     		bne	.L26
 254:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 255:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 341              		.loc 1 255 0
 342 012c 2C4B     		ldr	r3, .L37
 343 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 344 0130 012B     		cmp	r3, #1
 345 0132 06D8     		bhi	.L27
 256:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 257:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(1);
 346              		.loc 1 257 0
 347 0134 0120     		movs	r0, #1
 348 0136 FFF7FEFF 		bl	LED1_Write
 258:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 349              		.loc 1 258 0
 350 013a 0020     		movs	r0, #0
 351 013c FFF7FEFF 		bl	LED2_Write
 352 0140 44E0     		b	.L14
 353              	.L27:
 259:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 260:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 354              		.loc 1 260 0
 355 0142 274B     		ldr	r3, .L37
 356 0144 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 357 0146 022B     		cmp	r3, #2
 358 0148 0AD9     		bls	.L29
 359              		.loc 1 260 0 is_stmt 0 discriminator 1
 360 014a 254B     		ldr	r3, .L37
 361 014c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 362 014e 032B     		cmp	r3, #3
 363 0150 06D8     		bhi	.L29
 261:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 12


 262:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 364              		.loc 1 262 0 is_stmt 1
 365 0152 0020     		movs	r0, #0
 366 0154 FFF7FEFF 		bl	LED1_Write
 263:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 367              		.loc 1 263 0
 368 0158 0020     		movs	r0, #0
 369 015a FFF7FEFF 		bl	LED2_Write
 370 015e 35E0     		b	.L14
 371              	.L29:
 264:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 265:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 372              		.loc 1 265 0
 373 0160 1F4B     		ldr	r3, .L37
 374 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 375 0164 042B     		cmp	r3, #4
 376 0166 31D9     		bls	.L14
 266:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 267:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 377              		.loc 1 267 0
 378 0168 1D4B     		ldr	r3, .L37
 379 016a 0022     		movs	r2, #0
 380 016c 1A70     		strb	r2, [r3]
 381 016e 2DE0     		b	.L14
 382              	.L26:
 268:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }    
 269:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 270:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'f')
 383              		.loc 1 270 0
 384 0170 1C4B     		ldr	r3, .L37+4
 385 0172 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 386 0174 662B     		cmp	r3, #102
 387 0176 21D1     		bne	.L30
 271:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 272:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 388              		.loc 1 272 0
 389 0178 194B     		ldr	r3, .L37
 390 017a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 391 017c 012B     		cmp	r3, #1
 392 017e 06D8     		bhi	.L31
 273:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 274:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 393              		.loc 1 274 0
 394 0180 0020     		movs	r0, #0
 395 0182 FFF7FEFF 		bl	LED1_Write
 275:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(1); 
 396              		.loc 1 275 0
 397 0186 0120     		movs	r0, #1
 398 0188 FFF7FEFF 		bl	LED2_Write
 399 018c 1EE0     		b	.L14
 400              	.L31:
 276:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 277:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 401              		.loc 1 277 0
 402 018e 144B     		ldr	r3, .L37
 403 0190 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 404 0192 022B     		cmp	r3, #2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 13


 405 0194 0AD9     		bls	.L33
 406              		.loc 1 277 0 is_stmt 0 discriminator 1
 407 0196 124B     		ldr	r3, .L37
 408 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 409 019a 032B     		cmp	r3, #3
 410 019c 06D8     		bhi	.L33
 278:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 279:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 411              		.loc 1 279 0 is_stmt 1
 412 019e 0020     		movs	r0, #0
 413 01a0 FFF7FEFF 		bl	LED1_Write
 280:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 414              		.loc 1 280 0
 415 01a4 0020     		movs	r0, #0
 416 01a6 FFF7FEFF 		bl	LED2_Write
 417 01aa 0FE0     		b	.L14
 418              	.L33:
 281:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 282:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 419              		.loc 1 282 0
 420 01ac 0C4B     		ldr	r3, .L37
 421 01ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 422 01b0 042B     		cmp	r3, #4
 423 01b2 0BD9     		bls	.L14
 283:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 284:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 424              		.loc 1 284 0
 425 01b4 0A4B     		ldr	r3, .L37
 426 01b6 0022     		movs	r2, #0
 427 01b8 1A70     		strb	r2, [r3]
 428 01ba 07E0     		b	.L14
 429              	.L30:
 285:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }    
 286:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 287:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else
 288:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 289:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED1_Write(0);
 430              		.loc 1 289 0
 431 01bc 0020     		movs	r0, #0
 432 01be FFF7FEFF 		bl	LED1_Write
 290:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED2_Write(0); 
 433              		.loc 1 290 0
 434 01c2 0020     		movs	r0, #0
 435 01c4 FFF7FEFF 		bl	LED2_Write
 436 01c8 00E0     		b	.L14
 437              	.L35:
 227:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 438              		.loc 1 227 0
 439 01ca 00BF     		nop
 440              	.L14:
 291:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 292:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 293:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 294:Generated_Source\PSoC5/isr_Timer_50ms.c ****     if(blinkcounter > 100)
 441              		.loc 1 294 0
 442 01cc 044B     		ldr	r3, .L37
 443 01ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 14


 444 01d0 642B     		cmp	r3, #100
 445 01d2 02D9     		bls	.L36
 295:Generated_Source\PSoC5/isr_Timer_50ms.c ****         blinkcounter = 0;
 446              		.loc 1 295 0
 447 01d4 024B     		ldr	r3, .L37
 448 01d6 0022     		movs	r2, #0
 449 01d8 1A70     		strb	r2, [r3]
 450              	.L36:
 296:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 297:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 298:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 299:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* `#END` */
 300:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 451              		.loc 1 300 0
 452 01da 00BF     		nop
 453 01dc 80BD     		pop	{r7, pc}
 454              	.L38:
 455 01de 00BF     		.align	2
 456              	.L37:
 457 01e0 00000000 		.word	blinkcounter
 458 01e4 00000000 		.word	CurrentTest
 459              		.cfi_endproc
 460              	.LFE66:
 461              		.size	isr_Timer_50ms_Interrupt, .-isr_Timer_50ms_Interrupt
 462              		.section	.text.isr_Timer_50ms_SetVector,"ax",%progbits
 463              		.align	2
 464              		.global	isr_Timer_50ms_SetVector
 465              		.thumb
 466              		.thumb_func
 467              		.type	isr_Timer_50ms_SetVector, %function
 468              	isr_Timer_50ms_SetVector:
 469              	.LFB67:
 301:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 302:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 303:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 304:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_SetVector
 305:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 306:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 307:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 308:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Change the ISR vector for the Interrupt. Note calling isr_Timer_50ms_Start
 309:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   will override any effect this method would have had. To set the vector 
 310:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   before the component has been started use isr_Timer_50ms_StartEx instead.
 311:Generated_Source\PSoC5/isr_Timer_50ms.c **** * 
 312:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 313:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   used to provide consistent definition across compilers:
 314:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 315:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Function definition example:
 316:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   CY_ISR(MyISR)
 317:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   {
 318:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   }
 319:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 320:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Function prototype example:
 321:Generated_Source\PSoC5/isr_Timer_50ms.c **** *     CY_ISR_PROTO(MyISR);
 322:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 323:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 324:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   address: Address of the ISR to set in the interrupt vector table.
 325:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 15


 326:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 327:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 328:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 329:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 330:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_SetVector(cyisraddress address)
 331:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 470              		.loc 1 331 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 16
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475 0000 80B4     		push	{r7}
 476              		.cfi_def_cfa_offset 4
 477              		.cfi_offset 7, -4
 478 0002 85B0     		sub	sp, sp, #20
 479              		.cfi_def_cfa_offset 24
 480 0004 00AF     		add	r7, sp, #0
 481              		.cfi_def_cfa_register 7
 482 0006 7860     		str	r0, [r7, #4]
 332:Generated_Source\PSoC5/isr_Timer_50ms.c ****     cyisraddress * ramVectorTable;
 333:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 334:Generated_Source\PSoC5/isr_Timer_50ms.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 483              		.loc 1 334 0
 484 0008 054B     		ldr	r3, .L40
 485 000a 1B68     		ldr	r3, [r3]
 486 000c FB60     		str	r3, [r7, #12]
 335:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 336:Generated_Source\PSoC5/isr_Timer_50ms.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)isr_Timer_50ms__INTC_NUMBER] = address;
 487              		.loc 1 336 0
 488 000e FB68     		ldr	r3, [r7, #12]
 489 0010 5C33     		adds	r3, r3, #92
 490 0012 7A68     		ldr	r2, [r7, #4]
 491 0014 1A60     		str	r2, [r3]
 337:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 492              		.loc 1 337 0
 493 0016 00BF     		nop
 494 0018 1437     		adds	r7, r7, #20
 495              		.cfi_def_cfa_offset 4
 496 001a BD46     		mov	sp, r7
 497              		.cfi_def_cfa_register 13
 498              		@ sp needed
 499 001c 80BC     		pop	{r7}
 500              		.cfi_restore 7
 501              		.cfi_def_cfa_offset 0
 502 001e 7047     		bx	lr
 503              	.L41:
 504              		.align	2
 505              	.L40:
 506 0020 08ED00E0 		.word	-536810232
 507              		.cfi_endproc
 508              	.LFE67:
 509              		.size	isr_Timer_50ms_SetVector, .-isr_Timer_50ms_SetVector
 510              		.section	.text.isr_Timer_50ms_GetVector,"ax",%progbits
 511              		.align	2
 512              		.global	isr_Timer_50ms_GetVector
 513              		.thumb
 514              		.thumb_func
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 16


 515              		.type	isr_Timer_50ms_GetVector, %function
 516              	isr_Timer_50ms_GetVector:
 517              	.LFB68:
 338:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 339:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 340:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 341:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_GetVector
 342:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 343:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 344:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 345:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 346:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 347:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 348:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 349:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 350:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 351:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Address of the ISR in the interrupt vector table.
 352:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 353:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 354:Generated_Source\PSoC5/isr_Timer_50ms.c **** cyisraddress isr_Timer_50ms_GetVector(void)
 355:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 518              		.loc 1 355 0
 519              		.cfi_startproc
 520              		@ args = 0, pretend = 0, frame = 8
 521              		@ frame_needed = 1, uses_anonymous_args = 0
 522              		@ link register save eliminated.
 523 0000 80B4     		push	{r7}
 524              		.cfi_def_cfa_offset 4
 525              		.cfi_offset 7, -4
 526 0002 83B0     		sub	sp, sp, #12
 527              		.cfi_def_cfa_offset 16
 528 0004 00AF     		add	r7, sp, #0
 529              		.cfi_def_cfa_register 7
 356:Generated_Source\PSoC5/isr_Timer_50ms.c ****     cyisraddress * ramVectorTable;
 357:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 358:Generated_Source\PSoC5/isr_Timer_50ms.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 530              		.loc 1 358 0
 531 0006 054B     		ldr	r3, .L44
 532 0008 1B68     		ldr	r3, [r3]
 533 000a 7B60     		str	r3, [r7, #4]
 359:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 360:Generated_Source\PSoC5/isr_Timer_50ms.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)isr_Timer_50ms__INTC_NUMBER];
 534              		.loc 1 360 0
 535 000c 7B68     		ldr	r3, [r7, #4]
 536 000e DB6D     		ldr	r3, [r3, #92]
 361:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 537              		.loc 1 361 0
 538 0010 1846     		mov	r0, r3
 539 0012 0C37     		adds	r7, r7, #12
 540              		.cfi_def_cfa_offset 4
 541 0014 BD46     		mov	sp, r7
 542              		.cfi_def_cfa_register 13
 543              		@ sp needed
 544 0016 80BC     		pop	{r7}
 545              		.cfi_restore 7
 546              		.cfi_def_cfa_offset 0
 547 0018 7047     		bx	lr
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 17


 548              	.L45:
 549 001a 00BF     		.align	2
 550              	.L44:
 551 001c 08ED00E0 		.word	-536810232
 552              		.cfi_endproc
 553              	.LFE68:
 554              		.size	isr_Timer_50ms_GetVector, .-isr_Timer_50ms_GetVector
 555              		.section	.text.isr_Timer_50ms_SetPriority,"ax",%progbits
 556              		.align	2
 557              		.global	isr_Timer_50ms_SetPriority
 558              		.thumb
 559              		.thumb_func
 560              		.type	isr_Timer_50ms_SetPriority, %function
 561              	isr_Timer_50ms_SetPriority:
 562              	.LFB69:
 362:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 363:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 364:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 365:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_SetPriority
 366:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 367:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 368:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 369:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Sets the Priority of the Interrupt. 
 370:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 371:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Note calling isr_Timer_50ms_Start or isr_Timer_50ms_StartEx will 
 372:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   override any effect this API would have had. This API should only be called
 373:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   after isr_Timer_50ms_Start or isr_Timer_50ms_StartEx has been called. 
 374:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 375:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Interrupt Editor.
 376:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 377:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 378:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 379:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 380:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 381:Generated_Source\PSoC5/isr_Timer_50ms.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 382:Generated_Source\PSoC5/isr_Timer_50ms.c **** *             PSoC 4: Priority is from 0 to 3.
 383:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 384:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 385:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 386:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 387:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 388:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_SetPriority(uint8 priority)
 389:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 563              		.loc 1 389 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 8
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567              		@ link register save eliminated.
 568 0000 80B4     		push	{r7}
 569              		.cfi_def_cfa_offset 4
 570              		.cfi_offset 7, -4
 571 0002 83B0     		sub	sp, sp, #12
 572              		.cfi_def_cfa_offset 16
 573 0004 00AF     		add	r7, sp, #0
 574              		.cfi_def_cfa_register 7
 575 0006 0346     		mov	r3, r0
 576 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 18


 390:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_PRIOR = priority << 5;
 577              		.loc 1 390 0
 578 000a 054A     		ldr	r2, .L47
 579 000c FB79     		ldrb	r3, [r7, #7]
 580 000e 5B01     		lsls	r3, r3, #5
 581 0010 DBB2     		uxtb	r3, r3
 582 0012 1370     		strb	r3, [r2]
 391:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 583              		.loc 1 391 0
 584 0014 00BF     		nop
 585 0016 0C37     		adds	r7, r7, #12
 586              		.cfi_def_cfa_offset 4
 587 0018 BD46     		mov	sp, r7
 588              		.cfi_def_cfa_register 13
 589              		@ sp needed
 590 001a 80BC     		pop	{r7}
 591              		.cfi_restore 7
 592              		.cfi_def_cfa_offset 0
 593 001c 7047     		bx	lr
 594              	.L48:
 595 001e 00BF     		.align	2
 596              	.L47:
 597 0020 07E400E0 		.word	-536812537
 598              		.cfi_endproc
 599              	.LFE69:
 600              		.size	isr_Timer_50ms_SetPriority, .-isr_Timer_50ms_SetPriority
 601              		.section	.text.isr_Timer_50ms_GetPriority,"ax",%progbits
 602              		.align	2
 603              		.global	isr_Timer_50ms_GetPriority
 604              		.thumb
 605              		.thumb_func
 606              		.type	isr_Timer_50ms_GetPriority, %function
 607              	isr_Timer_50ms_GetPriority:
 608              	.LFB70:
 392:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 393:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 394:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 395:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_GetPriority
 396:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 397:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 398:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 399:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Gets the Priority of the Interrupt.
 400:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 401:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 402:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 403:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 404:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 405:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Priority of the interrupt, 0 being the highest priority
 406:Generated_Source\PSoC5/isr_Timer_50ms.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 407:Generated_Source\PSoC5/isr_Timer_50ms.c **** *    PSoC 4: Priority is from 0 to 3.
 408:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 409:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 410:Generated_Source\PSoC5/isr_Timer_50ms.c **** uint8 isr_Timer_50ms_GetPriority(void)
 411:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 609              		.loc 1 411 0
 610              		.cfi_startproc
 611              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 19


 612              		@ frame_needed = 1, uses_anonymous_args = 0
 613              		@ link register save eliminated.
 614 0000 80B4     		push	{r7}
 615              		.cfi_def_cfa_offset 4
 616              		.cfi_offset 7, -4
 617 0002 83B0     		sub	sp, sp, #12
 618              		.cfi_def_cfa_offset 16
 619 0004 00AF     		add	r7, sp, #0
 620              		.cfi_def_cfa_register 7
 412:Generated_Source\PSoC5/isr_Timer_50ms.c ****     uint8 priority;
 413:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 414:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 415:Generated_Source\PSoC5/isr_Timer_50ms.c ****     priority = *isr_Timer_50ms_INTC_PRIOR >> 5;
 621              		.loc 1 415 0
 622 0006 054B     		ldr	r3, .L51
 623 0008 1B78     		ldrb	r3, [r3]
 624 000a DBB2     		uxtb	r3, r3
 625 000c 5B09     		lsrs	r3, r3, #5
 626 000e FB71     		strb	r3, [r7, #7]
 416:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 417:Generated_Source\PSoC5/isr_Timer_50ms.c ****     return priority;
 627              		.loc 1 417 0
 628 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 418:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 629              		.loc 1 418 0
 630 0012 1846     		mov	r0, r3
 631 0014 0C37     		adds	r7, r7, #12
 632              		.cfi_def_cfa_offset 4
 633 0016 BD46     		mov	sp, r7
 634              		.cfi_def_cfa_register 13
 635              		@ sp needed
 636 0018 80BC     		pop	{r7}
 637              		.cfi_restore 7
 638              		.cfi_def_cfa_offset 0
 639 001a 7047     		bx	lr
 640              	.L52:
 641              		.align	2
 642              	.L51:
 643 001c 07E400E0 		.word	-536812537
 644              		.cfi_endproc
 645              	.LFE70:
 646              		.size	isr_Timer_50ms_GetPriority, .-isr_Timer_50ms_GetPriority
 647              		.section	.text.isr_Timer_50ms_Enable,"ax",%progbits
 648              		.align	2
 649              		.global	isr_Timer_50ms_Enable
 650              		.thumb
 651              		.thumb_func
 652              		.type	isr_Timer_50ms_Enable, %function
 653              	isr_Timer_50ms_Enable:
 654              	.LFB71:
 419:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 420:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 421:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 422:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Enable
 423:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 424:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 425:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 20


 426:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 427:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 428:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   function, which sets the vector and the priority, has been called.
 429:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 430:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 431:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 432:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 433:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 434:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 435:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 436:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 437:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Enable(void)
 438:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 655              		.loc 1 438 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 0
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659              		@ link register save eliminated.
 660 0000 80B4     		push	{r7}
 661              		.cfi_def_cfa_offset 4
 662              		.cfi_offset 7, -4
 663 0002 00AF     		add	r7, sp, #0
 664              		.cfi_def_cfa_register 7
 439:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Enable the general interrupt. */
 440:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_SET_EN = isr_Timer_50ms__INTC_MASK;
 665              		.loc 1 440 0
 666 0004 034B     		ldr	r3, .L54
 667 0006 8022     		movs	r2, #128
 668 0008 1A60     		str	r2, [r3]
 441:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 669              		.loc 1 441 0
 670 000a 00BF     		nop
 671 000c BD46     		mov	sp, r7
 672              		.cfi_def_cfa_register 13
 673              		@ sp needed
 674 000e 80BC     		pop	{r7}
 675              		.cfi_restore 7
 676              		.cfi_def_cfa_offset 0
 677 0010 7047     		bx	lr
 678              	.L55:
 679 0012 00BF     		.align	2
 680              	.L54:
 681 0014 00E100E0 		.word	-536813312
 682              		.cfi_endproc
 683              	.LFE71:
 684              		.size	isr_Timer_50ms_Enable, .-isr_Timer_50ms_Enable
 685              		.section	.text.isr_Timer_50ms_GetState,"ax",%progbits
 686              		.align	2
 687              		.global	isr_Timer_50ms_GetState
 688              		.thumb
 689              		.thumb_func
 690              		.type	isr_Timer_50ms_GetState, %function
 691              	isr_Timer_50ms_GetState:
 692              	.LFB72:
 442:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 443:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 444:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 21


 445:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_GetState
 446:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 447:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 448:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 449:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 450:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 451:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 452:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 453:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 454:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 455:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   1 if enabled, 0 if disabled.
 456:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 457:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 458:Generated_Source\PSoC5/isr_Timer_50ms.c **** uint8 isr_Timer_50ms_GetState(void)
 459:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 693              		.loc 1 459 0
 694              		.cfi_startproc
 695              		@ args = 0, pretend = 0, frame = 0
 696              		@ frame_needed = 1, uses_anonymous_args = 0
 697              		@ link register save eliminated.
 698 0000 80B4     		push	{r7}
 699              		.cfi_def_cfa_offset 4
 700              		.cfi_offset 7, -4
 701 0002 00AF     		add	r7, sp, #0
 702              		.cfi_def_cfa_register 7
 460:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Get the state of the general interrupt. */
 461:Generated_Source\PSoC5/isr_Timer_50ms.c ****     return ((*isr_Timer_50ms_INTC_SET_EN & (uint32)isr_Timer_50ms__INTC_MASK) != 0u) ? 1u:0u;
 703              		.loc 1 461 0
 704 0004 064B     		ldr	r3, .L60
 705 0006 1B68     		ldr	r3, [r3]
 706 0008 03F08003 		and	r3, r3, #128
 707 000c 002B     		cmp	r3, #0
 708 000e 01D0     		beq	.L57
 709              		.loc 1 461 0 is_stmt 0 discriminator 1
 710 0010 0123     		movs	r3, #1
 711 0012 00E0     		b	.L58
 712              	.L57:
 713              		.loc 1 461 0 discriminator 2
 714 0014 0023     		movs	r3, #0
 715              	.L58:
 462:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 716              		.loc 1 462 0 is_stmt 1 discriminator 4
 717 0016 1846     		mov	r0, r3
 718 0018 BD46     		mov	sp, r7
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 001a 80BC     		pop	{r7}
 722              		.cfi_restore 7
 723              		.cfi_def_cfa_offset 0
 724 001c 7047     		bx	lr
 725              	.L61:
 726 001e 00BF     		.align	2
 727              	.L60:
 728 0020 00E100E0 		.word	-536813312
 729              		.cfi_endproc
 730              	.LFE72:
 731              		.size	isr_Timer_50ms_GetState, .-isr_Timer_50ms_GetState
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 22


 732              		.section	.text.isr_Timer_50ms_Disable,"ax",%progbits
 733              		.align	2
 734              		.global	isr_Timer_50ms_Disable
 735              		.thumb
 736              		.thumb_func
 737              		.type	isr_Timer_50ms_Disable, %function
 738              	isr_Timer_50ms_Disable:
 739              	.LFB73:
 463:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 464:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 465:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 466:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Disable
 467:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 468:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 469:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 470:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Disables the Interrupt in the interrupt controller.
 471:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 472:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 473:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 474:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 475:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 476:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 477:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 478:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 479:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Disable(void)
 480:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 740              		.loc 1 480 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 1, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 745 0000 80B4     		push	{r7}
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 0002 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 481:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Disable the general interrupt. */
 482:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_CLR_EN = isr_Timer_50ms__INTC_MASK;
 750              		.loc 1 482 0
 751 0004 034B     		ldr	r3, .L63
 752 0006 8022     		movs	r2, #128
 753 0008 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 754              		.loc 1 483 0
 755 000a 00BF     		nop
 756 000c BD46     		mov	sp, r7
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 000e 80BC     		pop	{r7}
 760              		.cfi_restore 7
 761              		.cfi_def_cfa_offset 0
 762 0010 7047     		bx	lr
 763              	.L64:
 764 0012 00BF     		.align	2
 765              	.L63:
 766 0014 80E100E0 		.word	-536813184
 767              		.cfi_endproc
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 23


 768              	.LFE73:
 769              		.size	isr_Timer_50ms_Disable, .-isr_Timer_50ms_Disable
 770              		.section	.text.isr_Timer_50ms_SetPending,"ax",%progbits
 771              		.align	2
 772              		.global	isr_Timer_50ms_SetPending
 773              		.thumb
 774              		.thumb_func
 775              		.type	isr_Timer_50ms_SetPending, %function
 776              	isr_Timer_50ms_SetPending:
 777              	.LFB74:
 484:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 485:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 486:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 487:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_SetPending
 488:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 489:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 490:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 491:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Causes the Interrupt to enter the pending state, a software method of
 492:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   generating the interrupt.
 493:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 494:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 495:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 496:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 497:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 498:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 499:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 500:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Side Effects:
 501:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 502:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   entered (depending on the priority of this interrupt and other pending 
 503:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   interrupts).
 504:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 505:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 506:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_SetPending(void)
 507:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 778              		.loc 1 507 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783 0000 80B4     		push	{r7}
 784              		.cfi_def_cfa_offset 4
 785              		.cfi_offset 7, -4
 786 0002 00AF     		add	r7, sp, #0
 787              		.cfi_def_cfa_register 7
 508:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_SET_PD = isr_Timer_50ms__INTC_MASK;
 788              		.loc 1 508 0
 789 0004 034B     		ldr	r3, .L66
 790 0006 8022     		movs	r2, #128
 791 0008 1A60     		str	r2, [r3]
 509:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 792              		.loc 1 509 0
 793 000a 00BF     		nop
 794 000c BD46     		mov	sp, r7
 795              		.cfi_def_cfa_register 13
 796              		@ sp needed
 797 000e 80BC     		pop	{r7}
 798              		.cfi_restore 7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 24


 799              		.cfi_def_cfa_offset 0
 800 0010 7047     		bx	lr
 801              	.L67:
 802 0012 00BF     		.align	2
 803              	.L66:
 804 0014 00E200E0 		.word	-536813056
 805              		.cfi_endproc
 806              	.LFE74:
 807              		.size	isr_Timer_50ms_SetPending, .-isr_Timer_50ms_SetPending
 808              		.section	.text.isr_Timer_50ms_ClearPending,"ax",%progbits
 809              		.align	2
 810              		.global	isr_Timer_50ms_ClearPending
 811              		.thumb
 812              		.thumb_func
 813              		.type	isr_Timer_50ms_ClearPending, %function
 814              	isr_Timer_50ms_ClearPending:
 815              	.LFB75:
 510:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 511:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 512:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 513:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_ClearPending
 514:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 515:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 516:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 517:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Clears a pending interrupt in the interrupt controller.
 518:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 519:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 520:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 521:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 522:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   pending state even though the interrupt itself is cleared using this API.
 523:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 524:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 525:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 526:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 527:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 528:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 529:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 530:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 531:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_ClearPending(void)
 532:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 816              		.loc 1 532 0
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 1, uses_anonymous_args = 0
 820              		@ link register save eliminated.
 821 0000 80B4     		push	{r7}
 822              		.cfi_def_cfa_offset 4
 823              		.cfi_offset 7, -4
 824 0002 00AF     		add	r7, sp, #0
 825              		.cfi_def_cfa_register 7
 533:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_CLR_PD = isr_Timer_50ms__INTC_MASK;
 826              		.loc 1 533 0
 827 0004 034B     		ldr	r3, .L69
 828 0006 8022     		movs	r2, #128
 829 0008 1A60     		str	r2, [r3]
 534:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 830              		.loc 1 534 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 25


 831 000a 00BF     		nop
 832 000c BD46     		mov	sp, r7
 833              		.cfi_def_cfa_register 13
 834              		@ sp needed
 835 000e 80BC     		pop	{r7}
 836              		.cfi_restore 7
 837              		.cfi_def_cfa_offset 0
 838 0010 7047     		bx	lr
 839              	.L70:
 840 0012 00BF     		.align	2
 841              	.L69:
 842 0014 80E200E0 		.word	-536812928
 843              		.cfi_endproc
 844              	.LFE75:
 845              		.size	isr_Timer_50ms_ClearPending, .-isr_Timer_50ms_ClearPending
 846              		.text
 847              	.Letext0:
 848              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 849              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 850              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 851              		.file 5 "./CommonVariables.h"
 852              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 853              		.section	.debug_info,"",%progbits
 854              	.Ldebug_info0:
 855 0000 FB020000 		.4byte	0x2fb
 856 0004 0400     		.2byte	0x4
 857 0006 00000000 		.4byte	.Ldebug_abbrev0
 858 000a 04       		.byte	0x4
 859 000b 01       		.uleb128 0x1
 860 000c 55000000 		.4byte	.LASF47
 861 0010 0C       		.byte	0xc
 862 0011 B9020000 		.4byte	.LASF48
 863 0015 C6010000 		.4byte	.LASF49
 864 0019 00000000 		.4byte	.Ldebug_ranges0+0
 865 001d 00000000 		.4byte	0
 866 0021 00000000 		.4byte	.Ldebug_line0
 867 0025 02       		.uleb128 0x2
 868 0026 04       		.byte	0x4
 869 0027 05       		.byte	0x5
 870 0028 696E7400 		.ascii	"int\000"
 871 002c 03       		.uleb128 0x3
 872 002d 04       		.byte	0x4
 873 002e 07       		.byte	0x7
 874 002f 56020000 		.4byte	.LASF0
 875 0033 03       		.uleb128 0x3
 876 0034 08       		.byte	0x8
 877 0035 05       		.byte	0x5
 878 0036 E1020000 		.4byte	.LASF1
 879 003a 03       		.uleb128 0x3
 880 003b 08       		.byte	0x8
 881 003c 04       		.byte	0x4
 882 003d 8A030000 		.4byte	.LASF2
 883 0041 03       		.uleb128 0x3
 884 0042 01       		.byte	0x1
 885 0043 06       		.byte	0x6
 886 0044 96030000 		.4byte	.LASF3
 887 0048 03       		.uleb128 0x3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 26


 888 0049 01       		.byte	0x1
 889 004a 08       		.byte	0x8
 890 004b 17020000 		.4byte	.LASF4
 891 004f 03       		.uleb128 0x3
 892 0050 02       		.byte	0x2
 893 0051 05       		.byte	0x5
 894 0052 43030000 		.4byte	.LASF5
 895 0056 03       		.uleb128 0x3
 896 0057 02       		.byte	0x2
 897 0058 07       		.byte	0x7
 898 0059 B3010000 		.4byte	.LASF6
 899 005d 04       		.uleb128 0x4
 900 005e 00010000 		.4byte	.LASF12
 901 0062 02       		.byte	0x2
 902 0063 3F       		.byte	0x3f
 903 0064 68000000 		.4byte	0x68
 904 0068 03       		.uleb128 0x3
 905 0069 04       		.byte	0x4
 906 006a 05       		.byte	0x5
 907 006b 6D030000 		.4byte	.LASF7
 908 006f 03       		.uleb128 0x3
 909 0070 04       		.byte	0x4
 910 0071 07       		.byte	0x7
 911 0072 95010000 		.4byte	.LASF8
 912 0076 03       		.uleb128 0x3
 913 0077 08       		.byte	0x8
 914 0078 07       		.byte	0x7
 915 0079 6B020000 		.4byte	.LASF9
 916 007d 03       		.uleb128 0x3
 917 007e 04       		.byte	0x4
 918 007f 07       		.byte	0x7
 919 0080 B0020000 		.4byte	.LASF10
 920 0084 03       		.uleb128 0x3
 921 0085 01       		.byte	0x1
 922 0086 08       		.byte	0x8
 923 0087 0A030000 		.4byte	.LASF11
 924 008b 05       		.uleb128 0x5
 925 008c 04       		.byte	0x4
 926 008d 91000000 		.4byte	0x91
 927 0091 06       		.uleb128 0x6
 928 0092 04       		.uleb128 0x4
 929 0093 A8020000 		.4byte	.LASF13
 930 0097 03       		.byte	0x3
 931 0098 2C       		.byte	0x2c
 932 0099 5D000000 		.4byte	0x5d
 933 009d 07       		.uleb128 0x7
 934 009e 53030000 		.4byte	.LASF14
 935 00a2 04       		.byte	0x4
 936 00a3 E401     		.2byte	0x1e4
 937 00a5 48000000 		.4byte	0x48
 938 00a9 07       		.uleb128 0x7
 939 00aa 4F020000 		.4byte	.LASF15
 940 00ae 04       		.byte	0x4
 941 00af E601     		.2byte	0x1e6
 942 00b1 6F000000 		.4byte	0x6f
 943 00b5 03       		.uleb128 0x3
 944 00b6 04       		.byte	0x4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 27


 945 00b7 04       		.byte	0x4
 946 00b8 5E010000 		.4byte	.LASF16
 947 00bc 03       		.uleb128 0x3
 948 00bd 08       		.byte	0x8
 949 00be 04       		.byte	0x4
 950 00bf 25020000 		.4byte	.LASF17
 951 00c3 07       		.uleb128 0x7
 952 00c4 8A010000 		.4byte	.LASF18
 953 00c8 04       		.byte	0x4
 954 00c9 8E02     		.2byte	0x28e
 955 00cb CF000000 		.4byte	0xcf
 956 00cf 08       		.uleb128 0x8
 957 00d0 9D000000 		.4byte	0x9d
 958 00d4 07       		.uleb128 0x7
 959 00d5 33000000 		.4byte	.LASF19
 960 00d9 04       		.byte	0x4
 961 00da 9002     		.2byte	0x290
 962 00dc E0000000 		.4byte	0xe0
 963 00e0 08       		.uleb128 0x8
 964 00e1 A9000000 		.4byte	0xa9
 965 00e5 07       		.uleb128 0x7
 966 00e6 82020000 		.4byte	.LASF20
 967 00ea 04       		.byte	0x4
 968 00eb A002     		.2byte	0x2a0
 969 00ed 8B000000 		.4byte	0x8b
 970 00f1 09       		.uleb128 0x9
 971 00f2 7B030000 		.4byte	.LASF50
 972 00f6 03       		.byte	0x3
 973 00f7 05       		.byte	0x5
 974 00f8 10       		.byte	0x10
 975 00f9 22010000 		.4byte	0x122
 976 00fd 0A       		.uleb128 0xa
 977 00fe 51010000 		.4byte	.LASF21
 978 0102 05       		.byte	0x5
 979 0103 12       		.byte	0x12
 980 0104 9D000000 		.4byte	0x9d
 981 0108 00       		.byte	0
 982 0109 0A       		.uleb128 0xa
 983 010a 26010000 		.4byte	.LASF22
 984 010e 05       		.byte	0x5
 985 010f 13       		.byte	0x13
 986 0110 9D000000 		.4byte	0x9d
 987 0114 01       		.byte	0x1
 988 0115 0A       		.uleb128 0xa
 989 0116 0A010000 		.4byte	.LASF23
 990 011a 05       		.byte	0x5
 991 011b 14       		.byte	0x14
 992 011c 9D000000 		.4byte	0x9d
 993 0120 02       		.byte	0x2
 994 0121 00       		.byte	0
 995 0122 04       		.uleb128 0x4
 996 0123 1E030000 		.4byte	.LASF24
 997 0127 05       		.byte	0x5
 998 0128 18       		.byte	0x18
 999 0129 F1000000 		.4byte	0xf1
 1000 012d 0B       		.uleb128 0xb
 1001 012e 2F010000 		.4byte	.LASF51
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 28


 1002 0132 01       		.byte	0x1
 1003 0133 48000000 		.4byte	0x48
 1004 0137 01       		.byte	0x1
 1005 0138 2E       		.byte	0x2e
 1006 0139 50010000 		.4byte	0x150
 1007 013d 0C       		.uleb128 0xc
 1008 013e 4D030000 		.4byte	.LASF25
 1009 0142 00       		.byte	0
 1010 0143 0C       		.uleb128 0xc
 1011 0144 FA000000 		.4byte	.LASF26
 1012 0148 01       		.byte	0x1
 1013 0149 0C       		.uleb128 0xc
 1014 014a 8F010000 		.4byte	.LASF27
 1015 014e 02       		.byte	0x2
 1016 014f 00       		.byte	0
 1017 0150 0D       		.uleb128 0xd
 1018 0151 11010000 		.4byte	.LASF28
 1019 0155 01       		.byte	0x1
 1020 0156 53       		.byte	0x53
 1021 0157 00000000 		.4byte	.LFB63
 1022 015b 20000000 		.4byte	.LFE63-.LFB63
 1023 015f 01       		.uleb128 0x1
 1024 0160 9C       		.byte	0x9c
 1025 0161 0E       		.uleb128 0xe
 1026 0162 A2030000 		.4byte	.LASF31
 1027 0166 01       		.byte	0x1
 1028 0167 7E       		.byte	0x7e
 1029 0168 00000000 		.4byte	.LFB64
 1030 016c 24000000 		.4byte	.LFE64-.LFB64
 1031 0170 01       		.uleb128 0x1
 1032 0171 9C       		.byte	0x9c
 1033 0172 85010000 		.4byte	0x185
 1034 0176 0F       		.uleb128 0xf
 1035 0177 63020000 		.4byte	.LASF33
 1036 017b 01       		.byte	0x1
 1037 017c 7E       		.byte	0x7e
 1038 017d E5000000 		.4byte	0xe5
 1039 0181 02       		.uleb128 0x2
 1040 0182 91       		.byte	0x91
 1041 0183 74       		.sleb128 -12
 1042 0184 00       		.byte	0
 1043 0185 0D       		.uleb128 0xd
 1044 0186 59030000 		.4byte	.LASF29
 1045 018a 01       		.byte	0x1
 1046 018b 9C       		.byte	0x9c
 1047 018c 00000000 		.4byte	.LFB65
 1048 0190 18000000 		.4byte	.LFE65-.LFB65
 1049 0194 01       		.uleb128 0x1
 1050 0195 9C       		.byte	0x9c
 1051 0196 0D       		.uleb128 0xd
 1052 0197 8F020000 		.4byte	.LASF30
 1053 019b 01       		.byte	0x1
 1054 019c B6       		.byte	0xb6
 1055 019d 00000000 		.4byte	.LFB66
 1056 01a1 E8010000 		.4byte	.LFE66-.LFB66
 1057 01a5 01       		.uleb128 0x1
 1058 01a6 9C       		.byte	0x9c
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 29


 1059 01a7 10       		.uleb128 0x10
 1060 01a8 64010000 		.4byte	.LASF32
 1061 01ac 01       		.byte	0x1
 1062 01ad 4A01     		.2byte	0x14a
 1063 01af 00000000 		.4byte	.LFB67
 1064 01b3 24000000 		.4byte	.LFE67-.LFB67
 1065 01b7 01       		.uleb128 0x1
 1066 01b8 9C       		.byte	0x9c
 1067 01b9 DC010000 		.4byte	0x1dc
 1068 01bd 11       		.uleb128 0x11
 1069 01be 63020000 		.4byte	.LASF33
 1070 01c2 01       		.byte	0x1
 1071 01c3 4A01     		.2byte	0x14a
 1072 01c5 E5000000 		.4byte	0xe5
 1073 01c9 02       		.uleb128 0x2
 1074 01ca 91       		.byte	0x91
 1075 01cb 6C       		.sleb128 -20
 1076 01cc 12       		.uleb128 0x12
 1077 01cd 0F030000 		.4byte	.LASF34
 1078 01d1 01       		.byte	0x1
 1079 01d2 4C01     		.2byte	0x14c
 1080 01d4 DC010000 		.4byte	0x1dc
 1081 01d8 02       		.uleb128 0x2
 1082 01d9 91       		.byte	0x91
 1083 01da 74       		.sleb128 -12
 1084 01db 00       		.byte	0
 1085 01dc 05       		.uleb128 0x5
 1086 01dd 04       		.byte	0x4
 1087 01de E5000000 		.4byte	0xe5
 1088 01e2 13       		.uleb128 0x13
 1089 01e3 38010000 		.4byte	.LASF37
 1090 01e7 01       		.byte	0x1
 1091 01e8 6201     		.2byte	0x162
 1092 01ea E5000000 		.4byte	0xe5
 1093 01ee 00000000 		.4byte	.LFB68
 1094 01f2 20000000 		.4byte	.LFE68-.LFB68
 1095 01f6 01       		.uleb128 0x1
 1096 01f7 9C       		.byte	0x9c
 1097 01f8 0C020000 		.4byte	0x20c
 1098 01fc 12       		.uleb128 0x12
 1099 01fd 0F030000 		.4byte	.LASF34
 1100 0201 01       		.byte	0x1
 1101 0202 6401     		.2byte	0x164
 1102 0204 DC010000 		.4byte	0x1dc
 1103 0208 02       		.uleb128 0x2
 1104 0209 91       		.byte	0x91
 1105 020a 74       		.sleb128 -12
 1106 020b 00       		.byte	0
 1107 020c 10       		.uleb128 0x10
 1108 020d 18000000 		.4byte	.LASF35
 1109 0211 01       		.byte	0x1
 1110 0212 8401     		.2byte	0x184
 1111 0214 00000000 		.4byte	.LFB69
 1112 0218 24000000 		.4byte	.LFE69-.LFB69
 1113 021c 01       		.uleb128 0x1
 1114 021d 9C       		.byte	0x9c
 1115 021e 32020000 		.4byte	0x232
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 30


 1116 0222 11       		.uleb128 0x11
 1117 0223 2C020000 		.4byte	.LASF36
 1118 0227 01       		.byte	0x1
 1119 0228 8401     		.2byte	0x184
 1120 022a 9D000000 		.4byte	0x9d
 1121 022e 02       		.uleb128 0x2
 1122 022f 91       		.byte	0x91
 1123 0230 77       		.sleb128 -9
 1124 0231 00       		.byte	0
 1125 0232 13       		.uleb128 0x13
 1126 0233 EF020000 		.4byte	.LASF38
 1127 0237 01       		.byte	0x1
 1128 0238 9A01     		.2byte	0x19a
 1129 023a 9D000000 		.4byte	0x9d
 1130 023e 00000000 		.4byte	.LFB70
 1131 0242 20000000 		.4byte	.LFE70-.LFB70
 1132 0246 01       		.uleb128 0x1
 1133 0247 9C       		.byte	0x9c
 1134 0248 5C020000 		.4byte	0x25c
 1135 024c 12       		.uleb128 0x12
 1136 024d 2C020000 		.4byte	.LASF36
 1137 0251 01       		.byte	0x1
 1138 0252 9C01     		.2byte	0x19c
 1139 0254 9D000000 		.4byte	0x9d
 1140 0258 02       		.uleb128 0x2
 1141 0259 91       		.byte	0x91
 1142 025a 77       		.sleb128 -9
 1143 025b 00       		.byte	0
 1144 025c 14       		.uleb128 0x14
 1145 025d 2D030000 		.4byte	.LASF39
 1146 0261 01       		.byte	0x1
 1147 0262 B501     		.2byte	0x1b5
 1148 0264 00000000 		.4byte	.LFB71
 1149 0268 18000000 		.4byte	.LFE71-.LFB71
 1150 026c 01       		.uleb128 0x1
 1151 026d 9C       		.byte	0x9c
 1152 026e 15       		.uleb128 0x15
 1153 026f 00000000 		.4byte	.LASF52
 1154 0273 01       		.byte	0x1
 1155 0274 CA01     		.2byte	0x1ca
 1156 0276 9D000000 		.4byte	0x9d
 1157 027a 00000000 		.4byte	.LFB72
 1158 027e 24000000 		.4byte	.LFE72-.LFB72
 1159 0282 01       		.uleb128 0x1
 1160 0283 9C       		.byte	0x9c
 1161 0284 14       		.uleb128 0x14
 1162 0285 E3000000 		.4byte	.LASF40
 1163 0289 01       		.byte	0x1
 1164 028a DF01     		.2byte	0x1df
 1165 028c 00000000 		.4byte	.LFB73
 1166 0290 18000000 		.4byte	.LFE73-.LFB73
 1167 0294 01       		.uleb128 0x1
 1168 0295 9C       		.byte	0x9c
 1169 0296 14       		.uleb128 0x14
 1170 0297 35020000 		.4byte	.LASF41
 1171 029b 01       		.byte	0x1
 1172 029c FA01     		.2byte	0x1fa
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 31


 1173 029e 00000000 		.4byte	.LFB74
 1174 02a2 18000000 		.4byte	.LFE74-.LFB74
 1175 02a6 01       		.uleb128 0x1
 1176 02a7 9C       		.byte	0x9c
 1177 02a8 14       		.uleb128 0x14
 1178 02a9 39000000 		.4byte	.LASF42
 1179 02ad 01       		.byte	0x1
 1180 02ae 1302     		.2byte	0x213
 1181 02b0 00000000 		.4byte	.LFB75
 1182 02b4 18000000 		.4byte	.LFE75-.LFB75
 1183 02b8 01       		.uleb128 0x1
 1184 02b9 9C       		.byte	0x9c
 1185 02ba 16       		.uleb128 0x16
 1186 02bb 7D010000 		.4byte	.LASF43
 1187 02bf 01       		.byte	0x1
 1188 02c0 2C       		.byte	0x2c
 1189 02c1 9D000000 		.4byte	0x9d
 1190 02c5 05       		.uleb128 0x5
 1191 02c6 03       		.byte	0x3
 1192 02c7 00000000 		.4byte	blinkcounter
 1193 02cb 17       		.uleb128 0x17
 1194 02cc 0A020000 		.4byte	.LASF44
 1195 02d0 06       		.byte	0x6
 1196 02d1 1207     		.2byte	0x712
 1197 02d3 D7020000 		.4byte	0x2d7
 1198 02d7 08       		.uleb128 0x8
 1199 02d8 92000000 		.4byte	0x92
 1200 02dc 18       		.uleb128 0x18
 1201 02dd 76030000 		.4byte	.LASF45
 1202 02e1 05       		.byte	0x5
 1203 02e2 16       		.byte	0x16
 1204 02e3 F1000000 		.4byte	0xf1
 1205 02e7 05       		.uleb128 0x5
 1206 02e8 03       		.byte	0x3
 1207 02e9 00000000 		.4byte	Test
 1208 02ed 18       		.uleb128 0x18
 1209 02ee A7010000 		.4byte	.LASF46
 1210 02f2 01       		.byte	0x1
 1211 02f3 2A       		.byte	0x2a
 1212 02f4 22010000 		.4byte	0x122
 1213 02f8 05       		.uleb128 0x5
 1214 02f9 03       		.byte	0x3
 1215 02fa 00000000 		.4byte	CurrentTest
 1216 02fe 00       		.byte	0
 1217              		.section	.debug_abbrev,"",%progbits
 1218              	.Ldebug_abbrev0:
 1219 0000 01       		.uleb128 0x1
 1220 0001 11       		.uleb128 0x11
 1221 0002 01       		.byte	0x1
 1222 0003 25       		.uleb128 0x25
 1223 0004 0E       		.uleb128 0xe
 1224 0005 13       		.uleb128 0x13
 1225 0006 0B       		.uleb128 0xb
 1226 0007 03       		.uleb128 0x3
 1227 0008 0E       		.uleb128 0xe
 1228 0009 1B       		.uleb128 0x1b
 1229 000a 0E       		.uleb128 0xe
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 32


 1230 000b 55       		.uleb128 0x55
 1231 000c 17       		.uleb128 0x17
 1232 000d 11       		.uleb128 0x11
 1233 000e 01       		.uleb128 0x1
 1234 000f 10       		.uleb128 0x10
 1235 0010 17       		.uleb128 0x17
 1236 0011 00       		.byte	0
 1237 0012 00       		.byte	0
 1238 0013 02       		.uleb128 0x2
 1239 0014 24       		.uleb128 0x24
 1240 0015 00       		.byte	0
 1241 0016 0B       		.uleb128 0xb
 1242 0017 0B       		.uleb128 0xb
 1243 0018 3E       		.uleb128 0x3e
 1244 0019 0B       		.uleb128 0xb
 1245 001a 03       		.uleb128 0x3
 1246 001b 08       		.uleb128 0x8
 1247 001c 00       		.byte	0
 1248 001d 00       		.byte	0
 1249 001e 03       		.uleb128 0x3
 1250 001f 24       		.uleb128 0x24
 1251 0020 00       		.byte	0
 1252 0021 0B       		.uleb128 0xb
 1253 0022 0B       		.uleb128 0xb
 1254 0023 3E       		.uleb128 0x3e
 1255 0024 0B       		.uleb128 0xb
 1256 0025 03       		.uleb128 0x3
 1257 0026 0E       		.uleb128 0xe
 1258 0027 00       		.byte	0
 1259 0028 00       		.byte	0
 1260 0029 04       		.uleb128 0x4
 1261 002a 16       		.uleb128 0x16
 1262 002b 00       		.byte	0
 1263 002c 03       		.uleb128 0x3
 1264 002d 0E       		.uleb128 0xe
 1265 002e 3A       		.uleb128 0x3a
 1266 002f 0B       		.uleb128 0xb
 1267 0030 3B       		.uleb128 0x3b
 1268 0031 0B       		.uleb128 0xb
 1269 0032 49       		.uleb128 0x49
 1270 0033 13       		.uleb128 0x13
 1271 0034 00       		.byte	0
 1272 0035 00       		.byte	0
 1273 0036 05       		.uleb128 0x5
 1274 0037 0F       		.uleb128 0xf
 1275 0038 00       		.byte	0
 1276 0039 0B       		.uleb128 0xb
 1277 003a 0B       		.uleb128 0xb
 1278 003b 49       		.uleb128 0x49
 1279 003c 13       		.uleb128 0x13
 1280 003d 00       		.byte	0
 1281 003e 00       		.byte	0
 1282 003f 06       		.uleb128 0x6
 1283 0040 15       		.uleb128 0x15
 1284 0041 00       		.byte	0
 1285 0042 27       		.uleb128 0x27
 1286 0043 19       		.uleb128 0x19
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 33


 1287 0044 00       		.byte	0
 1288 0045 00       		.byte	0
 1289 0046 07       		.uleb128 0x7
 1290 0047 16       		.uleb128 0x16
 1291 0048 00       		.byte	0
 1292 0049 03       		.uleb128 0x3
 1293 004a 0E       		.uleb128 0xe
 1294 004b 3A       		.uleb128 0x3a
 1295 004c 0B       		.uleb128 0xb
 1296 004d 3B       		.uleb128 0x3b
 1297 004e 05       		.uleb128 0x5
 1298 004f 49       		.uleb128 0x49
 1299 0050 13       		.uleb128 0x13
 1300 0051 00       		.byte	0
 1301 0052 00       		.byte	0
 1302 0053 08       		.uleb128 0x8
 1303 0054 35       		.uleb128 0x35
 1304 0055 00       		.byte	0
 1305 0056 49       		.uleb128 0x49
 1306 0057 13       		.uleb128 0x13
 1307 0058 00       		.byte	0
 1308 0059 00       		.byte	0
 1309 005a 09       		.uleb128 0x9
 1310 005b 13       		.uleb128 0x13
 1311 005c 01       		.byte	0x1
 1312 005d 03       		.uleb128 0x3
 1313 005e 0E       		.uleb128 0xe
 1314 005f 0B       		.uleb128 0xb
 1315 0060 0B       		.uleb128 0xb
 1316 0061 3A       		.uleb128 0x3a
 1317 0062 0B       		.uleb128 0xb
 1318 0063 3B       		.uleb128 0x3b
 1319 0064 0B       		.uleb128 0xb
 1320 0065 01       		.uleb128 0x1
 1321 0066 13       		.uleb128 0x13
 1322 0067 00       		.byte	0
 1323 0068 00       		.byte	0
 1324 0069 0A       		.uleb128 0xa
 1325 006a 0D       		.uleb128 0xd
 1326 006b 00       		.byte	0
 1327 006c 03       		.uleb128 0x3
 1328 006d 0E       		.uleb128 0xe
 1329 006e 3A       		.uleb128 0x3a
 1330 006f 0B       		.uleb128 0xb
 1331 0070 3B       		.uleb128 0x3b
 1332 0071 0B       		.uleb128 0xb
 1333 0072 49       		.uleb128 0x49
 1334 0073 13       		.uleb128 0x13
 1335 0074 38       		.uleb128 0x38
 1336 0075 0B       		.uleb128 0xb
 1337 0076 00       		.byte	0
 1338 0077 00       		.byte	0
 1339 0078 0B       		.uleb128 0xb
 1340 0079 04       		.uleb128 0x4
 1341 007a 01       		.byte	0x1
 1342 007b 03       		.uleb128 0x3
 1343 007c 0E       		.uleb128 0xe
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 34


 1344 007d 0B       		.uleb128 0xb
 1345 007e 0B       		.uleb128 0xb
 1346 007f 49       		.uleb128 0x49
 1347 0080 13       		.uleb128 0x13
 1348 0081 3A       		.uleb128 0x3a
 1349 0082 0B       		.uleb128 0xb
 1350 0083 3B       		.uleb128 0x3b
 1351 0084 0B       		.uleb128 0xb
 1352 0085 01       		.uleb128 0x1
 1353 0086 13       		.uleb128 0x13
 1354 0087 00       		.byte	0
 1355 0088 00       		.byte	0
 1356 0089 0C       		.uleb128 0xc
 1357 008a 28       		.uleb128 0x28
 1358 008b 00       		.byte	0
 1359 008c 03       		.uleb128 0x3
 1360 008d 0E       		.uleb128 0xe
 1361 008e 1C       		.uleb128 0x1c
 1362 008f 0B       		.uleb128 0xb
 1363 0090 00       		.byte	0
 1364 0091 00       		.byte	0
 1365 0092 0D       		.uleb128 0xd
 1366 0093 2E       		.uleb128 0x2e
 1367 0094 00       		.byte	0
 1368 0095 3F       		.uleb128 0x3f
 1369 0096 19       		.uleb128 0x19
 1370 0097 03       		.uleb128 0x3
 1371 0098 0E       		.uleb128 0xe
 1372 0099 3A       		.uleb128 0x3a
 1373 009a 0B       		.uleb128 0xb
 1374 009b 3B       		.uleb128 0x3b
 1375 009c 0B       		.uleb128 0xb
 1376 009d 27       		.uleb128 0x27
 1377 009e 19       		.uleb128 0x19
 1378 009f 11       		.uleb128 0x11
 1379 00a0 01       		.uleb128 0x1
 1380 00a1 12       		.uleb128 0x12
 1381 00a2 06       		.uleb128 0x6
 1382 00a3 40       		.uleb128 0x40
 1383 00a4 18       		.uleb128 0x18
 1384 00a5 9642     		.uleb128 0x2116
 1385 00a7 19       		.uleb128 0x19
 1386 00a8 00       		.byte	0
 1387 00a9 00       		.byte	0
 1388 00aa 0E       		.uleb128 0xe
 1389 00ab 2E       		.uleb128 0x2e
 1390 00ac 01       		.byte	0x1
 1391 00ad 3F       		.uleb128 0x3f
 1392 00ae 19       		.uleb128 0x19
 1393 00af 03       		.uleb128 0x3
 1394 00b0 0E       		.uleb128 0xe
 1395 00b1 3A       		.uleb128 0x3a
 1396 00b2 0B       		.uleb128 0xb
 1397 00b3 3B       		.uleb128 0x3b
 1398 00b4 0B       		.uleb128 0xb
 1399 00b5 27       		.uleb128 0x27
 1400 00b6 19       		.uleb128 0x19
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 35


 1401 00b7 11       		.uleb128 0x11
 1402 00b8 01       		.uleb128 0x1
 1403 00b9 12       		.uleb128 0x12
 1404 00ba 06       		.uleb128 0x6
 1405 00bb 40       		.uleb128 0x40
 1406 00bc 18       		.uleb128 0x18
 1407 00bd 9642     		.uleb128 0x2116
 1408 00bf 19       		.uleb128 0x19
 1409 00c0 01       		.uleb128 0x1
 1410 00c1 13       		.uleb128 0x13
 1411 00c2 00       		.byte	0
 1412 00c3 00       		.byte	0
 1413 00c4 0F       		.uleb128 0xf
 1414 00c5 05       		.uleb128 0x5
 1415 00c6 00       		.byte	0
 1416 00c7 03       		.uleb128 0x3
 1417 00c8 0E       		.uleb128 0xe
 1418 00c9 3A       		.uleb128 0x3a
 1419 00ca 0B       		.uleb128 0xb
 1420 00cb 3B       		.uleb128 0x3b
 1421 00cc 0B       		.uleb128 0xb
 1422 00cd 49       		.uleb128 0x49
 1423 00ce 13       		.uleb128 0x13
 1424 00cf 02       		.uleb128 0x2
 1425 00d0 18       		.uleb128 0x18
 1426 00d1 00       		.byte	0
 1427 00d2 00       		.byte	0
 1428 00d3 10       		.uleb128 0x10
 1429 00d4 2E       		.uleb128 0x2e
 1430 00d5 01       		.byte	0x1
 1431 00d6 3F       		.uleb128 0x3f
 1432 00d7 19       		.uleb128 0x19
 1433 00d8 03       		.uleb128 0x3
 1434 00d9 0E       		.uleb128 0xe
 1435 00da 3A       		.uleb128 0x3a
 1436 00db 0B       		.uleb128 0xb
 1437 00dc 3B       		.uleb128 0x3b
 1438 00dd 05       		.uleb128 0x5
 1439 00de 27       		.uleb128 0x27
 1440 00df 19       		.uleb128 0x19
 1441 00e0 11       		.uleb128 0x11
 1442 00e1 01       		.uleb128 0x1
 1443 00e2 12       		.uleb128 0x12
 1444 00e3 06       		.uleb128 0x6
 1445 00e4 40       		.uleb128 0x40
 1446 00e5 18       		.uleb128 0x18
 1447 00e6 9742     		.uleb128 0x2117
 1448 00e8 19       		.uleb128 0x19
 1449 00e9 01       		.uleb128 0x1
 1450 00ea 13       		.uleb128 0x13
 1451 00eb 00       		.byte	0
 1452 00ec 00       		.byte	0
 1453 00ed 11       		.uleb128 0x11
 1454 00ee 05       		.uleb128 0x5
 1455 00ef 00       		.byte	0
 1456 00f0 03       		.uleb128 0x3
 1457 00f1 0E       		.uleb128 0xe
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 36


 1458 00f2 3A       		.uleb128 0x3a
 1459 00f3 0B       		.uleb128 0xb
 1460 00f4 3B       		.uleb128 0x3b
 1461 00f5 05       		.uleb128 0x5
 1462 00f6 49       		.uleb128 0x49
 1463 00f7 13       		.uleb128 0x13
 1464 00f8 02       		.uleb128 0x2
 1465 00f9 18       		.uleb128 0x18
 1466 00fa 00       		.byte	0
 1467 00fb 00       		.byte	0
 1468 00fc 12       		.uleb128 0x12
 1469 00fd 34       		.uleb128 0x34
 1470 00fe 00       		.byte	0
 1471 00ff 03       		.uleb128 0x3
 1472 0100 0E       		.uleb128 0xe
 1473 0101 3A       		.uleb128 0x3a
 1474 0102 0B       		.uleb128 0xb
 1475 0103 3B       		.uleb128 0x3b
 1476 0104 05       		.uleb128 0x5
 1477 0105 49       		.uleb128 0x49
 1478 0106 13       		.uleb128 0x13
 1479 0107 02       		.uleb128 0x2
 1480 0108 18       		.uleb128 0x18
 1481 0109 00       		.byte	0
 1482 010a 00       		.byte	0
 1483 010b 13       		.uleb128 0x13
 1484 010c 2E       		.uleb128 0x2e
 1485 010d 01       		.byte	0x1
 1486 010e 3F       		.uleb128 0x3f
 1487 010f 19       		.uleb128 0x19
 1488 0110 03       		.uleb128 0x3
 1489 0111 0E       		.uleb128 0xe
 1490 0112 3A       		.uleb128 0x3a
 1491 0113 0B       		.uleb128 0xb
 1492 0114 3B       		.uleb128 0x3b
 1493 0115 05       		.uleb128 0x5
 1494 0116 27       		.uleb128 0x27
 1495 0117 19       		.uleb128 0x19
 1496 0118 49       		.uleb128 0x49
 1497 0119 13       		.uleb128 0x13
 1498 011a 11       		.uleb128 0x11
 1499 011b 01       		.uleb128 0x1
 1500 011c 12       		.uleb128 0x12
 1501 011d 06       		.uleb128 0x6
 1502 011e 40       		.uleb128 0x40
 1503 011f 18       		.uleb128 0x18
 1504 0120 9742     		.uleb128 0x2117
 1505 0122 19       		.uleb128 0x19
 1506 0123 01       		.uleb128 0x1
 1507 0124 13       		.uleb128 0x13
 1508 0125 00       		.byte	0
 1509 0126 00       		.byte	0
 1510 0127 14       		.uleb128 0x14
 1511 0128 2E       		.uleb128 0x2e
 1512 0129 00       		.byte	0
 1513 012a 3F       		.uleb128 0x3f
 1514 012b 19       		.uleb128 0x19
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 37


 1515 012c 03       		.uleb128 0x3
 1516 012d 0E       		.uleb128 0xe
 1517 012e 3A       		.uleb128 0x3a
 1518 012f 0B       		.uleb128 0xb
 1519 0130 3B       		.uleb128 0x3b
 1520 0131 05       		.uleb128 0x5
 1521 0132 27       		.uleb128 0x27
 1522 0133 19       		.uleb128 0x19
 1523 0134 11       		.uleb128 0x11
 1524 0135 01       		.uleb128 0x1
 1525 0136 12       		.uleb128 0x12
 1526 0137 06       		.uleb128 0x6
 1527 0138 40       		.uleb128 0x40
 1528 0139 18       		.uleb128 0x18
 1529 013a 9742     		.uleb128 0x2117
 1530 013c 19       		.uleb128 0x19
 1531 013d 00       		.byte	0
 1532 013e 00       		.byte	0
 1533 013f 15       		.uleb128 0x15
 1534 0140 2E       		.uleb128 0x2e
 1535 0141 00       		.byte	0
 1536 0142 3F       		.uleb128 0x3f
 1537 0143 19       		.uleb128 0x19
 1538 0144 03       		.uleb128 0x3
 1539 0145 0E       		.uleb128 0xe
 1540 0146 3A       		.uleb128 0x3a
 1541 0147 0B       		.uleb128 0xb
 1542 0148 3B       		.uleb128 0x3b
 1543 0149 05       		.uleb128 0x5
 1544 014a 27       		.uleb128 0x27
 1545 014b 19       		.uleb128 0x19
 1546 014c 49       		.uleb128 0x49
 1547 014d 13       		.uleb128 0x13
 1548 014e 11       		.uleb128 0x11
 1549 014f 01       		.uleb128 0x1
 1550 0150 12       		.uleb128 0x12
 1551 0151 06       		.uleb128 0x6
 1552 0152 40       		.uleb128 0x40
 1553 0153 18       		.uleb128 0x18
 1554 0154 9742     		.uleb128 0x2117
 1555 0156 19       		.uleb128 0x19
 1556 0157 00       		.byte	0
 1557 0158 00       		.byte	0
 1558 0159 16       		.uleb128 0x16
 1559 015a 34       		.uleb128 0x34
 1560 015b 00       		.byte	0
 1561 015c 03       		.uleb128 0x3
 1562 015d 0E       		.uleb128 0xe
 1563 015e 3A       		.uleb128 0x3a
 1564 015f 0B       		.uleb128 0xb
 1565 0160 3B       		.uleb128 0x3b
 1566 0161 0B       		.uleb128 0xb
 1567 0162 49       		.uleb128 0x49
 1568 0163 13       		.uleb128 0x13
 1569 0164 02       		.uleb128 0x2
 1570 0165 18       		.uleb128 0x18
 1571 0166 00       		.byte	0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 38


 1572 0167 00       		.byte	0
 1573 0168 17       		.uleb128 0x17
 1574 0169 34       		.uleb128 0x34
 1575 016a 00       		.byte	0
 1576 016b 03       		.uleb128 0x3
 1577 016c 0E       		.uleb128 0xe
 1578 016d 3A       		.uleb128 0x3a
 1579 016e 0B       		.uleb128 0xb
 1580 016f 3B       		.uleb128 0x3b
 1581 0170 05       		.uleb128 0x5
 1582 0171 49       		.uleb128 0x49
 1583 0172 13       		.uleb128 0x13
 1584 0173 3F       		.uleb128 0x3f
 1585 0174 19       		.uleb128 0x19
 1586 0175 3C       		.uleb128 0x3c
 1587 0176 19       		.uleb128 0x19
 1588 0177 00       		.byte	0
 1589 0178 00       		.byte	0
 1590 0179 18       		.uleb128 0x18
 1591 017a 34       		.uleb128 0x34
 1592 017b 00       		.byte	0
 1593 017c 03       		.uleb128 0x3
 1594 017d 0E       		.uleb128 0xe
 1595 017e 3A       		.uleb128 0x3a
 1596 017f 0B       		.uleb128 0xb
 1597 0180 3B       		.uleb128 0x3b
 1598 0181 0B       		.uleb128 0xb
 1599 0182 49       		.uleb128 0x49
 1600 0183 13       		.uleb128 0x13
 1601 0184 3F       		.uleb128 0x3f
 1602 0185 19       		.uleb128 0x19
 1603 0186 02       		.uleb128 0x2
 1604 0187 18       		.uleb128 0x18
 1605 0188 00       		.byte	0
 1606 0189 00       		.byte	0
 1607 018a 00       		.byte	0
 1608              		.section	.debug_aranges,"",%progbits
 1609 0000 7C000000 		.4byte	0x7c
 1610 0004 0200     		.2byte	0x2
 1611 0006 00000000 		.4byte	.Ldebug_info0
 1612 000a 04       		.byte	0x4
 1613 000b 00       		.byte	0
 1614 000c 0000     		.2byte	0
 1615 000e 0000     		.2byte	0
 1616 0010 00000000 		.4byte	.LFB63
 1617 0014 20000000 		.4byte	.LFE63-.LFB63
 1618 0018 00000000 		.4byte	.LFB64
 1619 001c 24000000 		.4byte	.LFE64-.LFB64
 1620 0020 00000000 		.4byte	.LFB65
 1621 0024 18000000 		.4byte	.LFE65-.LFB65
 1622 0028 00000000 		.4byte	.LFB66
 1623 002c E8010000 		.4byte	.LFE66-.LFB66
 1624 0030 00000000 		.4byte	.LFB67
 1625 0034 24000000 		.4byte	.LFE67-.LFB67
 1626 0038 00000000 		.4byte	.LFB68
 1627 003c 20000000 		.4byte	.LFE68-.LFB68
 1628 0040 00000000 		.4byte	.LFB69
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 39


 1629 0044 24000000 		.4byte	.LFE69-.LFB69
 1630 0048 00000000 		.4byte	.LFB70
 1631 004c 20000000 		.4byte	.LFE70-.LFB70
 1632 0050 00000000 		.4byte	.LFB71
 1633 0054 18000000 		.4byte	.LFE71-.LFB71
 1634 0058 00000000 		.4byte	.LFB72
 1635 005c 24000000 		.4byte	.LFE72-.LFB72
 1636 0060 00000000 		.4byte	.LFB73
 1637 0064 18000000 		.4byte	.LFE73-.LFB73
 1638 0068 00000000 		.4byte	.LFB74
 1639 006c 18000000 		.4byte	.LFE74-.LFB74
 1640 0070 00000000 		.4byte	.LFB75
 1641 0074 18000000 		.4byte	.LFE75-.LFB75
 1642 0078 00000000 		.4byte	0
 1643 007c 00000000 		.4byte	0
 1644              		.section	.debug_ranges,"",%progbits
 1645              	.Ldebug_ranges0:
 1646 0000 00000000 		.4byte	.LFB63
 1647 0004 20000000 		.4byte	.LFE63
 1648 0008 00000000 		.4byte	.LFB64
 1649 000c 24000000 		.4byte	.LFE64
 1650 0010 00000000 		.4byte	.LFB65
 1651 0014 18000000 		.4byte	.LFE65
 1652 0018 00000000 		.4byte	.LFB66
 1653 001c E8010000 		.4byte	.LFE66
 1654 0020 00000000 		.4byte	.LFB67
 1655 0024 24000000 		.4byte	.LFE67
 1656 0028 00000000 		.4byte	.LFB68
 1657 002c 20000000 		.4byte	.LFE68
 1658 0030 00000000 		.4byte	.LFB69
 1659 0034 24000000 		.4byte	.LFE69
 1660 0038 00000000 		.4byte	.LFB70
 1661 003c 20000000 		.4byte	.LFE70
 1662 0040 00000000 		.4byte	.LFB71
 1663 0044 18000000 		.4byte	.LFE71
 1664 0048 00000000 		.4byte	.LFB72
 1665 004c 24000000 		.4byte	.LFE72
 1666 0050 00000000 		.4byte	.LFB73
 1667 0054 18000000 		.4byte	.LFE73
 1668 0058 00000000 		.4byte	.LFB74
 1669 005c 18000000 		.4byte	.LFE74
 1670 0060 00000000 		.4byte	.LFB75
 1671 0064 18000000 		.4byte	.LFE75
 1672 0068 00000000 		.4byte	0
 1673 006c 00000000 		.4byte	0
 1674              		.section	.debug_line,"",%progbits
 1675              	.Ldebug_line0:
 1676 0000 E9020000 		.section	.debug_str,"MS",%progbits,1
 1676      02006D01 
 1676      00000201 
 1676      FB0E0D00 
 1676      01010101 
 1677              	.LASF52:
 1678 0000 6973725F 		.ascii	"isr_Timer_50ms_GetState\000"
 1678      54696D65 
 1678      725F3530 
 1678      6D735F47 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 40


 1678      65745374 
 1679              	.LASF35:
 1680 0018 6973725F 		.ascii	"isr_Timer_50ms_SetPriority\000"
 1680      54696D65 
 1680      725F3530 
 1680      6D735F53 
 1680      65745072 
 1681              	.LASF19:
 1682 0033 72656733 		.ascii	"reg32\000"
 1682      3200
 1683              	.LASF42:
 1684 0039 6973725F 		.ascii	"isr_Timer_50ms_ClearPending\000"
 1684      54696D65 
 1684      725F3530 
 1684      6D735F43 
 1684      6C656172 
 1685              	.LASF47:
 1686 0055 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1686      43313120 
 1686      352E342E 
 1686      31203230 
 1686      31363036 
 1687 0088 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1687      20726576 
 1687      6973696F 
 1687      6E203233 
 1687      37373135 
 1688 00bb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1688      66756E63 
 1688      74696F6E 
 1688      2D736563 
 1688      74696F6E 
 1689              	.LASF40:
 1690 00e3 6973725F 		.ascii	"isr_Timer_50ms_Disable\000"
 1690      54696D65 
 1690      725F3530 
 1690      6D735F44 
 1690      69736162 
 1691              	.LASF26:
 1692 00fa 52544553 		.ascii	"RTEST\000"
 1692      5400
 1693              	.LASF12:
 1694 0100 5F5F696E 		.ascii	"__int32_t\000"
 1694      7433325F 
 1694      7400
 1695              	.LASF23:
 1696 010a 53746174 		.ascii	"Status\000"
 1696      757300
 1697              	.LASF28:
 1698 0111 6973725F 		.ascii	"isr_Timer_50ms_Start\000"
 1698      54696D65 
 1698      725F3530 
 1698      6D735F53 
 1698      74617274 
 1699              	.LASF22:
 1700 0126 54657374 		.ascii	"TestStep\000"
 1700      53746570 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 41


 1700      00
 1701              	.LASF51:
 1702 012f 44617461 		.ascii	"DataType\000"
 1702      54797065 
 1702      00
 1703              	.LASF37:
 1704 0138 6973725F 		.ascii	"isr_Timer_50ms_GetVector\000"
 1704      54696D65 
 1704      725F3530 
 1704      6D735F47 
 1704      65745665 
 1705              	.LASF21:
 1706 0151 53656C65 		.ascii	"SelectedTest\000"
 1706      63746564 
 1706      54657374 
 1706      00
 1707              	.LASF16:
 1708 015e 666C6F61 		.ascii	"float\000"
 1708      7400
 1709              	.LASF32:
 1710 0164 6973725F 		.ascii	"isr_Timer_50ms_SetVector\000"
 1710      54696D65 
 1710      725F3530 
 1710      6D735F53 
 1710      65745665 
 1711              	.LASF43:
 1712 017d 626C696E 		.ascii	"blinkcounter\000"
 1712      6B636F75 
 1712      6E746572 
 1712      00
 1713              	.LASF18:
 1714 018a 72656738 		.ascii	"reg8\000"
 1714      00
 1715              	.LASF27:
 1716 018f 53544553 		.ascii	"STEST\000"
 1716      5400
 1717              	.LASF8:
 1718 0195 6C6F6E67 		.ascii	"long unsigned int\000"
 1718      20756E73 
 1718      69676E65 
 1718      6420696E 
 1718      7400
 1719              	.LASF46:
 1720 01a7 43757272 		.ascii	"CurrentTest\000"
 1720      656E7454 
 1720      65737400 
 1721              	.LASF6:
 1722 01b3 73686F72 		.ascii	"short unsigned int\000"
 1722      7420756E 
 1722      7369676E 
 1722      65642069 
 1722      6E7400
 1723              	.LASF49:
 1724 01c6 433A5C55 		.ascii	"C:\\Users\\marthnick\\Desktop\\firm_F1-TestFixture\\"
 1724      73657273 
 1724      5C6D6172 
 1724      74686E69 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 42


 1724      636B5C44 
 1725 01f5 46312D54 		.ascii	"F1-TestFixture.cydsn\000"
 1725      65737446 
 1725      69787475 
 1725      72652E63 
 1725      7964736E 
 1726              	.LASF44:
 1727 020a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1727      52784275 
 1727      66666572 
 1727      00
 1728              	.LASF4:
 1729 0217 756E7369 		.ascii	"unsigned char\000"
 1729      676E6564 
 1729      20636861 
 1729      7200
 1730              	.LASF17:
 1731 0225 646F7562 		.ascii	"double\000"
 1731      6C6500
 1732              	.LASF36:
 1733 022c 7072696F 		.ascii	"priority\000"
 1733      72697479 
 1733      00
 1734              	.LASF41:
 1735 0235 6973725F 		.ascii	"isr_Timer_50ms_SetPending\000"
 1735      54696D65 
 1735      725F3530 
 1735      6D735F53 
 1735      65745065 
 1736              	.LASF15:
 1737 024f 75696E74 		.ascii	"uint32\000"
 1737      333200
 1738              	.LASF0:
 1739 0256 756E7369 		.ascii	"unsigned int\000"
 1739      676E6564 
 1739      20696E74 
 1739      00
 1740              	.LASF33:
 1741 0263 61646472 		.ascii	"address\000"
 1741      65737300 
 1742              	.LASF9:
 1743 026b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1743      206C6F6E 
 1743      6720756E 
 1743      7369676E 
 1743      65642069 
 1744              	.LASF20:
 1745 0282 63796973 		.ascii	"cyisraddress\000"
 1745      72616464 
 1745      72657373 
 1745      00
 1746              	.LASF30:
 1747 028f 6973725F 		.ascii	"isr_Timer_50ms_Interrupt\000"
 1747      54696D65 
 1747      725F3530 
 1747      6D735F49 
 1747      6E746572 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 43


 1748              	.LASF13:
 1749 02a8 696E7433 		.ascii	"int32_t\000"
 1749      325F7400 
 1750              	.LASF10:
 1751 02b0 73697A65 		.ascii	"sizetype\000"
 1751      74797065 
 1751      00
 1752              	.LASF48:
 1753 02b9 47656E65 		.ascii	"Generated_Source\\PSoC5\\isr_Timer_50ms.c\000"
 1753      72617465 
 1753      645F536F 
 1753      75726365 
 1753      5C50536F 
 1754              	.LASF1:
 1755 02e1 6C6F6E67 		.ascii	"long long int\000"
 1755      206C6F6E 
 1755      6720696E 
 1755      7400
 1756              	.LASF38:
 1757 02ef 6973725F 		.ascii	"isr_Timer_50ms_GetPriority\000"
 1757      54696D65 
 1757      725F3530 
 1757      6D735F47 
 1757      65745072 
 1758              	.LASF11:
 1759 030a 63686172 		.ascii	"char\000"
 1759      00
 1760              	.LASF34:
 1761 030f 72616D56 		.ascii	"ramVectorTable\000"
 1761      6563746F 
 1761      72546162 
 1761      6C6500
 1762              	.LASF24:
 1763 031e 53747275 		.ascii	"StructTestInfo\000"
 1763      63745465 
 1763      7374496E 
 1763      666F00
 1764              	.LASF39:
 1765 032d 6973725F 		.ascii	"isr_Timer_50ms_Enable\000"
 1765      54696D65 
 1765      725F3530 
 1765      6D735F45 
 1765      6E61626C 
 1766              	.LASF5:
 1767 0343 73686F72 		.ascii	"short int\000"
 1767      7420696E 
 1767      7400
 1768              	.LASF25:
 1769 034d 43544553 		.ascii	"CTEST\000"
 1769      5400
 1770              	.LASF14:
 1771 0353 75696E74 		.ascii	"uint8\000"
 1771      3800
 1772              	.LASF29:
 1773 0359 6973725F 		.ascii	"isr_Timer_50ms_Stop\000"
 1773      54696D65 
 1773      725F3530 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccQuNsTR.s 			page 44


 1773      6D735F53 
 1773      746F7000 
 1774              	.LASF7:
 1775 036d 6C6F6E67 		.ascii	"long int\000"
 1775      20696E74 
 1775      00
 1776              	.LASF45:
 1777 0376 54657374 		.ascii	"Test\000"
 1777      00
 1778              	.LASF50:
 1779 037b 73747275 		.ascii	"structTestInfo\000"
 1779      63745465 
 1779      7374496E 
 1779      666F00
 1780              	.LASF2:
 1781 038a 6C6F6E67 		.ascii	"long double\000"
 1781      20646F75 
 1781      626C6500 
 1782              	.LASF3:
 1783 0396 7369676E 		.ascii	"signed char\000"
 1783      65642063 
 1783      68617200 
 1784              	.LASF31:
 1785 03a2 6973725F 		.ascii	"isr_Timer_50ms_StartEx\000"
 1785      54696D65 
 1785      725F3530 
 1785      6D735F53 
 1785      74617274 
 1786              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
