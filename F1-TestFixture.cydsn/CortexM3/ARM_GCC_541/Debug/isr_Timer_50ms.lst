ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"isr_Timer_50ms.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Test,3,4
  20              		.comm	CurrentTest,3,4
  21              		.bss
  22              	blinkcounter:
  23 0000 00       		.space	1
  24              		.section	.text.isr_Timer_50ms_Start,"ax",%progbits
  25              		.align	2
  26              		.global	isr_Timer_50ms_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	isr_Timer_50ms_Start, %function
  30              	isr_Timer_50ms_Start:
  31              	.LFB63:
  32              		.file 1 "Generated_Source\\PSoC5\\isr_Timer_50ms.c"
   1:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/isr_Timer_50ms.c **** * File Name: isr_Timer_50ms.c  
   3:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Version 1.70
   4:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
   5:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Description:
   6:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
   8:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
   9:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Note:
  10:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  11:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
  12:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/isr_Timer_50ms.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/isr_Timer_50ms.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/isr_Timer_50ms.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  18:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  19:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include <isr_Timer_50ms.h>
  22:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include "cyapicallbacks.h"
  23:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  24:Generated_Source\PSoC5/isr_Timer_50ms.c **** #if !defined(isr_Timer_50ms__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 2


  26:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/isr_Timer_50ms.c **** /* `#START isr_Timer_50ms_intc` */
  30:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  31:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "CommonVariables.h"
  32:Generated_Source\PSoC5/isr_Timer_50ms.c ****     //#include "UART_230400_Functions.h"
  33:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "ControllerTest.h"
  34:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "RelayTest.h"
  35:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "SirenTest.h"
  36:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  37:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #define BLINKTIME   2       // How many 50msec periods of on time
  38:Generated_Source\PSoC5/isr_Timer_50ms.c ****      
  39:Generated_Source\PSoC5/isr_Timer_50ms.c ****     //uint8 SelectedTest;
  40:Generated_Source\PSoC5/isr_Timer_50ms.c ****     //struct structTestInfo CurrentTest;
  41:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  42:Generated_Source\PSoC5/isr_Timer_50ms.c ****     StructTestInfo CurrentTest;
  43:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  44:Generated_Source\PSoC5/isr_Timer_50ms.c ****     static uint8 blinkcounter = 0;
  45:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  46:Generated_Source\PSoC5/isr_Timer_50ms.c ****     enum DataType
  47:Generated_Source\PSoC5/isr_Timer_50ms.c ****     { 
  48:Generated_Source\PSoC5/isr_Timer_50ms.c ****         CTEST, 
  49:Generated_Source\PSoC5/isr_Timer_50ms.c ****         RTEST,
  50:Generated_Source\PSoC5/isr_Timer_50ms.c ****         STEST
  51:Generated_Source\PSoC5/isr_Timer_50ms.c ****     };
  52:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  53:Generated_Source\PSoC5/isr_Timer_50ms.c **** /* `#END` */
  54:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  55:Generated_Source\PSoC5/isr_Timer_50ms.c **** #ifndef CYINT_IRQ_BASE
  56:Generated_Source\PSoC5/isr_Timer_50ms.c **** #define CYINT_IRQ_BASE      16
  57:Generated_Source\PSoC5/isr_Timer_50ms.c **** #endif /* CYINT_IRQ_BASE */
  58:Generated_Source\PSoC5/isr_Timer_50ms.c **** #ifndef CYINT_VECT_TABLE
  59:Generated_Source\PSoC5/isr_Timer_50ms.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  60:Generated_Source\PSoC5/isr_Timer_50ms.c **** #endif /* CYINT_VECT_TABLE */
  61:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  62:Generated_Source\PSoC5/isr_Timer_50ms.c **** /* Declared in startup, used to set unused interrupts to. */
  63:Generated_Source\PSoC5/isr_Timer_50ms.c **** CY_ISR_PROTO(IntDefaultHandler);
  64:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  65:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  66:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
  67:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Start
  68:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
  69:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  70:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
  71:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  72:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  sets the default interrupt vector, sets the priority from the value in the
  73:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  74:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  interrupt controller.
  75:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  76:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
  77:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
  78:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  79:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
  80:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
  81:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  82:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 3


  83:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Start(void)
  84:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
  33              		.loc 1 84 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* For all we know the interrupt is active. */
  86:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Disable();
  43              		.loc 1 86 0
  44 0004 FFF7FEFF 		bl	isr_Timer_50ms_Disable
  87:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  88:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the ISR to point to the isr_Timer_50ms Interrupt. */
  89:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetVector(&isr_Timer_50ms_Interrupt);
  45              		.loc 1 89 0
  46 0008 0448     		ldr	r0, .L2
  47 000a FFF7FEFF 		bl	isr_Timer_50ms_SetVector
  90:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  91:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the priority. */
  92:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetPriority((uint8)isr_Timer_50ms_INTC_PRIOR_NUMBER);
  48              		.loc 1 92 0
  49 000e 0720     		movs	r0, #7
  50 0010 FFF7FEFF 		bl	isr_Timer_50ms_SetPriority
  93:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  94:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Enable it. */
  95:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Enable();
  51              		.loc 1 95 0
  52 0014 FFF7FEFF 		bl	isr_Timer_50ms_Enable
  96:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
  53              		.loc 1 96 0
  54 0018 00BF     		nop
  55 001a 80BD     		pop	{r7, pc}
  56              	.L3:
  57              		.align	2
  58              	.L2:
  59 001c 00000000 		.word	isr_Timer_50ms_Interrupt
  60              		.cfi_endproc
  61              	.LFE63:
  62              		.size	isr_Timer_50ms_Start, .-isr_Timer_50ms_Start
  63              		.section	.text.isr_Timer_50ms_StartEx,"ax",%progbits
  64              		.align	2
  65              		.global	isr_Timer_50ms_StartEx
  66              		.thumb
  67              		.thumb_func
  68              		.type	isr_Timer_50ms_StartEx, %function
  69              	isr_Timer_50ms_StartEx:
  70              	.LFB64:
  97:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  98:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  99:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 100:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_StartEx
 101:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 4


 102:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 103:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 104:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
 105:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
 106:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
 107:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  the interrupt to the interrupt controller.
 108:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  
 109:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 110:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  used to provide consistent definition across compilers:
 111:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  
 112:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Function definition example:
 113:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   CY_ISR(MyISR)
 114:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   {
 115:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   }
 116:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Function prototype example:
 117:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   CY_ISR_PROTO(MyISR);
 118:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 119:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
 120:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   address: Address of the ISR to set in the interrupt vector table.
 121:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 122:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 123:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 124:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 125:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 126:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_StartEx(cyisraddress address)
 127:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
  71              		.loc 1 127 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 8
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 82B0     		sub	sp, sp, #8
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  83 0006 7860     		str	r0, [r7, #4]
 128:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* For all we know the interrupt is active. */
 129:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Disable();
  84              		.loc 1 129 0
  85 0008 FFF7FEFF 		bl	isr_Timer_50ms_Disable
 130:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 131:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the ISR to point to the isr_Timer_50ms Interrupt. */
 132:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetVector(address);
  86              		.loc 1 132 0
  87 000c 7868     		ldr	r0, [r7, #4]
  88 000e FFF7FEFF 		bl	isr_Timer_50ms_SetVector
 133:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 134:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the priority. */
 135:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetPriority((uint8)isr_Timer_50ms_INTC_PRIOR_NUMBER);
  89              		.loc 1 135 0
  90 0012 0720     		movs	r0, #7
  91 0014 FFF7FEFF 		bl	isr_Timer_50ms_SetPriority
 136:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 137:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Enable it. */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 5


 138:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Enable();
  92              		.loc 1 138 0
  93 0018 FFF7FEFF 		bl	isr_Timer_50ms_Enable
 139:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
  94              		.loc 1 139 0
  95 001c 00BF     		nop
  96 001e 0837     		adds	r7, r7, #8
  97              		.cfi_def_cfa_offset 8
  98 0020 BD46     		mov	sp, r7
  99              		.cfi_def_cfa_register 13
 100              		@ sp needed
 101 0022 80BD     		pop	{r7, pc}
 102              		.cfi_endproc
 103              	.LFE64:
 104              		.size	isr_Timer_50ms_StartEx, .-isr_Timer_50ms_StartEx
 105              		.section	.text.isr_Timer_50ms_Stop,"ax",%progbits
 106              		.align	2
 107              		.global	isr_Timer_50ms_Stop
 108              		.thumb
 109              		.thumb_func
 110              		.type	isr_Timer_50ms_Stop, %function
 111              	isr_Timer_50ms_Stop:
 112              	.LFB65:
 140:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 141:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 142:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 143:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Stop
 144:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 145:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 146:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 147:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Disables and removes the interrupt.
 148:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 149:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
 150:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 151:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 152:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 153:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 154:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 155:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 156:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Stop(void)
 157:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 113              		.loc 1 157 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 00AF     		add	r7, sp, #0
 122              		.cfi_def_cfa_register 7
 158:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Disable this interrupt. */
 159:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Disable();
 123              		.loc 1 159 0
 124 0004 FFF7FEFF 		bl	isr_Timer_50ms_Disable
 160:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 161:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the ISR to point to the passive one. */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 6


 162:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetVector(&IntDefaultHandler);
 125              		.loc 1 162 0
 126 0008 0248     		ldr	r0, .L6
 127 000a FFF7FEFF 		bl	isr_Timer_50ms_SetVector
 163:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 128              		.loc 1 163 0
 129 000e 00BF     		nop
 130 0010 80BD     		pop	{r7, pc}
 131              	.L7:
 132 0012 00BF     		.align	2
 133              	.L6:
 134 0014 00000000 		.word	IntDefaultHandler
 135              		.cfi_endproc
 136              	.LFE65:
 137              		.size	isr_Timer_50ms_Stop, .-isr_Timer_50ms_Stop
 138              		.section	.text.isr_Timer_50ms_Interrupt,"ax",%progbits
 139              		.align	2
 140              		.global	isr_Timer_50ms_Interrupt
 141              		.thumb
 142              		.thumb_func
 143              		.type	isr_Timer_50ms_Interrupt, %function
 144              	isr_Timer_50ms_Interrupt:
 145              	.LFB66:
 164:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 165:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 166:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Interrupt
 168:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 169:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 170:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 171:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   The default Interrupt Service Routine for isr_Timer_50ms.
 172:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 173:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Add custom code between the coments to keep the next version of this file
 174:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   from over writting your code.
 175:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 176:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
 177:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 178:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 179:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 180:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 181:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 182:Generated_Source\PSoC5/isr_Timer_50ms.c **** CY_ISR(isr_Timer_50ms_Interrupt)
 183:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 146              		.loc 1 183 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 184:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #ifdef isr_Timer_50ms_INTERRUPT_INTERRUPT_CALLBACK
 185:Generated_Source\PSoC5/isr_Timer_50ms.c ****         isr_Timer_50ms_Interrupt_InterruptCallback();
 186:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #endif /* isr_Timer_50ms_INTERRUPT_INTERRUPT_CALLBACK */ 
 187:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 7


 188:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /*  Place your Interrupt code here. */
 189:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* `#START isr_Timer_50ms_Interrupt` */
 190:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 191:Generated_Source\PSoC5/isr_Timer_50ms.c ****     blinkcounter++;
 156              		.loc 1 191 0
 157 0004 A04B     		ldr	r3, .L41
 158 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159 0008 0133     		adds	r3, r3, #1
 160 000a DAB2     		uxtb	r2, r3
 161 000c 9E4B     		ldr	r3, .L41
 162 000e 1A70     		strb	r2, [r3]
 192:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 193:Generated_Source\PSoC5/isr_Timer_50ms.c ****     if(CurrentTest.SelectedTest == 0)
 163              		.loc 1 193 0
 164 0010 9E4B     		ldr	r3, .L41+4
 165 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 166 0014 002B     		cmp	r3, #0
 167 0016 02D1     		bne	.L9
 194:Generated_Source\PSoC5/isr_Timer_50ms.c ****         CTest_50ms_isr();
 168              		.loc 1 194 0
 169 0018 FFF7FEFF 		bl	CTest_50ms_isr
 170 001c 0CE0     		b	.L10
 171              	.L9:
 195:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.SelectedTest == 1)
 172              		.loc 1 195 0
 173 001e 9B4B     		ldr	r3, .L41+4
 174 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 175 0022 012B     		cmp	r3, #1
 176 0024 02D1     		bne	.L11
 196:Generated_Source\PSoC5/isr_Timer_50ms.c ****         RTest_50ms_isr();
 177              		.loc 1 196 0
 178 0026 FFF7FEFF 		bl	RTest_50ms_isr
 179 002a 05E0     		b	.L10
 180              	.L11:
 197:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.SelectedTest == 2)
 181              		.loc 1 197 0
 182 002c 974B     		ldr	r3, .L41+4
 183 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 184 0030 022B     		cmp	r3, #2
 185 0032 01D1     		bne	.L10
 198:Generated_Source\PSoC5/isr_Timer_50ms.c ****         STest_50ms_isr();
 186              		.loc 1 198 0
 187 0034 FFF7FEFF 		bl	STest_50ms_isr
 188              	.L10:
 199:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 200:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 201:Generated_Source\PSoC5/isr_Timer_50ms.c **** //    LED1_Write(0);  // Red
 202:Generated_Source\PSoC5/isr_Timer_50ms.c **** //    LED2_Write(0);  // Amber
 203:Generated_Source\PSoC5/isr_Timer_50ms.c **** //    LED3_Write(1);  // Green
 204:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 205:Generated_Source\PSoC5/isr_Timer_50ms.c ****     // *** Add LED stuff here
 206:Generated_Source\PSoC5/isr_Timer_50ms.c ****     if( (CurrentTest.Status == 'I') || (CurrentTest.Status == 'B') || (CurrentTest.Status == 'U') )
 189              		.loc 1 206 0
 190 0038 944B     		ldr	r3, .L41+4
 191 003a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 192 003c 492B     		cmp	r3, #73
 193 003e 07D0     		beq	.L12
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 8


 194              		.loc 1 206 0 is_stmt 0 discriminator 1
 195 0040 924B     		ldr	r3, .L41+4
 196 0042 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 197 0044 422B     		cmp	r3, #66
 198 0046 03D0     		beq	.L12
 199              		.loc 1 206 0 discriminator 2
 200 0048 904B     		ldr	r3, .L41+4
 201 004a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 202 004c 552B     		cmp	r3, #85
 203 004e 09D1     		bne	.L13
 204              	.L12:
 207:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 208:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED1_Write(0);
 205              		.loc 1 208 0 is_stmt 1
 206 0050 0020     		movs	r0, #0
 207 0052 FFF7FEFF 		bl	LED1_Write
 209:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED2_Write(1);
 208              		.loc 1 209 0
 209 0056 0120     		movs	r0, #1
 210 0058 FFF7FEFF 		bl	LED2_Write
 210:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED3_Write(0); 
 211              		.loc 1 210 0
 212 005c 0020     		movs	r0, #0
 213 005e FFF7FEFF 		bl	LED3_Write
 214 0062 08E1     		b	.L14
 215              	.L13:
 211:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 212:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'W')
 216              		.loc 1 212 0
 217 0064 894B     		ldr	r3, .L41+4
 218 0066 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 219 0068 572B     		cmp	r3, #87
 220 006a 28D1     		bne	.L15
 213:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 214:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 221              		.loc 1 214 0
 222 006c 864B     		ldr	r3, .L41
 223 006e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 224 0070 012B     		cmp	r3, #1
 225 0072 09D8     		bhi	.L16
 215:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 216:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 226              		.loc 1 216 0
 227 0074 0020     		movs	r0, #0
 228 0076 FFF7FEFF 		bl	LED1_Write
 217:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(1); 
 229              		.loc 1 217 0
 230 007a 0120     		movs	r0, #1
 231 007c FFF7FEFF 		bl	LED2_Write
 218:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 232              		.loc 1 218 0
 233 0080 0020     		movs	r0, #0
 234 0082 FFF7FEFF 		bl	LED3_Write
 235 0086 F6E0     		b	.L14
 236              	.L16:
 219:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 220:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 9


 237              		.loc 1 220 0
 238 0088 7F4B     		ldr	r3, .L41
 239 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 240 008c 022B     		cmp	r3, #2
 241 008e 0DD9     		bls	.L18
 242              		.loc 1 220 0 is_stmt 0 discriminator 1
 243 0090 7D4B     		ldr	r3, .L41
 244 0092 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 245 0094 032B     		cmp	r3, #3
 246 0096 09D8     		bhi	.L18
 221:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 222:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 247              		.loc 1 222 0 is_stmt 1
 248 0098 0020     		movs	r0, #0
 249 009a FFF7FEFF 		bl	LED1_Write
 223:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 250              		.loc 1 223 0
 251 009e 0020     		movs	r0, #0
 252 00a0 FFF7FEFF 		bl	LED2_Write
 224:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 253              		.loc 1 224 0
 254 00a4 0020     		movs	r0, #0
 255 00a6 FFF7FEFF 		bl	LED3_Write
 256 00aa E4E0     		b	.L14
 257              	.L18:
 225:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 226:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 258              		.loc 1 226 0
 259 00ac 764B     		ldr	r3, .L41
 260 00ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 261 00b0 042B     		cmp	r3, #4
 262 00b2 40F2E080 		bls	.L14
 227:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 228:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 263              		.loc 1 228 0
 264 00b6 744B     		ldr	r3, .L41
 265 00b8 0022     		movs	r2, #0
 266 00ba 1A70     		strb	r2, [r3]
 267 00bc DBE0     		b	.L14
 268              	.L15:
 229:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 230:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 231:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'P')
 269              		.loc 1 231 0
 270 00be 734B     		ldr	r3, .L41+4
 271 00c0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 272 00c2 502B     		cmp	r3, #80
 273 00c4 3AD1     		bne	.L19
 232:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 233:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if( (CurrentTest.SelectedTest == RTEST) && (CurrentTest.TestStep == 10) )           // If l
 274              		.loc 1 233 0
 275 00c6 714B     		ldr	r3, .L41+4
 276 00c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 277 00ca 012B     		cmp	r3, #1
 278 00cc 2CD1     		bne	.L20
 279              		.loc 1 233 0 is_stmt 0 discriminator 1
 280 00ce 6F4B     		ldr	r3, .L41+4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 10


 281 00d0 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 282 00d2 0A2B     		cmp	r3, #10
 283 00d4 28D1     		bne	.L20
 234:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 235:Generated_Source\PSoC5/isr_Timer_50ms.c ****             if(blinkcounter < BLINKTIME)
 284              		.loc 1 235 0 is_stmt 1
 285 00d6 6C4B     		ldr	r3, .L41
 286 00d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 287 00da 012B     		cmp	r3, #1
 288 00dc 09D8     		bhi	.L21
 236:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 237:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED1_Write(0); 
 289              		.loc 1 237 0
 290 00de 0020     		movs	r0, #0
 291 00e0 FFF7FEFF 		bl	LED1_Write
 238:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED2_Write(0); 
 292              		.loc 1 238 0
 293 00e4 0020     		movs	r0, #0
 294 00e6 FFF7FEFF 		bl	LED2_Write
 239:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED3_Write(1); 
 295              		.loc 1 239 0
 296 00ea 0120     		movs	r0, #1
 297 00ec FFF7FEFF 		bl	LED3_Write
 235:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 298              		.loc 1 235 0
 299 00f0 C0E0     		b	.L39
 300              	.L21:
 240:Generated_Source\PSoC5/isr_Timer_50ms.c ****             }
 241:Generated_Source\PSoC5/isr_Timer_50ms.c ****             else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 301              		.loc 1 241 0
 302 00f2 654B     		ldr	r3, .L41
 303 00f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 304 00f6 022B     		cmp	r3, #2
 305 00f8 0DD9     		bls	.L23
 306              		.loc 1 241 0 is_stmt 0 discriminator 1
 307 00fa 634B     		ldr	r3, .L41
 308 00fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 309 00fe 032B     		cmp	r3, #3
 310 0100 09D8     		bhi	.L23
 242:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 243:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED1_Write(0); 
 311              		.loc 1 243 0 is_stmt 1
 312 0102 0020     		movs	r0, #0
 313 0104 FFF7FEFF 		bl	LED1_Write
 244:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED2_Write(0); 
 314              		.loc 1 244 0
 315 0108 0020     		movs	r0, #0
 316 010a FFF7FEFF 		bl	LED2_Write
 245:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED3_Write(0); 
 317              		.loc 1 245 0
 318 010e 0020     		movs	r0, #0
 319 0110 FFF7FEFF 		bl	LED3_Write
 235:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 320              		.loc 1 235 0
 321 0114 AEE0     		b	.L39
 322              	.L23:
 246:Generated_Source\PSoC5/isr_Timer_50ms.c ****             }
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 11


 247:Generated_Source\PSoC5/isr_Timer_50ms.c ****             else if( blinkcounter > (2*BLINKTIME) )
 323              		.loc 1 247 0
 324 0116 5C4B     		ldr	r3, .L41
 325 0118 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 326 011a 042B     		cmp	r3, #4
 327 011c 40F2AA80 		bls	.L39
 248:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 249:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 blinkcounter = 0;
 328              		.loc 1 249 0
 329 0120 594B     		ldr	r3, .L41
 330 0122 0022     		movs	r2, #0
 331 0124 1A70     		strb	r2, [r3]
 235:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 332              		.loc 1 235 0
 333 0126 A5E0     		b	.L39
 334              	.L20:
 250:Generated_Source\PSoC5/isr_Timer_50ms.c ****             }    
 251:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 252:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else
 253:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 254:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 335              		.loc 1 254 0
 336 0128 0020     		movs	r0, #0
 337 012a FFF7FEFF 		bl	LED1_Write
 255:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0);
 338              		.loc 1 255 0
 339 012e 0020     		movs	r0, #0
 340 0130 FFF7FEFF 		bl	LED2_Write
 256:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(1); 
 341              		.loc 1 256 0
 342 0134 0120     		movs	r0, #1
 343 0136 FFF7FEFF 		bl	LED3_Write
 344 013a 9CE0     		b	.L14
 345              	.L19:
 257:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }   
 258:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 259:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'F')
 346              		.loc 1 259 0
 347 013c 534B     		ldr	r3, .L41+4
 348 013e 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 349 0140 462B     		cmp	r3, #70
 350 0142 09D1     		bne	.L25
 260:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 261:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED1_Write(1);
 351              		.loc 1 261 0
 352 0144 0120     		movs	r0, #1
 353 0146 FFF7FEFF 		bl	LED1_Write
 262:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED2_Write(0); 
 354              		.loc 1 262 0
 355 014a 0020     		movs	r0, #0
 356 014c FFF7FEFF 		bl	LED2_Write
 263:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED3_Write(0); 
 357              		.loc 1 263 0
 358 0150 0020     		movs	r0, #0
 359 0152 FFF7FEFF 		bl	LED3_Write
 360 0156 8EE0     		b	.L14
 361              	.L25:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 12


 264:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 265:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'p')
 362              		.loc 1 265 0
 363 0158 4C4B     		ldr	r3, .L41+4
 364 015a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 365 015c 702B     		cmp	r3, #112
 366 015e 27D1     		bne	.L26
 266:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 267:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 367              		.loc 1 267 0
 368 0160 494B     		ldr	r3, .L41
 369 0162 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 370 0164 012B     		cmp	r3, #1
 371 0166 09D8     		bhi	.L27
 268:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 269:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 372              		.loc 1 269 0
 373 0168 0020     		movs	r0, #0
 374 016a FFF7FEFF 		bl	LED1_Write
 270:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0);
 375              		.loc 1 270 0
 376 016e 0020     		movs	r0, #0
 377 0170 FFF7FEFF 		bl	LED2_Write
 271:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(1); 
 378              		.loc 1 271 0
 379 0174 0120     		movs	r0, #1
 380 0176 FFF7FEFF 		bl	LED3_Write
 381 017a 7CE0     		b	.L14
 382              	.L27:
 272:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 273:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 383              		.loc 1 273 0
 384 017c 424B     		ldr	r3, .L41
 385 017e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 386 0180 022B     		cmp	r3, #2
 387 0182 0DD9     		bls	.L29
 388              		.loc 1 273 0 is_stmt 0 discriminator 1
 389 0184 404B     		ldr	r3, .L41
 390 0186 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 391 0188 032B     		cmp	r3, #3
 392 018a 09D8     		bhi	.L29
 274:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 275:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 393              		.loc 1 275 0 is_stmt 1
 394 018c 0020     		movs	r0, #0
 395 018e FFF7FEFF 		bl	LED1_Write
 276:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 396              		.loc 1 276 0
 397 0192 0020     		movs	r0, #0
 398 0194 FFF7FEFF 		bl	LED2_Write
 277:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 399              		.loc 1 277 0
 400 0198 0020     		movs	r0, #0
 401 019a FFF7FEFF 		bl	LED3_Write
 402 019e 6AE0     		b	.L14
 403              	.L29:
 278:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 13


 279:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 404              		.loc 1 279 0
 405 01a0 394B     		ldr	r3, .L41
 406 01a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 407 01a4 042B     		cmp	r3, #4
 408 01a6 66D9     		bls	.L14
 280:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 281:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 409              		.loc 1 281 0
 410 01a8 374B     		ldr	r3, .L41
 411 01aa 0022     		movs	r2, #0
 412 01ac 1A70     		strb	r2, [r3]
 413 01ae 62E0     		b	.L14
 414              	.L26:
 282:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }    
 283:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 284:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'f')
 415              		.loc 1 284 0
 416 01b0 364B     		ldr	r3, .L41+4
 417 01b2 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 418 01b4 662B     		cmp	r3, #102
 419 01b6 27D1     		bne	.L30
 285:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 286:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 420              		.loc 1 286 0
 421 01b8 334B     		ldr	r3, .L41
 422 01ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 423 01bc 012B     		cmp	r3, #1
 424 01be 09D8     		bhi	.L31
 287:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 288:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(1);
 425              		.loc 1 288 0
 426 01c0 0120     		movs	r0, #1
 427 01c2 FFF7FEFF 		bl	LED1_Write
 289:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0);
 428              		.loc 1 289 0
 429 01c6 0020     		movs	r0, #0
 430 01c8 FFF7FEFF 		bl	LED2_Write
 290:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 431              		.loc 1 290 0
 432 01cc 0020     		movs	r0, #0
 433 01ce FFF7FEFF 		bl	LED3_Write
 434 01d2 50E0     		b	.L14
 435              	.L31:
 291:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 292:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 436              		.loc 1 292 0
 437 01d4 2C4B     		ldr	r3, .L41
 438 01d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 439 01d8 022B     		cmp	r3, #2
 440 01da 0DD9     		bls	.L33
 441              		.loc 1 292 0 is_stmt 0 discriminator 1
 442 01dc 2A4B     		ldr	r3, .L41
 443 01de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 444 01e0 032B     		cmp	r3, #3
 445 01e2 09D8     		bhi	.L33
 293:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 14


 294:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 446              		.loc 1 294 0 is_stmt 1
 447 01e4 0020     		movs	r0, #0
 448 01e6 FFF7FEFF 		bl	LED1_Write
 295:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 449              		.loc 1 295 0
 450 01ea 0020     		movs	r0, #0
 451 01ec FFF7FEFF 		bl	LED2_Write
 296:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 452              		.loc 1 296 0
 453 01f0 0020     		movs	r0, #0
 454 01f2 FFF7FEFF 		bl	LED3_Write
 455 01f6 3EE0     		b	.L14
 456              	.L33:
 297:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 298:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 457              		.loc 1 298 0
 458 01f8 234B     		ldr	r3, .L41
 459 01fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 460 01fc 042B     		cmp	r3, #4
 461 01fe 3AD9     		bls	.L14
 299:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 300:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 462              		.loc 1 300 0
 463 0200 214B     		ldr	r3, .L41
 464 0202 0022     		movs	r2, #0
 465 0204 1A70     		strb	r2, [r3]
 466 0206 36E0     		b	.L14
 467              	.L30:
 301:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }    
 302:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 303:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'r')          // reset
 468              		.loc 1 303 0
 469 0208 204B     		ldr	r3, .L41+4
 470 020a 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 471 020c 722B     		cmp	r3, #114
 472 020e 27D1     		bne	.L34
 304:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 305:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 473              		.loc 1 305 0
 474 0210 1D4B     		ldr	r3, .L41
 475 0212 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 476 0214 012B     		cmp	r3, #1
 477 0216 09D8     		bhi	.L35
 306:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 307:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(1);
 478              		.loc 1 307 0
 479 0218 0120     		movs	r0, #1
 480 021a FFF7FEFF 		bl	LED1_Write
 308:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(1);
 481              		.loc 1 308 0
 482 021e 0120     		movs	r0, #1
 483 0220 FFF7FEFF 		bl	LED2_Write
 309:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(1); 
 484              		.loc 1 309 0
 485 0224 0120     		movs	r0, #1
 486 0226 FFF7FEFF 		bl	LED3_Write
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 15


 487 022a 24E0     		b	.L14
 488              	.L35:
 310:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 311:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 489              		.loc 1 311 0
 490 022c 164B     		ldr	r3, .L41
 491 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 492 0230 022B     		cmp	r3, #2
 493 0232 0DD9     		bls	.L37
 494              		.loc 1 311 0 is_stmt 0 discriminator 1
 495 0234 144B     		ldr	r3, .L41
 496 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 0238 032B     		cmp	r3, #3
 498 023a 09D8     		bhi	.L37
 312:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 313:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 499              		.loc 1 313 0 is_stmt 1
 500 023c 0020     		movs	r0, #0
 501 023e FFF7FEFF 		bl	LED1_Write
 314:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 502              		.loc 1 314 0
 503 0242 0020     		movs	r0, #0
 504 0244 FFF7FEFF 		bl	LED2_Write
 315:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 505              		.loc 1 315 0
 506 0248 0020     		movs	r0, #0
 507 024a FFF7FEFF 		bl	LED3_Write
 508 024e 12E0     		b	.L14
 509              	.L37:
 316:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 317:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 510              		.loc 1 317 0
 511 0250 0D4B     		ldr	r3, .L41
 512 0252 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 513 0254 042B     		cmp	r3, #4
 514 0256 0ED9     		bls	.L14
 318:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 319:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 515              		.loc 1 319 0
 516 0258 0B4B     		ldr	r3, .L41
 517 025a 0022     		movs	r2, #0
 518 025c 1A70     		strb	r2, [r3]
 519 025e 0AE0     		b	.L14
 520              	.L34:
 320:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }    
 321:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 322:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else
 323:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 324:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED1_Write(0);
 521              		.loc 1 324 0
 522 0260 0020     		movs	r0, #0
 523 0262 FFF7FEFF 		bl	LED1_Write
 325:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED2_Write(0);
 524              		.loc 1 325 0
 525 0266 0020     		movs	r0, #0
 526 0268 FFF7FEFF 		bl	LED2_Write
 326:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED3_Write(0); 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 16


 527              		.loc 1 326 0
 528 026c 0020     		movs	r0, #0
 529 026e FFF7FEFF 		bl	LED3_Write
 530 0272 00E0     		b	.L14
 531              	.L39:
 235:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 532              		.loc 1 235 0
 533 0274 00BF     		nop
 534              	.L14:
 327:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 328:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 329:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 330:Generated_Source\PSoC5/isr_Timer_50ms.c ****     if(blinkcounter > 100)
 535              		.loc 1 330 0
 536 0276 044B     		ldr	r3, .L41
 537 0278 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 538 027a 642B     		cmp	r3, #100
 539 027c 02D9     		bls	.L40
 331:Generated_Source\PSoC5/isr_Timer_50ms.c ****         blinkcounter = 0;
 540              		.loc 1 331 0
 541 027e 024B     		ldr	r3, .L41
 542 0280 0022     		movs	r2, #0
 543 0282 1A70     		strb	r2, [r3]
 544              	.L40:
 332:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 333:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 334:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 335:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* `#END` */
 336:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 545              		.loc 1 336 0
 546 0284 00BF     		nop
 547 0286 80BD     		pop	{r7, pc}
 548              	.L42:
 549              		.align	2
 550              	.L41:
 551 0288 00000000 		.word	blinkcounter
 552 028c 00000000 		.word	CurrentTest
 553              		.cfi_endproc
 554              	.LFE66:
 555              		.size	isr_Timer_50ms_Interrupt, .-isr_Timer_50ms_Interrupt
 556              		.section	.text.isr_Timer_50ms_SetVector,"ax",%progbits
 557              		.align	2
 558              		.global	isr_Timer_50ms_SetVector
 559              		.thumb
 560              		.thumb_func
 561              		.type	isr_Timer_50ms_SetVector, %function
 562              	isr_Timer_50ms_SetVector:
 563              	.LFB67:
 337:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 338:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 339:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 340:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_SetVector
 341:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 342:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 343:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 344:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Change the ISR vector for the Interrupt. Note calling isr_Timer_50ms_Start
 345:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   will override any effect this method would have had. To set the vector 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 17


 346:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   before the component has been started use isr_Timer_50ms_StartEx instead.
 347:Generated_Source\PSoC5/isr_Timer_50ms.c **** * 
 348:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 349:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   used to provide consistent definition across compilers:
 350:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 351:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Function definition example:
 352:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   CY_ISR(MyISR)
 353:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   {
 354:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   }
 355:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 356:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Function prototype example:
 357:Generated_Source\PSoC5/isr_Timer_50ms.c **** *     CY_ISR_PROTO(MyISR);
 358:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 359:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 360:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   address: Address of the ISR to set in the interrupt vector table.
 361:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 362:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 363:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 364:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 365:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 366:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_SetVector(cyisraddress address)
 367:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 564              		.loc 1 367 0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 16
 567              		@ frame_needed = 1, uses_anonymous_args = 0
 568              		@ link register save eliminated.
 569 0000 80B4     		push	{r7}
 570              		.cfi_def_cfa_offset 4
 571              		.cfi_offset 7, -4
 572 0002 85B0     		sub	sp, sp, #20
 573              		.cfi_def_cfa_offset 24
 574 0004 00AF     		add	r7, sp, #0
 575              		.cfi_def_cfa_register 7
 576 0006 7860     		str	r0, [r7, #4]
 368:Generated_Source\PSoC5/isr_Timer_50ms.c ****     cyisraddress * ramVectorTable;
 369:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 370:Generated_Source\PSoC5/isr_Timer_50ms.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 577              		.loc 1 370 0
 578 0008 054B     		ldr	r3, .L44
 579 000a 1B68     		ldr	r3, [r3]
 580 000c FB60     		str	r3, [r7, #12]
 371:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 372:Generated_Source\PSoC5/isr_Timer_50ms.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)isr_Timer_50ms__INTC_NUMBER] = address;
 581              		.loc 1 372 0
 582 000e FB68     		ldr	r3, [r7, #12]
 583 0010 5433     		adds	r3, r3, #84
 584 0012 7A68     		ldr	r2, [r7, #4]
 585 0014 1A60     		str	r2, [r3]
 373:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 586              		.loc 1 373 0
 587 0016 00BF     		nop
 588 0018 1437     		adds	r7, r7, #20
 589              		.cfi_def_cfa_offset 4
 590 001a BD46     		mov	sp, r7
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 18


 593 001c 80BC     		pop	{r7}
 594              		.cfi_restore 7
 595              		.cfi_def_cfa_offset 0
 596 001e 7047     		bx	lr
 597              	.L45:
 598              		.align	2
 599              	.L44:
 600 0020 08ED00E0 		.word	-536810232
 601              		.cfi_endproc
 602              	.LFE67:
 603              		.size	isr_Timer_50ms_SetVector, .-isr_Timer_50ms_SetVector
 604              		.section	.text.isr_Timer_50ms_GetVector,"ax",%progbits
 605              		.align	2
 606              		.global	isr_Timer_50ms_GetVector
 607              		.thumb
 608              		.thumb_func
 609              		.type	isr_Timer_50ms_GetVector, %function
 610              	isr_Timer_50ms_GetVector:
 611              	.LFB68:
 374:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 375:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 376:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 377:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_GetVector
 378:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 379:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 380:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 381:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 382:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 383:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 384:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 385:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 386:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 387:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Address of the ISR in the interrupt vector table.
 388:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 389:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 390:Generated_Source\PSoC5/isr_Timer_50ms.c **** cyisraddress isr_Timer_50ms_GetVector(void)
 391:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 612              		.loc 1 391 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 8
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616              		@ link register save eliminated.
 617 0000 80B4     		push	{r7}
 618              		.cfi_def_cfa_offset 4
 619              		.cfi_offset 7, -4
 620 0002 83B0     		sub	sp, sp, #12
 621              		.cfi_def_cfa_offset 16
 622 0004 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 392:Generated_Source\PSoC5/isr_Timer_50ms.c ****     cyisraddress * ramVectorTable;
 393:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 394:Generated_Source\PSoC5/isr_Timer_50ms.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 624              		.loc 1 394 0
 625 0006 054B     		ldr	r3, .L48
 626 0008 1B68     		ldr	r3, [r3]
 627 000a 7B60     		str	r3, [r7, #4]
 395:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 19


 396:Generated_Source\PSoC5/isr_Timer_50ms.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)isr_Timer_50ms__INTC_NUMBER];
 628              		.loc 1 396 0
 629 000c 7B68     		ldr	r3, [r7, #4]
 630 000e 5B6D     		ldr	r3, [r3, #84]
 397:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 631              		.loc 1 397 0
 632 0010 1846     		mov	r0, r3
 633 0012 0C37     		adds	r7, r7, #12
 634              		.cfi_def_cfa_offset 4
 635 0014 BD46     		mov	sp, r7
 636              		.cfi_def_cfa_register 13
 637              		@ sp needed
 638 0016 80BC     		pop	{r7}
 639              		.cfi_restore 7
 640              		.cfi_def_cfa_offset 0
 641 0018 7047     		bx	lr
 642              	.L49:
 643 001a 00BF     		.align	2
 644              	.L48:
 645 001c 08ED00E0 		.word	-536810232
 646              		.cfi_endproc
 647              	.LFE68:
 648              		.size	isr_Timer_50ms_GetVector, .-isr_Timer_50ms_GetVector
 649              		.section	.text.isr_Timer_50ms_SetPriority,"ax",%progbits
 650              		.align	2
 651              		.global	isr_Timer_50ms_SetPriority
 652              		.thumb
 653              		.thumb_func
 654              		.type	isr_Timer_50ms_SetPriority, %function
 655              	isr_Timer_50ms_SetPriority:
 656              	.LFB69:
 398:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 399:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 400:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 401:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_SetPriority
 402:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 403:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 404:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 405:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Sets the Priority of the Interrupt. 
 406:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 407:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Note calling isr_Timer_50ms_Start or isr_Timer_50ms_StartEx will 
 408:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   override any effect this API would have had. This API should only be called
 409:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   after isr_Timer_50ms_Start or isr_Timer_50ms_StartEx has been called. 
 410:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 411:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Interrupt Editor.
 412:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 413:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 414:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 415:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 416:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 417:Generated_Source\PSoC5/isr_Timer_50ms.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 418:Generated_Source\PSoC5/isr_Timer_50ms.c **** *             PSoC 4: Priority is from 0 to 3.
 419:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 420:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 421:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 422:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 423:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 20


 424:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_SetPriority(uint8 priority)
 425:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 657              		.loc 1 425 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 8
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661              		@ link register save eliminated.
 662 0000 80B4     		push	{r7}
 663              		.cfi_def_cfa_offset 4
 664              		.cfi_offset 7, -4
 665 0002 83B0     		sub	sp, sp, #12
 666              		.cfi_def_cfa_offset 16
 667 0004 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
 669 0006 0346     		mov	r3, r0
 670 0008 FB71     		strb	r3, [r7, #7]
 426:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_PRIOR = priority << 5;
 671              		.loc 1 426 0
 672 000a 054A     		ldr	r2, .L51
 673 000c FB79     		ldrb	r3, [r7, #7]
 674 000e 5B01     		lsls	r3, r3, #5
 675 0010 DBB2     		uxtb	r3, r3
 676 0012 1370     		strb	r3, [r2]
 427:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 677              		.loc 1 427 0
 678 0014 00BF     		nop
 679 0016 0C37     		adds	r7, r7, #12
 680              		.cfi_def_cfa_offset 4
 681 0018 BD46     		mov	sp, r7
 682              		.cfi_def_cfa_register 13
 683              		@ sp needed
 684 001a 80BC     		pop	{r7}
 685              		.cfi_restore 7
 686              		.cfi_def_cfa_offset 0
 687 001c 7047     		bx	lr
 688              	.L52:
 689 001e 00BF     		.align	2
 690              	.L51:
 691 0020 05E400E0 		.word	-536812539
 692              		.cfi_endproc
 693              	.LFE69:
 694              		.size	isr_Timer_50ms_SetPriority, .-isr_Timer_50ms_SetPriority
 695              		.section	.text.isr_Timer_50ms_GetPriority,"ax",%progbits
 696              		.align	2
 697              		.global	isr_Timer_50ms_GetPriority
 698              		.thumb
 699              		.thumb_func
 700              		.type	isr_Timer_50ms_GetPriority, %function
 701              	isr_Timer_50ms_GetPriority:
 702              	.LFB70:
 428:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 429:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 430:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 431:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_GetPriority
 432:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 433:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 434:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 21


 435:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Gets the Priority of the Interrupt.
 436:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 437:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 438:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 439:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 440:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 441:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Priority of the interrupt, 0 being the highest priority
 442:Generated_Source\PSoC5/isr_Timer_50ms.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 443:Generated_Source\PSoC5/isr_Timer_50ms.c **** *    PSoC 4: Priority is from 0 to 3.
 444:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 445:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 446:Generated_Source\PSoC5/isr_Timer_50ms.c **** uint8 isr_Timer_50ms_GetPriority(void)
 447:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 703              		.loc 1 447 0
 704              		.cfi_startproc
 705              		@ args = 0, pretend = 0, frame = 8
 706              		@ frame_needed = 1, uses_anonymous_args = 0
 707              		@ link register save eliminated.
 708 0000 80B4     		push	{r7}
 709              		.cfi_def_cfa_offset 4
 710              		.cfi_offset 7, -4
 711 0002 83B0     		sub	sp, sp, #12
 712              		.cfi_def_cfa_offset 16
 713 0004 00AF     		add	r7, sp, #0
 714              		.cfi_def_cfa_register 7
 448:Generated_Source\PSoC5/isr_Timer_50ms.c ****     uint8 priority;
 449:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 450:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 451:Generated_Source\PSoC5/isr_Timer_50ms.c ****     priority = *isr_Timer_50ms_INTC_PRIOR >> 5;
 715              		.loc 1 451 0
 716 0006 054B     		ldr	r3, .L55
 717 0008 1B78     		ldrb	r3, [r3]
 718 000a DBB2     		uxtb	r3, r3
 719 000c 5B09     		lsrs	r3, r3, #5
 720 000e FB71     		strb	r3, [r7, #7]
 452:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 453:Generated_Source\PSoC5/isr_Timer_50ms.c ****     return priority;
 721              		.loc 1 453 0
 722 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 454:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 723              		.loc 1 454 0
 724 0012 1846     		mov	r0, r3
 725 0014 0C37     		adds	r7, r7, #12
 726              		.cfi_def_cfa_offset 4
 727 0016 BD46     		mov	sp, r7
 728              		.cfi_def_cfa_register 13
 729              		@ sp needed
 730 0018 80BC     		pop	{r7}
 731              		.cfi_restore 7
 732              		.cfi_def_cfa_offset 0
 733 001a 7047     		bx	lr
 734              	.L56:
 735              		.align	2
 736              	.L55:
 737 001c 05E400E0 		.word	-536812539
 738              		.cfi_endproc
 739              	.LFE70:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 22


 740              		.size	isr_Timer_50ms_GetPriority, .-isr_Timer_50ms_GetPriority
 741              		.section	.text.isr_Timer_50ms_Enable,"ax",%progbits
 742              		.align	2
 743              		.global	isr_Timer_50ms_Enable
 744              		.thumb
 745              		.thumb_func
 746              		.type	isr_Timer_50ms_Enable, %function
 747              	isr_Timer_50ms_Enable:
 748              	.LFB71:
 455:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 456:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 457:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 458:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Enable
 459:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 460:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 461:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 462:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 463:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 464:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   function, which sets the vector and the priority, has been called.
 465:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 466:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 467:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 468:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 469:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 470:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 471:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 472:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 473:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Enable(void)
 474:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 749              		.loc 1 474 0
 750              		.cfi_startproc
 751              		@ args = 0, pretend = 0, frame = 0
 752              		@ frame_needed = 1, uses_anonymous_args = 0
 753              		@ link register save eliminated.
 754 0000 80B4     		push	{r7}
 755              		.cfi_def_cfa_offset 4
 756              		.cfi_offset 7, -4
 757 0002 00AF     		add	r7, sp, #0
 758              		.cfi_def_cfa_register 7
 475:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Enable the general interrupt. */
 476:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_SET_EN = isr_Timer_50ms__INTC_MASK;
 759              		.loc 1 476 0
 760 0004 034B     		ldr	r3, .L58
 761 0006 2022     		movs	r2, #32
 762 0008 1A60     		str	r2, [r3]
 477:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 763              		.loc 1 477 0
 764 000a 00BF     		nop
 765 000c BD46     		mov	sp, r7
 766              		.cfi_def_cfa_register 13
 767              		@ sp needed
 768 000e 80BC     		pop	{r7}
 769              		.cfi_restore 7
 770              		.cfi_def_cfa_offset 0
 771 0010 7047     		bx	lr
 772              	.L59:
 773 0012 00BF     		.align	2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 23


 774              	.L58:
 775 0014 00E100E0 		.word	-536813312
 776              		.cfi_endproc
 777              	.LFE71:
 778              		.size	isr_Timer_50ms_Enable, .-isr_Timer_50ms_Enable
 779              		.section	.text.isr_Timer_50ms_GetState,"ax",%progbits
 780              		.align	2
 781              		.global	isr_Timer_50ms_GetState
 782              		.thumb
 783              		.thumb_func
 784              		.type	isr_Timer_50ms_GetState, %function
 785              	isr_Timer_50ms_GetState:
 786              	.LFB72:
 478:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 479:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 480:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 481:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_GetState
 482:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 483:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 484:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 485:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 486:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 487:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 488:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 489:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 490:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 491:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   1 if enabled, 0 if disabled.
 492:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 493:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 494:Generated_Source\PSoC5/isr_Timer_50ms.c **** uint8 isr_Timer_50ms_GetState(void)
 495:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 787              		.loc 1 495 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 1, uses_anonymous_args = 0
 791              		@ link register save eliminated.
 792 0000 80B4     		push	{r7}
 793              		.cfi_def_cfa_offset 4
 794              		.cfi_offset 7, -4
 795 0002 00AF     		add	r7, sp, #0
 796              		.cfi_def_cfa_register 7
 496:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Get the state of the general interrupt. */
 497:Generated_Source\PSoC5/isr_Timer_50ms.c ****     return ((*isr_Timer_50ms_INTC_SET_EN & (uint32)isr_Timer_50ms__INTC_MASK) != 0u) ? 1u:0u;
 797              		.loc 1 497 0
 798 0004 064B     		ldr	r3, .L64
 799 0006 1B68     		ldr	r3, [r3]
 800 0008 03F02003 		and	r3, r3, #32
 801 000c 002B     		cmp	r3, #0
 802 000e 01D0     		beq	.L61
 803              		.loc 1 497 0 is_stmt 0 discriminator 1
 804 0010 0123     		movs	r3, #1
 805 0012 00E0     		b	.L62
 806              	.L61:
 807              		.loc 1 497 0 discriminator 2
 808 0014 0023     		movs	r3, #0
 809              	.L62:
 498:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 24


 810              		.loc 1 498 0 is_stmt 1 discriminator 4
 811 0016 1846     		mov	r0, r3
 812 0018 BD46     		mov	sp, r7
 813              		.cfi_def_cfa_register 13
 814              		@ sp needed
 815 001a 80BC     		pop	{r7}
 816              		.cfi_restore 7
 817              		.cfi_def_cfa_offset 0
 818 001c 7047     		bx	lr
 819              	.L65:
 820 001e 00BF     		.align	2
 821              	.L64:
 822 0020 00E100E0 		.word	-536813312
 823              		.cfi_endproc
 824              	.LFE72:
 825              		.size	isr_Timer_50ms_GetState, .-isr_Timer_50ms_GetState
 826              		.section	.text.isr_Timer_50ms_Disable,"ax",%progbits
 827              		.align	2
 828              		.global	isr_Timer_50ms_Disable
 829              		.thumb
 830              		.thumb_func
 831              		.type	isr_Timer_50ms_Disable, %function
 832              	isr_Timer_50ms_Disable:
 833              	.LFB73:
 499:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 500:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 501:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 502:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Disable
 503:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 504:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 505:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 506:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Disables the Interrupt in the interrupt controller.
 507:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 508:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 509:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 510:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 511:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 512:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 513:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 514:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 515:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Disable(void)
 516:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 834              		.loc 1 516 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 0
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838              		@ link register save eliminated.
 839 0000 80B4     		push	{r7}
 840              		.cfi_def_cfa_offset 4
 841              		.cfi_offset 7, -4
 842 0002 00AF     		add	r7, sp, #0
 843              		.cfi_def_cfa_register 7
 517:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Disable the general interrupt. */
 518:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_CLR_EN = isr_Timer_50ms__INTC_MASK;
 844              		.loc 1 518 0
 845 0004 034B     		ldr	r3, .L67
 846 0006 2022     		movs	r2, #32
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 25


 847 0008 1A60     		str	r2, [r3]
 519:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 848              		.loc 1 519 0
 849 000a 00BF     		nop
 850 000c BD46     		mov	sp, r7
 851              		.cfi_def_cfa_register 13
 852              		@ sp needed
 853 000e 80BC     		pop	{r7}
 854              		.cfi_restore 7
 855              		.cfi_def_cfa_offset 0
 856 0010 7047     		bx	lr
 857              	.L68:
 858 0012 00BF     		.align	2
 859              	.L67:
 860 0014 80E100E0 		.word	-536813184
 861              		.cfi_endproc
 862              	.LFE73:
 863              		.size	isr_Timer_50ms_Disable, .-isr_Timer_50ms_Disable
 864              		.section	.text.isr_Timer_50ms_SetPending,"ax",%progbits
 865              		.align	2
 866              		.global	isr_Timer_50ms_SetPending
 867              		.thumb
 868              		.thumb_func
 869              		.type	isr_Timer_50ms_SetPending, %function
 870              	isr_Timer_50ms_SetPending:
 871              	.LFB74:
 520:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 521:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 522:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 523:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_SetPending
 524:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 525:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 526:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 527:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Causes the Interrupt to enter the pending state, a software method of
 528:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   generating the interrupt.
 529:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 530:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 531:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 532:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 533:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 534:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 535:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 536:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Side Effects:
 537:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 538:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   entered (depending on the priority of this interrupt and other pending 
 539:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   interrupts).
 540:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 541:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 542:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_SetPending(void)
 543:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 872              		.loc 1 543 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 0
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876              		@ link register save eliminated.
 877 0000 80B4     		push	{r7}
 878              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 26


 879              		.cfi_offset 7, -4
 880 0002 00AF     		add	r7, sp, #0
 881              		.cfi_def_cfa_register 7
 544:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_SET_PD = isr_Timer_50ms__INTC_MASK;
 882              		.loc 1 544 0
 883 0004 034B     		ldr	r3, .L70
 884 0006 2022     		movs	r2, #32
 885 0008 1A60     		str	r2, [r3]
 545:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 886              		.loc 1 545 0
 887 000a 00BF     		nop
 888 000c BD46     		mov	sp, r7
 889              		.cfi_def_cfa_register 13
 890              		@ sp needed
 891 000e 80BC     		pop	{r7}
 892              		.cfi_restore 7
 893              		.cfi_def_cfa_offset 0
 894 0010 7047     		bx	lr
 895              	.L71:
 896 0012 00BF     		.align	2
 897              	.L70:
 898 0014 00E200E0 		.word	-536813056
 899              		.cfi_endproc
 900              	.LFE74:
 901              		.size	isr_Timer_50ms_SetPending, .-isr_Timer_50ms_SetPending
 902              		.section	.text.isr_Timer_50ms_ClearPending,"ax",%progbits
 903              		.align	2
 904              		.global	isr_Timer_50ms_ClearPending
 905              		.thumb
 906              		.thumb_func
 907              		.type	isr_Timer_50ms_ClearPending, %function
 908              	isr_Timer_50ms_ClearPending:
 909              	.LFB75:
 546:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 547:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 548:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 549:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_ClearPending
 550:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 551:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 552:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 553:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Clears a pending interrupt in the interrupt controller.
 554:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 555:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 556:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 557:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 558:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   pending state even though the interrupt itself is cleared using this API.
 559:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 560:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 561:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 562:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 563:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 564:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 565:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 566:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 567:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_ClearPending(void)
 568:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 910              		.loc 1 568 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 27


 911              		.cfi_startproc
 912              		@ args = 0, pretend = 0, frame = 0
 913              		@ frame_needed = 1, uses_anonymous_args = 0
 914              		@ link register save eliminated.
 915 0000 80B4     		push	{r7}
 916              		.cfi_def_cfa_offset 4
 917              		.cfi_offset 7, -4
 918 0002 00AF     		add	r7, sp, #0
 919              		.cfi_def_cfa_register 7
 569:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_CLR_PD = isr_Timer_50ms__INTC_MASK;
 920              		.loc 1 569 0
 921 0004 034B     		ldr	r3, .L73
 922 0006 2022     		movs	r2, #32
 923 0008 1A60     		str	r2, [r3]
 570:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 924              		.loc 1 570 0
 925 000a 00BF     		nop
 926 000c BD46     		mov	sp, r7
 927              		.cfi_def_cfa_register 13
 928              		@ sp needed
 929 000e 80BC     		pop	{r7}
 930              		.cfi_restore 7
 931              		.cfi_def_cfa_offset 0
 932 0010 7047     		bx	lr
 933              	.L74:
 934 0012 00BF     		.align	2
 935              	.L73:
 936 0014 80E200E0 		.word	-536812928
 937              		.cfi_endproc
 938              	.LFE75:
 939              		.size	isr_Timer_50ms_ClearPending, .-isr_Timer_50ms_ClearPending
 940              		.text
 941              	.Letext0:
 942              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 943              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 944              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 945              		.file 5 "./CommonVariables.h"
 946              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 947              		.section	.debug_info,"",%progbits
 948              	.Ldebug_info0:
 949 0000 FB020000 		.4byte	0x2fb
 950 0004 0400     		.2byte	0x4
 951 0006 00000000 		.4byte	.Ldebug_abbrev0
 952 000a 04       		.byte	0x4
 953 000b 01       		.uleb128 0x1
 954 000c 55000000 		.4byte	.LASF47
 955 0010 0C       		.byte	0xc
 956 0011 B9020000 		.4byte	.LASF48
 957 0015 C6010000 		.4byte	.LASF49
 958 0019 00000000 		.4byte	.Ldebug_ranges0+0
 959 001d 00000000 		.4byte	0
 960 0021 00000000 		.4byte	.Ldebug_line0
 961 0025 02       		.uleb128 0x2
 962 0026 04       		.byte	0x4
 963 0027 05       		.byte	0x5
 964 0028 696E7400 		.ascii	"int\000"
 965 002c 03       		.uleb128 0x3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 28


 966 002d 04       		.byte	0x4
 967 002e 07       		.byte	0x7
 968 002f 56020000 		.4byte	.LASF0
 969 0033 03       		.uleb128 0x3
 970 0034 08       		.byte	0x8
 971 0035 05       		.byte	0x5
 972 0036 E1020000 		.4byte	.LASF1
 973 003a 03       		.uleb128 0x3
 974 003b 08       		.byte	0x8
 975 003c 04       		.byte	0x4
 976 003d 8A030000 		.4byte	.LASF2
 977 0041 03       		.uleb128 0x3
 978 0042 01       		.byte	0x1
 979 0043 06       		.byte	0x6
 980 0044 96030000 		.4byte	.LASF3
 981 0048 03       		.uleb128 0x3
 982 0049 01       		.byte	0x1
 983 004a 08       		.byte	0x8
 984 004b 17020000 		.4byte	.LASF4
 985 004f 03       		.uleb128 0x3
 986 0050 02       		.byte	0x2
 987 0051 05       		.byte	0x5
 988 0052 43030000 		.4byte	.LASF5
 989 0056 03       		.uleb128 0x3
 990 0057 02       		.byte	0x2
 991 0058 07       		.byte	0x7
 992 0059 B3010000 		.4byte	.LASF6
 993 005d 04       		.uleb128 0x4
 994 005e 00010000 		.4byte	.LASF12
 995 0062 02       		.byte	0x2
 996 0063 3F       		.byte	0x3f
 997 0064 68000000 		.4byte	0x68
 998 0068 03       		.uleb128 0x3
 999 0069 04       		.byte	0x4
 1000 006a 05       		.byte	0x5
 1001 006b 6D030000 		.4byte	.LASF7
 1002 006f 03       		.uleb128 0x3
 1003 0070 04       		.byte	0x4
 1004 0071 07       		.byte	0x7
 1005 0072 95010000 		.4byte	.LASF8
 1006 0076 03       		.uleb128 0x3
 1007 0077 08       		.byte	0x8
 1008 0078 07       		.byte	0x7
 1009 0079 6B020000 		.4byte	.LASF9
 1010 007d 03       		.uleb128 0x3
 1011 007e 04       		.byte	0x4
 1012 007f 07       		.byte	0x7
 1013 0080 B0020000 		.4byte	.LASF10
 1014 0084 03       		.uleb128 0x3
 1015 0085 01       		.byte	0x1
 1016 0086 08       		.byte	0x8
 1017 0087 0A030000 		.4byte	.LASF11
 1018 008b 05       		.uleb128 0x5
 1019 008c 04       		.byte	0x4
 1020 008d 91000000 		.4byte	0x91
 1021 0091 06       		.uleb128 0x6
 1022 0092 04       		.uleb128 0x4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 29


 1023 0093 A8020000 		.4byte	.LASF13
 1024 0097 03       		.byte	0x3
 1025 0098 2C       		.byte	0x2c
 1026 0099 5D000000 		.4byte	0x5d
 1027 009d 07       		.uleb128 0x7
 1028 009e 53030000 		.4byte	.LASF14
 1029 00a2 04       		.byte	0x4
 1030 00a3 E401     		.2byte	0x1e4
 1031 00a5 48000000 		.4byte	0x48
 1032 00a9 07       		.uleb128 0x7
 1033 00aa 4F020000 		.4byte	.LASF15
 1034 00ae 04       		.byte	0x4
 1035 00af E601     		.2byte	0x1e6
 1036 00b1 6F000000 		.4byte	0x6f
 1037 00b5 03       		.uleb128 0x3
 1038 00b6 04       		.byte	0x4
 1039 00b7 04       		.byte	0x4
 1040 00b8 5E010000 		.4byte	.LASF16
 1041 00bc 03       		.uleb128 0x3
 1042 00bd 08       		.byte	0x8
 1043 00be 04       		.byte	0x4
 1044 00bf 25020000 		.4byte	.LASF17
 1045 00c3 07       		.uleb128 0x7
 1046 00c4 8A010000 		.4byte	.LASF18
 1047 00c8 04       		.byte	0x4
 1048 00c9 8E02     		.2byte	0x28e
 1049 00cb CF000000 		.4byte	0xcf
 1050 00cf 08       		.uleb128 0x8
 1051 00d0 9D000000 		.4byte	0x9d
 1052 00d4 07       		.uleb128 0x7
 1053 00d5 33000000 		.4byte	.LASF19
 1054 00d9 04       		.byte	0x4
 1055 00da 9002     		.2byte	0x290
 1056 00dc E0000000 		.4byte	0xe0
 1057 00e0 08       		.uleb128 0x8
 1058 00e1 A9000000 		.4byte	0xa9
 1059 00e5 07       		.uleb128 0x7
 1060 00e6 82020000 		.4byte	.LASF20
 1061 00ea 04       		.byte	0x4
 1062 00eb A002     		.2byte	0x2a0
 1063 00ed 8B000000 		.4byte	0x8b
 1064 00f1 09       		.uleb128 0x9
 1065 00f2 7B030000 		.4byte	.LASF50
 1066 00f6 03       		.byte	0x3
 1067 00f7 05       		.byte	0x5
 1068 00f8 10       		.byte	0x10
 1069 00f9 22010000 		.4byte	0x122
 1070 00fd 0A       		.uleb128 0xa
 1071 00fe 51010000 		.4byte	.LASF21
 1072 0102 05       		.byte	0x5
 1073 0103 12       		.byte	0x12
 1074 0104 9D000000 		.4byte	0x9d
 1075 0108 00       		.byte	0
 1076 0109 0A       		.uleb128 0xa
 1077 010a 26010000 		.4byte	.LASF22
 1078 010e 05       		.byte	0x5
 1079 010f 13       		.byte	0x13
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 30


 1080 0110 9D000000 		.4byte	0x9d
 1081 0114 01       		.byte	0x1
 1082 0115 0A       		.uleb128 0xa
 1083 0116 0A010000 		.4byte	.LASF23
 1084 011a 05       		.byte	0x5
 1085 011b 14       		.byte	0x14
 1086 011c 9D000000 		.4byte	0x9d
 1087 0120 02       		.byte	0x2
 1088 0121 00       		.byte	0
 1089 0122 04       		.uleb128 0x4
 1090 0123 1E030000 		.4byte	.LASF24
 1091 0127 05       		.byte	0x5
 1092 0128 18       		.byte	0x18
 1093 0129 F1000000 		.4byte	0xf1
 1094 012d 0B       		.uleb128 0xb
 1095 012e 2F010000 		.4byte	.LASF51
 1096 0132 01       		.byte	0x1
 1097 0133 48000000 		.4byte	0x48
 1098 0137 01       		.byte	0x1
 1099 0138 2E       		.byte	0x2e
 1100 0139 50010000 		.4byte	0x150
 1101 013d 0C       		.uleb128 0xc
 1102 013e 4D030000 		.4byte	.LASF25
 1103 0142 00       		.byte	0
 1104 0143 0C       		.uleb128 0xc
 1105 0144 FA000000 		.4byte	.LASF26
 1106 0148 01       		.byte	0x1
 1107 0149 0C       		.uleb128 0xc
 1108 014a 8F010000 		.4byte	.LASF27
 1109 014e 02       		.byte	0x2
 1110 014f 00       		.byte	0
 1111 0150 0D       		.uleb128 0xd
 1112 0151 11010000 		.4byte	.LASF28
 1113 0155 01       		.byte	0x1
 1114 0156 53       		.byte	0x53
 1115 0157 00000000 		.4byte	.LFB63
 1116 015b 20000000 		.4byte	.LFE63-.LFB63
 1117 015f 01       		.uleb128 0x1
 1118 0160 9C       		.byte	0x9c
 1119 0161 0E       		.uleb128 0xe
 1120 0162 A2030000 		.4byte	.LASF31
 1121 0166 01       		.byte	0x1
 1122 0167 7E       		.byte	0x7e
 1123 0168 00000000 		.4byte	.LFB64
 1124 016c 24000000 		.4byte	.LFE64-.LFB64
 1125 0170 01       		.uleb128 0x1
 1126 0171 9C       		.byte	0x9c
 1127 0172 85010000 		.4byte	0x185
 1128 0176 0F       		.uleb128 0xf
 1129 0177 63020000 		.4byte	.LASF33
 1130 017b 01       		.byte	0x1
 1131 017c 7E       		.byte	0x7e
 1132 017d E5000000 		.4byte	0xe5
 1133 0181 02       		.uleb128 0x2
 1134 0182 91       		.byte	0x91
 1135 0183 74       		.sleb128 -12
 1136 0184 00       		.byte	0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 31


 1137 0185 0D       		.uleb128 0xd
 1138 0186 59030000 		.4byte	.LASF29
 1139 018a 01       		.byte	0x1
 1140 018b 9C       		.byte	0x9c
 1141 018c 00000000 		.4byte	.LFB65
 1142 0190 18000000 		.4byte	.LFE65-.LFB65
 1143 0194 01       		.uleb128 0x1
 1144 0195 9C       		.byte	0x9c
 1145 0196 0D       		.uleb128 0xd
 1146 0197 8F020000 		.4byte	.LASF30
 1147 019b 01       		.byte	0x1
 1148 019c B6       		.byte	0xb6
 1149 019d 00000000 		.4byte	.LFB66
 1150 01a1 90020000 		.4byte	.LFE66-.LFB66
 1151 01a5 01       		.uleb128 0x1
 1152 01a6 9C       		.byte	0x9c
 1153 01a7 10       		.uleb128 0x10
 1154 01a8 64010000 		.4byte	.LASF32
 1155 01ac 01       		.byte	0x1
 1156 01ad 6E01     		.2byte	0x16e
 1157 01af 00000000 		.4byte	.LFB67
 1158 01b3 24000000 		.4byte	.LFE67-.LFB67
 1159 01b7 01       		.uleb128 0x1
 1160 01b8 9C       		.byte	0x9c
 1161 01b9 DC010000 		.4byte	0x1dc
 1162 01bd 11       		.uleb128 0x11
 1163 01be 63020000 		.4byte	.LASF33
 1164 01c2 01       		.byte	0x1
 1165 01c3 6E01     		.2byte	0x16e
 1166 01c5 E5000000 		.4byte	0xe5
 1167 01c9 02       		.uleb128 0x2
 1168 01ca 91       		.byte	0x91
 1169 01cb 6C       		.sleb128 -20
 1170 01cc 12       		.uleb128 0x12
 1171 01cd 0F030000 		.4byte	.LASF34
 1172 01d1 01       		.byte	0x1
 1173 01d2 7001     		.2byte	0x170
 1174 01d4 DC010000 		.4byte	0x1dc
 1175 01d8 02       		.uleb128 0x2
 1176 01d9 91       		.byte	0x91
 1177 01da 74       		.sleb128 -12
 1178 01db 00       		.byte	0
 1179 01dc 05       		.uleb128 0x5
 1180 01dd 04       		.byte	0x4
 1181 01de E5000000 		.4byte	0xe5
 1182 01e2 13       		.uleb128 0x13
 1183 01e3 38010000 		.4byte	.LASF37
 1184 01e7 01       		.byte	0x1
 1185 01e8 8601     		.2byte	0x186
 1186 01ea E5000000 		.4byte	0xe5
 1187 01ee 00000000 		.4byte	.LFB68
 1188 01f2 20000000 		.4byte	.LFE68-.LFB68
 1189 01f6 01       		.uleb128 0x1
 1190 01f7 9C       		.byte	0x9c
 1191 01f8 0C020000 		.4byte	0x20c
 1192 01fc 12       		.uleb128 0x12
 1193 01fd 0F030000 		.4byte	.LASF34
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 32


 1194 0201 01       		.byte	0x1
 1195 0202 8801     		.2byte	0x188
 1196 0204 DC010000 		.4byte	0x1dc
 1197 0208 02       		.uleb128 0x2
 1198 0209 91       		.byte	0x91
 1199 020a 74       		.sleb128 -12
 1200 020b 00       		.byte	0
 1201 020c 10       		.uleb128 0x10
 1202 020d 18000000 		.4byte	.LASF35
 1203 0211 01       		.byte	0x1
 1204 0212 A801     		.2byte	0x1a8
 1205 0214 00000000 		.4byte	.LFB69
 1206 0218 24000000 		.4byte	.LFE69-.LFB69
 1207 021c 01       		.uleb128 0x1
 1208 021d 9C       		.byte	0x9c
 1209 021e 32020000 		.4byte	0x232
 1210 0222 11       		.uleb128 0x11
 1211 0223 2C020000 		.4byte	.LASF36
 1212 0227 01       		.byte	0x1
 1213 0228 A801     		.2byte	0x1a8
 1214 022a 9D000000 		.4byte	0x9d
 1215 022e 02       		.uleb128 0x2
 1216 022f 91       		.byte	0x91
 1217 0230 77       		.sleb128 -9
 1218 0231 00       		.byte	0
 1219 0232 13       		.uleb128 0x13
 1220 0233 EF020000 		.4byte	.LASF38
 1221 0237 01       		.byte	0x1
 1222 0238 BE01     		.2byte	0x1be
 1223 023a 9D000000 		.4byte	0x9d
 1224 023e 00000000 		.4byte	.LFB70
 1225 0242 20000000 		.4byte	.LFE70-.LFB70
 1226 0246 01       		.uleb128 0x1
 1227 0247 9C       		.byte	0x9c
 1228 0248 5C020000 		.4byte	0x25c
 1229 024c 12       		.uleb128 0x12
 1230 024d 2C020000 		.4byte	.LASF36
 1231 0251 01       		.byte	0x1
 1232 0252 C001     		.2byte	0x1c0
 1233 0254 9D000000 		.4byte	0x9d
 1234 0258 02       		.uleb128 0x2
 1235 0259 91       		.byte	0x91
 1236 025a 77       		.sleb128 -9
 1237 025b 00       		.byte	0
 1238 025c 14       		.uleb128 0x14
 1239 025d 2D030000 		.4byte	.LASF39
 1240 0261 01       		.byte	0x1
 1241 0262 D901     		.2byte	0x1d9
 1242 0264 00000000 		.4byte	.LFB71
 1243 0268 18000000 		.4byte	.LFE71-.LFB71
 1244 026c 01       		.uleb128 0x1
 1245 026d 9C       		.byte	0x9c
 1246 026e 15       		.uleb128 0x15
 1247 026f 00000000 		.4byte	.LASF52
 1248 0273 01       		.byte	0x1
 1249 0274 EE01     		.2byte	0x1ee
 1250 0276 9D000000 		.4byte	0x9d
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 33


 1251 027a 00000000 		.4byte	.LFB72
 1252 027e 24000000 		.4byte	.LFE72-.LFB72
 1253 0282 01       		.uleb128 0x1
 1254 0283 9C       		.byte	0x9c
 1255 0284 14       		.uleb128 0x14
 1256 0285 E3000000 		.4byte	.LASF40
 1257 0289 01       		.byte	0x1
 1258 028a 0302     		.2byte	0x203
 1259 028c 00000000 		.4byte	.LFB73
 1260 0290 18000000 		.4byte	.LFE73-.LFB73
 1261 0294 01       		.uleb128 0x1
 1262 0295 9C       		.byte	0x9c
 1263 0296 14       		.uleb128 0x14
 1264 0297 35020000 		.4byte	.LASF41
 1265 029b 01       		.byte	0x1
 1266 029c 1E02     		.2byte	0x21e
 1267 029e 00000000 		.4byte	.LFB74
 1268 02a2 18000000 		.4byte	.LFE74-.LFB74
 1269 02a6 01       		.uleb128 0x1
 1270 02a7 9C       		.byte	0x9c
 1271 02a8 14       		.uleb128 0x14
 1272 02a9 39000000 		.4byte	.LASF42
 1273 02ad 01       		.byte	0x1
 1274 02ae 3702     		.2byte	0x237
 1275 02b0 00000000 		.4byte	.LFB75
 1276 02b4 18000000 		.4byte	.LFE75-.LFB75
 1277 02b8 01       		.uleb128 0x1
 1278 02b9 9C       		.byte	0x9c
 1279 02ba 16       		.uleb128 0x16
 1280 02bb 7D010000 		.4byte	.LASF43
 1281 02bf 01       		.byte	0x1
 1282 02c0 2C       		.byte	0x2c
 1283 02c1 9D000000 		.4byte	0x9d
 1284 02c5 05       		.uleb128 0x5
 1285 02c6 03       		.byte	0x3
 1286 02c7 00000000 		.4byte	blinkcounter
 1287 02cb 17       		.uleb128 0x17
 1288 02cc 0A020000 		.4byte	.LASF44
 1289 02d0 06       		.byte	0x6
 1290 02d1 1207     		.2byte	0x712
 1291 02d3 D7020000 		.4byte	0x2d7
 1292 02d7 08       		.uleb128 0x8
 1293 02d8 92000000 		.4byte	0x92
 1294 02dc 18       		.uleb128 0x18
 1295 02dd 76030000 		.4byte	.LASF45
 1296 02e1 05       		.byte	0x5
 1297 02e2 16       		.byte	0x16
 1298 02e3 F1000000 		.4byte	0xf1
 1299 02e7 05       		.uleb128 0x5
 1300 02e8 03       		.byte	0x3
 1301 02e9 00000000 		.4byte	Test
 1302 02ed 18       		.uleb128 0x18
 1303 02ee A7010000 		.4byte	.LASF46
 1304 02f2 01       		.byte	0x1
 1305 02f3 2A       		.byte	0x2a
 1306 02f4 22010000 		.4byte	0x122
 1307 02f8 05       		.uleb128 0x5
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 34


 1308 02f9 03       		.byte	0x3
 1309 02fa 00000000 		.4byte	CurrentTest
 1310 02fe 00       		.byte	0
 1311              		.section	.debug_abbrev,"",%progbits
 1312              	.Ldebug_abbrev0:
 1313 0000 01       		.uleb128 0x1
 1314 0001 11       		.uleb128 0x11
 1315 0002 01       		.byte	0x1
 1316 0003 25       		.uleb128 0x25
 1317 0004 0E       		.uleb128 0xe
 1318 0005 13       		.uleb128 0x13
 1319 0006 0B       		.uleb128 0xb
 1320 0007 03       		.uleb128 0x3
 1321 0008 0E       		.uleb128 0xe
 1322 0009 1B       		.uleb128 0x1b
 1323 000a 0E       		.uleb128 0xe
 1324 000b 55       		.uleb128 0x55
 1325 000c 17       		.uleb128 0x17
 1326 000d 11       		.uleb128 0x11
 1327 000e 01       		.uleb128 0x1
 1328 000f 10       		.uleb128 0x10
 1329 0010 17       		.uleb128 0x17
 1330 0011 00       		.byte	0
 1331 0012 00       		.byte	0
 1332 0013 02       		.uleb128 0x2
 1333 0014 24       		.uleb128 0x24
 1334 0015 00       		.byte	0
 1335 0016 0B       		.uleb128 0xb
 1336 0017 0B       		.uleb128 0xb
 1337 0018 3E       		.uleb128 0x3e
 1338 0019 0B       		.uleb128 0xb
 1339 001a 03       		.uleb128 0x3
 1340 001b 08       		.uleb128 0x8
 1341 001c 00       		.byte	0
 1342 001d 00       		.byte	0
 1343 001e 03       		.uleb128 0x3
 1344 001f 24       		.uleb128 0x24
 1345 0020 00       		.byte	0
 1346 0021 0B       		.uleb128 0xb
 1347 0022 0B       		.uleb128 0xb
 1348 0023 3E       		.uleb128 0x3e
 1349 0024 0B       		.uleb128 0xb
 1350 0025 03       		.uleb128 0x3
 1351 0026 0E       		.uleb128 0xe
 1352 0027 00       		.byte	0
 1353 0028 00       		.byte	0
 1354 0029 04       		.uleb128 0x4
 1355 002a 16       		.uleb128 0x16
 1356 002b 00       		.byte	0
 1357 002c 03       		.uleb128 0x3
 1358 002d 0E       		.uleb128 0xe
 1359 002e 3A       		.uleb128 0x3a
 1360 002f 0B       		.uleb128 0xb
 1361 0030 3B       		.uleb128 0x3b
 1362 0031 0B       		.uleb128 0xb
 1363 0032 49       		.uleb128 0x49
 1364 0033 13       		.uleb128 0x13
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 35


 1365 0034 00       		.byte	0
 1366 0035 00       		.byte	0
 1367 0036 05       		.uleb128 0x5
 1368 0037 0F       		.uleb128 0xf
 1369 0038 00       		.byte	0
 1370 0039 0B       		.uleb128 0xb
 1371 003a 0B       		.uleb128 0xb
 1372 003b 49       		.uleb128 0x49
 1373 003c 13       		.uleb128 0x13
 1374 003d 00       		.byte	0
 1375 003e 00       		.byte	0
 1376 003f 06       		.uleb128 0x6
 1377 0040 15       		.uleb128 0x15
 1378 0041 00       		.byte	0
 1379 0042 27       		.uleb128 0x27
 1380 0043 19       		.uleb128 0x19
 1381 0044 00       		.byte	0
 1382 0045 00       		.byte	0
 1383 0046 07       		.uleb128 0x7
 1384 0047 16       		.uleb128 0x16
 1385 0048 00       		.byte	0
 1386 0049 03       		.uleb128 0x3
 1387 004a 0E       		.uleb128 0xe
 1388 004b 3A       		.uleb128 0x3a
 1389 004c 0B       		.uleb128 0xb
 1390 004d 3B       		.uleb128 0x3b
 1391 004e 05       		.uleb128 0x5
 1392 004f 49       		.uleb128 0x49
 1393 0050 13       		.uleb128 0x13
 1394 0051 00       		.byte	0
 1395 0052 00       		.byte	0
 1396 0053 08       		.uleb128 0x8
 1397 0054 35       		.uleb128 0x35
 1398 0055 00       		.byte	0
 1399 0056 49       		.uleb128 0x49
 1400 0057 13       		.uleb128 0x13
 1401 0058 00       		.byte	0
 1402 0059 00       		.byte	0
 1403 005a 09       		.uleb128 0x9
 1404 005b 13       		.uleb128 0x13
 1405 005c 01       		.byte	0x1
 1406 005d 03       		.uleb128 0x3
 1407 005e 0E       		.uleb128 0xe
 1408 005f 0B       		.uleb128 0xb
 1409 0060 0B       		.uleb128 0xb
 1410 0061 3A       		.uleb128 0x3a
 1411 0062 0B       		.uleb128 0xb
 1412 0063 3B       		.uleb128 0x3b
 1413 0064 0B       		.uleb128 0xb
 1414 0065 01       		.uleb128 0x1
 1415 0066 13       		.uleb128 0x13
 1416 0067 00       		.byte	0
 1417 0068 00       		.byte	0
 1418 0069 0A       		.uleb128 0xa
 1419 006a 0D       		.uleb128 0xd
 1420 006b 00       		.byte	0
 1421 006c 03       		.uleb128 0x3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 36


 1422 006d 0E       		.uleb128 0xe
 1423 006e 3A       		.uleb128 0x3a
 1424 006f 0B       		.uleb128 0xb
 1425 0070 3B       		.uleb128 0x3b
 1426 0071 0B       		.uleb128 0xb
 1427 0072 49       		.uleb128 0x49
 1428 0073 13       		.uleb128 0x13
 1429 0074 38       		.uleb128 0x38
 1430 0075 0B       		.uleb128 0xb
 1431 0076 00       		.byte	0
 1432 0077 00       		.byte	0
 1433 0078 0B       		.uleb128 0xb
 1434 0079 04       		.uleb128 0x4
 1435 007a 01       		.byte	0x1
 1436 007b 03       		.uleb128 0x3
 1437 007c 0E       		.uleb128 0xe
 1438 007d 0B       		.uleb128 0xb
 1439 007e 0B       		.uleb128 0xb
 1440 007f 49       		.uleb128 0x49
 1441 0080 13       		.uleb128 0x13
 1442 0081 3A       		.uleb128 0x3a
 1443 0082 0B       		.uleb128 0xb
 1444 0083 3B       		.uleb128 0x3b
 1445 0084 0B       		.uleb128 0xb
 1446 0085 01       		.uleb128 0x1
 1447 0086 13       		.uleb128 0x13
 1448 0087 00       		.byte	0
 1449 0088 00       		.byte	0
 1450 0089 0C       		.uleb128 0xc
 1451 008a 28       		.uleb128 0x28
 1452 008b 00       		.byte	0
 1453 008c 03       		.uleb128 0x3
 1454 008d 0E       		.uleb128 0xe
 1455 008e 1C       		.uleb128 0x1c
 1456 008f 0B       		.uleb128 0xb
 1457 0090 00       		.byte	0
 1458 0091 00       		.byte	0
 1459 0092 0D       		.uleb128 0xd
 1460 0093 2E       		.uleb128 0x2e
 1461 0094 00       		.byte	0
 1462 0095 3F       		.uleb128 0x3f
 1463 0096 19       		.uleb128 0x19
 1464 0097 03       		.uleb128 0x3
 1465 0098 0E       		.uleb128 0xe
 1466 0099 3A       		.uleb128 0x3a
 1467 009a 0B       		.uleb128 0xb
 1468 009b 3B       		.uleb128 0x3b
 1469 009c 0B       		.uleb128 0xb
 1470 009d 27       		.uleb128 0x27
 1471 009e 19       		.uleb128 0x19
 1472 009f 11       		.uleb128 0x11
 1473 00a0 01       		.uleb128 0x1
 1474 00a1 12       		.uleb128 0x12
 1475 00a2 06       		.uleb128 0x6
 1476 00a3 40       		.uleb128 0x40
 1477 00a4 18       		.uleb128 0x18
 1478 00a5 9642     		.uleb128 0x2116
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 37


 1479 00a7 19       		.uleb128 0x19
 1480 00a8 00       		.byte	0
 1481 00a9 00       		.byte	0
 1482 00aa 0E       		.uleb128 0xe
 1483 00ab 2E       		.uleb128 0x2e
 1484 00ac 01       		.byte	0x1
 1485 00ad 3F       		.uleb128 0x3f
 1486 00ae 19       		.uleb128 0x19
 1487 00af 03       		.uleb128 0x3
 1488 00b0 0E       		.uleb128 0xe
 1489 00b1 3A       		.uleb128 0x3a
 1490 00b2 0B       		.uleb128 0xb
 1491 00b3 3B       		.uleb128 0x3b
 1492 00b4 0B       		.uleb128 0xb
 1493 00b5 27       		.uleb128 0x27
 1494 00b6 19       		.uleb128 0x19
 1495 00b7 11       		.uleb128 0x11
 1496 00b8 01       		.uleb128 0x1
 1497 00b9 12       		.uleb128 0x12
 1498 00ba 06       		.uleb128 0x6
 1499 00bb 40       		.uleb128 0x40
 1500 00bc 18       		.uleb128 0x18
 1501 00bd 9642     		.uleb128 0x2116
 1502 00bf 19       		.uleb128 0x19
 1503 00c0 01       		.uleb128 0x1
 1504 00c1 13       		.uleb128 0x13
 1505 00c2 00       		.byte	0
 1506 00c3 00       		.byte	0
 1507 00c4 0F       		.uleb128 0xf
 1508 00c5 05       		.uleb128 0x5
 1509 00c6 00       		.byte	0
 1510 00c7 03       		.uleb128 0x3
 1511 00c8 0E       		.uleb128 0xe
 1512 00c9 3A       		.uleb128 0x3a
 1513 00ca 0B       		.uleb128 0xb
 1514 00cb 3B       		.uleb128 0x3b
 1515 00cc 0B       		.uleb128 0xb
 1516 00cd 49       		.uleb128 0x49
 1517 00ce 13       		.uleb128 0x13
 1518 00cf 02       		.uleb128 0x2
 1519 00d0 18       		.uleb128 0x18
 1520 00d1 00       		.byte	0
 1521 00d2 00       		.byte	0
 1522 00d3 10       		.uleb128 0x10
 1523 00d4 2E       		.uleb128 0x2e
 1524 00d5 01       		.byte	0x1
 1525 00d6 3F       		.uleb128 0x3f
 1526 00d7 19       		.uleb128 0x19
 1527 00d8 03       		.uleb128 0x3
 1528 00d9 0E       		.uleb128 0xe
 1529 00da 3A       		.uleb128 0x3a
 1530 00db 0B       		.uleb128 0xb
 1531 00dc 3B       		.uleb128 0x3b
 1532 00dd 05       		.uleb128 0x5
 1533 00de 27       		.uleb128 0x27
 1534 00df 19       		.uleb128 0x19
 1535 00e0 11       		.uleb128 0x11
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 38


 1536 00e1 01       		.uleb128 0x1
 1537 00e2 12       		.uleb128 0x12
 1538 00e3 06       		.uleb128 0x6
 1539 00e4 40       		.uleb128 0x40
 1540 00e5 18       		.uleb128 0x18
 1541 00e6 9742     		.uleb128 0x2117
 1542 00e8 19       		.uleb128 0x19
 1543 00e9 01       		.uleb128 0x1
 1544 00ea 13       		.uleb128 0x13
 1545 00eb 00       		.byte	0
 1546 00ec 00       		.byte	0
 1547 00ed 11       		.uleb128 0x11
 1548 00ee 05       		.uleb128 0x5
 1549 00ef 00       		.byte	0
 1550 00f0 03       		.uleb128 0x3
 1551 00f1 0E       		.uleb128 0xe
 1552 00f2 3A       		.uleb128 0x3a
 1553 00f3 0B       		.uleb128 0xb
 1554 00f4 3B       		.uleb128 0x3b
 1555 00f5 05       		.uleb128 0x5
 1556 00f6 49       		.uleb128 0x49
 1557 00f7 13       		.uleb128 0x13
 1558 00f8 02       		.uleb128 0x2
 1559 00f9 18       		.uleb128 0x18
 1560 00fa 00       		.byte	0
 1561 00fb 00       		.byte	0
 1562 00fc 12       		.uleb128 0x12
 1563 00fd 34       		.uleb128 0x34
 1564 00fe 00       		.byte	0
 1565 00ff 03       		.uleb128 0x3
 1566 0100 0E       		.uleb128 0xe
 1567 0101 3A       		.uleb128 0x3a
 1568 0102 0B       		.uleb128 0xb
 1569 0103 3B       		.uleb128 0x3b
 1570 0104 05       		.uleb128 0x5
 1571 0105 49       		.uleb128 0x49
 1572 0106 13       		.uleb128 0x13
 1573 0107 02       		.uleb128 0x2
 1574 0108 18       		.uleb128 0x18
 1575 0109 00       		.byte	0
 1576 010a 00       		.byte	0
 1577 010b 13       		.uleb128 0x13
 1578 010c 2E       		.uleb128 0x2e
 1579 010d 01       		.byte	0x1
 1580 010e 3F       		.uleb128 0x3f
 1581 010f 19       		.uleb128 0x19
 1582 0110 03       		.uleb128 0x3
 1583 0111 0E       		.uleb128 0xe
 1584 0112 3A       		.uleb128 0x3a
 1585 0113 0B       		.uleb128 0xb
 1586 0114 3B       		.uleb128 0x3b
 1587 0115 05       		.uleb128 0x5
 1588 0116 27       		.uleb128 0x27
 1589 0117 19       		.uleb128 0x19
 1590 0118 49       		.uleb128 0x49
 1591 0119 13       		.uleb128 0x13
 1592 011a 11       		.uleb128 0x11
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 39


 1593 011b 01       		.uleb128 0x1
 1594 011c 12       		.uleb128 0x12
 1595 011d 06       		.uleb128 0x6
 1596 011e 40       		.uleb128 0x40
 1597 011f 18       		.uleb128 0x18
 1598 0120 9742     		.uleb128 0x2117
 1599 0122 19       		.uleb128 0x19
 1600 0123 01       		.uleb128 0x1
 1601 0124 13       		.uleb128 0x13
 1602 0125 00       		.byte	0
 1603 0126 00       		.byte	0
 1604 0127 14       		.uleb128 0x14
 1605 0128 2E       		.uleb128 0x2e
 1606 0129 00       		.byte	0
 1607 012a 3F       		.uleb128 0x3f
 1608 012b 19       		.uleb128 0x19
 1609 012c 03       		.uleb128 0x3
 1610 012d 0E       		.uleb128 0xe
 1611 012e 3A       		.uleb128 0x3a
 1612 012f 0B       		.uleb128 0xb
 1613 0130 3B       		.uleb128 0x3b
 1614 0131 05       		.uleb128 0x5
 1615 0132 27       		.uleb128 0x27
 1616 0133 19       		.uleb128 0x19
 1617 0134 11       		.uleb128 0x11
 1618 0135 01       		.uleb128 0x1
 1619 0136 12       		.uleb128 0x12
 1620 0137 06       		.uleb128 0x6
 1621 0138 40       		.uleb128 0x40
 1622 0139 18       		.uleb128 0x18
 1623 013a 9742     		.uleb128 0x2117
 1624 013c 19       		.uleb128 0x19
 1625 013d 00       		.byte	0
 1626 013e 00       		.byte	0
 1627 013f 15       		.uleb128 0x15
 1628 0140 2E       		.uleb128 0x2e
 1629 0141 00       		.byte	0
 1630 0142 3F       		.uleb128 0x3f
 1631 0143 19       		.uleb128 0x19
 1632 0144 03       		.uleb128 0x3
 1633 0145 0E       		.uleb128 0xe
 1634 0146 3A       		.uleb128 0x3a
 1635 0147 0B       		.uleb128 0xb
 1636 0148 3B       		.uleb128 0x3b
 1637 0149 05       		.uleb128 0x5
 1638 014a 27       		.uleb128 0x27
 1639 014b 19       		.uleb128 0x19
 1640 014c 49       		.uleb128 0x49
 1641 014d 13       		.uleb128 0x13
 1642 014e 11       		.uleb128 0x11
 1643 014f 01       		.uleb128 0x1
 1644 0150 12       		.uleb128 0x12
 1645 0151 06       		.uleb128 0x6
 1646 0152 40       		.uleb128 0x40
 1647 0153 18       		.uleb128 0x18
 1648 0154 9742     		.uleb128 0x2117
 1649 0156 19       		.uleb128 0x19
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 40


 1650 0157 00       		.byte	0
 1651 0158 00       		.byte	0
 1652 0159 16       		.uleb128 0x16
 1653 015a 34       		.uleb128 0x34
 1654 015b 00       		.byte	0
 1655 015c 03       		.uleb128 0x3
 1656 015d 0E       		.uleb128 0xe
 1657 015e 3A       		.uleb128 0x3a
 1658 015f 0B       		.uleb128 0xb
 1659 0160 3B       		.uleb128 0x3b
 1660 0161 0B       		.uleb128 0xb
 1661 0162 49       		.uleb128 0x49
 1662 0163 13       		.uleb128 0x13
 1663 0164 02       		.uleb128 0x2
 1664 0165 18       		.uleb128 0x18
 1665 0166 00       		.byte	0
 1666 0167 00       		.byte	0
 1667 0168 17       		.uleb128 0x17
 1668 0169 34       		.uleb128 0x34
 1669 016a 00       		.byte	0
 1670 016b 03       		.uleb128 0x3
 1671 016c 0E       		.uleb128 0xe
 1672 016d 3A       		.uleb128 0x3a
 1673 016e 0B       		.uleb128 0xb
 1674 016f 3B       		.uleb128 0x3b
 1675 0170 05       		.uleb128 0x5
 1676 0171 49       		.uleb128 0x49
 1677 0172 13       		.uleb128 0x13
 1678 0173 3F       		.uleb128 0x3f
 1679 0174 19       		.uleb128 0x19
 1680 0175 3C       		.uleb128 0x3c
 1681 0176 19       		.uleb128 0x19
 1682 0177 00       		.byte	0
 1683 0178 00       		.byte	0
 1684 0179 18       		.uleb128 0x18
 1685 017a 34       		.uleb128 0x34
 1686 017b 00       		.byte	0
 1687 017c 03       		.uleb128 0x3
 1688 017d 0E       		.uleb128 0xe
 1689 017e 3A       		.uleb128 0x3a
 1690 017f 0B       		.uleb128 0xb
 1691 0180 3B       		.uleb128 0x3b
 1692 0181 0B       		.uleb128 0xb
 1693 0182 49       		.uleb128 0x49
 1694 0183 13       		.uleb128 0x13
 1695 0184 3F       		.uleb128 0x3f
 1696 0185 19       		.uleb128 0x19
 1697 0186 02       		.uleb128 0x2
 1698 0187 18       		.uleb128 0x18
 1699 0188 00       		.byte	0
 1700 0189 00       		.byte	0
 1701 018a 00       		.byte	0
 1702              		.section	.debug_aranges,"",%progbits
 1703 0000 7C000000 		.4byte	0x7c
 1704 0004 0200     		.2byte	0x2
 1705 0006 00000000 		.4byte	.Ldebug_info0
 1706 000a 04       		.byte	0x4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 41


 1707 000b 00       		.byte	0
 1708 000c 0000     		.2byte	0
 1709 000e 0000     		.2byte	0
 1710 0010 00000000 		.4byte	.LFB63
 1711 0014 20000000 		.4byte	.LFE63-.LFB63
 1712 0018 00000000 		.4byte	.LFB64
 1713 001c 24000000 		.4byte	.LFE64-.LFB64
 1714 0020 00000000 		.4byte	.LFB65
 1715 0024 18000000 		.4byte	.LFE65-.LFB65
 1716 0028 00000000 		.4byte	.LFB66
 1717 002c 90020000 		.4byte	.LFE66-.LFB66
 1718 0030 00000000 		.4byte	.LFB67
 1719 0034 24000000 		.4byte	.LFE67-.LFB67
 1720 0038 00000000 		.4byte	.LFB68
 1721 003c 20000000 		.4byte	.LFE68-.LFB68
 1722 0040 00000000 		.4byte	.LFB69
 1723 0044 24000000 		.4byte	.LFE69-.LFB69
 1724 0048 00000000 		.4byte	.LFB70
 1725 004c 20000000 		.4byte	.LFE70-.LFB70
 1726 0050 00000000 		.4byte	.LFB71
 1727 0054 18000000 		.4byte	.LFE71-.LFB71
 1728 0058 00000000 		.4byte	.LFB72
 1729 005c 24000000 		.4byte	.LFE72-.LFB72
 1730 0060 00000000 		.4byte	.LFB73
 1731 0064 18000000 		.4byte	.LFE73-.LFB73
 1732 0068 00000000 		.4byte	.LFB74
 1733 006c 18000000 		.4byte	.LFE74-.LFB74
 1734 0070 00000000 		.4byte	.LFB75
 1735 0074 18000000 		.4byte	.LFE75-.LFB75
 1736 0078 00000000 		.4byte	0
 1737 007c 00000000 		.4byte	0
 1738              		.section	.debug_ranges,"",%progbits
 1739              	.Ldebug_ranges0:
 1740 0000 00000000 		.4byte	.LFB63
 1741 0004 20000000 		.4byte	.LFE63
 1742 0008 00000000 		.4byte	.LFB64
 1743 000c 24000000 		.4byte	.LFE64
 1744 0010 00000000 		.4byte	.LFB65
 1745 0014 18000000 		.4byte	.LFE65
 1746 0018 00000000 		.4byte	.LFB66
 1747 001c 90020000 		.4byte	.LFE66
 1748 0020 00000000 		.4byte	.LFB67
 1749 0024 24000000 		.4byte	.LFE67
 1750 0028 00000000 		.4byte	.LFB68
 1751 002c 20000000 		.4byte	.LFE68
 1752 0030 00000000 		.4byte	.LFB69
 1753 0034 24000000 		.4byte	.LFE69
 1754 0038 00000000 		.4byte	.LFB70
 1755 003c 20000000 		.4byte	.LFE70
 1756 0040 00000000 		.4byte	.LFB71
 1757 0044 18000000 		.4byte	.LFE71
 1758 0048 00000000 		.4byte	.LFB72
 1759 004c 24000000 		.4byte	.LFE72
 1760 0050 00000000 		.4byte	.LFB73
 1761 0054 18000000 		.4byte	.LFE73
 1762 0058 00000000 		.4byte	.LFB74
 1763 005c 18000000 		.4byte	.LFE74
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 42


 1764 0060 00000000 		.4byte	.LFB75
 1765 0064 18000000 		.4byte	.LFE75
 1766 0068 00000000 		.4byte	0
 1767 006c 00000000 		.4byte	0
 1768              		.section	.debug_line,"",%progbits
 1769              	.Ldebug_line0:
 1770 0000 0D030000 		.section	.debug_str,"MS",%progbits,1
 1770      02006D01 
 1770      00000201 
 1770      FB0E0D00 
 1770      01010101 
 1771              	.LASF52:
 1772 0000 6973725F 		.ascii	"isr_Timer_50ms_GetState\000"
 1772      54696D65 
 1772      725F3530 
 1772      6D735F47 
 1772      65745374 
 1773              	.LASF35:
 1774 0018 6973725F 		.ascii	"isr_Timer_50ms_SetPriority\000"
 1774      54696D65 
 1774      725F3530 
 1774      6D735F53 
 1774      65745072 
 1775              	.LASF19:
 1776 0033 72656733 		.ascii	"reg32\000"
 1776      3200
 1777              	.LASF42:
 1778 0039 6973725F 		.ascii	"isr_Timer_50ms_ClearPending\000"
 1778      54696D65 
 1778      725F3530 
 1778      6D735F43 
 1778      6C656172 
 1779              	.LASF47:
 1780 0055 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1780      43313120 
 1780      352E342E 
 1780      31203230 
 1780      31363036 
 1781 0088 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1781      20726576 
 1781      6973696F 
 1781      6E203233 
 1781      37373135 
 1782 00bb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1782      66756E63 
 1782      74696F6E 
 1782      2D736563 
 1782      74696F6E 
 1783              	.LASF40:
 1784 00e3 6973725F 		.ascii	"isr_Timer_50ms_Disable\000"
 1784      54696D65 
 1784      725F3530 
 1784      6D735F44 
 1784      69736162 
 1785              	.LASF26:
 1786 00fa 52544553 		.ascii	"RTEST\000"
 1786      5400
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 43


 1787              	.LASF12:
 1788 0100 5F5F696E 		.ascii	"__int32_t\000"
 1788      7433325F 
 1788      7400
 1789              	.LASF23:
 1790 010a 53746174 		.ascii	"Status\000"
 1790      757300
 1791              	.LASF28:
 1792 0111 6973725F 		.ascii	"isr_Timer_50ms_Start\000"
 1792      54696D65 
 1792      725F3530 
 1792      6D735F53 
 1792      74617274 
 1793              	.LASF22:
 1794 0126 54657374 		.ascii	"TestStep\000"
 1794      53746570 
 1794      00
 1795              	.LASF51:
 1796 012f 44617461 		.ascii	"DataType\000"
 1796      54797065 
 1796      00
 1797              	.LASF37:
 1798 0138 6973725F 		.ascii	"isr_Timer_50ms_GetVector\000"
 1798      54696D65 
 1798      725F3530 
 1798      6D735F47 
 1798      65745665 
 1799              	.LASF21:
 1800 0151 53656C65 		.ascii	"SelectedTest\000"
 1800      63746564 
 1800      54657374 
 1800      00
 1801              	.LASF16:
 1802 015e 666C6F61 		.ascii	"float\000"
 1802      7400
 1803              	.LASF32:
 1804 0164 6973725F 		.ascii	"isr_Timer_50ms_SetVector\000"
 1804      54696D65 
 1804      725F3530 
 1804      6D735F53 
 1804      65745665 
 1805              	.LASF43:
 1806 017d 626C696E 		.ascii	"blinkcounter\000"
 1806      6B636F75 
 1806      6E746572 
 1806      00
 1807              	.LASF18:
 1808 018a 72656738 		.ascii	"reg8\000"
 1808      00
 1809              	.LASF27:
 1810 018f 53544553 		.ascii	"STEST\000"
 1810      5400
 1811              	.LASF8:
 1812 0195 6C6F6E67 		.ascii	"long unsigned int\000"
 1812      20756E73 
 1812      69676E65 
 1812      6420696E 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 44


 1812      7400
 1813              	.LASF46:
 1814 01a7 43757272 		.ascii	"CurrentTest\000"
 1814      656E7454 
 1814      65737400 
 1815              	.LASF6:
 1816 01b3 73686F72 		.ascii	"short unsigned int\000"
 1816      7420756E 
 1816      7369676E 
 1816      65642069 
 1816      6E7400
 1817              	.LASF49:
 1818 01c6 433A5C55 		.ascii	"C:\\Users\\marthnick\\Desktop\\firm_F1-TestFixture\\"
 1818      73657273 
 1818      5C6D6172 
 1818      74686E69 
 1818      636B5C44 
 1819 01f5 46312D54 		.ascii	"F1-TestFixture.cydsn\000"
 1819      65737446 
 1819      69787475 
 1819      72652E63 
 1819      7964736E 
 1820              	.LASF44:
 1821 020a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1821      52784275 
 1821      66666572 
 1821      00
 1822              	.LASF4:
 1823 0217 756E7369 		.ascii	"unsigned char\000"
 1823      676E6564 
 1823      20636861 
 1823      7200
 1824              	.LASF17:
 1825 0225 646F7562 		.ascii	"double\000"
 1825      6C6500
 1826              	.LASF36:
 1827 022c 7072696F 		.ascii	"priority\000"
 1827      72697479 
 1827      00
 1828              	.LASF41:
 1829 0235 6973725F 		.ascii	"isr_Timer_50ms_SetPending\000"
 1829      54696D65 
 1829      725F3530 
 1829      6D735F53 
 1829      65745065 
 1830              	.LASF15:
 1831 024f 75696E74 		.ascii	"uint32\000"
 1831      333200
 1832              	.LASF0:
 1833 0256 756E7369 		.ascii	"unsigned int\000"
 1833      676E6564 
 1833      20696E74 
 1833      00
 1834              	.LASF33:
 1835 0263 61646472 		.ascii	"address\000"
 1835      65737300 
 1836              	.LASF9:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 45


 1837 026b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1837      206C6F6E 
 1837      6720756E 
 1837      7369676E 
 1837      65642069 
 1838              	.LASF20:
 1839 0282 63796973 		.ascii	"cyisraddress\000"
 1839      72616464 
 1839      72657373 
 1839      00
 1840              	.LASF30:
 1841 028f 6973725F 		.ascii	"isr_Timer_50ms_Interrupt\000"
 1841      54696D65 
 1841      725F3530 
 1841      6D735F49 
 1841      6E746572 
 1842              	.LASF13:
 1843 02a8 696E7433 		.ascii	"int32_t\000"
 1843      325F7400 
 1844              	.LASF10:
 1845 02b0 73697A65 		.ascii	"sizetype\000"
 1845      74797065 
 1845      00
 1846              	.LASF48:
 1847 02b9 47656E65 		.ascii	"Generated_Source\\PSoC5\\isr_Timer_50ms.c\000"
 1847      72617465 
 1847      645F536F 
 1847      75726365 
 1847      5C50536F 
 1848              	.LASF1:
 1849 02e1 6C6F6E67 		.ascii	"long long int\000"
 1849      206C6F6E 
 1849      6720696E 
 1849      7400
 1850              	.LASF38:
 1851 02ef 6973725F 		.ascii	"isr_Timer_50ms_GetPriority\000"
 1851      54696D65 
 1851      725F3530 
 1851      6D735F47 
 1851      65745072 
 1852              	.LASF11:
 1853 030a 63686172 		.ascii	"char\000"
 1853      00
 1854              	.LASF34:
 1855 030f 72616D56 		.ascii	"ramVectorTable\000"
 1855      6563746F 
 1855      72546162 
 1855      6C6500
 1856              	.LASF24:
 1857 031e 53747275 		.ascii	"StructTestInfo\000"
 1857      63745465 
 1857      7374496E 
 1857      666F00
 1858              	.LASF39:
 1859 032d 6973725F 		.ascii	"isr_Timer_50ms_Enable\000"
 1859      54696D65 
 1859      725F3530 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccfrtomi.s 			page 46


 1859      6D735F45 
 1859      6E61626C 
 1860              	.LASF5:
 1861 0343 73686F72 		.ascii	"short int\000"
 1861      7420696E 
 1861      7400
 1862              	.LASF25:
 1863 034d 43544553 		.ascii	"CTEST\000"
 1863      5400
 1864              	.LASF14:
 1865 0353 75696E74 		.ascii	"uint8\000"
 1865      3800
 1866              	.LASF29:
 1867 0359 6973725F 		.ascii	"isr_Timer_50ms_Stop\000"
 1867      54696D65 
 1867      725F3530 
 1867      6D735F53 
 1867      746F7000 
 1868              	.LASF7:
 1869 036d 6C6F6E67 		.ascii	"long int\000"
 1869      20696E74 
 1869      00
 1870              	.LASF45:
 1871 0376 54657374 		.ascii	"Test\000"
 1871      00
 1872              	.LASF50:
 1873 037b 73747275 		.ascii	"structTestInfo\000"
 1873      63745465 
 1873      7374496E 
 1873      666F00
 1874              	.LASF2:
 1875 038a 6C6F6E67 		.ascii	"long double\000"
 1875      20646F75 
 1875      626C6500 
 1876              	.LASF3:
 1877 0396 7369676E 		.ascii	"signed char\000"
 1877      65642063 
 1877      68617200 
 1878              	.LASF31:
 1879 03a2 6973725F 		.ascii	"isr_Timer_50ms_StartEx\000"
 1879      54696D65 
 1879      725F3530 
 1879      6D735F53 
 1879      74617274 
 1880              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
