ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"isr_Timer_50ms.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Test,3,4
  20              		.comm	CurrentTest,3,4
  21              		.bss
  22              	blinkcounter:
  23 0000 00       		.space	1
  24              		.section	.text.isr_Timer_50ms_Start,"ax",%progbits
  25              		.align	2
  26              		.global	isr_Timer_50ms_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	isr_Timer_50ms_Start, %function
  30              	isr_Timer_50ms_Start:
  31              	.LFB63:
  32              		.file 1 "Generated_Source\\PSoC5\\isr_Timer_50ms.c"
   1:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/isr_Timer_50ms.c **** * File Name: isr_Timer_50ms.c  
   3:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Version 1.70
   4:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
   5:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Description:
   6:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
   8:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
   9:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Note:
  10:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  11:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
  12:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/isr_Timer_50ms.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/isr_Timer_50ms.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/isr_Timer_50ms.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  18:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  19:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include <isr_Timer_50ms.h>
  22:Generated_Source\PSoC5/isr_Timer_50ms.c **** #include "cyapicallbacks.h"
  23:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  24:Generated_Source\PSoC5/isr_Timer_50ms.c **** #if !defined(isr_Timer_50ms__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 2


  26:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/isr_Timer_50ms.c **** /* `#START isr_Timer_50ms_intc` */
  30:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  31:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "CommonVariables.h"
  32:Generated_Source\PSoC5/isr_Timer_50ms.c ****     //#include "UART_230400_Functions.h"
  33:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "ControllerTest.h"
  34:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "RelayTest.h"
  35:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #include "SirenTest.h"
  36:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  37:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #define BLINKTIME   2       // How many 50msec periods of on time
  38:Generated_Source\PSoC5/isr_Timer_50ms.c ****      
  39:Generated_Source\PSoC5/isr_Timer_50ms.c ****     //uint8 SelectedTest;
  40:Generated_Source\PSoC5/isr_Timer_50ms.c ****     //struct structTestInfo CurrentTest;
  41:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  42:Generated_Source\PSoC5/isr_Timer_50ms.c ****     StructTestInfo CurrentTest;
  43:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  44:Generated_Source\PSoC5/isr_Timer_50ms.c ****     static uint8 blinkcounter = 0;
  45:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
  46:Generated_Source\PSoC5/isr_Timer_50ms.c ****     enum DataType
  47:Generated_Source\PSoC5/isr_Timer_50ms.c ****     { 
  48:Generated_Source\PSoC5/isr_Timer_50ms.c ****         CTEST, 
  49:Generated_Source\PSoC5/isr_Timer_50ms.c ****         RTEST,
  50:Generated_Source\PSoC5/isr_Timer_50ms.c ****         STEST
  51:Generated_Source\PSoC5/isr_Timer_50ms.c ****     };
  52:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  53:Generated_Source\PSoC5/isr_Timer_50ms.c **** /* `#END` */
  54:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  55:Generated_Source\PSoC5/isr_Timer_50ms.c **** #ifndef CYINT_IRQ_BASE
  56:Generated_Source\PSoC5/isr_Timer_50ms.c **** #define CYINT_IRQ_BASE      16
  57:Generated_Source\PSoC5/isr_Timer_50ms.c **** #endif /* CYINT_IRQ_BASE */
  58:Generated_Source\PSoC5/isr_Timer_50ms.c **** #ifndef CYINT_VECT_TABLE
  59:Generated_Source\PSoC5/isr_Timer_50ms.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  60:Generated_Source\PSoC5/isr_Timer_50ms.c **** #endif /* CYINT_VECT_TABLE */
  61:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  62:Generated_Source\PSoC5/isr_Timer_50ms.c **** /* Declared in startup, used to set unused interrupts to. */
  63:Generated_Source\PSoC5/isr_Timer_50ms.c **** CY_ISR_PROTO(IntDefaultHandler);
  64:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  65:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  66:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
  67:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Start
  68:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
  69:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  70:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
  71:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  72:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  sets the default interrupt vector, sets the priority from the value in the
  73:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  74:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  interrupt controller.
  75:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  76:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
  77:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
  78:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  79:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
  80:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
  81:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
  82:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 3


  83:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Start(void)
  84:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
  33              		.loc 1 84 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 0
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* For all we know the interrupt is active. */
  86:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Disable();
  43              		.loc 1 86 0
  44 0004 FFF7FEFF 		bl	isr_Timer_50ms_Disable
  87:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  88:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the ISR to point to the isr_Timer_50ms Interrupt. */
  89:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetVector(&isr_Timer_50ms_Interrupt);
  45              		.loc 1 89 0
  46 0008 0448     		ldr	r0, .L2
  47 000a FFF7FEFF 		bl	isr_Timer_50ms_SetVector
  90:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  91:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the priority. */
  92:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetPriority((uint8)isr_Timer_50ms_INTC_PRIOR_NUMBER);
  48              		.loc 1 92 0
  49 000e 0720     		movs	r0, #7
  50 0010 FFF7FEFF 		bl	isr_Timer_50ms_SetPriority
  93:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  94:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Enable it. */
  95:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Enable();
  51              		.loc 1 95 0
  52 0014 FFF7FEFF 		bl	isr_Timer_50ms_Enable
  96:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
  53              		.loc 1 96 0
  54 0018 00BF     		nop
  55 001a 80BD     		pop	{r7, pc}
  56              	.L3:
  57              		.align	2
  58              	.L2:
  59 001c 00000000 		.word	isr_Timer_50ms_Interrupt
  60              		.cfi_endproc
  61              	.LFE63:
  62              		.size	isr_Timer_50ms_Start, .-isr_Timer_50ms_Start
  63              		.section	.text.isr_Timer_50ms_StartEx,"ax",%progbits
  64              		.align	2
  65              		.global	isr_Timer_50ms_StartEx
  66              		.thumb
  67              		.thumb_func
  68              		.type	isr_Timer_50ms_StartEx, %function
  69              	isr_Timer_50ms_StartEx:
  70              	.LFB64:
  97:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  98:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
  99:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 100:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_StartEx
 101:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 4


 102:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 103:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 104:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
 105:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
 106:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
 107:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  the interrupt to the interrupt controller.
 108:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  
 109:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 110:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  used to provide consistent definition across compilers:
 111:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  
 112:Generated_Source\PSoC5/isr_Timer_50ms.c **** *  Function definition example:
 113:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   CY_ISR(MyISR)
 114:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   {
 115:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   }
 116:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Function prototype example:
 117:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   CY_ISR_PROTO(MyISR);
 118:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 119:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
 120:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   address: Address of the ISR to set in the interrupt vector table.
 121:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 122:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 123:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 124:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 125:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 126:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_StartEx(cyisraddress address)
 127:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
  71              		.loc 1 127 0
  72              		.cfi_startproc
  73              		@ args = 0, pretend = 0, frame = 8
  74              		@ frame_needed = 1, uses_anonymous_args = 0
  75 0000 80B5     		push	{r7, lr}
  76              		.cfi_def_cfa_offset 8
  77              		.cfi_offset 7, -8
  78              		.cfi_offset 14, -4
  79 0002 82B0     		sub	sp, sp, #8
  80              		.cfi_def_cfa_offset 16
  81 0004 00AF     		add	r7, sp, #0
  82              		.cfi_def_cfa_register 7
  83 0006 7860     		str	r0, [r7, #4]
 128:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* For all we know the interrupt is active. */
 129:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Disable();
  84              		.loc 1 129 0
  85 0008 FFF7FEFF 		bl	isr_Timer_50ms_Disable
 130:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 131:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the ISR to point to the isr_Timer_50ms Interrupt. */
 132:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetVector(address);
  86              		.loc 1 132 0
  87 000c 7868     		ldr	r0, [r7, #4]
  88 000e FFF7FEFF 		bl	isr_Timer_50ms_SetVector
 133:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 134:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the priority. */
 135:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetPriority((uint8)isr_Timer_50ms_INTC_PRIOR_NUMBER);
  89              		.loc 1 135 0
  90 0012 0720     		movs	r0, #7
  91 0014 FFF7FEFF 		bl	isr_Timer_50ms_SetPriority
 136:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 137:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Enable it. */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 5


 138:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Enable();
  92              		.loc 1 138 0
  93 0018 FFF7FEFF 		bl	isr_Timer_50ms_Enable
 139:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
  94              		.loc 1 139 0
  95 001c 00BF     		nop
  96 001e 0837     		adds	r7, r7, #8
  97              		.cfi_def_cfa_offset 8
  98 0020 BD46     		mov	sp, r7
  99              		.cfi_def_cfa_register 13
 100              		@ sp needed
 101 0022 80BD     		pop	{r7, pc}
 102              		.cfi_endproc
 103              	.LFE64:
 104              		.size	isr_Timer_50ms_StartEx, .-isr_Timer_50ms_StartEx
 105              		.section	.text.isr_Timer_50ms_Stop,"ax",%progbits
 106              		.align	2
 107              		.global	isr_Timer_50ms_Stop
 108              		.thumb
 109              		.thumb_func
 110              		.type	isr_Timer_50ms_Stop, %function
 111              	isr_Timer_50ms_Stop:
 112              	.LFB65:
 140:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 141:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 142:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 143:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Stop
 144:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 145:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 146:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 147:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Disables and removes the interrupt.
 148:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 149:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
 150:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 151:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 152:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 153:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 154:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 155:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 156:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Stop(void)
 157:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 113              		.loc 1 157 0
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              		.cfi_def_cfa_offset 8
 119              		.cfi_offset 7, -8
 120              		.cfi_offset 14, -4
 121 0002 00AF     		add	r7, sp, #0
 122              		.cfi_def_cfa_register 7
 158:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Disable this interrupt. */
 159:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_Disable();
 123              		.loc 1 159 0
 124 0004 FFF7FEFF 		bl	isr_Timer_50ms_Disable
 160:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 161:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Set the ISR to point to the passive one. */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 6


 162:Generated_Source\PSoC5/isr_Timer_50ms.c ****     isr_Timer_50ms_SetVector(&IntDefaultHandler);
 125              		.loc 1 162 0
 126 0008 0248     		ldr	r0, .L6
 127 000a FFF7FEFF 		bl	isr_Timer_50ms_SetVector
 163:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 128              		.loc 1 163 0
 129 000e 00BF     		nop
 130 0010 80BD     		pop	{r7, pc}
 131              	.L7:
 132 0012 00BF     		.align	2
 133              	.L6:
 134 0014 00000000 		.word	IntDefaultHandler
 135              		.cfi_endproc
 136              	.LFE65:
 137              		.size	isr_Timer_50ms_Stop, .-isr_Timer_50ms_Stop
 138              		.section	.text.isr_Timer_50ms_Interrupt,"ax",%progbits
 139              		.align	2
 140              		.global	isr_Timer_50ms_Interrupt
 141              		.thumb
 142              		.thumb_func
 143              		.type	isr_Timer_50ms_Interrupt, %function
 144              	isr_Timer_50ms_Interrupt:
 145              	.LFB66:
 164:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 165:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 166:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Interrupt
 168:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 169:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 170:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 171:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   The default Interrupt Service Routine for isr_Timer_50ms.
 172:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 173:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Add custom code between the coments to keep the next version of this file
 174:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   from over writting your code.
 175:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 176:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:  
 177:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 178:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 179:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 180:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 181:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 182:Generated_Source\PSoC5/isr_Timer_50ms.c **** CY_ISR(isr_Timer_50ms_Interrupt)
 183:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 146              		.loc 1 183 0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 1, uses_anonymous_args = 0
 150 0000 80B5     		push	{r7, lr}
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 00AF     		add	r7, sp, #0
 155              		.cfi_def_cfa_register 7
 184:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #ifdef isr_Timer_50ms_INTERRUPT_INTERRUPT_CALLBACK
 185:Generated_Source\PSoC5/isr_Timer_50ms.c ****         isr_Timer_50ms_Interrupt_InterruptCallback();
 186:Generated_Source\PSoC5/isr_Timer_50ms.c ****     #endif /* isr_Timer_50ms_INTERRUPT_INTERRUPT_CALLBACK */ 
 187:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 7


 188:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /*  Place your Interrupt code here. */
 189:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* `#START isr_Timer_50ms_Interrupt` */
 190:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 191:Generated_Source\PSoC5/isr_Timer_50ms.c ****     blinkcounter++;
 156              		.loc 1 191 0
 157 0004 A44B     		ldr	r3, .L42
 158 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 159 0008 0133     		adds	r3, r3, #1
 160 000a DAB2     		uxtb	r2, r3
 161 000c A24B     		ldr	r3, .L42
 162 000e 1A70     		strb	r2, [r3]
 192:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 193:Generated_Source\PSoC5/isr_Timer_50ms.c ****     if(CurrentTest.SelectedTest == 0)
 163              		.loc 1 193 0
 164 0010 A24B     		ldr	r3, .L42+4
 165 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 166 0014 002B     		cmp	r3, #0
 167 0016 02D1     		bne	.L9
 194:Generated_Source\PSoC5/isr_Timer_50ms.c ****         CTest_50ms_isr();
 168              		.loc 1 194 0
 169 0018 FFF7FEFF 		bl	CTest_50ms_isr
 170 001c 13E0     		b	.L10
 171              	.L9:
 195:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.SelectedTest == 1)
 172              		.loc 1 195 0
 173 001e 9F4B     		ldr	r3, .L42+4
 174 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 175 0022 012B     		cmp	r3, #1
 176 0024 02D1     		bne	.L11
 196:Generated_Source\PSoC5/isr_Timer_50ms.c ****         RTest_50ms_isr();
 177              		.loc 1 196 0
 178 0026 FFF7FEFF 		bl	RTest_50ms_isr
 179 002a 0CE0     		b	.L10
 180              	.L11:
 197:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.SelectedTest == 2)
 181              		.loc 1 197 0
 182 002c 9B4B     		ldr	r3, .L42+4
 183 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 184 0030 022B     		cmp	r3, #2
 185 0032 02D1     		bne	.L12
 198:Generated_Source\PSoC5/isr_Timer_50ms.c ****         STest_50ms_isr();
 186              		.loc 1 198 0
 187 0034 FFF7FEFF 		bl	STest_50ms_isr
 188 0038 05E0     		b	.L10
 189              	.L12:
 199:Generated_Source\PSoC5/isr_Timer_50ms.c **** //    else if(CurrentTest.SelectedTest == 3)
 200:Generated_Source\PSoC5/isr_Timer_50ms.c **** //        CTest_Complete_50ms_isr();
 201:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.SelectedTest == 4)
 190              		.loc 1 201 0
 191 003a 984B     		ldr	r3, .L42+4
 192 003c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 193 003e 042B     		cmp	r3, #4
 194 0040 01D1     		bne	.L10
 202:Generated_Source\PSoC5/isr_Timer_50ms.c ****         RTest_Complete_50ms_isr();
 195              		.loc 1 202 0
 196 0042 FFF7FEFF 		bl	RTest_Complete_50ms_isr
 197              	.L10:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 8


 203:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 204:Generated_Source\PSoC5/isr_Timer_50ms.c **** //    LED1_Write(0);  // Red
 205:Generated_Source\PSoC5/isr_Timer_50ms.c **** //    LED2_Write(0);  // Amber
 206:Generated_Source\PSoC5/isr_Timer_50ms.c **** //    LED3_Write(1);  // Green
 207:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 208:Generated_Source\PSoC5/isr_Timer_50ms.c ****     // *** Add LED stuff here
 209:Generated_Source\PSoC5/isr_Timer_50ms.c ****     if( (CurrentTest.Status == 'I') || (CurrentTest.Status == 'B') || (CurrentTest.Status == 'U') )
 198              		.loc 1 209 0
 199 0046 954B     		ldr	r3, .L42+4
 200 0048 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 201 004a 492B     		cmp	r3, #73
 202 004c 07D0     		beq	.L13
 203              		.loc 1 209 0 is_stmt 0 discriminator 1
 204 004e 934B     		ldr	r3, .L42+4
 205 0050 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 206 0052 422B     		cmp	r3, #66
 207 0054 03D0     		beq	.L13
 208              		.loc 1 209 0 discriminator 2
 209 0056 914B     		ldr	r3, .L42+4
 210 0058 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 211 005a 552B     		cmp	r3, #85
 212 005c 09D1     		bne	.L14
 213              	.L13:
 210:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 211:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED1_Write(0);
 214              		.loc 1 211 0 is_stmt 1
 215 005e 0020     		movs	r0, #0
 216 0060 FFF7FEFF 		bl	LED1_Write
 212:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED2_Write(1);
 217              		.loc 1 212 0
 218 0064 0120     		movs	r0, #1
 219 0066 FFF7FEFF 		bl	LED2_Write
 213:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED3_Write(0); 
 220              		.loc 1 213 0
 221 006a 0020     		movs	r0, #0
 222 006c FFF7FEFF 		bl	LED3_Write
 223 0070 08E1     		b	.L15
 224              	.L14:
 214:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 215:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'W')
 225              		.loc 1 215 0
 226 0072 8A4B     		ldr	r3, .L42+4
 227 0074 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 228 0076 572B     		cmp	r3, #87
 229 0078 28D1     		bne	.L16
 216:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 217:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 230              		.loc 1 217 0
 231 007a 874B     		ldr	r3, .L42
 232 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 233 007e 012B     		cmp	r3, #1
 234 0080 09D8     		bhi	.L17
 218:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 219:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 235              		.loc 1 219 0
 236 0082 0020     		movs	r0, #0
 237 0084 FFF7FEFF 		bl	LED1_Write
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 9


 220:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(1); 
 238              		.loc 1 220 0
 239 0088 0120     		movs	r0, #1
 240 008a FFF7FEFF 		bl	LED2_Write
 221:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 241              		.loc 1 221 0
 242 008e 0020     		movs	r0, #0
 243 0090 FFF7FEFF 		bl	LED3_Write
 244 0094 F6E0     		b	.L15
 245              	.L17:
 222:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 223:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 246              		.loc 1 223 0
 247 0096 804B     		ldr	r3, .L42
 248 0098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 249 009a 022B     		cmp	r3, #2
 250 009c 0DD9     		bls	.L19
 251              		.loc 1 223 0 is_stmt 0 discriminator 1
 252 009e 7E4B     		ldr	r3, .L42
 253 00a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 254 00a2 032B     		cmp	r3, #3
 255 00a4 09D8     		bhi	.L19
 224:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 225:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 256              		.loc 1 225 0 is_stmt 1
 257 00a6 0020     		movs	r0, #0
 258 00a8 FFF7FEFF 		bl	LED1_Write
 226:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 259              		.loc 1 226 0
 260 00ac 0020     		movs	r0, #0
 261 00ae FFF7FEFF 		bl	LED2_Write
 227:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 262              		.loc 1 227 0
 263 00b2 0020     		movs	r0, #0
 264 00b4 FFF7FEFF 		bl	LED3_Write
 265 00b8 E4E0     		b	.L15
 266              	.L19:
 228:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 229:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 267              		.loc 1 229 0
 268 00ba 774B     		ldr	r3, .L42
 269 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 270 00be 042B     		cmp	r3, #4
 271 00c0 40F2E080 		bls	.L15
 230:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 231:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 272              		.loc 1 231 0
 273 00c4 744B     		ldr	r3, .L42
 274 00c6 0022     		movs	r2, #0
 275 00c8 1A70     		strb	r2, [r3]
 276 00ca DBE0     		b	.L15
 277              	.L16:
 232:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 233:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 234:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'P')
 278              		.loc 1 234 0
 279 00cc 734B     		ldr	r3, .L42+4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 10


 280 00ce 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 281 00d0 502B     		cmp	r3, #80
 282 00d2 3AD1     		bne	.L20
 235:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 236:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if( (CurrentTest.SelectedTest == RTEST) && (CurrentTest.TestStep == 10) )           // If l
 283              		.loc 1 236 0
 284 00d4 714B     		ldr	r3, .L42+4
 285 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 286 00d8 012B     		cmp	r3, #1
 287 00da 2CD1     		bne	.L21
 288              		.loc 1 236 0 is_stmt 0 discriminator 1
 289 00dc 6F4B     		ldr	r3, .L42+4
 290 00de 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 291 00e0 0A2B     		cmp	r3, #10
 292 00e2 28D1     		bne	.L21
 237:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 238:Generated_Source\PSoC5/isr_Timer_50ms.c ****             if(blinkcounter < BLINKTIME)
 293              		.loc 1 238 0 is_stmt 1
 294 00e4 6C4B     		ldr	r3, .L42
 295 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 296 00e8 012B     		cmp	r3, #1
 297 00ea 09D8     		bhi	.L22
 239:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 240:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED1_Write(0); 
 298              		.loc 1 240 0
 299 00ec 0020     		movs	r0, #0
 300 00ee FFF7FEFF 		bl	LED1_Write
 241:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED2_Write(0); 
 301              		.loc 1 241 0
 302 00f2 0020     		movs	r0, #0
 303 00f4 FFF7FEFF 		bl	LED2_Write
 242:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED3_Write(1); 
 304              		.loc 1 242 0
 305 00f8 0120     		movs	r0, #1
 306 00fa FFF7FEFF 		bl	LED3_Write
 238:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 307              		.loc 1 238 0
 308 00fe C0E0     		b	.L40
 309              	.L22:
 243:Generated_Source\PSoC5/isr_Timer_50ms.c ****             }
 244:Generated_Source\PSoC5/isr_Timer_50ms.c ****             else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 310              		.loc 1 244 0
 311 0100 654B     		ldr	r3, .L42
 312 0102 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 0104 022B     		cmp	r3, #2
 314 0106 0DD9     		bls	.L24
 315              		.loc 1 244 0 is_stmt 0 discriminator 1
 316 0108 634B     		ldr	r3, .L42
 317 010a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 318 010c 032B     		cmp	r3, #3
 319 010e 09D8     		bhi	.L24
 245:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 246:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED1_Write(0); 
 320              		.loc 1 246 0 is_stmt 1
 321 0110 0020     		movs	r0, #0
 322 0112 FFF7FEFF 		bl	LED1_Write
 247:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED2_Write(0); 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 11


 323              		.loc 1 247 0
 324 0116 0020     		movs	r0, #0
 325 0118 FFF7FEFF 		bl	LED2_Write
 248:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 LED3_Write(0); 
 326              		.loc 1 248 0
 327 011c 0020     		movs	r0, #0
 328 011e FFF7FEFF 		bl	LED3_Write
 238:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 329              		.loc 1 238 0
 330 0122 AEE0     		b	.L40
 331              	.L24:
 249:Generated_Source\PSoC5/isr_Timer_50ms.c ****             }
 250:Generated_Source\PSoC5/isr_Timer_50ms.c ****             else if( blinkcounter > (2*BLINKTIME) )
 332              		.loc 1 250 0
 333 0124 5C4B     		ldr	r3, .L42
 334 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 335 0128 042B     		cmp	r3, #4
 336 012a 40F2AA80 		bls	.L40
 251:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 252:Generated_Source\PSoC5/isr_Timer_50ms.c ****                 blinkcounter = 0;
 337              		.loc 1 252 0
 338 012e 5A4B     		ldr	r3, .L42
 339 0130 0022     		movs	r2, #0
 340 0132 1A70     		strb	r2, [r3]
 238:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 341              		.loc 1 238 0
 342 0134 A5E0     		b	.L40
 343              	.L21:
 253:Generated_Source\PSoC5/isr_Timer_50ms.c ****             }    
 254:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 255:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else
 256:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 257:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 344              		.loc 1 257 0
 345 0136 0020     		movs	r0, #0
 346 0138 FFF7FEFF 		bl	LED1_Write
 258:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0);
 347              		.loc 1 258 0
 348 013c 0020     		movs	r0, #0
 349 013e FFF7FEFF 		bl	LED2_Write
 259:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(1); 
 350              		.loc 1 259 0
 351 0142 0120     		movs	r0, #1
 352 0144 FFF7FEFF 		bl	LED3_Write
 353 0148 9CE0     		b	.L15
 354              	.L20:
 260:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }   
 261:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 262:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'F')
 355              		.loc 1 262 0
 356 014a 544B     		ldr	r3, .L42+4
 357 014c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 358 014e 462B     		cmp	r3, #70
 359 0150 09D1     		bne	.L26
 263:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 264:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED1_Write(1);
 360              		.loc 1 264 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 12


 361 0152 0120     		movs	r0, #1
 362 0154 FFF7FEFF 		bl	LED1_Write
 265:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED2_Write(0); 
 363              		.loc 1 265 0
 364 0158 0020     		movs	r0, #0
 365 015a FFF7FEFF 		bl	LED2_Write
 266:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED3_Write(0); 
 366              		.loc 1 266 0
 367 015e 0020     		movs	r0, #0
 368 0160 FFF7FEFF 		bl	LED3_Write
 369 0164 8EE0     		b	.L15
 370              	.L26:
 267:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 268:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'p')
 371              		.loc 1 268 0
 372 0166 4D4B     		ldr	r3, .L42+4
 373 0168 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 374 016a 702B     		cmp	r3, #112
 375 016c 27D1     		bne	.L27
 269:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 270:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 376              		.loc 1 270 0
 377 016e 4A4B     		ldr	r3, .L42
 378 0170 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 379 0172 012B     		cmp	r3, #1
 380 0174 09D8     		bhi	.L28
 271:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 272:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 381              		.loc 1 272 0
 382 0176 0020     		movs	r0, #0
 383 0178 FFF7FEFF 		bl	LED1_Write
 273:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0);
 384              		.loc 1 273 0
 385 017c 0020     		movs	r0, #0
 386 017e FFF7FEFF 		bl	LED2_Write
 274:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(1); 
 387              		.loc 1 274 0
 388 0182 0120     		movs	r0, #1
 389 0184 FFF7FEFF 		bl	LED3_Write
 390 0188 7CE0     		b	.L15
 391              	.L28:
 275:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 276:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 392              		.loc 1 276 0
 393 018a 434B     		ldr	r3, .L42
 394 018c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 395 018e 022B     		cmp	r3, #2
 396 0190 0DD9     		bls	.L30
 397              		.loc 1 276 0 is_stmt 0 discriminator 1
 398 0192 414B     		ldr	r3, .L42
 399 0194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 400 0196 032B     		cmp	r3, #3
 401 0198 09D8     		bhi	.L30
 277:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 278:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 402              		.loc 1 278 0 is_stmt 1
 403 019a 0020     		movs	r0, #0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 13


 404 019c FFF7FEFF 		bl	LED1_Write
 279:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 405              		.loc 1 279 0
 406 01a0 0020     		movs	r0, #0
 407 01a2 FFF7FEFF 		bl	LED2_Write
 280:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 408              		.loc 1 280 0
 409 01a6 0020     		movs	r0, #0
 410 01a8 FFF7FEFF 		bl	LED3_Write
 411 01ac 6AE0     		b	.L15
 412              	.L30:
 281:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 282:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 413              		.loc 1 282 0
 414 01ae 3A4B     		ldr	r3, .L42
 415 01b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 416 01b2 042B     		cmp	r3, #4
 417 01b4 66D9     		bls	.L15
 283:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 284:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 418              		.loc 1 284 0
 419 01b6 384B     		ldr	r3, .L42
 420 01b8 0022     		movs	r2, #0
 421 01ba 1A70     		strb	r2, [r3]
 422 01bc 62E0     		b	.L15
 423              	.L27:
 285:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }    
 286:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 287:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'f')
 424              		.loc 1 287 0
 425 01be 374B     		ldr	r3, .L42+4
 426 01c0 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 427 01c2 662B     		cmp	r3, #102
 428 01c4 27D1     		bne	.L31
 288:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 289:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 429              		.loc 1 289 0
 430 01c6 344B     		ldr	r3, .L42
 431 01c8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 432 01ca 012B     		cmp	r3, #1
 433 01cc 09D8     		bhi	.L32
 290:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 291:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(1);
 434              		.loc 1 291 0
 435 01ce 0120     		movs	r0, #1
 436 01d0 FFF7FEFF 		bl	LED1_Write
 292:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0);
 437              		.loc 1 292 0
 438 01d4 0020     		movs	r0, #0
 439 01d6 FFF7FEFF 		bl	LED2_Write
 293:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 440              		.loc 1 293 0
 441 01da 0020     		movs	r0, #0
 442 01dc FFF7FEFF 		bl	LED3_Write
 443 01e0 50E0     		b	.L15
 444              	.L32:
 294:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 14


 295:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 445              		.loc 1 295 0
 446 01e2 2D4B     		ldr	r3, .L42
 447 01e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 448 01e6 022B     		cmp	r3, #2
 449 01e8 0DD9     		bls	.L34
 450              		.loc 1 295 0 is_stmt 0 discriminator 1
 451 01ea 2B4B     		ldr	r3, .L42
 452 01ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 453 01ee 032B     		cmp	r3, #3
 454 01f0 09D8     		bhi	.L34
 296:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 297:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 455              		.loc 1 297 0 is_stmt 1
 456 01f2 0020     		movs	r0, #0
 457 01f4 FFF7FEFF 		bl	LED1_Write
 298:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 458              		.loc 1 298 0
 459 01f8 0020     		movs	r0, #0
 460 01fa FFF7FEFF 		bl	LED2_Write
 299:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 461              		.loc 1 299 0
 462 01fe 0020     		movs	r0, #0
 463 0200 FFF7FEFF 		bl	LED3_Write
 464 0204 3EE0     		b	.L15
 465              	.L34:
 300:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 301:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 466              		.loc 1 301 0
 467 0206 244B     		ldr	r3, .L42
 468 0208 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 469 020a 042B     		cmp	r3, #4
 470 020c 3AD9     		bls	.L15
 302:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 303:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 471              		.loc 1 303 0
 472 020e 224B     		ldr	r3, .L42
 473 0210 0022     		movs	r2, #0
 474 0212 1A70     		strb	r2, [r3]
 475 0214 36E0     		b	.L15
 476              	.L31:
 304:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }    
 305:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 306:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else if(CurrentTest.Status == 'r')          // reset
 477              		.loc 1 306 0
 478 0216 214B     		ldr	r3, .L42+4
 479 0218 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 480 021a 722B     		cmp	r3, #114
 481 021c 27D1     		bne	.L35
 307:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 308:Generated_Source\PSoC5/isr_Timer_50ms.c ****         if(blinkcounter < BLINKTIME)
 482              		.loc 1 308 0
 483 021e 1E4B     		ldr	r3, .L42
 484 0220 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 485 0222 012B     		cmp	r3, #1
 486 0224 09D8     		bhi	.L36
 309:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 15


 310:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(1);
 487              		.loc 1 310 0
 488 0226 0120     		movs	r0, #1
 489 0228 FFF7FEFF 		bl	LED1_Write
 311:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(1);
 490              		.loc 1 311 0
 491 022c 0120     		movs	r0, #1
 492 022e FFF7FEFF 		bl	LED2_Write
 312:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(1); 
 493              		.loc 1 312 0
 494 0232 0120     		movs	r0, #1
 495 0234 FFF7FEFF 		bl	LED3_Write
 496 0238 24E0     		b	.L15
 497              	.L36:
 313:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 314:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( ( blinkcounter > BLINKTIME) && (blinkcounter < (2*BLINKTIME) ) )
 498              		.loc 1 314 0
 499 023a 174B     		ldr	r3, .L42
 500 023c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 501 023e 022B     		cmp	r3, #2
 502 0240 0DD9     		bls	.L38
 503              		.loc 1 314 0 is_stmt 0 discriminator 1
 504 0242 154B     		ldr	r3, .L42
 505 0244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 506 0246 032B     		cmp	r3, #3
 507 0248 09D8     		bhi	.L38
 315:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 316:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED1_Write(0);
 508              		.loc 1 316 0 is_stmt 1
 509 024a 0020     		movs	r0, #0
 510 024c FFF7FEFF 		bl	LED1_Write
 317:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED2_Write(0); 
 511              		.loc 1 317 0
 512 0250 0020     		movs	r0, #0
 513 0252 FFF7FEFF 		bl	LED2_Write
 318:Generated_Source\PSoC5/isr_Timer_50ms.c ****             LED3_Write(0); 
 514              		.loc 1 318 0
 515 0256 0020     		movs	r0, #0
 516 0258 FFF7FEFF 		bl	LED3_Write
 517 025c 12E0     		b	.L15
 518              	.L38:
 319:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }
 320:Generated_Source\PSoC5/isr_Timer_50ms.c ****         else if( blinkcounter > (2*BLINKTIME) )
 519              		.loc 1 320 0
 520 025e 0E4B     		ldr	r3, .L42
 521 0260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 522 0262 042B     		cmp	r3, #4
 523 0264 0ED9     		bls	.L15
 321:Generated_Source\PSoC5/isr_Timer_50ms.c ****         {
 322:Generated_Source\PSoC5/isr_Timer_50ms.c ****             blinkcounter = 0;
 524              		.loc 1 322 0
 525 0266 0C4B     		ldr	r3, .L42
 526 0268 0022     		movs	r2, #0
 527 026a 1A70     		strb	r2, [r3]
 528 026c 0AE0     		b	.L15
 529              	.L35:
 323:Generated_Source\PSoC5/isr_Timer_50ms.c ****         }    
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 16


 324:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 325:Generated_Source\PSoC5/isr_Timer_50ms.c ****     else
 326:Generated_Source\PSoC5/isr_Timer_50ms.c ****     {
 327:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED1_Write(0);
 530              		.loc 1 327 0
 531 026e 0020     		movs	r0, #0
 532 0270 FFF7FEFF 		bl	LED1_Write
 328:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED2_Write(0);
 533              		.loc 1 328 0
 534 0274 0020     		movs	r0, #0
 535 0276 FFF7FEFF 		bl	LED2_Write
 329:Generated_Source\PSoC5/isr_Timer_50ms.c ****         LED3_Write(0); 
 536              		.loc 1 329 0
 537 027a 0020     		movs	r0, #0
 538 027c FFF7FEFF 		bl	LED3_Write
 539 0280 00E0     		b	.L15
 540              	.L40:
 238:Generated_Source\PSoC5/isr_Timer_50ms.c ****             {
 541              		.loc 1 238 0
 542 0282 00BF     		nop
 543              	.L15:
 330:Generated_Source\PSoC5/isr_Timer_50ms.c ****     }
 331:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 332:Generated_Source\PSoC5/isr_Timer_50ms.c ****     
 333:Generated_Source\PSoC5/isr_Timer_50ms.c ****     if(blinkcounter > 100)
 544              		.loc 1 333 0
 545 0284 044B     		ldr	r3, .L42
 546 0286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 547 0288 642B     		cmp	r3, #100
 548 028a 02D9     		bls	.L41
 334:Generated_Source\PSoC5/isr_Timer_50ms.c ****         blinkcounter = 0;
 549              		.loc 1 334 0
 550 028c 024B     		ldr	r3, .L42
 551 028e 0022     		movs	r2, #0
 552 0290 1A70     		strb	r2, [r3]
 553              	.L41:
 335:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 336:Generated_Source\PSoC5/isr_Timer_50ms.c ****         
 337:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 338:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* `#END` */
 339:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 554              		.loc 1 339 0
 555 0292 00BF     		nop
 556 0294 80BD     		pop	{r7, pc}
 557              	.L43:
 558 0296 00BF     		.align	2
 559              	.L42:
 560 0298 00000000 		.word	blinkcounter
 561 029c 00000000 		.word	CurrentTest
 562              		.cfi_endproc
 563              	.LFE66:
 564              		.size	isr_Timer_50ms_Interrupt, .-isr_Timer_50ms_Interrupt
 565              		.section	.text.isr_Timer_50ms_SetVector,"ax",%progbits
 566              		.align	2
 567              		.global	isr_Timer_50ms_SetVector
 568              		.thumb
 569              		.thumb_func
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 17


 570              		.type	isr_Timer_50ms_SetVector, %function
 571              	isr_Timer_50ms_SetVector:
 572              	.LFB67:
 340:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 341:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 342:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_SetVector
 344:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 345:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 346:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 347:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Change the ISR vector for the Interrupt. Note calling isr_Timer_50ms_Start
 348:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   will override any effect this method would have had. To set the vector 
 349:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   before the component has been started use isr_Timer_50ms_StartEx instead.
 350:Generated_Source\PSoC5/isr_Timer_50ms.c **** * 
 351:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 352:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   used to provide consistent definition across compilers:
 353:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 354:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Function definition example:
 355:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   CY_ISR(MyISR)
 356:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   {
 357:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   }
 358:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 359:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Function prototype example:
 360:Generated_Source\PSoC5/isr_Timer_50ms.c **** *     CY_ISR_PROTO(MyISR);
 361:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 362:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 363:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   address: Address of the ISR to set in the interrupt vector table.
 364:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 365:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 366:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 367:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 368:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 369:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_SetVector(cyisraddress address)
 370:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 573              		.loc 1 370 0
 574              		.cfi_startproc
 575              		@ args = 0, pretend = 0, frame = 16
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578 0000 80B4     		push	{r7}
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 7, -4
 581 0002 85B0     		sub	sp, sp, #20
 582              		.cfi_def_cfa_offset 24
 583 0004 00AF     		add	r7, sp, #0
 584              		.cfi_def_cfa_register 7
 585 0006 7860     		str	r0, [r7, #4]
 371:Generated_Source\PSoC5/isr_Timer_50ms.c ****     cyisraddress * ramVectorTable;
 372:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 373:Generated_Source\PSoC5/isr_Timer_50ms.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 586              		.loc 1 373 0
 587 0008 054B     		ldr	r3, .L45
 588 000a 1B68     		ldr	r3, [r3]
 589 000c FB60     		str	r3, [r7, #12]
 374:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 375:Generated_Source\PSoC5/isr_Timer_50ms.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)isr_Timer_50ms__INTC_NUMBER] = address;
 590              		.loc 1 375 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 18


 591 000e FB68     		ldr	r3, [r7, #12]
 592 0010 5433     		adds	r3, r3, #84
 593 0012 7A68     		ldr	r2, [r7, #4]
 594 0014 1A60     		str	r2, [r3]
 376:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 595              		.loc 1 376 0
 596 0016 00BF     		nop
 597 0018 1437     		adds	r7, r7, #20
 598              		.cfi_def_cfa_offset 4
 599 001a BD46     		mov	sp, r7
 600              		.cfi_def_cfa_register 13
 601              		@ sp needed
 602 001c 80BC     		pop	{r7}
 603              		.cfi_restore 7
 604              		.cfi_def_cfa_offset 0
 605 001e 7047     		bx	lr
 606              	.L46:
 607              		.align	2
 608              	.L45:
 609 0020 08ED00E0 		.word	-536810232
 610              		.cfi_endproc
 611              	.LFE67:
 612              		.size	isr_Timer_50ms_SetVector, .-isr_Timer_50ms_SetVector
 613              		.section	.text.isr_Timer_50ms_GetVector,"ax",%progbits
 614              		.align	2
 615              		.global	isr_Timer_50ms_GetVector
 616              		.thumb
 617              		.thumb_func
 618              		.type	isr_Timer_50ms_GetVector, %function
 619              	isr_Timer_50ms_GetVector:
 620              	.LFB68:
 377:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 378:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 379:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 380:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_GetVector
 381:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 382:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 383:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 384:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 385:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 386:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 387:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 388:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 389:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 390:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Address of the ISR in the interrupt vector table.
 391:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 392:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 393:Generated_Source\PSoC5/isr_Timer_50ms.c **** cyisraddress isr_Timer_50ms_GetVector(void)
 394:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 621              		.loc 1 394 0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 8
 624              		@ frame_needed = 1, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 626 0000 80B4     		push	{r7}
 627              		.cfi_def_cfa_offset 4
 628              		.cfi_offset 7, -4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 19


 629 0002 83B0     		sub	sp, sp, #12
 630              		.cfi_def_cfa_offset 16
 631 0004 00AF     		add	r7, sp, #0
 632              		.cfi_def_cfa_register 7
 395:Generated_Source\PSoC5/isr_Timer_50ms.c ****     cyisraddress * ramVectorTable;
 396:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 397:Generated_Source\PSoC5/isr_Timer_50ms.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 633              		.loc 1 397 0
 634 0006 054B     		ldr	r3, .L49
 635 0008 1B68     		ldr	r3, [r3]
 636 000a 7B60     		str	r3, [r7, #4]
 398:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 399:Generated_Source\PSoC5/isr_Timer_50ms.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)isr_Timer_50ms__INTC_NUMBER];
 637              		.loc 1 399 0
 638 000c 7B68     		ldr	r3, [r7, #4]
 639 000e 5B6D     		ldr	r3, [r3, #84]
 400:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 640              		.loc 1 400 0
 641 0010 1846     		mov	r0, r3
 642 0012 0C37     		adds	r7, r7, #12
 643              		.cfi_def_cfa_offset 4
 644 0014 BD46     		mov	sp, r7
 645              		.cfi_def_cfa_register 13
 646              		@ sp needed
 647 0016 80BC     		pop	{r7}
 648              		.cfi_restore 7
 649              		.cfi_def_cfa_offset 0
 650 0018 7047     		bx	lr
 651              	.L50:
 652 001a 00BF     		.align	2
 653              	.L49:
 654 001c 08ED00E0 		.word	-536810232
 655              		.cfi_endproc
 656              	.LFE68:
 657              		.size	isr_Timer_50ms_GetVector, .-isr_Timer_50ms_GetVector
 658              		.section	.text.isr_Timer_50ms_SetPriority,"ax",%progbits
 659              		.align	2
 660              		.global	isr_Timer_50ms_SetPriority
 661              		.thumb
 662              		.thumb_func
 663              		.type	isr_Timer_50ms_SetPriority, %function
 664              	isr_Timer_50ms_SetPriority:
 665              	.LFB69:
 401:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 402:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 403:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 404:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_SetPriority
 405:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 406:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 407:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 408:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Sets the Priority of the Interrupt. 
 409:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 410:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Note calling isr_Timer_50ms_Start or isr_Timer_50ms_StartEx will 
 411:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   override any effect this API would have had. This API should only be called
 412:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   after isr_Timer_50ms_Start or isr_Timer_50ms_StartEx has been called. 
 413:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 414:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Interrupt Editor.
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 20


 415:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 416:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 417:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 418:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 419:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 420:Generated_Source\PSoC5/isr_Timer_50ms.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 421:Generated_Source\PSoC5/isr_Timer_50ms.c **** *             PSoC 4: Priority is from 0 to 3.
 422:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 423:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 424:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 425:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 426:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 427:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_SetPriority(uint8 priority)
 428:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 666              		.loc 1 428 0
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 8
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671 0000 80B4     		push	{r7}
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 7, -4
 674 0002 83B0     		sub	sp, sp, #12
 675              		.cfi_def_cfa_offset 16
 676 0004 00AF     		add	r7, sp, #0
 677              		.cfi_def_cfa_register 7
 678 0006 0346     		mov	r3, r0
 679 0008 FB71     		strb	r3, [r7, #7]
 429:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_PRIOR = priority << 5;
 680              		.loc 1 429 0
 681 000a 054A     		ldr	r2, .L52
 682 000c FB79     		ldrb	r3, [r7, #7]
 683 000e 5B01     		lsls	r3, r3, #5
 684 0010 DBB2     		uxtb	r3, r3
 685 0012 1370     		strb	r3, [r2]
 430:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 686              		.loc 1 430 0
 687 0014 00BF     		nop
 688 0016 0C37     		adds	r7, r7, #12
 689              		.cfi_def_cfa_offset 4
 690 0018 BD46     		mov	sp, r7
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 001a 80BC     		pop	{r7}
 694              		.cfi_restore 7
 695              		.cfi_def_cfa_offset 0
 696 001c 7047     		bx	lr
 697              	.L53:
 698 001e 00BF     		.align	2
 699              	.L52:
 700 0020 05E400E0 		.word	-536812539
 701              		.cfi_endproc
 702              	.LFE69:
 703              		.size	isr_Timer_50ms_SetPriority, .-isr_Timer_50ms_SetPriority
 704              		.section	.text.isr_Timer_50ms_GetPriority,"ax",%progbits
 705              		.align	2
 706              		.global	isr_Timer_50ms_GetPriority
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 21


 707              		.thumb
 708              		.thumb_func
 709              		.type	isr_Timer_50ms_GetPriority, %function
 710              	isr_Timer_50ms_GetPriority:
 711              	.LFB70:
 431:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 432:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 433:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 434:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_GetPriority
 435:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 436:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 437:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 438:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Gets the Priority of the Interrupt.
 439:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 440:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 441:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 442:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 443:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 444:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Priority of the interrupt, 0 being the highest priority
 445:Generated_Source\PSoC5/isr_Timer_50ms.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 446:Generated_Source\PSoC5/isr_Timer_50ms.c **** *    PSoC 4: Priority is from 0 to 3.
 447:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 448:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 449:Generated_Source\PSoC5/isr_Timer_50ms.c **** uint8 isr_Timer_50ms_GetPriority(void)
 450:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 712              		.loc 1 450 0
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 80B4     		push	{r7}
 718              		.cfi_def_cfa_offset 4
 719              		.cfi_offset 7, -4
 720 0002 83B0     		sub	sp, sp, #12
 721              		.cfi_def_cfa_offset 16
 722 0004 00AF     		add	r7, sp, #0
 723              		.cfi_def_cfa_register 7
 451:Generated_Source\PSoC5/isr_Timer_50ms.c ****     uint8 priority;
 452:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 453:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 454:Generated_Source\PSoC5/isr_Timer_50ms.c ****     priority = *isr_Timer_50ms_INTC_PRIOR >> 5;
 724              		.loc 1 454 0
 725 0006 054B     		ldr	r3, .L56
 726 0008 1B78     		ldrb	r3, [r3]
 727 000a DBB2     		uxtb	r3, r3
 728 000c 5B09     		lsrs	r3, r3, #5
 729 000e FB71     		strb	r3, [r7, #7]
 455:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 456:Generated_Source\PSoC5/isr_Timer_50ms.c ****     return priority;
 730              		.loc 1 456 0
 731 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 457:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 732              		.loc 1 457 0
 733 0012 1846     		mov	r0, r3
 734 0014 0C37     		adds	r7, r7, #12
 735              		.cfi_def_cfa_offset 4
 736 0016 BD46     		mov	sp, r7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 22


 737              		.cfi_def_cfa_register 13
 738              		@ sp needed
 739 0018 80BC     		pop	{r7}
 740              		.cfi_restore 7
 741              		.cfi_def_cfa_offset 0
 742 001a 7047     		bx	lr
 743              	.L57:
 744              		.align	2
 745              	.L56:
 746 001c 05E400E0 		.word	-536812539
 747              		.cfi_endproc
 748              	.LFE70:
 749              		.size	isr_Timer_50ms_GetPriority, .-isr_Timer_50ms_GetPriority
 750              		.section	.text.isr_Timer_50ms_Enable,"ax",%progbits
 751              		.align	2
 752              		.global	isr_Timer_50ms_Enable
 753              		.thumb
 754              		.thumb_func
 755              		.type	isr_Timer_50ms_Enable, %function
 756              	isr_Timer_50ms_Enable:
 757              	.LFB71:
 458:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 459:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 460:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 461:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Enable
 462:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 463:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 464:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 465:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 466:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 467:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   function, which sets the vector and the priority, has been called.
 468:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 469:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 470:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 471:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 472:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 473:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 474:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 475:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 476:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Enable(void)
 477:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 758              		.loc 1 477 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 0
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763 0000 80B4     		push	{r7}
 764              		.cfi_def_cfa_offset 4
 765              		.cfi_offset 7, -4
 766 0002 00AF     		add	r7, sp, #0
 767              		.cfi_def_cfa_register 7
 478:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Enable the general interrupt. */
 479:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_SET_EN = isr_Timer_50ms__INTC_MASK;
 768              		.loc 1 479 0
 769 0004 034B     		ldr	r3, .L59
 770 0006 2022     		movs	r2, #32
 771 0008 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 23


 480:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 772              		.loc 1 480 0
 773 000a 00BF     		nop
 774 000c BD46     		mov	sp, r7
 775              		.cfi_def_cfa_register 13
 776              		@ sp needed
 777 000e 80BC     		pop	{r7}
 778              		.cfi_restore 7
 779              		.cfi_def_cfa_offset 0
 780 0010 7047     		bx	lr
 781              	.L60:
 782 0012 00BF     		.align	2
 783              	.L59:
 784 0014 00E100E0 		.word	-536813312
 785              		.cfi_endproc
 786              	.LFE71:
 787              		.size	isr_Timer_50ms_Enable, .-isr_Timer_50ms_Enable
 788              		.section	.text.isr_Timer_50ms_GetState,"ax",%progbits
 789              		.align	2
 790              		.global	isr_Timer_50ms_GetState
 791              		.thumb
 792              		.thumb_func
 793              		.type	isr_Timer_50ms_GetState, %function
 794              	isr_Timer_50ms_GetState:
 795              	.LFB72:
 481:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 482:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 483:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 484:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_GetState
 485:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 486:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 487:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 488:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 489:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 490:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 491:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 492:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 493:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 494:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   1 if enabled, 0 if disabled.
 495:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 496:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 497:Generated_Source\PSoC5/isr_Timer_50ms.c **** uint8 isr_Timer_50ms_GetState(void)
 498:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 796              		.loc 1 498 0
 797              		.cfi_startproc
 798              		@ args = 0, pretend = 0, frame = 0
 799              		@ frame_needed = 1, uses_anonymous_args = 0
 800              		@ link register save eliminated.
 801 0000 80B4     		push	{r7}
 802              		.cfi_def_cfa_offset 4
 803              		.cfi_offset 7, -4
 804 0002 00AF     		add	r7, sp, #0
 805              		.cfi_def_cfa_register 7
 499:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Get the state of the general interrupt. */
 500:Generated_Source\PSoC5/isr_Timer_50ms.c ****     return ((*isr_Timer_50ms_INTC_SET_EN & (uint32)isr_Timer_50ms__INTC_MASK) != 0u) ? 1u:0u;
 806              		.loc 1 500 0
 807 0004 064B     		ldr	r3, .L65
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 24


 808 0006 1B68     		ldr	r3, [r3]
 809 0008 03F02003 		and	r3, r3, #32
 810 000c 002B     		cmp	r3, #0
 811 000e 01D0     		beq	.L62
 812              		.loc 1 500 0 is_stmt 0 discriminator 1
 813 0010 0123     		movs	r3, #1
 814 0012 00E0     		b	.L63
 815              	.L62:
 816              		.loc 1 500 0 discriminator 2
 817 0014 0023     		movs	r3, #0
 818              	.L63:
 501:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 819              		.loc 1 501 0 is_stmt 1 discriminator 4
 820 0016 1846     		mov	r0, r3
 821 0018 BD46     		mov	sp, r7
 822              		.cfi_def_cfa_register 13
 823              		@ sp needed
 824 001a 80BC     		pop	{r7}
 825              		.cfi_restore 7
 826              		.cfi_def_cfa_offset 0
 827 001c 7047     		bx	lr
 828              	.L66:
 829 001e 00BF     		.align	2
 830              	.L65:
 831 0020 00E100E0 		.word	-536813312
 832              		.cfi_endproc
 833              	.LFE72:
 834              		.size	isr_Timer_50ms_GetState, .-isr_Timer_50ms_GetState
 835              		.section	.text.isr_Timer_50ms_Disable,"ax",%progbits
 836              		.align	2
 837              		.global	isr_Timer_50ms_Disable
 838              		.thumb
 839              		.thumb_func
 840              		.type	isr_Timer_50ms_Disable, %function
 841              	isr_Timer_50ms_Disable:
 842              	.LFB73:
 502:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 503:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 504:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 505:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_Disable
 506:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 507:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 508:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 509:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Disables the Interrupt in the interrupt controller.
 510:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 511:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 512:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 513:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 514:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 515:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 516:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 517:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 518:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_Disable(void)
 519:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 843              		.loc 1 519 0
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 25


 846              		@ frame_needed = 1, uses_anonymous_args = 0
 847              		@ link register save eliminated.
 848 0000 80B4     		push	{r7}
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 7, -4
 851 0002 00AF     		add	r7, sp, #0
 852              		.cfi_def_cfa_register 7
 520:Generated_Source\PSoC5/isr_Timer_50ms.c ****     /* Disable the general interrupt. */
 521:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_CLR_EN = isr_Timer_50ms__INTC_MASK;
 853              		.loc 1 521 0
 854 0004 034B     		ldr	r3, .L68
 855 0006 2022     		movs	r2, #32
 856 0008 1A60     		str	r2, [r3]
 522:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 857              		.loc 1 522 0
 858 000a 00BF     		nop
 859 000c BD46     		mov	sp, r7
 860              		.cfi_def_cfa_register 13
 861              		@ sp needed
 862 000e 80BC     		pop	{r7}
 863              		.cfi_restore 7
 864              		.cfi_def_cfa_offset 0
 865 0010 7047     		bx	lr
 866              	.L69:
 867 0012 00BF     		.align	2
 868              	.L68:
 869 0014 80E100E0 		.word	-536813184
 870              		.cfi_endproc
 871              	.LFE73:
 872              		.size	isr_Timer_50ms_Disable, .-isr_Timer_50ms_Disable
 873              		.section	.text.isr_Timer_50ms_SetPending,"ax",%progbits
 874              		.align	2
 875              		.global	isr_Timer_50ms_SetPending
 876              		.thumb
 877              		.thumb_func
 878              		.type	isr_Timer_50ms_SetPending, %function
 879              	isr_Timer_50ms_SetPending:
 880              	.LFB74:
 523:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 524:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 525:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 526:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_SetPending
 527:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 528:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 529:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 530:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Causes the Interrupt to enter the pending state, a software method of
 531:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   generating the interrupt.
 532:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 533:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 534:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 535:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 536:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 537:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 538:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 539:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Side Effects:
 540:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 541:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   entered (depending on the priority of this interrupt and other pending 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 26


 542:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   interrupts).
 543:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 544:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 545:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_SetPending(void)
 546:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 881              		.loc 1 546 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 0
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886 0000 80B4     		push	{r7}
 887              		.cfi_def_cfa_offset 4
 888              		.cfi_offset 7, -4
 889 0002 00AF     		add	r7, sp, #0
 890              		.cfi_def_cfa_register 7
 547:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_SET_PD = isr_Timer_50ms__INTC_MASK;
 891              		.loc 1 547 0
 892 0004 034B     		ldr	r3, .L71
 893 0006 2022     		movs	r2, #32
 894 0008 1A60     		str	r2, [r3]
 548:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 895              		.loc 1 548 0
 896 000a 00BF     		nop
 897 000c BD46     		mov	sp, r7
 898              		.cfi_def_cfa_register 13
 899              		@ sp needed
 900 000e 80BC     		pop	{r7}
 901              		.cfi_restore 7
 902              		.cfi_def_cfa_offset 0
 903 0010 7047     		bx	lr
 904              	.L72:
 905 0012 00BF     		.align	2
 906              	.L71:
 907 0014 00E200E0 		.word	-536813056
 908              		.cfi_endproc
 909              	.LFE74:
 910              		.size	isr_Timer_50ms_SetPending, .-isr_Timer_50ms_SetPending
 911              		.section	.text.isr_Timer_50ms_ClearPending,"ax",%progbits
 912              		.align	2
 913              		.global	isr_Timer_50ms_ClearPending
 914              		.thumb
 915              		.thumb_func
 916              		.type	isr_Timer_50ms_ClearPending, %function
 917              	isr_Timer_50ms_ClearPending:
 918              	.LFB75:
 549:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 550:Generated_Source\PSoC5/isr_Timer_50ms.c **** 
 551:Generated_Source\PSoC5/isr_Timer_50ms.c **** /*******************************************************************************
 552:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Function Name: isr_Timer_50ms_ClearPending
 553:Generated_Source\PSoC5/isr_Timer_50ms.c **** ********************************************************************************
 554:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 555:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Summary:
 556:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Clears a pending interrupt in the interrupt controller.
 557:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 558:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 559:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 560:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 27


 561:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   pending state even though the interrupt itself is cleared using this API.
 562:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 563:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Parameters:
 564:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 565:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 566:Generated_Source\PSoC5/isr_Timer_50ms.c **** * Return:
 567:Generated_Source\PSoC5/isr_Timer_50ms.c **** *   None
 568:Generated_Source\PSoC5/isr_Timer_50ms.c **** *
 569:Generated_Source\PSoC5/isr_Timer_50ms.c **** *******************************************************************************/
 570:Generated_Source\PSoC5/isr_Timer_50ms.c **** void isr_Timer_50ms_ClearPending(void)
 571:Generated_Source\PSoC5/isr_Timer_50ms.c **** {
 919              		.loc 1 571 0
 920              		.cfi_startproc
 921              		@ args = 0, pretend = 0, frame = 0
 922              		@ frame_needed = 1, uses_anonymous_args = 0
 923              		@ link register save eliminated.
 924 0000 80B4     		push	{r7}
 925              		.cfi_def_cfa_offset 4
 926              		.cfi_offset 7, -4
 927 0002 00AF     		add	r7, sp, #0
 928              		.cfi_def_cfa_register 7
 572:Generated_Source\PSoC5/isr_Timer_50ms.c ****     *isr_Timer_50ms_INTC_CLR_PD = isr_Timer_50ms__INTC_MASK;
 929              		.loc 1 572 0
 930 0004 034B     		ldr	r3, .L74
 931 0006 2022     		movs	r2, #32
 932 0008 1A60     		str	r2, [r3]
 573:Generated_Source\PSoC5/isr_Timer_50ms.c **** }
 933              		.loc 1 573 0
 934 000a 00BF     		nop
 935 000c BD46     		mov	sp, r7
 936              		.cfi_def_cfa_register 13
 937              		@ sp needed
 938 000e 80BC     		pop	{r7}
 939              		.cfi_restore 7
 940              		.cfi_def_cfa_offset 0
 941 0010 7047     		bx	lr
 942              	.L75:
 943 0012 00BF     		.align	2
 944              	.L74:
 945 0014 80E200E0 		.word	-536812928
 946              		.cfi_endproc
 947              	.LFE75:
 948              		.size	isr_Timer_50ms_ClearPending, .-isr_Timer_50ms_ClearPending
 949              		.text
 950              	.Letext0:
 951              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 952              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.3\\psoc creator\\import\\gnu\\arm\\5.4.
 953              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 954              		.file 5 "./CommonVariables.h"
 955              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 956              		.section	.debug_info,"",%progbits
 957              	.Ldebug_info0:
 958 0000 FB020000 		.4byte	0x2fb
 959 0004 0400     		.2byte	0x4
 960 0006 00000000 		.4byte	.Ldebug_abbrev0
 961 000a 04       		.byte	0x4
 962 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 28


 963 000c 55000000 		.4byte	.LASF47
 964 0010 0C       		.byte	0xc
 965 0011 B9020000 		.4byte	.LASF48
 966 0015 C6010000 		.4byte	.LASF49
 967 0019 00000000 		.4byte	.Ldebug_ranges0+0
 968 001d 00000000 		.4byte	0
 969 0021 00000000 		.4byte	.Ldebug_line0
 970 0025 02       		.uleb128 0x2
 971 0026 04       		.byte	0x4
 972 0027 05       		.byte	0x5
 973 0028 696E7400 		.ascii	"int\000"
 974 002c 03       		.uleb128 0x3
 975 002d 04       		.byte	0x4
 976 002e 07       		.byte	0x7
 977 002f 56020000 		.4byte	.LASF0
 978 0033 03       		.uleb128 0x3
 979 0034 08       		.byte	0x8
 980 0035 05       		.byte	0x5
 981 0036 E1020000 		.4byte	.LASF1
 982 003a 03       		.uleb128 0x3
 983 003b 08       		.byte	0x8
 984 003c 04       		.byte	0x4
 985 003d 8A030000 		.4byte	.LASF2
 986 0041 03       		.uleb128 0x3
 987 0042 01       		.byte	0x1
 988 0043 06       		.byte	0x6
 989 0044 96030000 		.4byte	.LASF3
 990 0048 03       		.uleb128 0x3
 991 0049 01       		.byte	0x1
 992 004a 08       		.byte	0x8
 993 004b 17020000 		.4byte	.LASF4
 994 004f 03       		.uleb128 0x3
 995 0050 02       		.byte	0x2
 996 0051 05       		.byte	0x5
 997 0052 43030000 		.4byte	.LASF5
 998 0056 03       		.uleb128 0x3
 999 0057 02       		.byte	0x2
 1000 0058 07       		.byte	0x7
 1001 0059 B3010000 		.4byte	.LASF6
 1002 005d 04       		.uleb128 0x4
 1003 005e 00010000 		.4byte	.LASF12
 1004 0062 02       		.byte	0x2
 1005 0063 3F       		.byte	0x3f
 1006 0064 68000000 		.4byte	0x68
 1007 0068 03       		.uleb128 0x3
 1008 0069 04       		.byte	0x4
 1009 006a 05       		.byte	0x5
 1010 006b 6D030000 		.4byte	.LASF7
 1011 006f 03       		.uleb128 0x3
 1012 0070 04       		.byte	0x4
 1013 0071 07       		.byte	0x7
 1014 0072 95010000 		.4byte	.LASF8
 1015 0076 03       		.uleb128 0x3
 1016 0077 08       		.byte	0x8
 1017 0078 07       		.byte	0x7
 1018 0079 6B020000 		.4byte	.LASF9
 1019 007d 03       		.uleb128 0x3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 29


 1020 007e 04       		.byte	0x4
 1021 007f 07       		.byte	0x7
 1022 0080 B0020000 		.4byte	.LASF10
 1023 0084 03       		.uleb128 0x3
 1024 0085 01       		.byte	0x1
 1025 0086 08       		.byte	0x8
 1026 0087 0A030000 		.4byte	.LASF11
 1027 008b 05       		.uleb128 0x5
 1028 008c 04       		.byte	0x4
 1029 008d 91000000 		.4byte	0x91
 1030 0091 06       		.uleb128 0x6
 1031 0092 04       		.uleb128 0x4
 1032 0093 A8020000 		.4byte	.LASF13
 1033 0097 03       		.byte	0x3
 1034 0098 2C       		.byte	0x2c
 1035 0099 5D000000 		.4byte	0x5d
 1036 009d 07       		.uleb128 0x7
 1037 009e 53030000 		.4byte	.LASF14
 1038 00a2 04       		.byte	0x4
 1039 00a3 E401     		.2byte	0x1e4
 1040 00a5 48000000 		.4byte	0x48
 1041 00a9 07       		.uleb128 0x7
 1042 00aa 4F020000 		.4byte	.LASF15
 1043 00ae 04       		.byte	0x4
 1044 00af E601     		.2byte	0x1e6
 1045 00b1 6F000000 		.4byte	0x6f
 1046 00b5 03       		.uleb128 0x3
 1047 00b6 04       		.byte	0x4
 1048 00b7 04       		.byte	0x4
 1049 00b8 5E010000 		.4byte	.LASF16
 1050 00bc 03       		.uleb128 0x3
 1051 00bd 08       		.byte	0x8
 1052 00be 04       		.byte	0x4
 1053 00bf 25020000 		.4byte	.LASF17
 1054 00c3 07       		.uleb128 0x7
 1055 00c4 8A010000 		.4byte	.LASF18
 1056 00c8 04       		.byte	0x4
 1057 00c9 8E02     		.2byte	0x28e
 1058 00cb CF000000 		.4byte	0xcf
 1059 00cf 08       		.uleb128 0x8
 1060 00d0 9D000000 		.4byte	0x9d
 1061 00d4 07       		.uleb128 0x7
 1062 00d5 33000000 		.4byte	.LASF19
 1063 00d9 04       		.byte	0x4
 1064 00da 9002     		.2byte	0x290
 1065 00dc E0000000 		.4byte	0xe0
 1066 00e0 08       		.uleb128 0x8
 1067 00e1 A9000000 		.4byte	0xa9
 1068 00e5 07       		.uleb128 0x7
 1069 00e6 82020000 		.4byte	.LASF20
 1070 00ea 04       		.byte	0x4
 1071 00eb A002     		.2byte	0x2a0
 1072 00ed 8B000000 		.4byte	0x8b
 1073 00f1 09       		.uleb128 0x9
 1074 00f2 7B030000 		.4byte	.LASF50
 1075 00f6 03       		.byte	0x3
 1076 00f7 05       		.byte	0x5
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 30


 1077 00f8 10       		.byte	0x10
 1078 00f9 22010000 		.4byte	0x122
 1079 00fd 0A       		.uleb128 0xa
 1080 00fe 51010000 		.4byte	.LASF21
 1081 0102 05       		.byte	0x5
 1082 0103 12       		.byte	0x12
 1083 0104 9D000000 		.4byte	0x9d
 1084 0108 00       		.byte	0
 1085 0109 0A       		.uleb128 0xa
 1086 010a 26010000 		.4byte	.LASF22
 1087 010e 05       		.byte	0x5
 1088 010f 13       		.byte	0x13
 1089 0110 9D000000 		.4byte	0x9d
 1090 0114 01       		.byte	0x1
 1091 0115 0A       		.uleb128 0xa
 1092 0116 0A010000 		.4byte	.LASF23
 1093 011a 05       		.byte	0x5
 1094 011b 14       		.byte	0x14
 1095 011c 9D000000 		.4byte	0x9d
 1096 0120 02       		.byte	0x2
 1097 0121 00       		.byte	0
 1098 0122 04       		.uleb128 0x4
 1099 0123 1E030000 		.4byte	.LASF24
 1100 0127 05       		.byte	0x5
 1101 0128 18       		.byte	0x18
 1102 0129 F1000000 		.4byte	0xf1
 1103 012d 0B       		.uleb128 0xb
 1104 012e 2F010000 		.4byte	.LASF51
 1105 0132 01       		.byte	0x1
 1106 0133 48000000 		.4byte	0x48
 1107 0137 01       		.byte	0x1
 1108 0138 2E       		.byte	0x2e
 1109 0139 50010000 		.4byte	0x150
 1110 013d 0C       		.uleb128 0xc
 1111 013e 4D030000 		.4byte	.LASF25
 1112 0142 00       		.byte	0
 1113 0143 0C       		.uleb128 0xc
 1114 0144 FA000000 		.4byte	.LASF26
 1115 0148 01       		.byte	0x1
 1116 0149 0C       		.uleb128 0xc
 1117 014a 8F010000 		.4byte	.LASF27
 1118 014e 02       		.byte	0x2
 1119 014f 00       		.byte	0
 1120 0150 0D       		.uleb128 0xd
 1121 0151 11010000 		.4byte	.LASF28
 1122 0155 01       		.byte	0x1
 1123 0156 53       		.byte	0x53
 1124 0157 00000000 		.4byte	.LFB63
 1125 015b 20000000 		.4byte	.LFE63-.LFB63
 1126 015f 01       		.uleb128 0x1
 1127 0160 9C       		.byte	0x9c
 1128 0161 0E       		.uleb128 0xe
 1129 0162 A2030000 		.4byte	.LASF31
 1130 0166 01       		.byte	0x1
 1131 0167 7E       		.byte	0x7e
 1132 0168 00000000 		.4byte	.LFB64
 1133 016c 24000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 31


 1134 0170 01       		.uleb128 0x1
 1135 0171 9C       		.byte	0x9c
 1136 0172 85010000 		.4byte	0x185
 1137 0176 0F       		.uleb128 0xf
 1138 0177 63020000 		.4byte	.LASF33
 1139 017b 01       		.byte	0x1
 1140 017c 7E       		.byte	0x7e
 1141 017d E5000000 		.4byte	0xe5
 1142 0181 02       		.uleb128 0x2
 1143 0182 91       		.byte	0x91
 1144 0183 74       		.sleb128 -12
 1145 0184 00       		.byte	0
 1146 0185 0D       		.uleb128 0xd
 1147 0186 59030000 		.4byte	.LASF29
 1148 018a 01       		.byte	0x1
 1149 018b 9C       		.byte	0x9c
 1150 018c 00000000 		.4byte	.LFB65
 1151 0190 18000000 		.4byte	.LFE65-.LFB65
 1152 0194 01       		.uleb128 0x1
 1153 0195 9C       		.byte	0x9c
 1154 0196 0D       		.uleb128 0xd
 1155 0197 8F020000 		.4byte	.LASF30
 1156 019b 01       		.byte	0x1
 1157 019c B6       		.byte	0xb6
 1158 019d 00000000 		.4byte	.LFB66
 1159 01a1 A0020000 		.4byte	.LFE66-.LFB66
 1160 01a5 01       		.uleb128 0x1
 1161 01a6 9C       		.byte	0x9c
 1162 01a7 10       		.uleb128 0x10
 1163 01a8 64010000 		.4byte	.LASF32
 1164 01ac 01       		.byte	0x1
 1165 01ad 7101     		.2byte	0x171
 1166 01af 00000000 		.4byte	.LFB67
 1167 01b3 24000000 		.4byte	.LFE67-.LFB67
 1168 01b7 01       		.uleb128 0x1
 1169 01b8 9C       		.byte	0x9c
 1170 01b9 DC010000 		.4byte	0x1dc
 1171 01bd 11       		.uleb128 0x11
 1172 01be 63020000 		.4byte	.LASF33
 1173 01c2 01       		.byte	0x1
 1174 01c3 7101     		.2byte	0x171
 1175 01c5 E5000000 		.4byte	0xe5
 1176 01c9 02       		.uleb128 0x2
 1177 01ca 91       		.byte	0x91
 1178 01cb 6C       		.sleb128 -20
 1179 01cc 12       		.uleb128 0x12
 1180 01cd 0F030000 		.4byte	.LASF34
 1181 01d1 01       		.byte	0x1
 1182 01d2 7301     		.2byte	0x173
 1183 01d4 DC010000 		.4byte	0x1dc
 1184 01d8 02       		.uleb128 0x2
 1185 01d9 91       		.byte	0x91
 1186 01da 74       		.sleb128 -12
 1187 01db 00       		.byte	0
 1188 01dc 05       		.uleb128 0x5
 1189 01dd 04       		.byte	0x4
 1190 01de E5000000 		.4byte	0xe5
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 32


 1191 01e2 13       		.uleb128 0x13
 1192 01e3 38010000 		.4byte	.LASF37
 1193 01e7 01       		.byte	0x1
 1194 01e8 8901     		.2byte	0x189
 1195 01ea E5000000 		.4byte	0xe5
 1196 01ee 00000000 		.4byte	.LFB68
 1197 01f2 20000000 		.4byte	.LFE68-.LFB68
 1198 01f6 01       		.uleb128 0x1
 1199 01f7 9C       		.byte	0x9c
 1200 01f8 0C020000 		.4byte	0x20c
 1201 01fc 12       		.uleb128 0x12
 1202 01fd 0F030000 		.4byte	.LASF34
 1203 0201 01       		.byte	0x1
 1204 0202 8B01     		.2byte	0x18b
 1205 0204 DC010000 		.4byte	0x1dc
 1206 0208 02       		.uleb128 0x2
 1207 0209 91       		.byte	0x91
 1208 020a 74       		.sleb128 -12
 1209 020b 00       		.byte	0
 1210 020c 10       		.uleb128 0x10
 1211 020d 18000000 		.4byte	.LASF35
 1212 0211 01       		.byte	0x1
 1213 0212 AB01     		.2byte	0x1ab
 1214 0214 00000000 		.4byte	.LFB69
 1215 0218 24000000 		.4byte	.LFE69-.LFB69
 1216 021c 01       		.uleb128 0x1
 1217 021d 9C       		.byte	0x9c
 1218 021e 32020000 		.4byte	0x232
 1219 0222 11       		.uleb128 0x11
 1220 0223 2C020000 		.4byte	.LASF36
 1221 0227 01       		.byte	0x1
 1222 0228 AB01     		.2byte	0x1ab
 1223 022a 9D000000 		.4byte	0x9d
 1224 022e 02       		.uleb128 0x2
 1225 022f 91       		.byte	0x91
 1226 0230 77       		.sleb128 -9
 1227 0231 00       		.byte	0
 1228 0232 13       		.uleb128 0x13
 1229 0233 EF020000 		.4byte	.LASF38
 1230 0237 01       		.byte	0x1
 1231 0238 C101     		.2byte	0x1c1
 1232 023a 9D000000 		.4byte	0x9d
 1233 023e 00000000 		.4byte	.LFB70
 1234 0242 20000000 		.4byte	.LFE70-.LFB70
 1235 0246 01       		.uleb128 0x1
 1236 0247 9C       		.byte	0x9c
 1237 0248 5C020000 		.4byte	0x25c
 1238 024c 12       		.uleb128 0x12
 1239 024d 2C020000 		.4byte	.LASF36
 1240 0251 01       		.byte	0x1
 1241 0252 C301     		.2byte	0x1c3
 1242 0254 9D000000 		.4byte	0x9d
 1243 0258 02       		.uleb128 0x2
 1244 0259 91       		.byte	0x91
 1245 025a 77       		.sleb128 -9
 1246 025b 00       		.byte	0
 1247 025c 14       		.uleb128 0x14
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 33


 1248 025d 2D030000 		.4byte	.LASF39
 1249 0261 01       		.byte	0x1
 1250 0262 DC01     		.2byte	0x1dc
 1251 0264 00000000 		.4byte	.LFB71
 1252 0268 18000000 		.4byte	.LFE71-.LFB71
 1253 026c 01       		.uleb128 0x1
 1254 026d 9C       		.byte	0x9c
 1255 026e 15       		.uleb128 0x15
 1256 026f 00000000 		.4byte	.LASF52
 1257 0273 01       		.byte	0x1
 1258 0274 F101     		.2byte	0x1f1
 1259 0276 9D000000 		.4byte	0x9d
 1260 027a 00000000 		.4byte	.LFB72
 1261 027e 24000000 		.4byte	.LFE72-.LFB72
 1262 0282 01       		.uleb128 0x1
 1263 0283 9C       		.byte	0x9c
 1264 0284 14       		.uleb128 0x14
 1265 0285 E3000000 		.4byte	.LASF40
 1266 0289 01       		.byte	0x1
 1267 028a 0602     		.2byte	0x206
 1268 028c 00000000 		.4byte	.LFB73
 1269 0290 18000000 		.4byte	.LFE73-.LFB73
 1270 0294 01       		.uleb128 0x1
 1271 0295 9C       		.byte	0x9c
 1272 0296 14       		.uleb128 0x14
 1273 0297 35020000 		.4byte	.LASF41
 1274 029b 01       		.byte	0x1
 1275 029c 2102     		.2byte	0x221
 1276 029e 00000000 		.4byte	.LFB74
 1277 02a2 18000000 		.4byte	.LFE74-.LFB74
 1278 02a6 01       		.uleb128 0x1
 1279 02a7 9C       		.byte	0x9c
 1280 02a8 14       		.uleb128 0x14
 1281 02a9 39000000 		.4byte	.LASF42
 1282 02ad 01       		.byte	0x1
 1283 02ae 3A02     		.2byte	0x23a
 1284 02b0 00000000 		.4byte	.LFB75
 1285 02b4 18000000 		.4byte	.LFE75-.LFB75
 1286 02b8 01       		.uleb128 0x1
 1287 02b9 9C       		.byte	0x9c
 1288 02ba 16       		.uleb128 0x16
 1289 02bb 7D010000 		.4byte	.LASF43
 1290 02bf 01       		.byte	0x1
 1291 02c0 2C       		.byte	0x2c
 1292 02c1 9D000000 		.4byte	0x9d
 1293 02c5 05       		.uleb128 0x5
 1294 02c6 03       		.byte	0x3
 1295 02c7 00000000 		.4byte	blinkcounter
 1296 02cb 17       		.uleb128 0x17
 1297 02cc 0A020000 		.4byte	.LASF44
 1298 02d0 06       		.byte	0x6
 1299 02d1 1207     		.2byte	0x712
 1300 02d3 D7020000 		.4byte	0x2d7
 1301 02d7 08       		.uleb128 0x8
 1302 02d8 92000000 		.4byte	0x92
 1303 02dc 18       		.uleb128 0x18
 1304 02dd 76030000 		.4byte	.LASF45
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 34


 1305 02e1 05       		.byte	0x5
 1306 02e2 16       		.byte	0x16
 1307 02e3 F1000000 		.4byte	0xf1
 1308 02e7 05       		.uleb128 0x5
 1309 02e8 03       		.byte	0x3
 1310 02e9 00000000 		.4byte	Test
 1311 02ed 18       		.uleb128 0x18
 1312 02ee A7010000 		.4byte	.LASF46
 1313 02f2 01       		.byte	0x1
 1314 02f3 2A       		.byte	0x2a
 1315 02f4 22010000 		.4byte	0x122
 1316 02f8 05       		.uleb128 0x5
 1317 02f9 03       		.byte	0x3
 1318 02fa 00000000 		.4byte	CurrentTest
 1319 02fe 00       		.byte	0
 1320              		.section	.debug_abbrev,"",%progbits
 1321              	.Ldebug_abbrev0:
 1322 0000 01       		.uleb128 0x1
 1323 0001 11       		.uleb128 0x11
 1324 0002 01       		.byte	0x1
 1325 0003 25       		.uleb128 0x25
 1326 0004 0E       		.uleb128 0xe
 1327 0005 13       		.uleb128 0x13
 1328 0006 0B       		.uleb128 0xb
 1329 0007 03       		.uleb128 0x3
 1330 0008 0E       		.uleb128 0xe
 1331 0009 1B       		.uleb128 0x1b
 1332 000a 0E       		.uleb128 0xe
 1333 000b 55       		.uleb128 0x55
 1334 000c 17       		.uleb128 0x17
 1335 000d 11       		.uleb128 0x11
 1336 000e 01       		.uleb128 0x1
 1337 000f 10       		.uleb128 0x10
 1338 0010 17       		.uleb128 0x17
 1339 0011 00       		.byte	0
 1340 0012 00       		.byte	0
 1341 0013 02       		.uleb128 0x2
 1342 0014 24       		.uleb128 0x24
 1343 0015 00       		.byte	0
 1344 0016 0B       		.uleb128 0xb
 1345 0017 0B       		.uleb128 0xb
 1346 0018 3E       		.uleb128 0x3e
 1347 0019 0B       		.uleb128 0xb
 1348 001a 03       		.uleb128 0x3
 1349 001b 08       		.uleb128 0x8
 1350 001c 00       		.byte	0
 1351 001d 00       		.byte	0
 1352 001e 03       		.uleb128 0x3
 1353 001f 24       		.uleb128 0x24
 1354 0020 00       		.byte	0
 1355 0021 0B       		.uleb128 0xb
 1356 0022 0B       		.uleb128 0xb
 1357 0023 3E       		.uleb128 0x3e
 1358 0024 0B       		.uleb128 0xb
 1359 0025 03       		.uleb128 0x3
 1360 0026 0E       		.uleb128 0xe
 1361 0027 00       		.byte	0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 35


 1362 0028 00       		.byte	0
 1363 0029 04       		.uleb128 0x4
 1364 002a 16       		.uleb128 0x16
 1365 002b 00       		.byte	0
 1366 002c 03       		.uleb128 0x3
 1367 002d 0E       		.uleb128 0xe
 1368 002e 3A       		.uleb128 0x3a
 1369 002f 0B       		.uleb128 0xb
 1370 0030 3B       		.uleb128 0x3b
 1371 0031 0B       		.uleb128 0xb
 1372 0032 49       		.uleb128 0x49
 1373 0033 13       		.uleb128 0x13
 1374 0034 00       		.byte	0
 1375 0035 00       		.byte	0
 1376 0036 05       		.uleb128 0x5
 1377 0037 0F       		.uleb128 0xf
 1378 0038 00       		.byte	0
 1379 0039 0B       		.uleb128 0xb
 1380 003a 0B       		.uleb128 0xb
 1381 003b 49       		.uleb128 0x49
 1382 003c 13       		.uleb128 0x13
 1383 003d 00       		.byte	0
 1384 003e 00       		.byte	0
 1385 003f 06       		.uleb128 0x6
 1386 0040 15       		.uleb128 0x15
 1387 0041 00       		.byte	0
 1388 0042 27       		.uleb128 0x27
 1389 0043 19       		.uleb128 0x19
 1390 0044 00       		.byte	0
 1391 0045 00       		.byte	0
 1392 0046 07       		.uleb128 0x7
 1393 0047 16       		.uleb128 0x16
 1394 0048 00       		.byte	0
 1395 0049 03       		.uleb128 0x3
 1396 004a 0E       		.uleb128 0xe
 1397 004b 3A       		.uleb128 0x3a
 1398 004c 0B       		.uleb128 0xb
 1399 004d 3B       		.uleb128 0x3b
 1400 004e 05       		.uleb128 0x5
 1401 004f 49       		.uleb128 0x49
 1402 0050 13       		.uleb128 0x13
 1403 0051 00       		.byte	0
 1404 0052 00       		.byte	0
 1405 0053 08       		.uleb128 0x8
 1406 0054 35       		.uleb128 0x35
 1407 0055 00       		.byte	0
 1408 0056 49       		.uleb128 0x49
 1409 0057 13       		.uleb128 0x13
 1410 0058 00       		.byte	0
 1411 0059 00       		.byte	0
 1412 005a 09       		.uleb128 0x9
 1413 005b 13       		.uleb128 0x13
 1414 005c 01       		.byte	0x1
 1415 005d 03       		.uleb128 0x3
 1416 005e 0E       		.uleb128 0xe
 1417 005f 0B       		.uleb128 0xb
 1418 0060 0B       		.uleb128 0xb
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 36


 1419 0061 3A       		.uleb128 0x3a
 1420 0062 0B       		.uleb128 0xb
 1421 0063 3B       		.uleb128 0x3b
 1422 0064 0B       		.uleb128 0xb
 1423 0065 01       		.uleb128 0x1
 1424 0066 13       		.uleb128 0x13
 1425 0067 00       		.byte	0
 1426 0068 00       		.byte	0
 1427 0069 0A       		.uleb128 0xa
 1428 006a 0D       		.uleb128 0xd
 1429 006b 00       		.byte	0
 1430 006c 03       		.uleb128 0x3
 1431 006d 0E       		.uleb128 0xe
 1432 006e 3A       		.uleb128 0x3a
 1433 006f 0B       		.uleb128 0xb
 1434 0070 3B       		.uleb128 0x3b
 1435 0071 0B       		.uleb128 0xb
 1436 0072 49       		.uleb128 0x49
 1437 0073 13       		.uleb128 0x13
 1438 0074 38       		.uleb128 0x38
 1439 0075 0B       		.uleb128 0xb
 1440 0076 00       		.byte	0
 1441 0077 00       		.byte	0
 1442 0078 0B       		.uleb128 0xb
 1443 0079 04       		.uleb128 0x4
 1444 007a 01       		.byte	0x1
 1445 007b 03       		.uleb128 0x3
 1446 007c 0E       		.uleb128 0xe
 1447 007d 0B       		.uleb128 0xb
 1448 007e 0B       		.uleb128 0xb
 1449 007f 49       		.uleb128 0x49
 1450 0080 13       		.uleb128 0x13
 1451 0081 3A       		.uleb128 0x3a
 1452 0082 0B       		.uleb128 0xb
 1453 0083 3B       		.uleb128 0x3b
 1454 0084 0B       		.uleb128 0xb
 1455 0085 01       		.uleb128 0x1
 1456 0086 13       		.uleb128 0x13
 1457 0087 00       		.byte	0
 1458 0088 00       		.byte	0
 1459 0089 0C       		.uleb128 0xc
 1460 008a 28       		.uleb128 0x28
 1461 008b 00       		.byte	0
 1462 008c 03       		.uleb128 0x3
 1463 008d 0E       		.uleb128 0xe
 1464 008e 1C       		.uleb128 0x1c
 1465 008f 0B       		.uleb128 0xb
 1466 0090 00       		.byte	0
 1467 0091 00       		.byte	0
 1468 0092 0D       		.uleb128 0xd
 1469 0093 2E       		.uleb128 0x2e
 1470 0094 00       		.byte	0
 1471 0095 3F       		.uleb128 0x3f
 1472 0096 19       		.uleb128 0x19
 1473 0097 03       		.uleb128 0x3
 1474 0098 0E       		.uleb128 0xe
 1475 0099 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 37


 1476 009a 0B       		.uleb128 0xb
 1477 009b 3B       		.uleb128 0x3b
 1478 009c 0B       		.uleb128 0xb
 1479 009d 27       		.uleb128 0x27
 1480 009e 19       		.uleb128 0x19
 1481 009f 11       		.uleb128 0x11
 1482 00a0 01       		.uleb128 0x1
 1483 00a1 12       		.uleb128 0x12
 1484 00a2 06       		.uleb128 0x6
 1485 00a3 40       		.uleb128 0x40
 1486 00a4 18       		.uleb128 0x18
 1487 00a5 9642     		.uleb128 0x2116
 1488 00a7 19       		.uleb128 0x19
 1489 00a8 00       		.byte	0
 1490 00a9 00       		.byte	0
 1491 00aa 0E       		.uleb128 0xe
 1492 00ab 2E       		.uleb128 0x2e
 1493 00ac 01       		.byte	0x1
 1494 00ad 3F       		.uleb128 0x3f
 1495 00ae 19       		.uleb128 0x19
 1496 00af 03       		.uleb128 0x3
 1497 00b0 0E       		.uleb128 0xe
 1498 00b1 3A       		.uleb128 0x3a
 1499 00b2 0B       		.uleb128 0xb
 1500 00b3 3B       		.uleb128 0x3b
 1501 00b4 0B       		.uleb128 0xb
 1502 00b5 27       		.uleb128 0x27
 1503 00b6 19       		.uleb128 0x19
 1504 00b7 11       		.uleb128 0x11
 1505 00b8 01       		.uleb128 0x1
 1506 00b9 12       		.uleb128 0x12
 1507 00ba 06       		.uleb128 0x6
 1508 00bb 40       		.uleb128 0x40
 1509 00bc 18       		.uleb128 0x18
 1510 00bd 9642     		.uleb128 0x2116
 1511 00bf 19       		.uleb128 0x19
 1512 00c0 01       		.uleb128 0x1
 1513 00c1 13       		.uleb128 0x13
 1514 00c2 00       		.byte	0
 1515 00c3 00       		.byte	0
 1516 00c4 0F       		.uleb128 0xf
 1517 00c5 05       		.uleb128 0x5
 1518 00c6 00       		.byte	0
 1519 00c7 03       		.uleb128 0x3
 1520 00c8 0E       		.uleb128 0xe
 1521 00c9 3A       		.uleb128 0x3a
 1522 00ca 0B       		.uleb128 0xb
 1523 00cb 3B       		.uleb128 0x3b
 1524 00cc 0B       		.uleb128 0xb
 1525 00cd 49       		.uleb128 0x49
 1526 00ce 13       		.uleb128 0x13
 1527 00cf 02       		.uleb128 0x2
 1528 00d0 18       		.uleb128 0x18
 1529 00d1 00       		.byte	0
 1530 00d2 00       		.byte	0
 1531 00d3 10       		.uleb128 0x10
 1532 00d4 2E       		.uleb128 0x2e
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 38


 1533 00d5 01       		.byte	0x1
 1534 00d6 3F       		.uleb128 0x3f
 1535 00d7 19       		.uleb128 0x19
 1536 00d8 03       		.uleb128 0x3
 1537 00d9 0E       		.uleb128 0xe
 1538 00da 3A       		.uleb128 0x3a
 1539 00db 0B       		.uleb128 0xb
 1540 00dc 3B       		.uleb128 0x3b
 1541 00dd 05       		.uleb128 0x5
 1542 00de 27       		.uleb128 0x27
 1543 00df 19       		.uleb128 0x19
 1544 00e0 11       		.uleb128 0x11
 1545 00e1 01       		.uleb128 0x1
 1546 00e2 12       		.uleb128 0x12
 1547 00e3 06       		.uleb128 0x6
 1548 00e4 40       		.uleb128 0x40
 1549 00e5 18       		.uleb128 0x18
 1550 00e6 9742     		.uleb128 0x2117
 1551 00e8 19       		.uleb128 0x19
 1552 00e9 01       		.uleb128 0x1
 1553 00ea 13       		.uleb128 0x13
 1554 00eb 00       		.byte	0
 1555 00ec 00       		.byte	0
 1556 00ed 11       		.uleb128 0x11
 1557 00ee 05       		.uleb128 0x5
 1558 00ef 00       		.byte	0
 1559 00f0 03       		.uleb128 0x3
 1560 00f1 0E       		.uleb128 0xe
 1561 00f2 3A       		.uleb128 0x3a
 1562 00f3 0B       		.uleb128 0xb
 1563 00f4 3B       		.uleb128 0x3b
 1564 00f5 05       		.uleb128 0x5
 1565 00f6 49       		.uleb128 0x49
 1566 00f7 13       		.uleb128 0x13
 1567 00f8 02       		.uleb128 0x2
 1568 00f9 18       		.uleb128 0x18
 1569 00fa 00       		.byte	0
 1570 00fb 00       		.byte	0
 1571 00fc 12       		.uleb128 0x12
 1572 00fd 34       		.uleb128 0x34
 1573 00fe 00       		.byte	0
 1574 00ff 03       		.uleb128 0x3
 1575 0100 0E       		.uleb128 0xe
 1576 0101 3A       		.uleb128 0x3a
 1577 0102 0B       		.uleb128 0xb
 1578 0103 3B       		.uleb128 0x3b
 1579 0104 05       		.uleb128 0x5
 1580 0105 49       		.uleb128 0x49
 1581 0106 13       		.uleb128 0x13
 1582 0107 02       		.uleb128 0x2
 1583 0108 18       		.uleb128 0x18
 1584 0109 00       		.byte	0
 1585 010a 00       		.byte	0
 1586 010b 13       		.uleb128 0x13
 1587 010c 2E       		.uleb128 0x2e
 1588 010d 01       		.byte	0x1
 1589 010e 3F       		.uleb128 0x3f
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 39


 1590 010f 19       		.uleb128 0x19
 1591 0110 03       		.uleb128 0x3
 1592 0111 0E       		.uleb128 0xe
 1593 0112 3A       		.uleb128 0x3a
 1594 0113 0B       		.uleb128 0xb
 1595 0114 3B       		.uleb128 0x3b
 1596 0115 05       		.uleb128 0x5
 1597 0116 27       		.uleb128 0x27
 1598 0117 19       		.uleb128 0x19
 1599 0118 49       		.uleb128 0x49
 1600 0119 13       		.uleb128 0x13
 1601 011a 11       		.uleb128 0x11
 1602 011b 01       		.uleb128 0x1
 1603 011c 12       		.uleb128 0x12
 1604 011d 06       		.uleb128 0x6
 1605 011e 40       		.uleb128 0x40
 1606 011f 18       		.uleb128 0x18
 1607 0120 9742     		.uleb128 0x2117
 1608 0122 19       		.uleb128 0x19
 1609 0123 01       		.uleb128 0x1
 1610 0124 13       		.uleb128 0x13
 1611 0125 00       		.byte	0
 1612 0126 00       		.byte	0
 1613 0127 14       		.uleb128 0x14
 1614 0128 2E       		.uleb128 0x2e
 1615 0129 00       		.byte	0
 1616 012a 3F       		.uleb128 0x3f
 1617 012b 19       		.uleb128 0x19
 1618 012c 03       		.uleb128 0x3
 1619 012d 0E       		.uleb128 0xe
 1620 012e 3A       		.uleb128 0x3a
 1621 012f 0B       		.uleb128 0xb
 1622 0130 3B       		.uleb128 0x3b
 1623 0131 05       		.uleb128 0x5
 1624 0132 27       		.uleb128 0x27
 1625 0133 19       		.uleb128 0x19
 1626 0134 11       		.uleb128 0x11
 1627 0135 01       		.uleb128 0x1
 1628 0136 12       		.uleb128 0x12
 1629 0137 06       		.uleb128 0x6
 1630 0138 40       		.uleb128 0x40
 1631 0139 18       		.uleb128 0x18
 1632 013a 9742     		.uleb128 0x2117
 1633 013c 19       		.uleb128 0x19
 1634 013d 00       		.byte	0
 1635 013e 00       		.byte	0
 1636 013f 15       		.uleb128 0x15
 1637 0140 2E       		.uleb128 0x2e
 1638 0141 00       		.byte	0
 1639 0142 3F       		.uleb128 0x3f
 1640 0143 19       		.uleb128 0x19
 1641 0144 03       		.uleb128 0x3
 1642 0145 0E       		.uleb128 0xe
 1643 0146 3A       		.uleb128 0x3a
 1644 0147 0B       		.uleb128 0xb
 1645 0148 3B       		.uleb128 0x3b
 1646 0149 05       		.uleb128 0x5
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 40


 1647 014a 27       		.uleb128 0x27
 1648 014b 19       		.uleb128 0x19
 1649 014c 49       		.uleb128 0x49
 1650 014d 13       		.uleb128 0x13
 1651 014e 11       		.uleb128 0x11
 1652 014f 01       		.uleb128 0x1
 1653 0150 12       		.uleb128 0x12
 1654 0151 06       		.uleb128 0x6
 1655 0152 40       		.uleb128 0x40
 1656 0153 18       		.uleb128 0x18
 1657 0154 9742     		.uleb128 0x2117
 1658 0156 19       		.uleb128 0x19
 1659 0157 00       		.byte	0
 1660 0158 00       		.byte	0
 1661 0159 16       		.uleb128 0x16
 1662 015a 34       		.uleb128 0x34
 1663 015b 00       		.byte	0
 1664 015c 03       		.uleb128 0x3
 1665 015d 0E       		.uleb128 0xe
 1666 015e 3A       		.uleb128 0x3a
 1667 015f 0B       		.uleb128 0xb
 1668 0160 3B       		.uleb128 0x3b
 1669 0161 0B       		.uleb128 0xb
 1670 0162 49       		.uleb128 0x49
 1671 0163 13       		.uleb128 0x13
 1672 0164 02       		.uleb128 0x2
 1673 0165 18       		.uleb128 0x18
 1674 0166 00       		.byte	0
 1675 0167 00       		.byte	0
 1676 0168 17       		.uleb128 0x17
 1677 0169 34       		.uleb128 0x34
 1678 016a 00       		.byte	0
 1679 016b 03       		.uleb128 0x3
 1680 016c 0E       		.uleb128 0xe
 1681 016d 3A       		.uleb128 0x3a
 1682 016e 0B       		.uleb128 0xb
 1683 016f 3B       		.uleb128 0x3b
 1684 0170 05       		.uleb128 0x5
 1685 0171 49       		.uleb128 0x49
 1686 0172 13       		.uleb128 0x13
 1687 0173 3F       		.uleb128 0x3f
 1688 0174 19       		.uleb128 0x19
 1689 0175 3C       		.uleb128 0x3c
 1690 0176 19       		.uleb128 0x19
 1691 0177 00       		.byte	0
 1692 0178 00       		.byte	0
 1693 0179 18       		.uleb128 0x18
 1694 017a 34       		.uleb128 0x34
 1695 017b 00       		.byte	0
 1696 017c 03       		.uleb128 0x3
 1697 017d 0E       		.uleb128 0xe
 1698 017e 3A       		.uleb128 0x3a
 1699 017f 0B       		.uleb128 0xb
 1700 0180 3B       		.uleb128 0x3b
 1701 0181 0B       		.uleb128 0xb
 1702 0182 49       		.uleb128 0x49
 1703 0183 13       		.uleb128 0x13
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 41


 1704 0184 3F       		.uleb128 0x3f
 1705 0185 19       		.uleb128 0x19
 1706 0186 02       		.uleb128 0x2
 1707 0187 18       		.uleb128 0x18
 1708 0188 00       		.byte	0
 1709 0189 00       		.byte	0
 1710 018a 00       		.byte	0
 1711              		.section	.debug_aranges,"",%progbits
 1712 0000 7C000000 		.4byte	0x7c
 1713 0004 0200     		.2byte	0x2
 1714 0006 00000000 		.4byte	.Ldebug_info0
 1715 000a 04       		.byte	0x4
 1716 000b 00       		.byte	0
 1717 000c 0000     		.2byte	0
 1718 000e 0000     		.2byte	0
 1719 0010 00000000 		.4byte	.LFB63
 1720 0014 20000000 		.4byte	.LFE63-.LFB63
 1721 0018 00000000 		.4byte	.LFB64
 1722 001c 24000000 		.4byte	.LFE64-.LFB64
 1723 0020 00000000 		.4byte	.LFB65
 1724 0024 18000000 		.4byte	.LFE65-.LFB65
 1725 0028 00000000 		.4byte	.LFB66
 1726 002c A0020000 		.4byte	.LFE66-.LFB66
 1727 0030 00000000 		.4byte	.LFB67
 1728 0034 24000000 		.4byte	.LFE67-.LFB67
 1729 0038 00000000 		.4byte	.LFB68
 1730 003c 20000000 		.4byte	.LFE68-.LFB68
 1731 0040 00000000 		.4byte	.LFB69
 1732 0044 24000000 		.4byte	.LFE69-.LFB69
 1733 0048 00000000 		.4byte	.LFB70
 1734 004c 20000000 		.4byte	.LFE70-.LFB70
 1735 0050 00000000 		.4byte	.LFB71
 1736 0054 18000000 		.4byte	.LFE71-.LFB71
 1737 0058 00000000 		.4byte	.LFB72
 1738 005c 24000000 		.4byte	.LFE72-.LFB72
 1739 0060 00000000 		.4byte	.LFB73
 1740 0064 18000000 		.4byte	.LFE73-.LFB73
 1741 0068 00000000 		.4byte	.LFB74
 1742 006c 18000000 		.4byte	.LFE74-.LFB74
 1743 0070 00000000 		.4byte	.LFB75
 1744 0074 18000000 		.4byte	.LFE75-.LFB75
 1745 0078 00000000 		.4byte	0
 1746 007c 00000000 		.4byte	0
 1747              		.section	.debug_ranges,"",%progbits
 1748              	.Ldebug_ranges0:
 1749 0000 00000000 		.4byte	.LFB63
 1750 0004 20000000 		.4byte	.LFE63
 1751 0008 00000000 		.4byte	.LFB64
 1752 000c 24000000 		.4byte	.LFE64
 1753 0010 00000000 		.4byte	.LFB65
 1754 0014 18000000 		.4byte	.LFE65
 1755 0018 00000000 		.4byte	.LFB66
 1756 001c A0020000 		.4byte	.LFE66
 1757 0020 00000000 		.4byte	.LFB67
 1758 0024 24000000 		.4byte	.LFE67
 1759 0028 00000000 		.4byte	.LFB68
 1760 002c 20000000 		.4byte	.LFE68
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 42


 1761 0030 00000000 		.4byte	.LFB69
 1762 0034 24000000 		.4byte	.LFE69
 1763 0038 00000000 		.4byte	.LFB70
 1764 003c 20000000 		.4byte	.LFE70
 1765 0040 00000000 		.4byte	.LFB71
 1766 0044 18000000 		.4byte	.LFE71
 1767 0048 00000000 		.4byte	.LFB72
 1768 004c 24000000 		.4byte	.LFE72
 1769 0050 00000000 		.4byte	.LFB73
 1770 0054 18000000 		.4byte	.LFE73
 1771 0058 00000000 		.4byte	.LFB74
 1772 005c 18000000 		.4byte	.LFE74
 1773 0060 00000000 		.4byte	.LFB75
 1774 0064 18000000 		.4byte	.LFE75
 1775 0068 00000000 		.4byte	0
 1776 006c 00000000 		.4byte	0
 1777              		.section	.debug_line,"",%progbits
 1778              	.Ldebug_line0:
 1779 0000 0F030000 		.section	.debug_str,"MS",%progbits,1
 1779      02006D01 
 1779      00000201 
 1779      FB0E0D00 
 1779      01010101 
 1780              	.LASF52:
 1781 0000 6973725F 		.ascii	"isr_Timer_50ms_GetState\000"
 1781      54696D65 
 1781      725F3530 
 1781      6D735F47 
 1781      65745374 
 1782              	.LASF35:
 1783 0018 6973725F 		.ascii	"isr_Timer_50ms_SetPriority\000"
 1783      54696D65 
 1783      725F3530 
 1783      6D735F53 
 1783      65745072 
 1784              	.LASF19:
 1785 0033 72656733 		.ascii	"reg32\000"
 1785      3200
 1786              	.LASF42:
 1787 0039 6973725F 		.ascii	"isr_Timer_50ms_ClearPending\000"
 1787      54696D65 
 1787      725F3530 
 1787      6D735F43 
 1787      6C656172 
 1788              	.LASF47:
 1789 0055 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1789      43313120 
 1789      352E342E 
 1789      31203230 
 1789      31363036 
 1790 0088 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1790      20726576 
 1790      6973696F 
 1790      6E203233 
 1790      37373135 
 1791 00bb 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1791      66756E63 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 43


 1791      74696F6E 
 1791      2D736563 
 1791      74696F6E 
 1792              	.LASF40:
 1793 00e3 6973725F 		.ascii	"isr_Timer_50ms_Disable\000"
 1793      54696D65 
 1793      725F3530 
 1793      6D735F44 
 1793      69736162 
 1794              	.LASF26:
 1795 00fa 52544553 		.ascii	"RTEST\000"
 1795      5400
 1796              	.LASF12:
 1797 0100 5F5F696E 		.ascii	"__int32_t\000"
 1797      7433325F 
 1797      7400
 1798              	.LASF23:
 1799 010a 53746174 		.ascii	"Status\000"
 1799      757300
 1800              	.LASF28:
 1801 0111 6973725F 		.ascii	"isr_Timer_50ms_Start\000"
 1801      54696D65 
 1801      725F3530 
 1801      6D735F53 
 1801      74617274 
 1802              	.LASF22:
 1803 0126 54657374 		.ascii	"TestStep\000"
 1803      53746570 
 1803      00
 1804              	.LASF51:
 1805 012f 44617461 		.ascii	"DataType\000"
 1805      54797065 
 1805      00
 1806              	.LASF37:
 1807 0138 6973725F 		.ascii	"isr_Timer_50ms_GetVector\000"
 1807      54696D65 
 1807      725F3530 
 1807      6D735F47 
 1807      65745665 
 1808              	.LASF21:
 1809 0151 53656C65 		.ascii	"SelectedTest\000"
 1809      63746564 
 1809      54657374 
 1809      00
 1810              	.LASF16:
 1811 015e 666C6F61 		.ascii	"float\000"
 1811      7400
 1812              	.LASF32:
 1813 0164 6973725F 		.ascii	"isr_Timer_50ms_SetVector\000"
 1813      54696D65 
 1813      725F3530 
 1813      6D735F53 
 1813      65745665 
 1814              	.LASF43:
 1815 017d 626C696E 		.ascii	"blinkcounter\000"
 1815      6B636F75 
 1815      6E746572 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 44


 1815      00
 1816              	.LASF18:
 1817 018a 72656738 		.ascii	"reg8\000"
 1817      00
 1818              	.LASF27:
 1819 018f 53544553 		.ascii	"STEST\000"
 1819      5400
 1820              	.LASF8:
 1821 0195 6C6F6E67 		.ascii	"long unsigned int\000"
 1821      20756E73 
 1821      69676E65 
 1821      6420696E 
 1821      7400
 1822              	.LASF46:
 1823 01a7 43757272 		.ascii	"CurrentTest\000"
 1823      656E7454 
 1823      65737400 
 1824              	.LASF6:
 1825 01b3 73686F72 		.ascii	"short unsigned int\000"
 1825      7420756E 
 1825      7369676E 
 1825      65642069 
 1825      6E7400
 1826              	.LASF49:
 1827 01c6 433A5C55 		.ascii	"C:\\Users\\marthnick\\Desktop\\firm_F1-TestFixture\\"
 1827      73657273 
 1827      5C6D6172 
 1827      74686E69 
 1827      636B5C44 
 1828 01f5 46312D54 		.ascii	"F1-TestFixture.cydsn\000"
 1828      65737446 
 1828      69787475 
 1828      72652E63 
 1828      7964736E 
 1829              	.LASF44:
 1830 020a 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1830      52784275 
 1830      66666572 
 1830      00
 1831              	.LASF4:
 1832 0217 756E7369 		.ascii	"unsigned char\000"
 1832      676E6564 
 1832      20636861 
 1832      7200
 1833              	.LASF17:
 1834 0225 646F7562 		.ascii	"double\000"
 1834      6C6500
 1835              	.LASF36:
 1836 022c 7072696F 		.ascii	"priority\000"
 1836      72697479 
 1836      00
 1837              	.LASF41:
 1838 0235 6973725F 		.ascii	"isr_Timer_50ms_SetPending\000"
 1838      54696D65 
 1838      725F3530 
 1838      6D735F53 
 1838      65745065 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 45


 1839              	.LASF15:
 1840 024f 75696E74 		.ascii	"uint32\000"
 1840      333200
 1841              	.LASF0:
 1842 0256 756E7369 		.ascii	"unsigned int\000"
 1842      676E6564 
 1842      20696E74 
 1842      00
 1843              	.LASF33:
 1844 0263 61646472 		.ascii	"address\000"
 1844      65737300 
 1845              	.LASF9:
 1846 026b 6C6F6E67 		.ascii	"long long unsigned int\000"
 1846      206C6F6E 
 1846      6720756E 
 1846      7369676E 
 1846      65642069 
 1847              	.LASF20:
 1848 0282 63796973 		.ascii	"cyisraddress\000"
 1848      72616464 
 1848      72657373 
 1848      00
 1849              	.LASF30:
 1850 028f 6973725F 		.ascii	"isr_Timer_50ms_Interrupt\000"
 1850      54696D65 
 1850      725F3530 
 1850      6D735F49 
 1850      6E746572 
 1851              	.LASF13:
 1852 02a8 696E7433 		.ascii	"int32_t\000"
 1852      325F7400 
 1853              	.LASF10:
 1854 02b0 73697A65 		.ascii	"sizetype\000"
 1854      74797065 
 1854      00
 1855              	.LASF48:
 1856 02b9 47656E65 		.ascii	"Generated_Source\\PSoC5\\isr_Timer_50ms.c\000"
 1856      72617465 
 1856      645F536F 
 1856      75726365 
 1856      5C50536F 
 1857              	.LASF1:
 1858 02e1 6C6F6E67 		.ascii	"long long int\000"
 1858      206C6F6E 
 1858      6720696E 
 1858      7400
 1859              	.LASF38:
 1860 02ef 6973725F 		.ascii	"isr_Timer_50ms_GetPriority\000"
 1860      54696D65 
 1860      725F3530 
 1860      6D735F47 
 1860      65745072 
 1861              	.LASF11:
 1862 030a 63686172 		.ascii	"char\000"
 1862      00
 1863              	.LASF34:
 1864 030f 72616D56 		.ascii	"ramVectorTable\000"
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 46


 1864      6563746F 
 1864      72546162 
 1864      6C6500
 1865              	.LASF24:
 1866 031e 53747275 		.ascii	"StructTestInfo\000"
 1866      63745465 
 1866      7374496E 
 1866      666F00
 1867              	.LASF39:
 1868 032d 6973725F 		.ascii	"isr_Timer_50ms_Enable\000"
 1868      54696D65 
 1868      725F3530 
 1868      6D735F45 
 1868      6E61626C 
 1869              	.LASF5:
 1870 0343 73686F72 		.ascii	"short int\000"
 1870      7420696E 
 1870      7400
 1871              	.LASF25:
 1872 034d 43544553 		.ascii	"CTEST\000"
 1872      5400
 1873              	.LASF14:
 1874 0353 75696E74 		.ascii	"uint8\000"
 1874      3800
 1875              	.LASF29:
 1876 0359 6973725F 		.ascii	"isr_Timer_50ms_Stop\000"
 1876      54696D65 
 1876      725F3530 
 1876      6D735F53 
 1876      746F7000 
 1877              	.LASF7:
 1878 036d 6C6F6E67 		.ascii	"long int\000"
 1878      20696E74 
 1878      00
 1879              	.LASF45:
 1880 0376 54657374 		.ascii	"Test\000"
 1880      00
 1881              	.LASF50:
 1882 037b 73747275 		.ascii	"structTestInfo\000"
 1882      63745465 
 1882      7374496E 
 1882      666F00
 1883              	.LASF2:
 1884 038a 6C6F6E67 		.ascii	"long double\000"
 1884      20646F75 
 1884      626C6500 
 1885              	.LASF3:
 1886 0396 7369676E 		.ascii	"signed char\000"
 1886      65642063 
 1886      68617200 
 1887              	.LASF31:
 1888 03a2 6973725F 		.ascii	"isr_Timer_50ms_StartEx\000"
 1888      54696D65 
 1888      725F3530 
 1888      6D735F53 
 1888      74617274 
 1889              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccTlom7r.s 			page 47


