ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_1_initVar
  20              		.bss
  21              		.type	UART_1_initVar, %object
  22              		.size	UART_1_initVar, 1
  23              	UART_1_initVar:
  24 0000 00       		.space	1
  25              		.comm	UART_1_txBuffer,1024,4
  26              		.global	UART_1_txBufferRead
  27 0001 00       		.align	1
  28              		.type	UART_1_txBufferRead, %object
  29              		.size	UART_1_txBufferRead, 2
  30              	UART_1_txBufferRead:
  31 0002 0000     		.space	2
  32              		.global	UART_1_txBufferWrite
  33              		.align	1
  34              		.type	UART_1_txBufferWrite, %object
  35              		.size	UART_1_txBufferWrite, 2
  36              	UART_1_txBufferWrite:
  37 0004 0000     		.space	2
  38              		.section	.text.UART_1_Start,"ax",%progbits
  39              		.align	2
  40              		.global	UART_1_Start
  41              		.thumb
  42              		.thumb_func
  43              		.type	UART_1_Start, %function
  44              	UART_1_Start:
  45              	.LFB0:
  46              		.file 1 "Generated_Source\\PSoC5\\UART_1.c"
   1:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_1.c **** * File Name: UART_1.c
   3:Generated_Source\PSoC5/UART_1.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_1.c **** *
   5:Generated_Source\PSoC5/UART_1.c **** * Description:
   6:Generated_Source\PSoC5/UART_1.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_1.c **** *
   8:Generated_Source\PSoC5/UART_1.c **** * Note:
   9:Generated_Source\PSoC5/UART_1.c **** *
  10:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 2


  12:Generated_Source\PSoC5/UART_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_1.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_1.c **** 
  17:Generated_Source\PSoC5/UART_1.c **** #include "UART_1.h"
  18:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_1.c ****     #include "UART_1_IntClock.h"
  20:Generated_Source\PSoC5/UART_1.c **** #endif /* End UART_1_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_1.c **** 
  22:Generated_Source\PSoC5/UART_1.c **** 
  23:Generated_Source\PSoC5/UART_1.c **** /***************************************
  24:Generated_Source\PSoC5/UART_1.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_1.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_1.c **** 
  27:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_initVar = 0u;
  28:Generated_Source\PSoC5/UART_1.c **** 
  29:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_txBuffer[UART_1_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART_1.c ****     volatile uint16 UART_1_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_TX_INTERRUPT_ENABLED && UART_1_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_1.c **** 
  35:Generated_Source\PSoC5/UART_1.c **** #if (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBuffer[UART_1_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_1.c ****     volatile uint8 UART_1_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressMode = UART_1_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_1.c ****         volatile uint8 UART_1_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_1.c **** #endif /* (UART_1_RX_INTERRUPT_ENABLED && (UART_1_RX_ENABLED || UART_1_HD_ENABLED)) */
  47:Generated_Source\PSoC5/UART_1.c **** 
  48:Generated_Source\PSoC5/UART_1.c **** 
  49:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Start
  51:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_1.c **** *
  53:Generated_Source\PSoC5/UART_1.c **** * Summary:
  54:Generated_Source\PSoC5/UART_1.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_1.c **** *  UART_1_Enable() function.
  58:Generated_Source\PSoC5/UART_1.c **** *
  59:Generated_Source\PSoC5/UART_1.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_1.c **** *  None.
  61:Generated_Source\PSoC5/UART_1.c **** *
  62:Generated_Source\PSoC5/UART_1.c **** * Return:
  63:Generated_Source\PSoC5/UART_1.c **** *  None.
  64:Generated_Source\PSoC5/UART_1.c **** *
  65:Generated_Source\PSoC5/UART_1.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_1.c **** *  The UART_1_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_1.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_1.c **** *  and set to one (1u) the first time UART_1_Start() is called. This
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 3


  69:Generated_Source\PSoC5/UART_1.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_1.c **** *  subsequent calls to the UART_1_Start() routine.
  71:Generated_Source\PSoC5/UART_1.c **** *
  72:Generated_Source\PSoC5/UART_1.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_1.c **** *  No.
  74:Generated_Source\PSoC5/UART_1.c **** *
  75:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_1.c **** void UART_1_Start(void) 
  77:Generated_Source\PSoC5/UART_1.c **** {
  47              		.loc 1 77 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 1, uses_anonymous_args = 0
  51 0000 80B5     		push	{r7, lr}
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 00AF     		add	r7, sp, #0
  56              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/UART_1.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_1.c ****     if(UART_1_initVar == 0u)
  57              		.loc 1 79 0
  58 0004 064B     		ldr	r3, .L3
  59 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  60 0008 002B     		cmp	r3, #0
  61 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/UART_1.c ****     {
  81:Generated_Source\PSoC5/UART_1.c ****         UART_1_Init();
  62              		.loc 1 81 0
  63 000c FFF7FEFF 		bl	UART_1_Init
  82:Generated_Source\PSoC5/UART_1.c ****         UART_1_initVar = 1u;
  64              		.loc 1 82 0
  65 0010 034B     		ldr	r3, .L3
  66 0012 0122     		movs	r2, #1
  67 0014 1A70     		strb	r2, [r3]
  68              	.L2:
  83:Generated_Source\PSoC5/UART_1.c ****     }
  84:Generated_Source\PSoC5/UART_1.c **** 
  85:Generated_Source\PSoC5/UART_1.c ****     UART_1_Enable();
  69              		.loc 1 85 0
  70 0016 FFF7FEFF 		bl	UART_1_Enable
  86:Generated_Source\PSoC5/UART_1.c **** }
  71              		.loc 1 86 0
  72 001a 00BF     		nop
  73 001c 80BD     		pop	{r7, pc}
  74              	.L4:
  75 001e 00BF     		.align	2
  76              	.L3:
  77 0020 00000000 		.word	UART_1_initVar
  78              		.cfi_endproc
  79              	.LFE0:
  80              		.size	UART_1_Start, .-UART_1_Start
  81              		.section	.text.UART_1_Init,"ax",%progbits
  82              		.align	2
  83              		.global	UART_1_Init
  84              		.thumb
  85              		.thumb_func
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 4


  86              		.type	UART_1_Init, %function
  87              	UART_1_Init:
  88              	.LFB1:
  87:Generated_Source\PSoC5/UART_1.c **** 
  88:Generated_Source\PSoC5/UART_1.c **** 
  89:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Init
  91:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_1.c **** *
  93:Generated_Source\PSoC5/UART_1.c **** * Summary:
  94:Generated_Source\PSoC5/UART_1.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_1.c **** *  dialog settings. It is not necessary to call UART_1_Init() because
  96:Generated_Source\PSoC5/UART_1.c **** *  the UART_1_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_1.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_1.c **** *
  99:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_1.c **** *  None.
 101:Generated_Source\PSoC5/UART_1.c **** *
 102:Generated_Source\PSoC5/UART_1.c **** * Return:
 103:Generated_Source\PSoC5/UART_1.c **** *  None.
 104:Generated_Source\PSoC5/UART_1.c **** *
 105:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_1.c **** void UART_1_Init(void) 
 107:Generated_Source\PSoC5/UART_1.c **** {
  89              		.loc 1 107 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93 0000 80B5     		push	{r7, lr}
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 7, -8
  96              		.cfi_offset 14, -4
  97 0002 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_1.c **** 
 110:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_1.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_RX_VECT_NUM, &UART_1_RXISR);
 113:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_RX_VECT_NUM, UART_1_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_1.c ****             UART_1_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_1.c **** 
 117:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddressMode(UART_1_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress1(UART_1_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_1.c ****             UART_1_SetRxAddress2(UART_1_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_1.c **** 
 123:Generated_Source\PSoC5/UART_1.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_PERIOD_REG = UART_1_RXBITCTR_INIT;
 125:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = UART_1_INIT_RX_INTERRUPTS_MASK;
 127:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_1.c **** 
 129:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 5


 131:Generated_Source\PSoC5/UART_1.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_1.c ****             (void) CyIntSetVector(UART_1_TX_VECT_NUM, &UART_1_TXISR);
  99              		.loc 1 132 0
 100 0004 0949     		ldr	r1, .L6
 101 0006 0020     		movs	r0, #0
 102 0008 FFF7FEFF 		bl	CyIntSetVector
 133:Generated_Source\PSoC5/UART_1.c ****             CyIntSetPriority(UART_1_TX_VECT_NUM, UART_1_TX_PRIOR_NUM);
 103              		.loc 1 133 0
 104 000c 0721     		movs	r1, #7
 105 000e 0020     		movs	r0, #0
 106 0010 FFF7FEFF 		bl	CyIntSetPriority
 134:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_1.c **** 
 136:Generated_Source\PSoC5/UART_1.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKGEN_CTR_REG = UART_1_BIT_CENTER;
 107              		.loc 1 138 0
 108 0014 064B     		ldr	r3, .L6+4
 109 0016 0622     		movs	r2, #6
 110 0018 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCLKTX_COMPLETE_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 111              		.loc 1 139 0
 112 001a 064B     		ldr	r3, .L6+8
 113 001c 4722     		movs	r2, #71
 114 001e 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_1.c ****         #else
 142:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_PERIOD_REG = ((UART_1_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_1.c ****                         UART_1_NUMBER_OF_START_BIT) * UART_1_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_1.c **** 
 146:Generated_Source\PSoC5/UART_1.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_TX_STS_FIFO_EMPTY;
 115              		.loc 1 148 0
 116 0020 054B     		ldr	r3, .L6+12
 117 0022 0222     		movs	r2, #2
 118 0024 1A70     		strb	r2, [r3]
 149:Generated_Source\PSoC5/UART_1.c ****         #else
 150:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXSTATUS_MASK_REG = UART_1_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART_1.c ****         #endif /*End UART_1_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_1.c **** 
 153:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_1.c **** 
 155:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_1.c ****         UART_1_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_1.c ****             (UART_1_ReadControlRegister() & (uint8)~UART_1_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_1.c ****             (uint8)(UART_1_PARITY_TYPE << UART_1_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_1.c ****     #endif /* End UART_1_PARITY_TYPE_SW */
 160:Generated_Source\PSoC5/UART_1.c **** }
 119              		.loc 1 160 0
 120 0026 00BF     		nop
 121 0028 80BD     		pop	{r7, pc}
 122              	.L7:
 123 002a 00BF     		.align	2
 124              	.L6:
 125 002c 00000000 		.word	UART_1_TXISR
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 6


 126 0030 20640040 		.word	1073767456
 127 0034 30640040 		.word	1073767472
 128 0038 83640040 		.word	1073767555
 129              		.cfi_endproc
 130              	.LFE1:
 131              		.size	UART_1_Init, .-UART_1_Init
 132              		.section	.text.UART_1_Enable,"ax",%progbits
 133              		.align	2
 134              		.global	UART_1_Enable
 135              		.thumb
 136              		.thumb_func
 137              		.type	UART_1_Enable, %function
 138              	UART_1_Enable:
 139              	.LFB2:
 161:Generated_Source\PSoC5/UART_1.c **** 
 162:Generated_Source\PSoC5/UART_1.c **** 
 163:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Enable
 165:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_1.c **** *
 167:Generated_Source\PSoC5/UART_1.c **** * Summary:
 168:Generated_Source\PSoC5/UART_1.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_1.c **** *  to call UART_1_Enable() because the UART_1_Start() API
 170:Generated_Source\PSoC5/UART_1.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_1.c **** *  operation.
 172:Generated_Source\PSoC5/UART_1.c **** 
 173:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_1.c **** *  None.
 175:Generated_Source\PSoC5/UART_1.c **** *
 176:Generated_Source\PSoC5/UART_1.c **** * Return:
 177:Generated_Source\PSoC5/UART_1.c **** *  None.
 178:Generated_Source\PSoC5/UART_1.c **** *
 179:Generated_Source\PSoC5/UART_1.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_1.c **** *  UART_1_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_1.c **** *
 182:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_1.c **** void UART_1_Enable(void) 
 184:Generated_Source\PSoC5/UART_1.c **** {
 140              		.loc 1 184 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 8
 143              		@ frame_needed = 1, uses_anonymous_args = 0
 144 0000 80B5     		push	{r7, lr}
 145              		.cfi_def_cfa_offset 8
 146              		.cfi_offset 7, -8
 147              		.cfi_offset 14, -4
 148 0002 82B0     		sub	sp, sp, #8
 149              		.cfi_def_cfa_offset 16
 150 0004 00AF     		add	r7, sp, #0
 151              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 152              		.loc 1 186 0
 153 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 154 000a 0346     		mov	r3, r0
 155 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 7


 188:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_1.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 191:Generated_Source\PSoC5/UART_1.c **** 
 192:Generated_Source\PSoC5/UART_1.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  |= UART_1_INT_ENABLE;
 194:Generated_Source\PSoC5/UART_1.c **** 
 195:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableRxInt();
 197:Generated_Source\PSoC5/UART_1.c **** 
 198:Generated_Source\PSoC5/UART_1.c ****             #if (UART_1_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_1.c ****             #endif /* (UART_1_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_1.c **** 
 204:Generated_Source\PSoC5/UART_1.c ****     #if(UART_1_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_1.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG |= UART_1_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_1.c **** 
 210:Generated_Source\PSoC5/UART_1.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG |= UART_1_INT_ENABLE;
 156              		.loc 1 211 0
 157 000e 0C4A     		ldr	r2, .L9
 158 0010 0B4B     		ldr	r3, .L9
 159 0012 1B78     		ldrb	r3, [r3]
 160 0014 DBB2     		uxtb	r3, r3
 161 0016 43F01003 		orr	r3, r3, #16
 162 001a DBB2     		uxtb	r3, r3
 163 001c 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_1.c ****             UART_1_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 164              		.loc 1 213 0
 165 001e 094B     		ldr	r3, .L9+4
 166 0020 0122     		movs	r2, #1
 167 0022 1A60     		str	r2, [r3]
 214:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 168              		.loc 1 214 0
 169 0024 084B     		ldr	r3, .L9+8
 170 0026 0122     		movs	r2, #1
 171 0028 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_1.c ****      #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_1.c **** 
 218:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Start();  /* Enable the clock */
 172              		.loc 1 219 0
 173 002a FFF7FEFF 		bl	UART_1_IntClock_Start
 220:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_1.c **** 
 222:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 174              		.loc 1 222 0
 175 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 176 0030 1846     		mov	r0, r3
 177 0032 FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 8


 223:Generated_Source\PSoC5/UART_1.c **** }
 178              		.loc 1 223 0
 179 0036 00BF     		nop
 180 0038 0837     		adds	r7, r7, #8
 181              		.cfi_def_cfa_offset 8
 182 003a BD46     		mov	sp, r7
 183              		.cfi_def_cfa_register 13
 184              		@ sp needed
 185 003c 80BD     		pop	{r7, pc}
 186              	.L10:
 187 003e 00BF     		.align	2
 188              	.L9:
 189 0040 93640040 		.word	1073767571
 190 0044 80E200E0 		.word	-536812928
 191 0048 00E100E0 		.word	-536813312
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	UART_1_Enable, .-UART_1_Enable
 195              		.section	.text.UART_1_Stop,"ax",%progbits
 196              		.align	2
 197              		.global	UART_1_Stop
 198              		.thumb
 199              		.thumb_func
 200              		.type	UART_1_Stop, %function
 201              	UART_1_Stop:
 202              	.LFB3:
 224:Generated_Source\PSoC5/UART_1.c **** 
 225:Generated_Source\PSoC5/UART_1.c **** 
 226:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 227:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_Stop
 228:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_1.c **** *
 230:Generated_Source\PSoC5/UART_1.c **** * Summary:
 231:Generated_Source\PSoC5/UART_1.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_1.c **** *
 233:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_1.c **** *  None.
 235:Generated_Source\PSoC5/UART_1.c **** *
 236:Generated_Source\PSoC5/UART_1.c **** * Return:
 237:Generated_Source\PSoC5/UART_1.c **** *  None.
 238:Generated_Source\PSoC5/UART_1.c **** *
 239:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_1.c **** void UART_1_Stop(void) 
 241:Generated_Source\PSoC5/UART_1.c **** {
 203              		.loc 1 241 0
 204              		.cfi_startproc
 205              		@ args = 0, pretend = 0, frame = 8
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 82B0     		sub	sp, sp, #8
 212              		.cfi_def_cfa_offset 16
 213 0004 00AF     		add	r7, sp, #0
 214              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/UART_1.c ****     uint8 enableInterrupts;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 9


 243:Generated_Source\PSoC5/UART_1.c ****     enableInterrupts = CyEnterCriticalSection();
 215              		.loc 1 243 0
 216 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 217 000a 0346     		mov	r3, r0
 218 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/UART_1.c **** 
 245:Generated_Source\PSoC5/UART_1.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 248:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_1.c **** 
 250:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_1.c ****         #if(!UART_1_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXBITCTR_CONTROL_REG &= (uint8) ~UART_1_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_1.c ****         #endif /* (!UART_1_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_1.c **** 
 256:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_1.c ****         UART_1_IntClock_Stop();   /* Disable the clock */
 219              		.loc 1 257 0
 220 000e FFF7FEFF 		bl	UART_1_IntClock_Stop
 258:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_1.c **** 
 260:Generated_Source\PSoC5/UART_1.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_ACTL_REG  &= (uint8) ~UART_1_INT_ENABLE;
 263:Generated_Source\PSoC5/UART_1.c **** 
 264:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableRxInt();
 266:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_ENABLED || UART_1_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_1.c **** 
 269:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_ACTL_REG &= (uint8) ~UART_1_INT_ENABLE;
 221              		.loc 1 270 0
 222 0012 094A     		ldr	r2, .L12
 223 0014 084B     		ldr	r3, .L12
 224 0016 1B78     		ldrb	r3, [r3]
 225 0018 DBB2     		uxtb	r3, r3
 226 001a 23F01003 		bic	r3, r3, #16
 227 001e DBB2     		uxtb	r3, r3
 228 0020 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_1.c **** 
 272:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 229              		.loc 1 273 0
 230 0022 064B     		ldr	r3, .L12+4
 231 0024 0122     		movs	r2, #1
 232 0026 1A60     		str	r2, [r3]
 274:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_1.c **** 
 277:Generated_Source\PSoC5/UART_1.c ****     CyExitCriticalSection(enableInterrupts);
 233              		.loc 1 277 0
 234 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 235 002a 1846     		mov	r0, r3
 236 002c FFF7FEFF 		bl	CyExitCriticalSection
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 10


 278:Generated_Source\PSoC5/UART_1.c **** }
 237              		.loc 1 278 0
 238 0030 00BF     		nop
 239 0032 0837     		adds	r7, r7, #8
 240              		.cfi_def_cfa_offset 8
 241 0034 BD46     		mov	sp, r7
 242              		.cfi_def_cfa_register 13
 243              		@ sp needed
 244 0036 80BD     		pop	{r7, pc}
 245              	.L13:
 246              		.align	2
 247              	.L12:
 248 0038 93640040 		.word	1073767571
 249 003c 80E100E0 		.word	-536813184
 250              		.cfi_endproc
 251              	.LFE3:
 252              		.size	UART_1_Stop, .-UART_1_Stop
 253              		.section	.text.UART_1_ReadControlRegister,"ax",%progbits
 254              		.align	2
 255              		.global	UART_1_ReadControlRegister
 256              		.thumb
 257              		.thumb_func
 258              		.type	UART_1_ReadControlRegister, %function
 259              	UART_1_ReadControlRegister:
 260              	.LFB4:
 279:Generated_Source\PSoC5/UART_1.c **** 
 280:Generated_Source\PSoC5/UART_1.c **** 
 281:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_ReadControlRegister
 283:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_1.c **** *
 285:Generated_Source\PSoC5/UART_1.c **** * Summary:
 286:Generated_Source\PSoC5/UART_1.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_1.c **** *
 288:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_1.c **** *  None.
 290:Generated_Source\PSoC5/UART_1.c **** *
 291:Generated_Source\PSoC5/UART_1.c **** * Return:
 292:Generated_Source\PSoC5/UART_1.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_1.c **** *
 294:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_1.c **** uint8 UART_1_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_1.c **** {
 261              		.loc 1 296 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 0000 80B4     		push	{r7}
 267              		.cfi_def_cfa_offset 4
 268              		.cfi_offset 7, -4
 269 0002 00AF     		add	r7, sp, #0
 270              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_1.c ****         return(0u);
 271              		.loc 1 298 0
 272 0004 0023     		movs	r3, #0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 11


 299:Generated_Source\PSoC5/UART_1.c ****     #else
 300:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_1.c **** }
 273              		.loc 1 302 0
 274 0006 1846     		mov	r0, r3
 275 0008 BD46     		mov	sp, r7
 276              		.cfi_def_cfa_register 13
 277              		@ sp needed
 278 000a 80BC     		pop	{r7}
 279              		.cfi_restore 7
 280              		.cfi_def_cfa_offset 0
 281 000c 7047     		bx	lr
 282              		.cfi_endproc
 283              	.LFE4:
 284              		.size	UART_1_ReadControlRegister, .-UART_1_ReadControlRegister
 285 000e 00BF     		.section	.text.UART_1_WriteControlRegister,"ax",%progbits
 286              		.align	2
 287              		.global	UART_1_WriteControlRegister
 288              		.thumb
 289              		.thumb_func
 290              		.type	UART_1_WriteControlRegister, %function
 291              	UART_1_WriteControlRegister:
 292              	.LFB5:
 303:Generated_Source\PSoC5/UART_1.c **** 
 304:Generated_Source\PSoC5/UART_1.c **** 
 305:Generated_Source\PSoC5/UART_1.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_1.c **** * Function Name: UART_1_WriteControlRegister
 307:Generated_Source\PSoC5/UART_1.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_1.c **** *
 309:Generated_Source\PSoC5/UART_1.c **** * Summary:
 310:Generated_Source\PSoC5/UART_1.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_1.c **** *
 312:Generated_Source\PSoC5/UART_1.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_1.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_1.c **** *
 315:Generated_Source\PSoC5/UART_1.c **** * Return:
 316:Generated_Source\PSoC5/UART_1.c **** *  None.
 317:Generated_Source\PSoC5/UART_1.c **** *
 318:Generated_Source\PSoC5/UART_1.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_1.c **** void  UART_1_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_1.c **** {
 293              		.loc 1 320 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 8
 296              		@ frame_needed = 1, uses_anonymous_args = 0
 297              		@ link register save eliminated.
 298 0000 80B4     		push	{r7}
 299              		.cfi_def_cfa_offset 4
 300              		.cfi_offset 7, -4
 301 0002 83B0     		sub	sp, sp, #12
 302              		.cfi_def_cfa_offset 16
 303 0004 00AF     		add	r7, sp, #0
 304              		.cfi_def_cfa_register 7
 305 0006 0346     		mov	r3, r0
 306 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_CONTROL_REG_REMOVED)
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 12


 322:Generated_Source\PSoC5/UART_1.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_1.c ****         {
 324:Generated_Source\PSoC5/UART_1.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_1.c ****         }
 326:Generated_Source\PSoC5/UART_1.c ****     #else
 327:Generated_Source\PSoC5/UART_1.c ****        UART_1_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_1.c **** }
 307              		.loc 1 329 0
 308 000a 00BF     		nop
 309 000c 0C37     		adds	r7, r7, #12
 310              		.cfi_def_cfa_offset 4
 311 000e BD46     		mov	sp, r7
 312              		.cfi_def_cfa_register 13
 313              		@ sp needed
 314 0010 80BC     		pop	{r7}
 315              		.cfi_restore 7
 316              		.cfi_def_cfa_offset 0
 317 0012 7047     		bx	lr
 318              		.cfi_endproc
 319              	.LFE5:
 320              		.size	UART_1_WriteControlRegister, .-UART_1_WriteControlRegister
 321              		.section	.text.UART_1_SetTxInterruptMode,"ax",%progbits
 322              		.align	2
 323              		.global	UART_1_SetTxInterruptMode
 324              		.thumb
 325              		.thumb_func
 326              		.type	UART_1_SetTxInterruptMode, %function
 327              	UART_1_SetTxInterruptMode:
 328              	.LFB6:
 330:Generated_Source\PSoC5/UART_1.c **** 
 331:Generated_Source\PSoC5/UART_1.c **** 
 332:Generated_Source\PSoC5/UART_1.c **** #if(UART_1_RX_ENABLED || UART_1_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_1.c ****     *
 337:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_1.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_1.c ****     *
 340:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_1.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_1.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_1.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_1.c ****     *
 352:Generated_Source\PSoC5/UART_1.c ****     * Return:
 353:Generated_Source\PSoC5/UART_1.c ****     *  None.
 354:Generated_Source\PSoC5/UART_1.c ****     *
 355:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 13


 357:Generated_Source\PSoC5/UART_1.c ****     *
 358:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_1.c ****     {
 361:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXSTATUS_MASK_REG  = intSrc;
 362:Generated_Source\PSoC5/UART_1.c ****     }
 363:Generated_Source\PSoC5/UART_1.c **** 
 364:Generated_Source\PSoC5/UART_1.c **** 
 365:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxData
 367:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_1.c ****     *
 369:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_1.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_1.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_1.c ****     *
 373:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_1.c ****     *  None.
 375:Generated_Source\PSoC5/UART_1.c ****     *
 376:Generated_Source\PSoC5/UART_1.c ****     * Return:
 377:Generated_Source\PSoC5/UART_1.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_1.c ****     *
 379:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 381:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_1.c ****     *
 388:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_1.c ****     *  No.
 390:Generated_Source\PSoC5/UART_1.c ****     *
 391:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_1.c ****     {
 394:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_1.c **** 
 396:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_1.c **** 
 398:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_1.c **** 
 401:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 403:Generated_Source\PSoC5/UART_1.c **** 
 404:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 405:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_1.c **** 
 407:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_1.c ****         {
 409:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_1.c **** 
 412:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_1.c ****             {
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 14


 414:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_1.c ****             }
 416:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_1.c **** 
 419:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_1.c ****             {
 421:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_1.c ****                 #if ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 426:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_1.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_1.c ****                             */
 430:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_1.c ****                         }
 432:Generated_Source\PSoC5/UART_1.c ****                     #else
 433:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG  |= UART_1_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_1.c ****                 #endif /* ((UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u)) */
 436:Generated_Source\PSoC5/UART_1.c ****             }
 437:Generated_Source\PSoC5/UART_1.c ****         }
 438:Generated_Source\PSoC5/UART_1.c ****         else
 439:Generated_Source\PSoC5/UART_1.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_1.c ****         }
 442:Generated_Source\PSoC5/UART_1.c **** 
 443:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 444:Generated_Source\PSoC5/UART_1.c **** 
 445:Generated_Source\PSoC5/UART_1.c ****     #else
 446:Generated_Source\PSoC5/UART_1.c **** 
 447:Generated_Source\PSoC5/UART_1.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_1.c ****         rxData = UART_1_RXDATA_REG;
 449:Generated_Source\PSoC5/UART_1.c **** 
 450:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_1.c **** 
 452:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 453:Generated_Source\PSoC5/UART_1.c ****     }
 454:Generated_Source\PSoC5/UART_1.c **** 
 455:Generated_Source\PSoC5/UART_1.c **** 
 456:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadRxStatus
 458:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_1.c ****     *
 460:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_1.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_1.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_1.c ****     *
 464:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_1.c ****     *  None.
 466:Generated_Source\PSoC5/UART_1.c ****     *
 467:Generated_Source\PSoC5/UART_1.c ****     * Return:
 468:Generated_Source\PSoC5/UART_1.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_1.c ****     *
 470:Generated_Source\PSoC5/UART_1.c ****     * Side Effect:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 15


 471:Generated_Source\PSoC5/UART_1.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_1.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_1.c ****     *
 476:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_1.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_1.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_1.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_1.c ****     *
 484:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_1.c ****     {
 487:Generated_Source\PSoC5/UART_1.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_1.c **** 
 489:Generated_Source\PSoC5/UART_1.c ****         status = UART_1_RXSTATUS_REG & UART_1_RX_HW_MASK;
 490:Generated_Source\PSoC5/UART_1.c **** 
 491:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_1.c ****         {
 494:Generated_Source\PSoC5/UART_1.c ****             status |= UART_1_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_1.c ****         }
 497:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_1.c **** 
 499:Generated_Source\PSoC5/UART_1.c ****         return(status);
 500:Generated_Source\PSoC5/UART_1.c ****     }
 501:Generated_Source\PSoC5/UART_1.c **** 
 502:Generated_Source\PSoC5/UART_1.c **** 
 503:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetChar
 505:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_1.c ****     *
 507:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_1.c ****     *  Returns the last received byte of data. UART_1_GetChar() is
 509:Generated_Source\PSoC5/UART_1.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_1.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_1.c ****     *
 512:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_1.c ****     *  None.
 514:Generated_Source\PSoC5/UART_1.c ****     *
 515:Generated_Source\PSoC5/UART_1.c ****     * Return:
 516:Generated_Source\PSoC5/UART_1.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_1.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_1.c ****     *
 519:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_1.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_1.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 16


 528:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_1.c ****     *  No.
 530:Generated_Source\PSoC5/UART_1.c ****     *
 531:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetChar(void) 
 533:Generated_Source\PSoC5/UART_1.c ****     {
 534:Generated_Source\PSoC5/UART_1.c ****         uint8 rxData = 0u;
 535:Generated_Source\PSoC5/UART_1.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_1.c **** 
 537:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_1.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_1.c **** 
 541:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 543:Generated_Source\PSoC5/UART_1.c **** 
 544:Generated_Source\PSoC5/UART_1.c ****         locRxBufferRead  = UART_1_rxBufferRead;
 545:Generated_Source\PSoC5/UART_1.c ****         locRxBufferWrite = UART_1_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_1.c **** 
 547:Generated_Source\PSoC5/UART_1.c ****         if( (UART_1_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_1.c ****         {
 549:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_1.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_1.c ****             if(locRxBufferRead >= UART_1_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_1.c ****             {
 553:Generated_Source\PSoC5/UART_1.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_1.c ****             }
 555:Generated_Source\PSoC5/UART_1.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_1.c ****             UART_1_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_1.c **** 
 558:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_1.c ****             {
 560:Generated_Source\PSoC5/UART_1.c ****                 UART_1_rxBufferLoopDetect = 0u;
 561:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_RX_INTERRUPT_ENABLED) && (UART_1_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_1.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_1.c ****                     #if( UART_1_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_1.c ****                         if((UART_1_CONTROL_REG & UART_1_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_1.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_1.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_1.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_1.c ****                             */
 569:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_1.c ****                         }
 571:Generated_Source\PSoC5/UART_1.c ****                     #else
 572:Generated_Source\PSoC5/UART_1.c ****                         UART_1_RXSTATUS_MASK_REG |= UART_1_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_1.c ****                     #endif /* end UART_1_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_1.c ****                 #endif /* UART_1_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_1.c ****             }
 576:Generated_Source\PSoC5/UART_1.c **** 
 577:Generated_Source\PSoC5/UART_1.c ****         }
 578:Generated_Source\PSoC5/UART_1.c ****         else
 579:Generated_Source\PSoC5/UART_1.c ****         {   rxStatus = UART_1_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_1.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_1.c ****                 rxData = UART_1_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_1.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_1.c ****                 if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 17


 585:Generated_Source\PSoC5/UART_1.c ****                                 UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_1.c ****                 {
 587:Generated_Source\PSoC5/UART_1.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_1.c ****                 }
 589:Generated_Source\PSoC5/UART_1.c ****             }
 590:Generated_Source\PSoC5/UART_1.c ****         }
 591:Generated_Source\PSoC5/UART_1.c **** 
 592:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 593:Generated_Source\PSoC5/UART_1.c **** 
 594:Generated_Source\PSoC5/UART_1.c ****     #else
 595:Generated_Source\PSoC5/UART_1.c **** 
 596:Generated_Source\PSoC5/UART_1.c ****         rxStatus =UART_1_RXSTATUS_REG;
 597:Generated_Source\PSoC5/UART_1.c ****         if((rxStatus & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u)
 598:Generated_Source\PSoC5/UART_1.c ****         {
 599:Generated_Source\PSoC5/UART_1.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_1.c ****             rxData = UART_1_RXDATA_REG;
 601:Generated_Source\PSoC5/UART_1.c **** 
 602:Generated_Source\PSoC5/UART_1.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_1.c ****             if((rxStatus & (UART_1_RX_STS_BREAK | UART_1_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_1.c ****                             UART_1_RX_STS_STOP_ERROR | UART_1_RX_STS_OVERRUN)) != 0u)
 605:Generated_Source\PSoC5/UART_1.c ****             {
 606:Generated_Source\PSoC5/UART_1.c ****                 rxData = 0u;
 607:Generated_Source\PSoC5/UART_1.c ****             }
 608:Generated_Source\PSoC5/UART_1.c ****         }
 609:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_1.c **** 
 611:Generated_Source\PSoC5/UART_1.c ****         return(rxData);
 612:Generated_Source\PSoC5/UART_1.c ****     }
 613:Generated_Source\PSoC5/UART_1.c **** 
 614:Generated_Source\PSoC5/UART_1.c **** 
 615:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetByte
 617:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_1.c ****     *
 619:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_1.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_1.c ****     *  condition.
 622:Generated_Source\PSoC5/UART_1.c ****     *
 623:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_1.c ****     *  None.
 625:Generated_Source\PSoC5/UART_1.c ****     *
 626:Generated_Source\PSoC5/UART_1.c ****     * Return:
 627:Generated_Source\PSoC5/UART_1.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_1.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_1.c ****     *
 630:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_1.c ****     *  No.
 632:Generated_Source\PSoC5/UART_1.c ****     *
 633:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetByte(void) 
 635:Generated_Source\PSoC5/UART_1.c ****     {
 636:Generated_Source\PSoC5/UART_1.c ****         
 637:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_1.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 641:Generated_Source\PSoC5/UART_1.c ****         locErrorStatus = (uint16)UART_1_errorStatus;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 18


 642:Generated_Source\PSoC5/UART_1.c ****         UART_1_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 644:Generated_Source\PSoC5/UART_1.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_1_ReadRxData() );
 645:Generated_Source\PSoC5/UART_1.c ****     #else
 646:Generated_Source\PSoC5/UART_1.c ****         return ( ((uint16)UART_1_ReadRxStatus() << 8u) | UART_1_ReadRxData() );
 647:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_1.c ****         
 649:Generated_Source\PSoC5/UART_1.c ****     }
 650:Generated_Source\PSoC5/UART_1.c **** 
 651:Generated_Source\PSoC5/UART_1.c **** 
 652:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_1.c ****     *
 656:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_1.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_1.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_1.c ****     *    account.
 663:Generated_Source\PSoC5/UART_1.c ****     *
 664:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_1.c ****     *  None.
 666:Generated_Source\PSoC5/UART_1.c ****     *
 667:Generated_Source\PSoC5/UART_1.c ****     * Return:
 668:Generated_Source\PSoC5/UART_1.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_1.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_1.c ****     *
 671:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_1.c ****     *
 676:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_1.c ****     *  No.
 678:Generated_Source\PSoC5/UART_1.c ****     *
 679:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_1.c ****     *
 682:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_1.c ****                                                             
 685:Generated_Source\PSoC5/UART_1.c ****     {
 686:Generated_Source\PSoC5/UART_1.c ****         uint8 size;
 687:Generated_Source\PSoC5/UART_1.c **** 
 688:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_1.c **** 
 690:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 692:Generated_Source\PSoC5/UART_1.c **** 
 693:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_rxBufferRead == UART_1_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_1.c ****         {
 695:Generated_Source\PSoC5/UART_1.c ****             if(UART_1_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_1.c ****             {
 697:Generated_Source\PSoC5/UART_1.c ****                 size = UART_1_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_1.c ****             }
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 19


 699:Generated_Source\PSoC5/UART_1.c ****             else
 700:Generated_Source\PSoC5/UART_1.c ****             {
 701:Generated_Source\PSoC5/UART_1.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_1.c ****             }
 703:Generated_Source\PSoC5/UART_1.c ****         }
 704:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_rxBufferRead < UART_1_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_1.c ****         {
 706:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_rxBufferWrite - UART_1_rxBufferRead);
 707:Generated_Source\PSoC5/UART_1.c ****         }
 708:Generated_Source\PSoC5/UART_1.c ****         else
 709:Generated_Source\PSoC5/UART_1.c ****         {
 710:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_RX_BUFFER_SIZE - UART_1_rxBufferRead) + UART_1_rxBufferWrite;
 711:Generated_Source\PSoC5/UART_1.c ****         }
 712:Generated_Source\PSoC5/UART_1.c **** 
 713:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 714:Generated_Source\PSoC5/UART_1.c **** 
 715:Generated_Source\PSoC5/UART_1.c ****     #else
 716:Generated_Source\PSoC5/UART_1.c **** 
 717:Generated_Source\PSoC5/UART_1.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_1.c ****         size = ((UART_1_RXSTATUS_REG & UART_1_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 719:Generated_Source\PSoC5/UART_1.c **** 
 720:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_1.c **** 
 722:Generated_Source\PSoC5/UART_1.c ****         return(size);
 723:Generated_Source\PSoC5/UART_1.c ****     }
 724:Generated_Source\PSoC5/UART_1.c **** 
 725:Generated_Source\PSoC5/UART_1.c **** 
 726:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_1.c ****     *
 730:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_1.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_1.c ****     *
 733:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_1.c ****     *  None.
 735:Generated_Source\PSoC5/UART_1.c ****     *
 736:Generated_Source\PSoC5/UART_1.c ****     * Return:
 737:Generated_Source\PSoC5/UART_1.c ****     *  None.
 738:Generated_Source\PSoC5/UART_1.c ****     *
 739:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_1.c ****     *
 745:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_1.c ****     *  No.
 747:Generated_Source\PSoC5/UART_1.c ****     *
 748:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_1.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_1.c ****     *
 753:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_1.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 20


 756:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 757:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_1.c ****     {
 759:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_1.c **** 
 761:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 763:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG |= (uint8)  UART_1_RX_FIFO_CLR;
 764:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXDATA_AUX_CTL_REG &= (uint8) ~UART_1_RX_FIFO_CLR;
 765:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 766:Generated_Source\PSoC5/UART_1.c **** 
 767:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_1.c **** 
 769:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableRxInt();
 771:Generated_Source\PSoC5/UART_1.c **** 
 772:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_1.c ****         UART_1_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_1.c **** 
 777:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableRxInt();
 778:Generated_Source\PSoC5/UART_1.c **** 
 779:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_1.c **** 
 781:Generated_Source\PSoC5/UART_1.c ****     }
 782:Generated_Source\PSoC5/UART_1.c **** 
 783:Generated_Source\PSoC5/UART_1.c **** 
 784:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_1.c ****     *
 788:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_1.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_1.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_1.c ****     *
 792:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_1.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_1.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_1.c ****     *  UART_1__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_1.c ****     *
 804:Generated_Source\PSoC5/UART_1.c ****     * Return:
 805:Generated_Source\PSoC5/UART_1.c ****     *  None.
 806:Generated_Source\PSoC5/UART_1.c ****     *
 807:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_1.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_1.c ****     *
 812:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 21


 813:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_1.c ****                                                         
 815:Generated_Source\PSoC5/UART_1.c ****     {
 816:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_1.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_1.c ****                 {
 820:Generated_Source\PSoC5/UART_1.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_1.c ****                 }
 822:Generated_Source\PSoC5/UART_1.c ****             #else /* UART_1_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_1.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl = UART_1_CONTROL_REG & (uint8)~UART_1_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_1.c ****                 tmpCtrl |= (uint8)(addressMode << UART_1_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_1.c ****                 UART_1_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_1.c **** 
 828:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_1.c ****                    (UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_1.c ****                     UART_1_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_RXBUFFERSIZE > UART_1_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_1.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_1.c ****             {
 837:Generated_Source\PSoC5/UART_1.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_1.c ****             }
 839:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_1.c ****     }
 841:Generated_Source\PSoC5/UART_1.c **** 
 842:Generated_Source\PSoC5/UART_1.c **** 
 843:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress1
 845:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_1.c ****     *
 847:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_1.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_1.c ****     *
 850:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_1.c ****     *
 853:Generated_Source\PSoC5/UART_1.c ****     * Return:
 854:Generated_Source\PSoC5/UART_1.c ****     *  None.
 855:Generated_Source\PSoC5/UART_1.c ****     *
 856:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_1.c ****     {
 859:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS1_REG = address;
 860:Generated_Source\PSoC5/UART_1.c ****     }
 861:Generated_Source\PSoC5/UART_1.c **** 
 862:Generated_Source\PSoC5/UART_1.c **** 
 863:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetRxAddress2
 865:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_1.c ****     *
 867:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_1.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 22


 870:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_1.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_1.c ****     *
 873:Generated_Source\PSoC5/UART_1.c ****     * Return:
 874:Generated_Source\PSoC5/UART_1.c ****     *  None.
 875:Generated_Source\PSoC5/UART_1.c ****     *
 876:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_1.c ****     {
 879:Generated_Source\PSoC5/UART_1.c ****         UART_1_RXADDRESS2_REG = address;
 880:Generated_Source\PSoC5/UART_1.c ****     }
 881:Generated_Source\PSoC5/UART_1.c **** 
 882:Generated_Source\PSoC5/UART_1.c **** #endif  /* UART_1_RX_ENABLED || UART_1_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_1.c **** 
 884:Generated_Source\PSoC5/UART_1.c **** 
 885:Generated_Source\PSoC5/UART_1.c **** #if( (UART_1_TX_ENABLED) || (UART_1_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_1.c ****     *
 890:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_1.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_1.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_1.c ****     *
 894:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_1.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_1.c ****     *
 901:Generated_Source\PSoC5/UART_1.c ****     * Return:
 902:Generated_Source\PSoC5/UART_1.c ****     *  None.
 903:Generated_Source\PSoC5/UART_1.c ****     *
 904:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_1.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_1.c ****     *
 907:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_1.c ****     {
 329              		.loc 1 909 0
 330              		.cfi_startproc
 331              		@ args = 0, pretend = 0, frame = 8
 332              		@ frame_needed = 1, uses_anonymous_args = 0
 333              		@ link register save eliminated.
 334 0000 80B4     		push	{r7}
 335              		.cfi_def_cfa_offset 4
 336              		.cfi_offset 7, -4
 337 0002 83B0     		sub	sp, sp, #12
 338              		.cfi_def_cfa_offset 16
 339 0004 00AF     		add	r7, sp, #0
 340              		.cfi_def_cfa_register 7
 341 0006 0346     		mov	r3, r0
 342 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXSTATUS_MASK_REG = intSrc;
 343              		.loc 1 910 0
 344 000a 044A     		ldr	r2, .L18
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 23


 345 000c FB79     		ldrb	r3, [r7, #7]
 346 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/UART_1.c ****     }
 347              		.loc 1 911 0
 348 0010 00BF     		nop
 349 0012 0C37     		adds	r7, r7, #12
 350              		.cfi_def_cfa_offset 4
 351 0014 BD46     		mov	sp, r7
 352              		.cfi_def_cfa_register 13
 353              		@ sp needed
 354 0016 80BC     		pop	{r7}
 355              		.cfi_restore 7
 356              		.cfi_def_cfa_offset 0
 357 0018 7047     		bx	lr
 358              	.L19:
 359 001a 00BF     		.align	2
 360              	.L18:
 361 001c 83640040 		.word	1073767555
 362              		.cfi_endproc
 363              	.LFE6:
 364              		.size	UART_1_SetTxInterruptMode, .-UART_1_SetTxInterruptMode
 365              		.section	.text.UART_1_WriteTxData,"ax",%progbits
 366              		.align	2
 367              		.global	UART_1_WriteTxData
 368              		.thumb
 369              		.thumb_func
 370              		.type	UART_1_WriteTxData, %function
 371              	UART_1_WriteTxData:
 372              	.LFB7:
 912:Generated_Source\PSoC5/UART_1.c **** 
 913:Generated_Source\PSoC5/UART_1.c **** 
 914:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_WriteTxData
 916:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_1.c ****     *
 918:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_1.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_1.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_1.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_1.c ****     *
 923:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_1.c ****     *
 926:Generated_Source\PSoC5/UART_1.c ****     * Return:
 927:Generated_Source\PSoC5/UART_1.c ****     * None.
 928:Generated_Source\PSoC5/UART_1.c ****     *
 929:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_1.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_1.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_1.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_1.c ****     *
 938:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_1.c ****     *  No.
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 24


 940:Generated_Source\PSoC5/UART_1.c ****     *
 941:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_1.c ****     void UART_1_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_1.c ****     {
 373              		.loc 1 943 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 0000 80B4     		push	{r7}
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 0002 83B0     		sub	sp, sp, #12
 382              		.cfi_def_cfa_offset 16
 383 0004 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 385 0006 0346     		mov	r3, r0
 386 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 387              		.loc 1 945 0
 388 000a 1A4B     		ldr	r3, .L26
 389 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 390 000e 002B     		cmp	r3, #0
 391 0010 2BD0     		beq	.L25
 946:Generated_Source\PSoC5/UART_1.c ****         {
 947:Generated_Source\PSoC5/UART_1.c ****         #if (UART_1_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_1.c **** 
 949:Generated_Source\PSoC5/UART_1.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
 392              		.loc 1 950 0
 393 0012 194B     		ldr	r3, .L26+4
 394 0014 0122     		movs	r2, #1
 395 0016 1A60     		str	r2, [r3]
 951:Generated_Source\PSoC5/UART_1.c **** 
 952:Generated_Source\PSoC5/UART_1.c ****             if( (UART_1_txBufferRead == UART_1_txBufferWrite) &&
 396              		.loc 1 952 0
 397 0018 184B     		ldr	r3, .L26+8
 398 001a 1B88     		ldrh	r3, [r3]	@ movhi
 399 001c 9AB2     		uxth	r2, r3
 400 001e 184B     		ldr	r3, .L26+12
 401 0020 1B88     		ldrh	r3, [r3]
 402 0022 9A42     		cmp	r2, r3
 403 0024 0AD1     		bne	.L22
 953:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 404              		.loc 1 953 0 discriminator 1
 405 0026 174B     		ldr	r3, .L26+16
 406 0028 1B78     		ldrb	r3, [r3]
 407 002a DBB2     		uxtb	r3, r3
 408 002c 03F00403 		and	r3, r3, #4
 952:Generated_Source\PSoC5/UART_1.c ****                 ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 409              		.loc 1 952 0 discriminator 1
 410 0030 002B     		cmp	r3, #0
 411 0032 03D1     		bne	.L22
 954:Generated_Source\PSoC5/UART_1.c ****             {
 955:Generated_Source\PSoC5/UART_1.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = txDataByte;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 25


 412              		.loc 1 956 0
 413 0034 144A     		ldr	r2, .L26+20
 414 0036 FB79     		ldrb	r3, [r7, #7]
 415 0038 1370     		strb	r3, [r2]
 416 003a 13E0     		b	.L23
 417              	.L22:
 957:Generated_Source\PSoC5/UART_1.c ****             }
 958:Generated_Source\PSoC5/UART_1.c ****             else
 959:Generated_Source\PSoC5/UART_1.c ****             {
 960:Generated_Source\PSoC5/UART_1.c ****                 if(UART_1_txBufferWrite >= UART_1_TX_BUFFER_SIZE)
 418              		.loc 1 960 0
 419 003c 104B     		ldr	r3, .L26+12
 420 003e 1B88     		ldrh	r3, [r3]
 421 0040 B3F5806F 		cmp	r3, #1024
 422 0044 02D3     		bcc	.L24
 961:Generated_Source\PSoC5/UART_1.c ****                 {
 962:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite = 0u;
 423              		.loc 1 962 0
 424 0046 0E4B     		ldr	r3, .L26+12
 425 0048 0022     		movs	r2, #0
 426 004a 1A80     		strh	r2, [r3]	@ movhi
 427              	.L24:
 963:Generated_Source\PSoC5/UART_1.c ****                 }
 964:Generated_Source\PSoC5/UART_1.c **** 
 965:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBuffer[UART_1_txBufferWrite] = txDataByte;
 428              		.loc 1 965 0
 429 004c 0C4B     		ldr	r3, .L26+12
 430 004e 1B88     		ldrh	r3, [r3]
 431 0050 1946     		mov	r1, r3
 432 0052 0E4A     		ldr	r2, .L26+24
 433 0054 FB79     		ldrb	r3, [r7, #7]
 434 0056 5354     		strb	r3, [r2, r1]
 966:Generated_Source\PSoC5/UART_1.c **** 
 967:Generated_Source\PSoC5/UART_1.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_1.c ****                 UART_1_txBufferWrite++;
 435              		.loc 1 968 0
 436 0058 094B     		ldr	r3, .L26+12
 437 005a 1B88     		ldrh	r3, [r3]
 438 005c 0133     		adds	r3, r3, #1
 439 005e 9AB2     		uxth	r2, r3
 440 0060 074B     		ldr	r3, .L26+12
 441 0062 1A80     		strh	r2, [r3]	@ movhi
 442              	.L23:
 969:Generated_Source\PSoC5/UART_1.c ****             }
 970:Generated_Source\PSoC5/UART_1.c **** 
 971:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
 443              		.loc 1 971 0
 444 0064 0A4B     		ldr	r3, .L26+28
 445 0066 0122     		movs	r2, #1
 446 0068 1A60     		str	r2, [r3]
 447              	.L25:
 972:Generated_Source\PSoC5/UART_1.c **** 
 973:Generated_Source\PSoC5/UART_1.c ****         #else
 974:Generated_Source\PSoC5/UART_1.c **** 
 975:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART_1.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 26


 978:Generated_Source\PSoC5/UART_1.c ****         #endif /*(UART_1_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_1.c ****         }
 980:Generated_Source\PSoC5/UART_1.c ****     }
 448              		.loc 1 980 0
 449 006a 00BF     		nop
 450 006c 0C37     		adds	r7, r7, #12
 451              		.cfi_def_cfa_offset 4
 452 006e BD46     		mov	sp, r7
 453              		.cfi_def_cfa_register 13
 454              		@ sp needed
 455 0070 80BC     		pop	{r7}
 456              		.cfi_restore 7
 457              		.cfi_def_cfa_offset 0
 458 0072 7047     		bx	lr
 459              	.L27:
 460              		.align	2
 461              	.L26:
 462 0074 00000000 		.word	UART_1_initVar
 463 0078 80E100E0 		.word	-536813184
 464 007c 00000000 		.word	UART_1_txBufferRead
 465 0080 00000000 		.word	UART_1_txBufferWrite
 466 0084 63640040 		.word	1073767523
 467 0088 43640040 		.word	1073767491
 468 008c 00000000 		.word	UART_1_txBuffer
 469 0090 00E100E0 		.word	-536813312
 470              		.cfi_endproc
 471              	.LFE7:
 472              		.size	UART_1_WriteTxData, .-UART_1_WriteTxData
 473              		.section	.text.UART_1_ReadTxStatus,"ax",%progbits
 474              		.align	2
 475              		.global	UART_1_ReadTxStatus
 476              		.thumb
 477              		.thumb_func
 478              		.type	UART_1_ReadTxStatus, %function
 479              	UART_1_ReadTxStatus:
 480              	.LFB8:
 981:Generated_Source\PSoC5/UART_1.c **** 
 982:Generated_Source\PSoC5/UART_1.c **** 
 983:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ReadTxStatus
 985:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_1.c ****     *
 987:Generated_Source\PSoC5/UART_1.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_1.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_1.c ****     *
 990:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
 991:Generated_Source\PSoC5/UART_1.c ****     *  None.
 992:Generated_Source\PSoC5/UART_1.c ****     *
 993:Generated_Source\PSoC5/UART_1.c ****     * Return:
 994:Generated_Source\PSoC5/UART_1.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_1.c ****     *
 996:Generated_Source\PSoC5/UART_1.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_1.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_1.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_1.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_1.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 27


1002:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_1.c ****     uint8 UART_1_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_1.c ****     {
 481              		.loc 1 1004 0
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 0
 484              		@ frame_needed = 1, uses_anonymous_args = 0
 485              		@ link register save eliminated.
 486 0000 80B4     		push	{r7}
 487              		.cfi_def_cfa_offset 4
 488              		.cfi_offset 7, -4
 489 0002 00AF     		add	r7, sp, #0
 490              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/UART_1.c ****         return(UART_1_TXSTATUS_REG);
 491              		.loc 1 1005 0
 492 0004 034B     		ldr	r3, .L30
 493 0006 1B78     		ldrb	r3, [r3]
 494 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/UART_1.c ****     }
 495              		.loc 1 1006 0
 496 000a 1846     		mov	r0, r3
 497 000c BD46     		mov	sp, r7
 498              		.cfi_def_cfa_register 13
 499              		@ sp needed
 500 000e 80BC     		pop	{r7}
 501              		.cfi_restore 7
 502              		.cfi_def_cfa_offset 0
 503 0010 7047     		bx	lr
 504              	.L31:
 505 0012 00BF     		.align	2
 506              	.L30:
 507 0014 63640040 		.word	1073767523
 508              		.cfi_endproc
 509              	.LFE8:
 510              		.size	UART_1_ReadTxStatus, .-UART_1_ReadTxStatus
 511              		.section	.text.UART_1_PutChar,"ax",%progbits
 512              		.align	2
 513              		.global	UART_1_PutChar
 514              		.thumb
 515              		.thumb_func
 516              		.type	UART_1_PutChar, %function
 517              	UART_1_PutChar:
 518              	.LFB9:
1007:Generated_Source\PSoC5/UART_1.c **** 
1008:Generated_Source\PSoC5/UART_1.c **** 
1009:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1010:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutChar
1011:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_1.c ****     *
1013:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_1.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_1.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_1.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_1.c ****     *
1018:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 28


1021:Generated_Source\PSoC5/UART_1.c ****     * Return:
1022:Generated_Source\PSoC5/UART_1.c ****     *  None.
1023:Generated_Source\PSoC5/UART_1.c ****     *
1024:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_1.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_1.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_1.c ****     *
1034:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_1.c ****     *  No.
1036:Generated_Source\PSoC5/UART_1.c ****     *
1037:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_1.c ****     *
1040:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_1.c ****     {
 519              		.loc 1 1042 0
 520              		.cfi_startproc
 521              		@ args = 0, pretend = 0, frame = 16
 522              		@ frame_needed = 1, uses_anonymous_args = 0
 523              		@ link register save eliminated.
 524 0000 80B4     		push	{r7}
 525              		.cfi_def_cfa_offset 4
 526              		.cfi_offset 7, -4
 527 0002 85B0     		sub	sp, sp, #20
 528              		.cfi_def_cfa_offset 24
 529 0004 00AF     		add	r7, sp, #0
 530              		.cfi_def_cfa_register 7
 531 0006 0346     		mov	r3, r0
 532 0008 FB71     		strb	r3, [r7, #7]
 533              	.L35:
1043:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_1.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_1.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_1.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_1.c ****         */
1048:Generated_Source\PSoC5/UART_1.c ****         uint16 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_1.c ****         uint16 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_1.c **** 
1051:Generated_Source\PSoC5/UART_1.c ****         do
1052:Generated_Source\PSoC5/UART_1.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_1.c **** 
1054:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_1.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1057:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_1.c **** 
1059:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite = UART_1_txBufferWrite;
 534              		.loc 1 1059 0
 535 000a 264B     		ldr	r3, .L40
 536 000c 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 29


 537 000e FB81     		strh	r3, [r7, #14]	@ movhi
1060:Generated_Source\PSoC5/UART_1.c ****             locTxBufferRead  = UART_1_txBufferRead;
 538              		.loc 1 1060 0
 539 0010 254B     		ldr	r3, .L40+4
 540 0012 1B88     		ldrh	r3, [r3]	@ movhi
 541 0014 BB81     		strh	r3, [r7, #12]	@ movhi
1061:Generated_Source\PSoC5/UART_1.c **** 
1062:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_1.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1065:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_1.c ****         }
1067:Generated_Source\PSoC5/UART_1.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 542              		.loc 1 1067 0
 543 0016 FA89     		ldrh	r2, [r7, #14]
 544 0018 BB89     		ldrh	r3, [r7, #12]
 545 001a 9A42     		cmp	r2, r3
 546 001c 08D2     		bcs	.L33
 547              		.loc 1 1067 0 is_stmt 0 discriminator 1
 548 001e FA89     		ldrh	r2, [r7, #14]
 549 0020 BB89     		ldrh	r3, [r7, #12]
 550 0022 013B     		subs	r3, r3, #1
 551 0024 9A42     		cmp	r2, r3
 552 0026 0CBF     		ite	eq
 553 0028 0123     		moveq	r3, #1
 554 002a 0023     		movne	r3, #0
 555 002c DBB2     		uxtb	r3, r3
 556 002e 09E0     		b	.L34
 557              	.L33:
1068:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 558              		.loc 1 1068 0 is_stmt 1 discriminator 2
 559 0030 FA89     		ldrh	r2, [r7, #14]
 560 0032 BB89     		ldrh	r3, [r7, #12]
 561 0034 D31A     		subs	r3, r2, r3
1067:Generated_Source\PSoC5/UART_1.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 562              		.loc 1 1067 0 discriminator 2
 563 0036 40F2FF32 		movw	r2, #1023
 564 003a 9342     		cmp	r3, r2
 565 003c 0CBF     		ite	eq
 566 003e 0123     		moveq	r3, #1
 567 0040 0023     		movne	r3, #0
 568 0042 DBB2     		uxtb	r3, r3
 569              	.L34:
1069:Generated_Source\PSoC5/UART_1.c ****                                 (uint16)(UART_1_TX_BUFFER_SIZE - 1u)) );
 570              		.loc 1 1069 0
 571 0044 002B     		cmp	r3, #0
 572 0046 E0D1     		bne	.L35
1070:Generated_Source\PSoC5/UART_1.c **** 
1071:Generated_Source\PSoC5/UART_1.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 573              		.loc 1 1071 0
 574 0048 BA89     		ldrh	r2, [r7, #12]
 575 004a FB89     		ldrh	r3, [r7, #14]
 576 004c 9A42     		cmp	r2, r3
 577 004e 0AD1     		bne	.L36
1072:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 578              		.loc 1 1072 0 discriminator 1
 579 0050 164B     		ldr	r3, .L40+8
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 30


 580 0052 1B78     		ldrb	r3, [r3]
 581 0054 DBB2     		uxtb	r3, r3
 582 0056 03F00403 		and	r3, r3, #4
1071:Generated_Source\PSoC5/UART_1.c ****             ((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) == 0u) )
 583              		.loc 1 1071 0 discriminator 1
 584 005a 002B     		cmp	r3, #0
 585 005c 03D1     		bne	.L36
1073:Generated_Source\PSoC5/UART_1.c ****         {
1074:Generated_Source\PSoC5/UART_1.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_1.c ****             UART_1_TXDATA_REG = txDataByte;
 586              		.loc 1 1075 0
 587 005e 144A     		ldr	r2, .L40+12
 588 0060 FB79     		ldrb	r3, [r7, #7]
 589 0062 1370     		strb	r3, [r2]
1076:Generated_Source\PSoC5/UART_1.c ****         }
1077:Generated_Source\PSoC5/UART_1.c ****         else
1078:Generated_Source\PSoC5/UART_1.c ****         {
1079:Generated_Source\PSoC5/UART_1.c ****             if(locTxBufferWrite >= UART_1_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_1.c ****             {
1081:Generated_Source\PSoC5/UART_1.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_1.c ****             }
1083:Generated_Source\PSoC5/UART_1.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_1.c **** 
1087:Generated_Source\PSoC5/UART_1.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_1.c ****             UART_1_DisableTxInt();
1090:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_1.c **** 
1092:Generated_Source\PSoC5/UART_1.c ****             UART_1_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_1.c **** 
1094:Generated_Source\PSoC5/UART_1.c ****         #if ((UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_1.c ****             UART_1_EnableTxInt();
1096:Generated_Source\PSoC5/UART_1.c ****         #endif /* (UART_1_TX_BUFFER_SIZE > UART_1_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_1.c **** 
1098:Generated_Source\PSoC5/UART_1.c ****             if(0u != (UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_1.c ****             {
1100:Generated_Source\PSoC5/UART_1.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_1.c ****                 UART_1_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_1.c ****             }
1103:Generated_Source\PSoC5/UART_1.c ****         }
1104:Generated_Source\PSoC5/UART_1.c **** 
1105:Generated_Source\PSoC5/UART_1.c ****     #else
1106:Generated_Source\PSoC5/UART_1.c **** 
1107:Generated_Source\PSoC5/UART_1.c ****         while((UART_1_TXSTATUS_REG & UART_1_TX_STS_FIFO_FULL) != 0u)
1108:Generated_Source\PSoC5/UART_1.c ****         {
1109:Generated_Source\PSoC5/UART_1.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_1.c ****         }
1111:Generated_Source\PSoC5/UART_1.c **** 
1112:Generated_Source\PSoC5/UART_1.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART_1.c **** 
1115:Generated_Source\PSoC5/UART_1.c ****     #endif /* UART_1_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_1.c ****     }
 590              		.loc 1 1116 0
 591 0064 19E0     		b	.L39
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 31


 592              	.L36:
1079:Generated_Source\PSoC5/UART_1.c ****             {
 593              		.loc 1 1079 0
 594 0066 FB89     		ldrh	r3, [r7, #14]
 595 0068 B3F5806F 		cmp	r3, #1024
 596 006c 01D3     		bcc	.L38
1081:Generated_Source\PSoC5/UART_1.c ****             }
 597              		.loc 1 1081 0
 598 006e 0023     		movs	r3, #0
 599 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 600              	.L38:
1084:Generated_Source\PSoC5/UART_1.c ****             locTxBufferWrite++;
 601              		.loc 1 1084 0
 602 0072 FB89     		ldrh	r3, [r7, #14]
 603 0074 0F49     		ldr	r1, .L40+16
 604 0076 FA79     		ldrb	r2, [r7, #7]
 605 0078 CA54     		strb	r2, [r1, r3]
1085:Generated_Source\PSoC5/UART_1.c **** 
 606              		.loc 1 1085 0
 607 007a FB89     		ldrh	r3, [r7, #14]
 608 007c 0133     		adds	r3, r3, #1
 609 007e FB81     		strh	r3, [r7, #14]	@ movhi
1092:Generated_Source\PSoC5/UART_1.c **** 
 610              		.loc 1 1092 0
 611 0080 084A     		ldr	r2, .L40
 612 0082 FB89     		ldrh	r3, [r7, #14]	@ movhi
 613 0084 1380     		strh	r3, [r2]	@ movhi
1098:Generated_Source\PSoC5/UART_1.c ****             {
 614              		.loc 1 1098 0
 615 0086 094B     		ldr	r3, .L40+8
 616 0088 1B78     		ldrb	r3, [r3]
 617 008a DBB2     		uxtb	r3, r3
 618 008c 03F00203 		and	r3, r3, #2
 619 0090 002B     		cmp	r3, #0
 620 0092 02D0     		beq	.L39
1101:Generated_Source\PSoC5/UART_1.c ****             }
 621              		.loc 1 1101 0
 622 0094 084B     		ldr	r3, .L40+20
 623 0096 0122     		movs	r2, #1
 624 0098 1A60     		str	r2, [r3]
 625              	.L39:
 626              		.loc 1 1116 0
 627 009a 00BF     		nop
 628 009c 1437     		adds	r7, r7, #20
 629              		.cfi_def_cfa_offset 4
 630 009e BD46     		mov	sp, r7
 631              		.cfi_def_cfa_register 13
 632              		@ sp needed
 633 00a0 80BC     		pop	{r7}
 634              		.cfi_restore 7
 635              		.cfi_def_cfa_offset 0
 636 00a2 7047     		bx	lr
 637              	.L41:
 638              		.align	2
 639              	.L40:
 640 00a4 00000000 		.word	UART_1_txBufferWrite
 641 00a8 00000000 		.word	UART_1_txBufferRead
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 32


 642 00ac 63640040 		.word	1073767523
 643 00b0 43640040 		.word	1073767491
 644 00b4 00000000 		.word	UART_1_txBuffer
 645 00b8 00E200E0 		.word	-536813056
 646              		.cfi_endproc
 647              	.LFE9:
 648              		.size	UART_1_PutChar, .-UART_1_PutChar
 649              		.section	.text.UART_1_PutString,"ax",%progbits
 650              		.align	2
 651              		.global	UART_1_PutString
 652              		.thumb
 653              		.thumb_func
 654              		.type	UART_1_PutString, %function
 655              	UART_1_PutString:
 656              	.LFB10:
1117:Generated_Source\PSoC5/UART_1.c **** 
1118:Generated_Source\PSoC5/UART_1.c **** 
1119:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutString
1121:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_1.c ****     *
1123:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_1.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_1.c ****     *
1126:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_1.c ****     *
1129:Generated_Source\PSoC5/UART_1.c ****     * Return:
1130:Generated_Source\PSoC5/UART_1.c ****     *  None.
1131:Generated_Source\PSoC5/UART_1.c ****     *
1132:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_1.c ****     *
1136:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_1.c ****     *  No.
1138:Generated_Source\PSoC5/UART_1.c ****     *
1139:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_1.c ****     *
1144:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_1.c ****     {
 657              		.loc 1 1146 0
 658              		.cfi_startproc
 659              		@ args = 0, pretend = 0, frame = 16
 660              		@ frame_needed = 1, uses_anonymous_args = 0
 661 0000 80B5     		push	{r7, lr}
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 7, -8
 664              		.cfi_offset 14, -4
 665 0002 84B0     		sub	sp, sp, #16
 666              		.cfi_def_cfa_offset 24
 667 0004 00AF     		add	r7, sp, #0
 668              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 33


 669 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
 670              		.loc 1 1147 0
 671 0008 0023     		movs	r3, #0
 672 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/UART_1.c **** 
1149:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 673              		.loc 1 1150 0
 674 000c 0C4B     		ldr	r3, .L47
 675 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 676 0010 002B     		cmp	r3, #0
 677 0012 10D0     		beq	.L46
1151:Generated_Source\PSoC5/UART_1.c ****         {
1152:Generated_Source\PSoC5/UART_1.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_1.c ****             while(string[bufIndex] != (char8) 0)
 678              		.loc 1 1153 0
 679 0014 09E0     		b	.L44
 680              	.L45:
1154:Generated_Source\PSoC5/UART_1.c ****             {
1155:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar((uint8)string[bufIndex]);
 681              		.loc 1 1155 0
 682 0016 FB89     		ldrh	r3, [r7, #14]
 683 0018 7A68     		ldr	r2, [r7, #4]
 684 001a 1344     		add	r3, r3, r2
 685 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 686 001e 1846     		mov	r0, r3
 687 0020 FFF7FEFF 		bl	UART_1_PutChar
1156:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 688              		.loc 1 1156 0
 689 0024 FB89     		ldrh	r3, [r7, #14]
 690 0026 0133     		adds	r3, r3, #1
 691 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 692              	.L44:
1153:Generated_Source\PSoC5/UART_1.c ****             {
 693              		.loc 1 1153 0
 694 002a FB89     		ldrh	r3, [r7, #14]
 695 002c 7A68     		ldr	r2, [r7, #4]
 696 002e 1344     		add	r3, r3, r2
 697 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 698 0032 002B     		cmp	r3, #0
 699 0034 EFD1     		bne	.L45
 700              	.L46:
1157:Generated_Source\PSoC5/UART_1.c ****             }
1158:Generated_Source\PSoC5/UART_1.c ****         }
1159:Generated_Source\PSoC5/UART_1.c ****     }
 701              		.loc 1 1159 0
 702 0036 00BF     		nop
 703 0038 1037     		adds	r7, r7, #16
 704              		.cfi_def_cfa_offset 8
 705 003a BD46     		mov	sp, r7
 706              		.cfi_def_cfa_register 13
 707              		@ sp needed
 708 003c 80BD     		pop	{r7, pc}
 709              	.L48:
 710 003e 00BF     		.align	2
 711              	.L47:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 34


 712 0040 00000000 		.word	UART_1_initVar
 713              		.cfi_endproc
 714              	.LFE10:
 715              		.size	UART_1_PutString, .-UART_1_PutString
 716              		.section	.text.UART_1_PutArray,"ax",%progbits
 717              		.align	2
 718              		.global	UART_1_PutArray
 719              		.thumb
 720              		.thumb_func
 721              		.type	UART_1_PutArray, %function
 722              	UART_1_PutArray:
 723              	.LFB11:
1160:Generated_Source\PSoC5/UART_1.c **** 
1161:Generated_Source\PSoC5/UART_1.c **** 
1162:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutArray
1164:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_1.c ****     *
1166:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_1.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_1.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_1.c ****     *
1170:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_1.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_1.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_1.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_1.c ****     *
1175:Generated_Source\PSoC5/UART_1.c ****     * Return:
1176:Generated_Source\PSoC5/UART_1.c ****     *  None.
1177:Generated_Source\PSoC5/UART_1.c ****     *
1178:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_1.c ****     *
1182:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_1.c ****     *  No.
1184:Generated_Source\PSoC5/UART_1.c ****     *
1185:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_1.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_1.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_1.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_1.c ****     *
1190:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutArray(const uint8 string[], uint16 byteCount)
1192:Generated_Source\PSoC5/UART_1.c ****                                                                     
1193:Generated_Source\PSoC5/UART_1.c ****     {
 724              		.loc 1 1193 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 16
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 80B5     		push	{r7, lr}
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
 732 0002 84B0     		sub	sp, sp, #16
 733              		.cfi_def_cfa_offset 24
 734 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 35


 735              		.cfi_def_cfa_register 7
 736 0006 7860     		str	r0, [r7, #4]
 737 0008 0B46     		mov	r3, r1
 738 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1194:Generated_Source\PSoC5/UART_1.c ****         uint16 bufIndex = 0u;
 739              		.loc 1 1194 0
 740 000c 0023     		movs	r3, #0
 741 000e FB81     		strh	r3, [r7, #14]	@ movhi
1195:Generated_Source\PSoC5/UART_1.c **** 
1196:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 742              		.loc 1 1197 0
 743 0010 0B4B     		ldr	r3, .L54
 744 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 745 0014 002B     		cmp	r3, #0
 746 0016 0ED0     		beq	.L53
1198:Generated_Source\PSoC5/UART_1.c ****         {
1199:Generated_Source\PSoC5/UART_1.c ****             while(bufIndex < byteCount)
 747              		.loc 1 1199 0
 748 0018 09E0     		b	.L51
 749              	.L52:
1200:Generated_Source\PSoC5/UART_1.c ****             {
1201:Generated_Source\PSoC5/UART_1.c ****                 UART_1_PutChar(string[bufIndex]);
 750              		.loc 1 1201 0
 751 001a FB89     		ldrh	r3, [r7, #14]
 752 001c 7A68     		ldr	r2, [r7, #4]
 753 001e 1344     		add	r3, r3, r2
 754 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 755 0022 1846     		mov	r0, r3
 756 0024 FFF7FEFF 		bl	UART_1_PutChar
1202:Generated_Source\PSoC5/UART_1.c ****                 bufIndex++;
 757              		.loc 1 1202 0
 758 0028 FB89     		ldrh	r3, [r7, #14]
 759 002a 0133     		adds	r3, r3, #1
 760 002c FB81     		strh	r3, [r7, #14]	@ movhi
 761              	.L51:
1199:Generated_Source\PSoC5/UART_1.c ****             {
 762              		.loc 1 1199 0
 763 002e FA89     		ldrh	r2, [r7, #14]
 764 0030 7B88     		ldrh	r3, [r7, #2]
 765 0032 9A42     		cmp	r2, r3
 766 0034 F1D3     		bcc	.L52
 767              	.L53:
1203:Generated_Source\PSoC5/UART_1.c ****             }
1204:Generated_Source\PSoC5/UART_1.c ****         }
1205:Generated_Source\PSoC5/UART_1.c ****     }
 768              		.loc 1 1205 0
 769 0036 00BF     		nop
 770 0038 1037     		adds	r7, r7, #16
 771              		.cfi_def_cfa_offset 8
 772 003a BD46     		mov	sp, r7
 773              		.cfi_def_cfa_register 13
 774              		@ sp needed
 775 003c 80BD     		pop	{r7, pc}
 776              	.L55:
 777 003e 00BF     		.align	2
 778              	.L54:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 36


 779 0040 00000000 		.word	UART_1_initVar
 780              		.cfi_endproc
 781              	.LFE11:
 782              		.size	UART_1_PutArray, .-UART_1_PutArray
 783              		.section	.text.UART_1_PutCRLF,"ax",%progbits
 784              		.align	2
 785              		.global	UART_1_PutCRLF
 786              		.thumb
 787              		.thumb_func
 788              		.type	UART_1_PutCRLF, %function
 789              	UART_1_PutCRLF:
 790              	.LFB12:
1206:Generated_Source\PSoC5/UART_1.c **** 
1207:Generated_Source\PSoC5/UART_1.c **** 
1208:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_PutCRLF
1210:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_1.c ****     *
1212:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_1.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_1.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_1.c ****     *
1216:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_1.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_1.c ****     *
1219:Generated_Source\PSoC5/UART_1.c ****     * Return:
1220:Generated_Source\PSoC5/UART_1.c ****     *  None.
1221:Generated_Source\PSoC5/UART_1.c ****     *
1222:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_1.c ****     *
1226:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_1.c ****     *  No.
1228:Generated_Source\PSoC5/UART_1.c ****     *
1229:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_1.c ****     void UART_1_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_1.c ****     {
 791              		.loc 1 1231 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 8
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795 0000 80B5     		push	{r7, lr}
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 82B0     		sub	sp, sp, #8
 800              		.cfi_def_cfa_offset 16
 801 0004 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 803 0006 0346     		mov	r3, r0
 804 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 805              		.loc 1 1233 0
 806 000a 094B     		ldr	r3, .L59
 807 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 37


 808 000e 002B     		cmp	r3, #0
 809 0010 09D0     		beq	.L58
1234:Generated_Source\PSoC5/UART_1.c ****         {
1235:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(txDataByte);
 810              		.loc 1 1235 0
 811 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 812 0014 1846     		mov	r0, r3
 813 0016 FFF7FEFF 		bl	UART_1_PutChar
1236:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Du);
 814              		.loc 1 1236 0
 815 001a 0D20     		movs	r0, #13
 816 001c FFF7FEFF 		bl	UART_1_PutChar
1237:Generated_Source\PSoC5/UART_1.c ****             UART_1_PutChar(0x0Au);
 817              		.loc 1 1237 0
 818 0020 0A20     		movs	r0, #10
 819 0022 FFF7FEFF 		bl	UART_1_PutChar
 820              	.L58:
1238:Generated_Source\PSoC5/UART_1.c ****         }
1239:Generated_Source\PSoC5/UART_1.c ****     }
 821              		.loc 1 1239 0
 822 0026 00BF     		nop
 823 0028 0837     		adds	r7, r7, #8
 824              		.cfi_def_cfa_offset 8
 825 002a BD46     		mov	sp, r7
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 002c 80BD     		pop	{r7, pc}
 829              	.L60:
 830 002e 00BF     		.align	2
 831              	.L59:
 832 0030 00000000 		.word	UART_1_initVar
 833              		.cfi_endproc
 834              	.LFE12:
 835              		.size	UART_1_PutCRLF, .-UART_1_PutCRLF
 836              		.section	.text.UART_1_GetTxBufferSize,"ax",%progbits
 837              		.align	2
 838              		.global	UART_1_GetTxBufferSize
 839              		.thumb
 840              		.thumb_func
 841              		.type	UART_1_GetTxBufferSize, %function
 842              	UART_1_GetTxBufferSize:
 843              	.LFB13:
1240:Generated_Source\PSoC5/UART_1.c **** 
1241:Generated_Source\PSoC5/UART_1.c **** 
1242:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_GetTxBufferSize
1244:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_1.c ****     *
1246:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_1.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_1.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_1.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_1.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_1.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_1.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_1.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 38


1255:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_1.c ****     *  None.
1257:Generated_Source\PSoC5/UART_1.c ****     *
1258:Generated_Source\PSoC5/UART_1.c ****     * Return:
1259:Generated_Source\PSoC5/UART_1.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_1.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_1.c ****     *
1262:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_1.c ****     *
1266:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_1.c ****     *  No.
1268:Generated_Source\PSoC5/UART_1.c ****     *
1269:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_1.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_1.c ****     *
1272:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_1.c ****     uint16 UART_1_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_1.c ****                                                             
1275:Generated_Source\PSoC5/UART_1.c ****     {
 844              		.loc 1 1275 0
 845              		.cfi_startproc
 846              		@ args = 0, pretend = 0, frame = 8
 847              		@ frame_needed = 1, uses_anonymous_args = 0
 848              		@ link register save eliminated.
 849 0000 80B4     		push	{r7}
 850              		.cfi_def_cfa_offset 4
 851              		.cfi_offset 7, -4
 852 0002 83B0     		sub	sp, sp, #12
 853              		.cfi_def_cfa_offset 16
 854 0004 00AF     		add	r7, sp, #0
 855              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/UART_1.c ****         uint16 size;
1277:Generated_Source\PSoC5/UART_1.c **** 
1278:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_1.c **** 
1280:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
 856              		.loc 1 1281 0
 857 0006 174B     		ldr	r3, .L66
 858 0008 0122     		movs	r2, #1
 859 000a 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART_1.c **** 
1283:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_txBufferRead == UART_1_txBufferWrite)
 860              		.loc 1 1283 0
 861 000c 164B     		ldr	r3, .L66+4
 862 000e 1B88     		ldrh	r3, [r3]	@ movhi
 863 0010 9AB2     		uxth	r2, r3
 864 0012 164B     		ldr	r3, .L66+8
 865 0014 1B88     		ldrh	r3, [r3]
 866 0016 9A42     		cmp	r2, r3
 867 0018 02D1     		bne	.L62
1284:Generated_Source\PSoC5/UART_1.c ****         {
1285:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
 868              		.loc 1 1285 0
 869 001a 0023     		movs	r3, #0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 39


 870 001c FB80     		strh	r3, [r7, #6]	@ movhi
 871 001e 18E0     		b	.L63
 872              	.L62:
1286:Generated_Source\PSoC5/UART_1.c ****         }
1287:Generated_Source\PSoC5/UART_1.c ****         else if(UART_1_txBufferRead < UART_1_txBufferWrite)
 873              		.loc 1 1287 0
 874 0020 114B     		ldr	r3, .L66+4
 875 0022 1B88     		ldrh	r3, [r3]	@ movhi
 876 0024 9AB2     		uxth	r2, r3
 877 0026 114B     		ldr	r3, .L66+8
 878 0028 1B88     		ldrh	r3, [r3]
 879 002a 9A42     		cmp	r2, r3
 880 002c 07D2     		bcs	.L64
1288:Generated_Source\PSoC5/UART_1.c ****         {
1289:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_txBufferWrite - UART_1_txBufferRead);
 881              		.loc 1 1289 0
 882 002e 0F4B     		ldr	r3, .L66+8
 883 0030 1A88     		ldrh	r2, [r3]
 884 0032 0D4B     		ldr	r3, .L66+4
 885 0034 1B88     		ldrh	r3, [r3]	@ movhi
 886 0036 9BB2     		uxth	r3, r3
 887 0038 D31A     		subs	r3, r2, r3
 888 003a FB80     		strh	r3, [r7, #6]	@ movhi
 889 003c 09E0     		b	.L63
 890              	.L64:
1290:Generated_Source\PSoC5/UART_1.c ****         }
1291:Generated_Source\PSoC5/UART_1.c ****         else
1292:Generated_Source\PSoC5/UART_1.c ****         {
1293:Generated_Source\PSoC5/UART_1.c ****             size = (UART_1_TX_BUFFER_SIZE - UART_1_txBufferRead) +
 891              		.loc 1 1293 0
 892 003e 0B4B     		ldr	r3, .L66+8
 893 0040 1A88     		ldrh	r2, [r3]
 894 0042 094B     		ldr	r3, .L66+4
 895 0044 1B88     		ldrh	r3, [r3]	@ movhi
 896 0046 9BB2     		uxth	r3, r3
 897 0048 D31A     		subs	r3, r2, r3
 898 004a 9BB2     		uxth	r3, r3
 899 004c 03F58063 		add	r3, r3, #1024
 900 0050 FB80     		strh	r3, [r7, #6]	@ movhi
 901              	.L63:
1294:Generated_Source\PSoC5/UART_1.c ****                     UART_1_txBufferWrite;
1295:Generated_Source\PSoC5/UART_1.c ****         }
1296:Generated_Source\PSoC5/UART_1.c **** 
1297:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
 902              		.loc 1 1297 0
 903 0052 074B     		ldr	r3, .L66+12
 904 0054 0122     		movs	r2, #1
 905 0056 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART_1.c **** 
1299:Generated_Source\PSoC5/UART_1.c ****     #else
1300:Generated_Source\PSoC5/UART_1.c **** 
1301:Generated_Source\PSoC5/UART_1.c ****         size = UART_1_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART_1.c **** 
1303:Generated_Source\PSoC5/UART_1.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_1.c ****         if((size & UART_1_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART_1.c ****         {
1306:Generated_Source\PSoC5/UART_1.c ****             size = UART_1_FIFO_LENGTH;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 40


1307:Generated_Source\PSoC5/UART_1.c ****         }
1308:Generated_Source\PSoC5/UART_1.c ****         else if((size & UART_1_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART_1.c ****         {
1310:Generated_Source\PSoC5/UART_1.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART_1.c ****         }
1312:Generated_Source\PSoC5/UART_1.c ****         else
1313:Generated_Source\PSoC5/UART_1.c ****         {
1314:Generated_Source\PSoC5/UART_1.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_1.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART_1.c ****         }
1317:Generated_Source\PSoC5/UART_1.c **** 
1318:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_1.c **** 
1320:Generated_Source\PSoC5/UART_1.c ****     return(size);
 906              		.loc 1 1320 0
 907 0058 FB88     		ldrh	r3, [r7, #6]
1321:Generated_Source\PSoC5/UART_1.c ****     }
 908              		.loc 1 1321 0
 909 005a 1846     		mov	r0, r3
 910 005c 0C37     		adds	r7, r7, #12
 911              		.cfi_def_cfa_offset 4
 912 005e BD46     		mov	sp, r7
 913              		.cfi_def_cfa_register 13
 914              		@ sp needed
 915 0060 80BC     		pop	{r7}
 916              		.cfi_restore 7
 917              		.cfi_def_cfa_offset 0
 918 0062 7047     		bx	lr
 919              	.L67:
 920              		.align	2
 921              	.L66:
 922 0064 80E100E0 		.word	-536813184
 923 0068 00000000 		.word	UART_1_txBufferRead
 924 006c 00000000 		.word	UART_1_txBufferWrite
 925 0070 00E100E0 		.word	-536813312
 926              		.cfi_endproc
 927              	.LFE13:
 928              		.size	UART_1_GetTxBufferSize, .-UART_1_GetTxBufferSize
 929              		.section	.text.UART_1_ClearTxBuffer,"ax",%progbits
 930              		.align	2
 931              		.global	UART_1_ClearTxBuffer
 932              		.thumb
 933              		.thumb_func
 934              		.type	UART_1_ClearTxBuffer, %function
 935              	UART_1_ClearTxBuffer:
 936              	.LFB14:
1322:Generated_Source\PSoC5/UART_1.c **** 
1323:Generated_Source\PSoC5/UART_1.c **** 
1324:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_1.c ****     *
1328:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_1.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_1.c ****     *
1331:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_1.c ****     *  None.
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 41


1333:Generated_Source\PSoC5/UART_1.c ****     *
1334:Generated_Source\PSoC5/UART_1.c ****     * Return:
1335:Generated_Source\PSoC5/UART_1.c ****     *  None.
1336:Generated_Source\PSoC5/UART_1.c ****     *
1337:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_1.c ****     *
1341:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_1.c ****     *  No.
1343:Generated_Source\PSoC5/UART_1.c ****     *
1344:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_1.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_1.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_1.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_1.c ****     *
1349:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_1.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_1.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_1.c ****     *
1353:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_1.c ****     void UART_1_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_1.c ****     {
 937              		.loc 1 1355 0
 938              		.cfi_startproc
 939              		@ args = 0, pretend = 0, frame = 8
 940              		@ frame_needed = 1, uses_anonymous_args = 0
 941 0000 80B5     		push	{r7, lr}
 942              		.cfi_def_cfa_offset 8
 943              		.cfi_offset 7, -8
 944              		.cfi_offset 14, -4
 945 0002 82B0     		sub	sp, sp, #8
 946              		.cfi_def_cfa_offset 16
 947 0004 00AF     		add	r7, sp, #0
 948              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/UART_1.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_1.c **** 
1358:Generated_Source\PSoC5/UART_1.c ****         enableInterrupts = CyEnterCriticalSection();
 949              		.loc 1 1358 0
 950 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 951 000a 0346     		mov	r3, r0
 952 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/UART_1.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG |= (uint8)  UART_1_TX_FIFO_CLR;
 953              		.loc 1 1360 0
 954 000e 124A     		ldr	r2, .L69
 955 0010 114B     		ldr	r3, .L69
 956 0012 1B78     		ldrb	r3, [r3]
 957 0014 DBB2     		uxtb	r3, r3
 958 0016 43F00103 		orr	r3, r3, #1
 959 001a DBB2     		uxtb	r3, r3
 960 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/UART_1.c ****         UART_1_TXDATA_AUX_CTL_REG &= (uint8) ~UART_1_TX_FIFO_CLR;
 961              		.loc 1 1361 0
 962 001e 0E4A     		ldr	r2, .L69
 963 0020 0D4B     		ldr	r3, .L69
 964 0022 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 42


 965 0024 DBB2     		uxtb	r3, r3
 966 0026 23F00103 		bic	r3, r3, #1
 967 002a DBB2     		uxtb	r3, r3
 968 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/UART_1.c ****         CyExitCriticalSection(enableInterrupts);
 969              		.loc 1 1362 0
 970 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 971 0030 1846     		mov	r0, r3
 972 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/UART_1.c **** 
1364:Generated_Source\PSoC5/UART_1.c ****     #if (UART_1_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_1.c **** 
1366:Generated_Source\PSoC5/UART_1.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_1.c ****         UART_1_DisableTxInt();
 973              		.loc 1 1367 0
 974 0036 094B     		ldr	r3, .L69+4
 975 0038 0122     		movs	r2, #1
 976 003a 1A60     		str	r2, [r3]
1368:Generated_Source\PSoC5/UART_1.c **** 
1369:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferRead = 0u;
 977              		.loc 1 1369 0
 978 003c 084B     		ldr	r3, .L69+8
 979 003e 0022     		movs	r2, #0
 980 0040 1A80     		strh	r2, [r3]	@ movhi
1370:Generated_Source\PSoC5/UART_1.c ****         UART_1_txBufferWrite = 0u;
 981              		.loc 1 1370 0
 982 0042 084B     		ldr	r3, .L69+12
 983 0044 0022     		movs	r2, #0
 984 0046 1A80     		strh	r2, [r3]	@ movhi
1371:Generated_Source\PSoC5/UART_1.c **** 
1372:Generated_Source\PSoC5/UART_1.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_1.c ****         UART_1_EnableTxInt();
 985              		.loc 1 1373 0
 986 0048 074B     		ldr	r3, .L69+16
 987 004a 0122     		movs	r2, #1
 988 004c 1A60     		str	r2, [r3]
1374:Generated_Source\PSoC5/UART_1.c **** 
1375:Generated_Source\PSoC5/UART_1.c ****     #endif /* (UART_1_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_1.c ****     }
 989              		.loc 1 1376 0
 990 004e 00BF     		nop
 991 0050 0837     		adds	r7, r7, #8
 992              		.cfi_def_cfa_offset 8
 993 0052 BD46     		mov	sp, r7
 994              		.cfi_def_cfa_register 13
 995              		@ sp needed
 996 0054 80BD     		pop	{r7, pc}
 997              	.L70:
 998 0056 00BF     		.align	2
 999              	.L69:
 1000 0058 93640040 		.word	1073767571
 1001 005c 80E100E0 		.word	-536813184
 1002 0060 00000000 		.word	UART_1_txBufferRead
 1003 0064 00000000 		.word	UART_1_txBufferWrite
 1004 0068 00E100E0 		.word	-536813312
 1005              		.cfi_endproc
 1006              	.LFE14:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 43


 1007              		.size	UART_1_ClearTxBuffer, .-UART_1_ClearTxBuffer
 1008              		.section	.text.UART_1_SendBreak,"ax",%progbits
 1009              		.align	2
 1010              		.global	UART_1_SendBreak
 1011              		.thumb
 1012              		.thumb_func
 1013              		.type	UART_1_SendBreak, %function
 1014              	UART_1_SendBreak:
 1015              	.LFB15:
1377:Generated_Source\PSoC5/UART_1.c **** 
1378:Generated_Source\PSoC5/UART_1.c **** 
1379:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SendBreak
1381:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_1.c ****     *
1383:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_1.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_1.c ****     *
1386:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_1.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_1.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_1.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_1.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_1.c ****     *   UART_1_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_1.c ****     *      UART_1_SEND_BREAK and UART_1_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_1.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_1.c ****     *
1398:Generated_Source\PSoC5/UART_1.c ****     * Return:
1399:Generated_Source\PSoC5/UART_1.c ****     *  None.
1400:Generated_Source\PSoC5/UART_1.c ****     *
1401:Generated_Source\PSoC5/UART_1.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_1.c ****     *  UART_1_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_1.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_1.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_1.c ****     *
1406:Generated_Source\PSoC5/UART_1.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_1.c ****     *  No.
1408:Generated_Source\PSoC5/UART_1.c ****     *
1409:Generated_Source\PSoC5/UART_1.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_1.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_1.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_1.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_1.c ****     *  There are 3 variants for this API usage:
1414:Generated_Source\PSoC5/UART_1.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_1.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_1.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_1.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_1.c ****     *     operation
1419:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_1.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_1.c ****     *     complete break operation.
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 44


1425:Generated_Source\PSoC5/UART_1.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_1.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_1.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_1.c ****     *     When interrupt appear with UART_1_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_1.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_1.c ****     *
1432:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_1.c ****     *  The UART_1_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_1.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_1.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_1.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_1.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_1.c ****     *
1439:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_1.c ****     {
 1016              		.loc 1 1441 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 16
 1019              		@ frame_needed = 1, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 1021 0000 80B4     		push	{r7}
 1022              		.cfi_def_cfa_offset 4
 1023              		.cfi_offset 7, -4
 1024 0002 85B0     		sub	sp, sp, #20
 1025              		.cfi_def_cfa_offset 24
 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 1028 0006 0346     		mov	r3, r0
 1029 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/UART_1.c **** 
1443:Generated_Source\PSoC5/UART_1.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_1.c ****         if(UART_1_initVar != 0u)
 1030              		.loc 1 1444 0
 1031 000a 1F4B     		ldr	r3, .L80
 1032 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1033 000e 002B     		cmp	r3, #0
 1034 0010 35D0     		beq	.L79
 1035              	.LBB2:
1445:Generated_Source\PSoC5/UART_1.c ****         {
1446:Generated_Source\PSoC5/UART_1.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_1.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_1.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_1.c **** 
1450:Generated_Source\PSoC5/UART_1.c ****         #if(UART_1_HD_ENABLED) /* Half Duplex mode*/
1451:Generated_Source\PSoC5/UART_1.c **** 
1452:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_1.c ****             {
1455:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_1.c ****                                                       UART_1_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_1.c **** 
1461:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 45


1462:Generated_Source\PSoC5/UART_1.c ****                 {
1463:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_1.c ****                 }
1465:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_1.c ****             }
1467:Generated_Source\PSoC5/UART_1.c **** 
1468:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_1.c ****             {
1471:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_1.c ****                 {
1473:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_1.c ****                 }
1475:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_1.c ****             }
1477:Generated_Source\PSoC5/UART_1.c **** 
1478:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
1480:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_1.c ****             {
1482:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_1.c ****                                               (uint8)~UART_1_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_1.c ****             }
1485:Generated_Source\PSoC5/UART_1.c **** 
1486:Generated_Source\PSoC5/UART_1.c ****         #else /* UART_1_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_1.c **** 
1488:Generated_Source\PSoC5/UART_1.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_1.c **** 
1490:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_SEND_BREAK) ||
 1036              		.loc 1 1490 0
 1037 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1038 0014 002B     		cmp	r3, #0
 1039 0016 02D0     		beq	.L73
 1040              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1041 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1042 001a 032B     		cmp	r3, #3
 1043 001c 12D1     		bne	.L74
 1044              	.L73:
1491:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_1.c ****             {
1493:Generated_Source\PSoC5/UART_1.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_1.c ****                 #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_1.c ****                                     (UART_1_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_1.c ****                     UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_1.c ****                                                           UART_1_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB  */
1499:Generated_Source\PSoC5/UART_1.c **** 
1500:Generated_Source\PSoC5/UART_1.c ****                 #if(UART_1_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCLKTX_COMPLETE_REG;
 1045              		.loc 1 1501 0 is_stmt 1
 1046 001e 1B4B     		ldr	r3, .L80+4
 1047 0020 1B78     		ldrb	r3, [r3]
 1048 0022 DAB2     		uxtb	r2, r3
 1049 0024 1A4B     		ldr	r3, .L80+8
 1050 0026 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCLKTX_COMPLETE_REG = UART_1_TXBITCTR_BREAKBITS;
 1051              		.loc 1 1502 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 46


 1052 0028 184B     		ldr	r3, .L80+4
 1053 002a 6722     		movs	r2, #103
 1054 002c 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_1.c ****                 #else
1504:Generated_Source\PSoC5/UART_1.c ****                     txPeriod = UART_1_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_1.c ****                     UART_1_TXBITCTR_PERIOD_REG = UART_1_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_1.c ****                 #endif /* End UART_1_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_1.c **** 
1508:Generated_Source\PSoC5/UART_1.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXDATA_REG = 0u;
 1055              		.loc 1 1509 0
 1056 002e 194B     		ldr	r3, .L80+12
 1057 0030 0022     		movs	r2, #0
 1058 0032 1A70     		strb	r2, [r3]
 1059              	.L75:
1510:Generated_Source\PSoC5/UART_1.c **** 
1511:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_1.c ****                 {
1513:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1060              		.loc 1 1513 0 discriminator 1
 1061 0034 184B     		ldr	r3, .L80+16
 1062 0036 1B78     		ldrb	r3, [r3]
 1063 0038 FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/UART_1.c ****                 }
1515:Generated_Source\PSoC5/UART_1.c ****                 while((tmpStat & UART_1_TX_STS_FIFO_EMPTY) != 0u);
 1064              		.loc 1 1515 0 discriminator 1
 1065 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1066 003c 03F00203 		and	r3, r3, #2
 1067 0040 002B     		cmp	r3, #0
 1068 0042 F7D1     		bne	.L75
 1069              	.L74:
1516:Generated_Source\PSoC5/UART_1.c ****             }
1517:Generated_Source\PSoC5/UART_1.c **** 
1518:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1070              		.loc 1 1518 0
 1071 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1072 0046 012B     		cmp	r3, #1
 1073 0048 02D0     		beq	.L76
 1074              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1075 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1076 004c 032B     		cmp	r3, #3
 1077 004e 09D1     		bne	.L77
 1078              	.L76:
1519:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_1.c ****             {
1521:Generated_Source\PSoC5/UART_1.c ****                 do /* Wait until transmit complete */
1522:Generated_Source\PSoC5/UART_1.c ****                 {
1523:Generated_Source\PSoC5/UART_1.c ****                     tmpStat = UART_1_TXSTATUS_REG;
 1079              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1080 0050 114B     		ldr	r3, .L80+16
 1081 0052 1B78     		ldrb	r3, [r3]
 1082 0054 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/UART_1.c ****                 }
1525:Generated_Source\PSoC5/UART_1.c ****                 while(((uint8)~tmpStat & UART_1_TX_STS_COMPLETE) != 0u);
 1083              		.loc 1 1525 0 discriminator 1
 1084 0056 FB7B     		ldrb	r3, [r7, #15]
 1085 0058 DB43     		mvns	r3, r3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 47


 1086 005a DBB2     		uxtb	r3, r3
 1087 005c 03F00103 		and	r3, r3, #1
 1088 0060 002B     		cmp	r3, #0
 1089 0062 F5D1     		bne	.L76
 1090              	.L77:
1526:Generated_Source\PSoC5/UART_1.c ****             }
1527:Generated_Source\PSoC5/UART_1.c **** 
1528:Generated_Source\PSoC5/UART_1.c ****             if( (retMode == UART_1_WAIT_FOR_COMPLETE_REINIT) ||
 1091              		.loc 1 1528 0
 1092 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1093 0066 012B     		cmp	r3, #1
 1094 0068 05D0     		beq	.L78
 1095              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1096 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1097 006c 022B     		cmp	r3, #2
 1098 006e 02D0     		beq	.L78
1529:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_REINIT) ||
 1099              		.loc 1 1529 0 is_stmt 1
 1100 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1101 0072 032B     		cmp	r3, #3
 1102 0074 03D1     		bne	.L79
 1103              	.L78:
1530:Generated_Source\PSoC5/UART_1.c ****                 (retMode == UART_1_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_1.c ****             {
1532:Generated_Source\PSoC5/UART_1.c **** 
1533:Generated_Source\PSoC5/UART_1.c ****             #if(UART_1_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1104              		.loc 1 1534 0
 1105 0076 054B     		ldr	r3, .L80+4
 1106 0078 054A     		ldr	r2, .L80+8
 1107 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1108 007c 1A70     		strb	r2, [r3]
 1109              	.L79:
 1110              	.LBE2:
1535:Generated_Source\PSoC5/UART_1.c ****             #else
1536:Generated_Source\PSoC5/UART_1.c ****                 UART_1_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_1.c **** 
1539:Generated_Source\PSoC5/UART_1.c ****             #if( (UART_1_PARITY_TYPE != UART_1__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_1.c ****                  (UART_1_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_1.c ****                 UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_1.c ****                                                       (uint8) ~UART_1_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_1.c ****             #endif /* End UART_1_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_1.c ****             }
1545:Generated_Source\PSoC5/UART_1.c ****         #endif    /* End UART_1_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_1.c ****         }
1547:Generated_Source\PSoC5/UART_1.c ****     }
 1111              		.loc 1 1547 0
 1112 007e 00BF     		nop
 1113 0080 1437     		adds	r7, r7, #20
 1114              		.cfi_def_cfa_offset 4
 1115 0082 BD46     		mov	sp, r7
 1116              		.cfi_def_cfa_register 13
 1117              		@ sp needed
 1118 0084 80BC     		pop	{r7}
 1119              		.cfi_restore 7
 1120              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 48


 1121 0086 7047     		bx	lr
 1122              	.L81:
 1123              		.align	2
 1124              	.L80:
 1125 0088 00000000 		.word	UART_1_initVar
 1126 008c 30640040 		.word	1073767472
 1127 0090 06000000 		.word	txPeriod.5075
 1128 0094 43640040 		.word	1073767491
 1129 0098 63640040 		.word	1073767523
 1130              		.cfi_endproc
 1131              	.LFE15:
 1132              		.size	UART_1_SendBreak, .-UART_1_SendBreak
 1133              		.section	.text.UART_1_SetTxAddressMode,"ax",%progbits
 1134              		.align	2
 1135              		.global	UART_1_SetTxAddressMode
 1136              		.thumb
 1137              		.thumb_func
 1138              		.type	UART_1_SetTxAddressMode, %function
 1139              	UART_1_SetTxAddressMode:
 1140              	.LFB16:
1548:Generated_Source\PSoC5/UART_1.c **** 
1549:Generated_Source\PSoC5/UART_1.c **** 
1550:Generated_Source\PSoC5/UART_1.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_1.c ****     * Function Name: UART_1_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_1.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_1.c ****     *
1554:Generated_Source\PSoC5/UART_1.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_1.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_1.c ****     *
1557:Generated_Source\PSoC5/UART_1.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_1.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_1.c ****     *       UART_1_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_1.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_1.c ****     *
1564:Generated_Source\PSoC5/UART_1.c ****     * Return:
1565:Generated_Source\PSoC5/UART_1.c ****     *  None.
1566:Generated_Source\PSoC5/UART_1.c ****     *
1567:Generated_Source\PSoC5/UART_1.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_1.c ****     *  This function sets and clears UART_1_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_1.c ****     *  register.
1570:Generated_Source\PSoC5/UART_1.c ****     *
1571:Generated_Source\PSoC5/UART_1.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_1.c ****     void UART_1_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_1.c ****     {
 1141              		.loc 1 1573 0
 1142              		.cfi_startproc
 1143              		@ args = 0, pretend = 0, frame = 8
 1144              		@ frame_needed = 1, uses_anonymous_args = 0
 1145              		@ link register save eliminated.
 1146 0000 80B4     		push	{r7}
 1147              		.cfi_def_cfa_offset 4
 1148              		.cfi_offset 7, -4
 1149 0002 83B0     		sub	sp, sp, #12
 1150              		.cfi_def_cfa_offset 16
 1151 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 49


 1152              		.cfi_def_cfa_register 7
 1153 0006 0346     		mov	r3, r0
 1154 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/UART_1.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART_1.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/UART_1.c ****         {
1577:Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() |
1579:Generated_Source\PSoC5/UART_1.c ****                                                   UART_1_CTRL_MARK);
1580:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART_1.c ****         }
1582:Generated_Source\PSoC5/UART_1.c ****         else
1583:Generated_Source\PSoC5/UART_1.c ****         {
1584:Generated_Source\PSoC5/UART_1.c ****         #if( UART_1_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART_1.c ****             UART_1_WriteControlRegister(UART_1_ReadControlRegister() &
1586:Generated_Source\PSoC5/UART_1.c ****                                                   (uint8) ~UART_1_CTRL_MARK);
1587:Generated_Source\PSoC5/UART_1.c ****         #endif /* End UART_1_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/UART_1.c ****         }
1589:Generated_Source\PSoC5/UART_1.c ****     }
 1155              		.loc 1 1589 0
 1156 000a 00BF     		nop
 1157 000c 0C37     		adds	r7, r7, #12
 1158              		.cfi_def_cfa_offset 4
 1159 000e BD46     		mov	sp, r7
 1160              		.cfi_def_cfa_register 13
 1161              		@ sp needed
 1162 0010 80BC     		pop	{r7}
 1163              		.cfi_restore 7
 1164              		.cfi_def_cfa_offset 0
 1165 0012 7047     		bx	lr
 1166              		.cfi_endproc
 1167              	.LFE16:
 1168              		.size	UART_1_SetTxAddressMode, .-UART_1_SetTxAddressMode
 1169              		.bss
 1170              	txPeriod.5075:
 1171 0006 00       		.space	1
 1172              		.text
 1173              	.Letext0:
 1174              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1175              		.section	.debug_info,"",%progbits
 1176              	.Ldebug_info0:
 1177 0000 04040000 		.4byte	0x404
 1178 0004 0400     		.2byte	0x4
 1179 0006 00000000 		.4byte	.Ldebug_abbrev0
 1180 000a 04       		.byte	0x4
 1181 000b 01       		.uleb128 0x1
 1182 000c 27000000 		.4byte	.LASF54
 1183 0010 0C       		.byte	0xc
 1184 0011 60020000 		.4byte	.LASF55
 1185 0015 BE010000 		.4byte	.LASF56
 1186 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1187 001d 00000000 		.4byte	0
 1188 0021 00000000 		.4byte	.Ldebug_line0
 1189 0025 02       		.uleb128 0x2
 1190 0026 01       		.byte	0x1
 1191 0027 06       		.byte	0x6
 1192 0028 A7030000 		.4byte	.LASF0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 50


 1193 002c 02       		.uleb128 0x2
 1194 002d 01       		.byte	0x1
 1195 002e 08       		.byte	0x8
 1196 002f 1D020000 		.4byte	.LASF1
 1197 0033 02       		.uleb128 0x2
 1198 0034 02       		.byte	0x2
 1199 0035 05       		.byte	0x5
 1200 0036 39020000 		.4byte	.LASF2
 1201 003a 02       		.uleb128 0x2
 1202 003b 02       		.byte	0x2
 1203 003c 07       		.byte	0x7
 1204 003d FC000000 		.4byte	.LASF3
 1205 0041 02       		.uleb128 0x2
 1206 0042 04       		.byte	0x4
 1207 0043 05       		.byte	0x5
 1208 0044 6A030000 		.4byte	.LASF4
 1209 0048 02       		.uleb128 0x2
 1210 0049 04       		.byte	0x4
 1211 004a 07       		.byte	0x7
 1212 004b 9E010000 		.4byte	.LASF5
 1213 004f 02       		.uleb128 0x2
 1214 0050 08       		.byte	0x8
 1215 0051 05       		.byte	0x5
 1216 0052 00000000 		.4byte	.LASF6
 1217 0056 02       		.uleb128 0x2
 1218 0057 08       		.byte	0x8
 1219 0058 07       		.byte	0x7
 1220 0059 97020000 		.4byte	.LASF7
 1221 005d 03       		.uleb128 0x3
 1222 005e 04       		.byte	0x4
 1223 005f 05       		.byte	0x5
 1224 0060 696E7400 		.ascii	"int\000"
 1225 0064 02       		.uleb128 0x2
 1226 0065 04       		.byte	0x4
 1227 0066 07       		.byte	0x7
 1228 0067 0F010000 		.4byte	.LASF8
 1229 006b 04       		.uleb128 0x4
 1230 006c B0010000 		.4byte	.LASF9
 1231 0070 02       		.byte	0x2
 1232 0071 E401     		.2byte	0x1e4
 1233 0073 2C000000 		.4byte	0x2c
 1234 0077 04       		.uleb128 0x4
 1235 0078 43020000 		.4byte	.LASF10
 1236 007c 02       		.byte	0x2
 1237 007d E501     		.2byte	0x1e5
 1238 007f 3A000000 		.4byte	0x3a
 1239 0083 04       		.uleb128 0x4
 1240 0084 4A020000 		.4byte	.LASF11
 1241 0088 02       		.byte	0x2
 1242 0089 E601     		.2byte	0x1e6
 1243 008b 48000000 		.4byte	0x48
 1244 008f 02       		.uleb128 0x2
 1245 0090 04       		.byte	0x4
 1246 0091 04       		.byte	0x4
 1247 0092 4F010000 		.4byte	.LASF12
 1248 0096 02       		.uleb128 0x2
 1249 0097 08       		.byte	0x8
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 51


 1250 0098 04       		.byte	0x4
 1251 0099 2B020000 		.4byte	.LASF13
 1252 009d 04       		.uleb128 0x4
 1253 009e F0020000 		.4byte	.LASF14
 1254 00a2 02       		.byte	0x2
 1255 00a3 F501     		.2byte	0x1f5
 1256 00a5 A9000000 		.4byte	0xa9
 1257 00a9 02       		.uleb128 0x2
 1258 00aa 01       		.byte	0x1
 1259 00ab 08       		.byte	0x8
 1260 00ac 01030000 		.4byte	.LASF15
 1261 00b0 04       		.uleb128 0x4
 1262 00b1 72010000 		.4byte	.LASF16
 1263 00b5 02       		.byte	0x2
 1264 00b6 8E02     		.2byte	0x28e
 1265 00b8 BC000000 		.4byte	0xbc
 1266 00bc 05       		.uleb128 0x5
 1267 00bd 6B000000 		.4byte	0x6b
 1268 00c1 05       		.uleb128 0x5
 1269 00c2 77000000 		.4byte	0x77
 1270 00c6 04       		.uleb128 0x4
 1271 00c7 73030000 		.4byte	.LASF17
 1272 00cb 02       		.byte	0x2
 1273 00cc 9002     		.2byte	0x290
 1274 00ce D2000000 		.4byte	0xd2
 1275 00d2 05       		.uleb128 0x5
 1276 00d3 83000000 		.4byte	0x83
 1277 00d7 02       		.uleb128 0x2
 1278 00d8 08       		.byte	0x8
 1279 00d9 04       		.byte	0x4
 1280 00da 87030000 		.4byte	.LASF18
 1281 00de 02       		.uleb128 0x2
 1282 00df 04       		.byte	0x4
 1283 00e0 07       		.byte	0x7
 1284 00e1 E7020000 		.4byte	.LASF19
 1285 00e5 06       		.uleb128 0x6
 1286 00e6 1A000000 		.4byte	.LASF20
 1287 00ea 01       		.byte	0x1
 1288 00eb 4C       		.byte	0x4c
 1289 00ec 00000000 		.4byte	.LFB0
 1290 00f0 24000000 		.4byte	.LFE0-.LFB0
 1291 00f4 01       		.uleb128 0x1
 1292 00f5 9C       		.byte	0x9c
 1293 00f6 06       		.uleb128 0x6
 1294 00f7 0E000000 		.4byte	.LASF21
 1295 00fb 01       		.byte	0x1
 1296 00fc 6A       		.byte	0x6a
 1297 00fd 00000000 		.4byte	.LFB1
 1298 0101 3C000000 		.4byte	.LFE1-.LFB1
 1299 0105 01       		.uleb128 0x1
 1300 0106 9C       		.byte	0x9c
 1301 0107 07       		.uleb128 0x7
 1302 0108 79030000 		.4byte	.LASF22
 1303 010c 01       		.byte	0x1
 1304 010d B7       		.byte	0xb7
 1305 010e 00000000 		.4byte	.LFB2
 1306 0112 4C000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 52


 1307 0116 01       		.uleb128 0x1
 1308 0117 9C       		.byte	0x9c
 1309 0118 2B010000 		.4byte	0x12b
 1310 011c 08       		.uleb128 0x8
 1311 011d 0C020000 		.4byte	.LASF24
 1312 0121 01       		.byte	0x1
 1313 0122 B9       		.byte	0xb9
 1314 0123 6B000000 		.4byte	0x6b
 1315 0127 02       		.uleb128 0x2
 1316 0128 91       		.byte	0x91
 1317 0129 77       		.sleb128 -9
 1318 012a 00       		.byte	0
 1319 012b 07       		.uleb128 0x7
 1320 012c 92010000 		.4byte	.LASF23
 1321 0130 01       		.byte	0x1
 1322 0131 F0       		.byte	0xf0
 1323 0132 00000000 		.4byte	.LFB3
 1324 0136 40000000 		.4byte	.LFE3-.LFB3
 1325 013a 01       		.uleb128 0x1
 1326 013b 9C       		.byte	0x9c
 1327 013c 4F010000 		.4byte	0x14f
 1328 0140 08       		.uleb128 0x8
 1329 0141 0C020000 		.4byte	.LASF24
 1330 0145 01       		.byte	0x1
 1331 0146 F2       		.byte	0xf2
 1332 0147 6B000000 		.4byte	0x6b
 1333 014b 02       		.uleb128 0x2
 1334 014c 91       		.byte	0x91
 1335 014d 77       		.sleb128 -9
 1336 014e 00       		.byte	0
 1337 014f 09       		.uleb128 0x9
 1338 0150 77010000 		.4byte	.LASF31
 1339 0154 01       		.byte	0x1
 1340 0155 2701     		.2byte	0x127
 1341 0157 6B000000 		.4byte	0x6b
 1342 015b 00000000 		.4byte	.LFB4
 1343 015f 0E000000 		.4byte	.LFE4-.LFB4
 1344 0163 01       		.uleb128 0x1
 1345 0164 9C       		.byte	0x9c
 1346 0165 0A       		.uleb128 0xa
 1347 0166 B5000000 		.4byte	.LASF25
 1348 016a 01       		.byte	0x1
 1349 016b 3F01     		.2byte	0x13f
 1350 016d 00000000 		.4byte	.LFB5
 1351 0171 14000000 		.4byte	.LFE5-.LFB5
 1352 0175 01       		.uleb128 0x1
 1353 0176 9C       		.byte	0x9c
 1354 0177 8B010000 		.4byte	0x18b
 1355 017b 0B       		.uleb128 0xb
 1356 017c B6010000 		.4byte	.LASF27
 1357 0180 01       		.byte	0x1
 1358 0181 3F01     		.2byte	0x13f
 1359 0183 6B000000 		.4byte	0x6b
 1360 0187 02       		.uleb128 0x2
 1361 0188 91       		.byte	0x91
 1362 0189 77       		.sleb128 -9
 1363 018a 00       		.byte	0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 53


 1364 018b 0A       		.uleb128 0xa
 1365 018c E2000000 		.4byte	.LASF26
 1366 0190 01       		.byte	0x1
 1367 0191 8C03     		.2byte	0x38c
 1368 0193 00000000 		.4byte	.LFB6
 1369 0197 20000000 		.4byte	.LFE6-.LFB6
 1370 019b 01       		.uleb128 0x1
 1371 019c 9C       		.byte	0x9c
 1372 019d B1010000 		.4byte	0x1b1
 1373 01a1 0B       		.uleb128 0xb
 1374 01a2 32020000 		.4byte	.LASF28
 1375 01a6 01       		.byte	0x1
 1376 01a7 8C03     		.2byte	0x38c
 1377 01a9 6B000000 		.4byte	0x6b
 1378 01ad 02       		.uleb128 0x2
 1379 01ae 91       		.byte	0x91
 1380 01af 77       		.sleb128 -9
 1381 01b0 00       		.byte	0
 1382 01b1 0A       		.uleb128 0xa
 1383 01b2 0E030000 		.4byte	.LASF29
 1384 01b6 01       		.byte	0x1
 1385 01b7 AE03     		.2byte	0x3ae
 1386 01b9 00000000 		.4byte	.LFB7
 1387 01bd 94000000 		.4byte	.LFE7-.LFB7
 1388 01c1 01       		.uleb128 0x1
 1389 01c2 9C       		.byte	0x9c
 1390 01c3 D7010000 		.4byte	0x1d7
 1391 01c7 0B       		.uleb128 0xb
 1392 01c8 F6020000 		.4byte	.LASF30
 1393 01cc 01       		.byte	0x1
 1394 01cd AE03     		.2byte	0x3ae
 1395 01cf 6B000000 		.4byte	0x6b
 1396 01d3 02       		.uleb128 0x2
 1397 01d4 91       		.byte	0x91
 1398 01d5 77       		.sleb128 -9
 1399 01d6 00       		.byte	0
 1400 01d7 09       		.uleb128 0x9
 1401 01d8 34010000 		.4byte	.LASF32
 1402 01dc 01       		.byte	0x1
 1403 01dd EB03     		.2byte	0x3eb
 1404 01df 6B000000 		.4byte	0x6b
 1405 01e3 00000000 		.4byte	.LFB8
 1406 01e7 18000000 		.4byte	.LFE8-.LFB8
 1407 01eb 01       		.uleb128 0x1
 1408 01ec 9C       		.byte	0x9c
 1409 01ed 0A       		.uleb128 0xa
 1410 01ee 51020000 		.4byte	.LASF33
 1411 01f2 01       		.byte	0x1
 1412 01f3 1104     		.2byte	0x411
 1413 01f5 00000000 		.4byte	.LFB9
 1414 01f9 BC000000 		.4byte	.LFE9-.LFB9
 1415 01fd 01       		.uleb128 0x1
 1416 01fe 9C       		.byte	0x9c
 1417 01ff 31020000 		.4byte	0x231
 1418 0203 0B       		.uleb128 0xb
 1419 0204 F6020000 		.4byte	.LASF30
 1420 0208 01       		.byte	0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 54


 1421 0209 1104     		.2byte	0x411
 1422 020b 6B000000 		.4byte	0x6b
 1423 020f 02       		.uleb128 0x2
 1424 0210 91       		.byte	0x91
 1425 0211 6F       		.sleb128 -17
 1426 0212 0C       		.uleb128 0xc
 1427 0213 55010000 		.4byte	.LASF34
 1428 0217 01       		.byte	0x1
 1429 0218 1804     		.2byte	0x418
 1430 021a 77000000 		.4byte	0x77
 1431 021e 02       		.uleb128 0x2
 1432 021f 91       		.byte	0x91
 1433 0220 76       		.sleb128 -10
 1434 0221 0C       		.uleb128 0xc
 1435 0222 45030000 		.4byte	.LASF35
 1436 0226 01       		.byte	0x1
 1437 0227 1904     		.2byte	0x419
 1438 0229 77000000 		.4byte	0x77
 1439 022d 02       		.uleb128 0x2
 1440 022e 91       		.byte	0x91
 1441 022f 74       		.sleb128 -12
 1442 0230 00       		.byte	0
 1443 0231 0D       		.uleb128 0xd
 1444 0232 B3030000 		.4byte	.LASF36
 1445 0236 01       		.byte	0x1
 1446 0237 7904     		.2byte	0x479
 1447 0239 00000000 		.4byte	.LFB10
 1448 023d 44000000 		.4byte	.LFE10-.LFB10
 1449 0241 01       		.uleb128 0x1
 1450 0242 9C       		.byte	0x9c
 1451 0243 66020000 		.4byte	0x266
 1452 0247 0B       		.uleb128 0xb
 1453 0248 48010000 		.4byte	.LASF37
 1454 024c 01       		.byte	0x1
 1455 024d 7904     		.2byte	0x479
 1456 024f 66020000 		.4byte	0x266
 1457 0253 02       		.uleb128 0x2
 1458 0254 91       		.byte	0x91
 1459 0255 6C       		.sleb128 -20
 1460 0256 0C       		.uleb128 0xc
 1461 0257 BD020000 		.4byte	.LASF38
 1462 025b 01       		.byte	0x1
 1463 025c 7B04     		.2byte	0x47b
 1464 025e 77000000 		.4byte	0x77
 1465 0262 02       		.uleb128 0x2
 1466 0263 91       		.byte	0x91
 1467 0264 76       		.sleb128 -10
 1468 0265 00       		.byte	0
 1469 0266 0E       		.uleb128 0xe
 1470 0267 04       		.byte	0x4
 1471 0268 6C020000 		.4byte	0x26c
 1472 026c 0F       		.uleb128 0xf
 1473 026d 9D000000 		.4byte	0x9d
 1474 0271 0D       		.uleb128 0xd
 1475 0272 D7020000 		.4byte	.LASF39
 1476 0276 01       		.byte	0x1
 1477 0277 A704     		.2byte	0x4a7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 55


 1478 0279 00000000 		.4byte	.LFB11
 1479 027d 44000000 		.4byte	.LFE11-.LFB11
 1480 0281 01       		.uleb128 0x1
 1481 0282 9C       		.byte	0x9c
 1482 0283 B5020000 		.4byte	0x2b5
 1483 0287 0B       		.uleb128 0xb
 1484 0288 48010000 		.4byte	.LASF37
 1485 028c 01       		.byte	0x1
 1486 028d A704     		.2byte	0x4a7
 1487 028f B5020000 		.4byte	0x2b5
 1488 0293 02       		.uleb128 0x2
 1489 0294 91       		.byte	0x91
 1490 0295 6C       		.sleb128 -20
 1491 0296 0B       		.uleb128 0xb
 1492 0297 02020000 		.4byte	.LASF40
 1493 029b 01       		.byte	0x1
 1494 029c A704     		.2byte	0x4a7
 1495 029e 77000000 		.4byte	0x77
 1496 02a2 02       		.uleb128 0x2
 1497 02a3 91       		.byte	0x91
 1498 02a4 6A       		.sleb128 -22
 1499 02a5 0C       		.uleb128 0xc
 1500 02a6 BD020000 		.4byte	.LASF38
 1501 02aa 01       		.byte	0x1
 1502 02ab AA04     		.2byte	0x4aa
 1503 02ad 77000000 		.4byte	0x77
 1504 02b1 02       		.uleb128 0x2
 1505 02b2 91       		.byte	0x91
 1506 02b3 76       		.sleb128 -10
 1507 02b4 00       		.byte	0
 1508 02b5 0E       		.uleb128 0xe
 1509 02b6 04       		.byte	0x4
 1510 02b7 BB020000 		.4byte	0x2bb
 1511 02bb 0F       		.uleb128 0xf
 1512 02bc 6B000000 		.4byte	0x6b
 1513 02c0 0D       		.uleb128 0xd
 1514 02c1 AE020000 		.4byte	.LASF41
 1515 02c5 01       		.byte	0x1
 1516 02c6 CE04     		.2byte	0x4ce
 1517 02c8 00000000 		.4byte	.LFB12
 1518 02cc 34000000 		.4byte	.LFE12-.LFB12
 1519 02d0 01       		.uleb128 0x1
 1520 02d1 9C       		.byte	0x9c
 1521 02d2 E6020000 		.4byte	0x2e6
 1522 02d6 0B       		.uleb128 0xb
 1523 02d7 F6020000 		.4byte	.LASF30
 1524 02db 01       		.byte	0x1
 1525 02dc CE04     		.2byte	0x4ce
 1526 02de 6B000000 		.4byte	0x6b
 1527 02e2 02       		.uleb128 0x2
 1528 02e3 91       		.byte	0x91
 1529 02e4 77       		.sleb128 -9
 1530 02e5 00       		.byte	0
 1531 02e6 10       		.uleb128 0x10
 1532 02e7 80020000 		.4byte	.LASF57
 1533 02eb 01       		.byte	0x1
 1534 02ec F904     		.2byte	0x4f9
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 56


 1535 02ee 77000000 		.4byte	0x77
 1536 02f2 00000000 		.4byte	.LFB13
 1537 02f6 74000000 		.4byte	.LFE13-.LFB13
 1538 02fa 01       		.uleb128 0x1
 1539 02fb 9C       		.byte	0x9c
 1540 02fc 10030000 		.4byte	0x310
 1541 0300 0C       		.uleb128 0xc
 1542 0301 C4030000 		.4byte	.LASF42
 1543 0305 01       		.byte	0x1
 1544 0306 FC04     		.2byte	0x4fc
 1545 0308 77000000 		.4byte	0x77
 1546 030c 02       		.uleb128 0x2
 1547 030d 91       		.byte	0x91
 1548 030e 76       		.sleb128 -10
 1549 030f 00       		.byte	0
 1550 0310 0D       		.uleb128 0xd
 1551 0311 21030000 		.4byte	.LASF43
 1552 0315 01       		.byte	0x1
 1553 0316 4A05     		.2byte	0x54a
 1554 0318 00000000 		.4byte	.LFB14
 1555 031c 6C000000 		.4byte	.LFE14-.LFB14
 1556 0320 01       		.uleb128 0x1
 1557 0321 9C       		.byte	0x9c
 1558 0322 36030000 		.4byte	0x336
 1559 0326 0C       		.uleb128 0xc
 1560 0327 0C020000 		.4byte	.LASF24
 1561 032b 01       		.byte	0x1
 1562 032c 4C05     		.2byte	0x54c
 1563 032e 6B000000 		.4byte	0x6b
 1564 0332 02       		.uleb128 0x2
 1565 0333 91       		.byte	0x91
 1566 0334 77       		.sleb128 -9
 1567 0335 00       		.byte	0
 1568 0336 0A       		.uleb128 0xa
 1569 0337 C6020000 		.4byte	.LASF44
 1570 033b 01       		.byte	0x1
 1571 033c A005     		.2byte	0x5a0
 1572 033e 00000000 		.4byte	.LFB15
 1573 0342 9C000000 		.4byte	.LFE15-.LFB15
 1574 0346 01       		.uleb128 0x1
 1575 0347 9C       		.byte	0x9c
 1576 0348 87030000 		.4byte	0x387
 1577 034c 0B       		.uleb128 0xb
 1578 034d 06030000 		.4byte	.LASF45
 1579 0351 01       		.byte	0x1
 1580 0352 A005     		.2byte	0x5a0
 1581 0354 6B000000 		.4byte	0x6b
 1582 0358 02       		.uleb128 0x2
 1583 0359 91       		.byte	0x91
 1584 035a 6F       		.sleb128 -17
 1585 035b 11       		.uleb128 0x11
 1586 035c 12000000 		.4byte	.LBB2
 1587 0360 6C000000 		.4byte	.LBE2-.LBB2
 1588 0364 0C       		.uleb128 0xc
 1589 0365 DA000000 		.4byte	.LASF46
 1590 0369 01       		.byte	0x1
 1591 036a A805     		.2byte	0x5a8
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 57


 1592 036c 6B000000 		.4byte	0x6b
 1593 0370 02       		.uleb128 0x2
 1594 0371 91       		.byte	0x91
 1595 0372 77       		.sleb128 -9
 1596 0373 0C       		.uleb128 0xc
 1597 0374 D1000000 		.4byte	.LASF47
 1598 0378 01       		.byte	0x1
 1599 0379 D005     		.2byte	0x5d0
 1600 037b 6B000000 		.4byte	0x6b
 1601 037f 05       		.uleb128 0x5
 1602 0380 03       		.byte	0x3
 1603 0381 06000000 		.4byte	txPeriod.5075
 1604 0385 00       		.byte	0
 1605 0386 00       		.byte	0
 1606 0387 0A       		.uleb128 0xa
 1607 0388 1C010000 		.4byte	.LASF48
 1608 038c 01       		.byte	0x1
 1609 038d 2406     		.2byte	0x624
 1610 038f 00000000 		.4byte	.LFB16
 1611 0393 14000000 		.4byte	.LFE16-.LFB16
 1612 0397 01       		.uleb128 0x1
 1613 0398 9C       		.byte	0x9c
 1614 0399 AD030000 		.4byte	0x3ad
 1615 039d 0B       		.uleb128 0xb
 1616 039e 66010000 		.4byte	.LASF49
 1617 03a2 01       		.byte	0x1
 1618 03a3 2406     		.2byte	0x624
 1619 03a5 6B000000 		.4byte	0x6b
 1620 03a9 02       		.uleb128 0x2
 1621 03aa 91       		.byte	0x91
 1622 03ab 77       		.sleb128 -9
 1623 03ac 00       		.byte	0
 1624 03ad 12       		.uleb128 0x12
 1625 03ae 36030000 		.4byte	.LASF50
 1626 03b2 01       		.byte	0x1
 1627 03b3 1B       		.byte	0x1b
 1628 03b4 6B000000 		.4byte	0x6b
 1629 03b8 05       		.uleb128 0x5
 1630 03b9 03       		.byte	0x3
 1631 03ba 00000000 		.4byte	UART_1_initVar
 1632 03be 13       		.uleb128 0x13
 1633 03bf BC000000 		.4byte	0xbc
 1634 03c3 CF030000 		.4byte	0x3cf
 1635 03c7 14       		.uleb128 0x14
 1636 03c8 DE000000 		.4byte	0xde
 1637 03cc FF03     		.2byte	0x3ff
 1638 03ce 00       		.byte	0
 1639 03cf 12       		.uleb128 0x12
 1640 03d0 C9030000 		.4byte	.LASF51
 1641 03d4 01       		.byte	0x1
 1642 03d5 1E       		.byte	0x1e
 1643 03d6 E0030000 		.4byte	0x3e0
 1644 03da 05       		.uleb128 0x5
 1645 03db 03       		.byte	0x3
 1646 03dc 00000000 		.4byte	UART_1_txBuffer
 1647 03e0 05       		.uleb128 0x5
 1648 03e1 BE030000 		.4byte	0x3be
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 58


 1649 03e5 12       		.uleb128 0x12
 1650 03e6 93030000 		.4byte	.LASF52
 1651 03ea 01       		.byte	0x1
 1652 03eb 1F       		.byte	0x1f
 1653 03ec C1000000 		.4byte	0xc1
 1654 03f0 05       		.uleb128 0x5
 1655 03f1 03       		.byte	0x3
 1656 03f2 00000000 		.4byte	UART_1_txBufferRead
 1657 03f6 12       		.uleb128 0x12
 1658 03f7 55030000 		.4byte	.LASF53
 1659 03fb 01       		.byte	0x1
 1660 03fc 20       		.byte	0x20
 1661 03fd 77000000 		.4byte	0x77
 1662 0401 05       		.uleb128 0x5
 1663 0402 03       		.byte	0x3
 1664 0403 00000000 		.4byte	UART_1_txBufferWrite
 1665 0407 00       		.byte	0
 1666              		.section	.debug_abbrev,"",%progbits
 1667              	.Ldebug_abbrev0:
 1668 0000 01       		.uleb128 0x1
 1669 0001 11       		.uleb128 0x11
 1670 0002 01       		.byte	0x1
 1671 0003 25       		.uleb128 0x25
 1672 0004 0E       		.uleb128 0xe
 1673 0005 13       		.uleb128 0x13
 1674 0006 0B       		.uleb128 0xb
 1675 0007 03       		.uleb128 0x3
 1676 0008 0E       		.uleb128 0xe
 1677 0009 1B       		.uleb128 0x1b
 1678 000a 0E       		.uleb128 0xe
 1679 000b 55       		.uleb128 0x55
 1680 000c 17       		.uleb128 0x17
 1681 000d 11       		.uleb128 0x11
 1682 000e 01       		.uleb128 0x1
 1683 000f 10       		.uleb128 0x10
 1684 0010 17       		.uleb128 0x17
 1685 0011 00       		.byte	0
 1686 0012 00       		.byte	0
 1687 0013 02       		.uleb128 0x2
 1688 0014 24       		.uleb128 0x24
 1689 0015 00       		.byte	0
 1690 0016 0B       		.uleb128 0xb
 1691 0017 0B       		.uleb128 0xb
 1692 0018 3E       		.uleb128 0x3e
 1693 0019 0B       		.uleb128 0xb
 1694 001a 03       		.uleb128 0x3
 1695 001b 0E       		.uleb128 0xe
 1696 001c 00       		.byte	0
 1697 001d 00       		.byte	0
 1698 001e 03       		.uleb128 0x3
 1699 001f 24       		.uleb128 0x24
 1700 0020 00       		.byte	0
 1701 0021 0B       		.uleb128 0xb
 1702 0022 0B       		.uleb128 0xb
 1703 0023 3E       		.uleb128 0x3e
 1704 0024 0B       		.uleb128 0xb
 1705 0025 03       		.uleb128 0x3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 59


 1706 0026 08       		.uleb128 0x8
 1707 0027 00       		.byte	0
 1708 0028 00       		.byte	0
 1709 0029 04       		.uleb128 0x4
 1710 002a 16       		.uleb128 0x16
 1711 002b 00       		.byte	0
 1712 002c 03       		.uleb128 0x3
 1713 002d 0E       		.uleb128 0xe
 1714 002e 3A       		.uleb128 0x3a
 1715 002f 0B       		.uleb128 0xb
 1716 0030 3B       		.uleb128 0x3b
 1717 0031 05       		.uleb128 0x5
 1718 0032 49       		.uleb128 0x49
 1719 0033 13       		.uleb128 0x13
 1720 0034 00       		.byte	0
 1721 0035 00       		.byte	0
 1722 0036 05       		.uleb128 0x5
 1723 0037 35       		.uleb128 0x35
 1724 0038 00       		.byte	0
 1725 0039 49       		.uleb128 0x49
 1726 003a 13       		.uleb128 0x13
 1727 003b 00       		.byte	0
 1728 003c 00       		.byte	0
 1729 003d 06       		.uleb128 0x6
 1730 003e 2E       		.uleb128 0x2e
 1731 003f 00       		.byte	0
 1732 0040 3F       		.uleb128 0x3f
 1733 0041 19       		.uleb128 0x19
 1734 0042 03       		.uleb128 0x3
 1735 0043 0E       		.uleb128 0xe
 1736 0044 3A       		.uleb128 0x3a
 1737 0045 0B       		.uleb128 0xb
 1738 0046 3B       		.uleb128 0x3b
 1739 0047 0B       		.uleb128 0xb
 1740 0048 27       		.uleb128 0x27
 1741 0049 19       		.uleb128 0x19
 1742 004a 11       		.uleb128 0x11
 1743 004b 01       		.uleb128 0x1
 1744 004c 12       		.uleb128 0x12
 1745 004d 06       		.uleb128 0x6
 1746 004e 40       		.uleb128 0x40
 1747 004f 18       		.uleb128 0x18
 1748 0050 9642     		.uleb128 0x2116
 1749 0052 19       		.uleb128 0x19
 1750 0053 00       		.byte	0
 1751 0054 00       		.byte	0
 1752 0055 07       		.uleb128 0x7
 1753 0056 2E       		.uleb128 0x2e
 1754 0057 01       		.byte	0x1
 1755 0058 3F       		.uleb128 0x3f
 1756 0059 19       		.uleb128 0x19
 1757 005a 03       		.uleb128 0x3
 1758 005b 0E       		.uleb128 0xe
 1759 005c 3A       		.uleb128 0x3a
 1760 005d 0B       		.uleb128 0xb
 1761 005e 3B       		.uleb128 0x3b
 1762 005f 0B       		.uleb128 0xb
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 60


 1763 0060 27       		.uleb128 0x27
 1764 0061 19       		.uleb128 0x19
 1765 0062 11       		.uleb128 0x11
 1766 0063 01       		.uleb128 0x1
 1767 0064 12       		.uleb128 0x12
 1768 0065 06       		.uleb128 0x6
 1769 0066 40       		.uleb128 0x40
 1770 0067 18       		.uleb128 0x18
 1771 0068 9642     		.uleb128 0x2116
 1772 006a 19       		.uleb128 0x19
 1773 006b 01       		.uleb128 0x1
 1774 006c 13       		.uleb128 0x13
 1775 006d 00       		.byte	0
 1776 006e 00       		.byte	0
 1777 006f 08       		.uleb128 0x8
 1778 0070 34       		.uleb128 0x34
 1779 0071 00       		.byte	0
 1780 0072 03       		.uleb128 0x3
 1781 0073 0E       		.uleb128 0xe
 1782 0074 3A       		.uleb128 0x3a
 1783 0075 0B       		.uleb128 0xb
 1784 0076 3B       		.uleb128 0x3b
 1785 0077 0B       		.uleb128 0xb
 1786 0078 49       		.uleb128 0x49
 1787 0079 13       		.uleb128 0x13
 1788 007a 02       		.uleb128 0x2
 1789 007b 18       		.uleb128 0x18
 1790 007c 00       		.byte	0
 1791 007d 00       		.byte	0
 1792 007e 09       		.uleb128 0x9
 1793 007f 2E       		.uleb128 0x2e
 1794 0080 00       		.byte	0
 1795 0081 3F       		.uleb128 0x3f
 1796 0082 19       		.uleb128 0x19
 1797 0083 03       		.uleb128 0x3
 1798 0084 0E       		.uleb128 0xe
 1799 0085 3A       		.uleb128 0x3a
 1800 0086 0B       		.uleb128 0xb
 1801 0087 3B       		.uleb128 0x3b
 1802 0088 05       		.uleb128 0x5
 1803 0089 27       		.uleb128 0x27
 1804 008a 19       		.uleb128 0x19
 1805 008b 49       		.uleb128 0x49
 1806 008c 13       		.uleb128 0x13
 1807 008d 11       		.uleb128 0x11
 1808 008e 01       		.uleb128 0x1
 1809 008f 12       		.uleb128 0x12
 1810 0090 06       		.uleb128 0x6
 1811 0091 40       		.uleb128 0x40
 1812 0092 18       		.uleb128 0x18
 1813 0093 9742     		.uleb128 0x2117
 1814 0095 19       		.uleb128 0x19
 1815 0096 00       		.byte	0
 1816 0097 00       		.byte	0
 1817 0098 0A       		.uleb128 0xa
 1818 0099 2E       		.uleb128 0x2e
 1819 009a 01       		.byte	0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 61


 1820 009b 3F       		.uleb128 0x3f
 1821 009c 19       		.uleb128 0x19
 1822 009d 03       		.uleb128 0x3
 1823 009e 0E       		.uleb128 0xe
 1824 009f 3A       		.uleb128 0x3a
 1825 00a0 0B       		.uleb128 0xb
 1826 00a1 3B       		.uleb128 0x3b
 1827 00a2 05       		.uleb128 0x5
 1828 00a3 27       		.uleb128 0x27
 1829 00a4 19       		.uleb128 0x19
 1830 00a5 11       		.uleb128 0x11
 1831 00a6 01       		.uleb128 0x1
 1832 00a7 12       		.uleb128 0x12
 1833 00a8 06       		.uleb128 0x6
 1834 00a9 40       		.uleb128 0x40
 1835 00aa 18       		.uleb128 0x18
 1836 00ab 9742     		.uleb128 0x2117
 1837 00ad 19       		.uleb128 0x19
 1838 00ae 01       		.uleb128 0x1
 1839 00af 13       		.uleb128 0x13
 1840 00b0 00       		.byte	0
 1841 00b1 00       		.byte	0
 1842 00b2 0B       		.uleb128 0xb
 1843 00b3 05       		.uleb128 0x5
 1844 00b4 00       		.byte	0
 1845 00b5 03       		.uleb128 0x3
 1846 00b6 0E       		.uleb128 0xe
 1847 00b7 3A       		.uleb128 0x3a
 1848 00b8 0B       		.uleb128 0xb
 1849 00b9 3B       		.uleb128 0x3b
 1850 00ba 05       		.uleb128 0x5
 1851 00bb 49       		.uleb128 0x49
 1852 00bc 13       		.uleb128 0x13
 1853 00bd 02       		.uleb128 0x2
 1854 00be 18       		.uleb128 0x18
 1855 00bf 00       		.byte	0
 1856 00c0 00       		.byte	0
 1857 00c1 0C       		.uleb128 0xc
 1858 00c2 34       		.uleb128 0x34
 1859 00c3 00       		.byte	0
 1860 00c4 03       		.uleb128 0x3
 1861 00c5 0E       		.uleb128 0xe
 1862 00c6 3A       		.uleb128 0x3a
 1863 00c7 0B       		.uleb128 0xb
 1864 00c8 3B       		.uleb128 0x3b
 1865 00c9 05       		.uleb128 0x5
 1866 00ca 49       		.uleb128 0x49
 1867 00cb 13       		.uleb128 0x13
 1868 00cc 02       		.uleb128 0x2
 1869 00cd 18       		.uleb128 0x18
 1870 00ce 00       		.byte	0
 1871 00cf 00       		.byte	0
 1872 00d0 0D       		.uleb128 0xd
 1873 00d1 2E       		.uleb128 0x2e
 1874 00d2 01       		.byte	0x1
 1875 00d3 3F       		.uleb128 0x3f
 1876 00d4 19       		.uleb128 0x19
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 62


 1877 00d5 03       		.uleb128 0x3
 1878 00d6 0E       		.uleb128 0xe
 1879 00d7 3A       		.uleb128 0x3a
 1880 00d8 0B       		.uleb128 0xb
 1881 00d9 3B       		.uleb128 0x3b
 1882 00da 05       		.uleb128 0x5
 1883 00db 27       		.uleb128 0x27
 1884 00dc 19       		.uleb128 0x19
 1885 00dd 11       		.uleb128 0x11
 1886 00de 01       		.uleb128 0x1
 1887 00df 12       		.uleb128 0x12
 1888 00e0 06       		.uleb128 0x6
 1889 00e1 40       		.uleb128 0x40
 1890 00e2 18       		.uleb128 0x18
 1891 00e3 9642     		.uleb128 0x2116
 1892 00e5 19       		.uleb128 0x19
 1893 00e6 01       		.uleb128 0x1
 1894 00e7 13       		.uleb128 0x13
 1895 00e8 00       		.byte	0
 1896 00e9 00       		.byte	0
 1897 00ea 0E       		.uleb128 0xe
 1898 00eb 0F       		.uleb128 0xf
 1899 00ec 00       		.byte	0
 1900 00ed 0B       		.uleb128 0xb
 1901 00ee 0B       		.uleb128 0xb
 1902 00ef 49       		.uleb128 0x49
 1903 00f0 13       		.uleb128 0x13
 1904 00f1 00       		.byte	0
 1905 00f2 00       		.byte	0
 1906 00f3 0F       		.uleb128 0xf
 1907 00f4 26       		.uleb128 0x26
 1908 00f5 00       		.byte	0
 1909 00f6 49       		.uleb128 0x49
 1910 00f7 13       		.uleb128 0x13
 1911 00f8 00       		.byte	0
 1912 00f9 00       		.byte	0
 1913 00fa 10       		.uleb128 0x10
 1914 00fb 2E       		.uleb128 0x2e
 1915 00fc 01       		.byte	0x1
 1916 00fd 3F       		.uleb128 0x3f
 1917 00fe 19       		.uleb128 0x19
 1918 00ff 03       		.uleb128 0x3
 1919 0100 0E       		.uleb128 0xe
 1920 0101 3A       		.uleb128 0x3a
 1921 0102 0B       		.uleb128 0xb
 1922 0103 3B       		.uleb128 0x3b
 1923 0104 05       		.uleb128 0x5
 1924 0105 27       		.uleb128 0x27
 1925 0106 19       		.uleb128 0x19
 1926 0107 49       		.uleb128 0x49
 1927 0108 13       		.uleb128 0x13
 1928 0109 11       		.uleb128 0x11
 1929 010a 01       		.uleb128 0x1
 1930 010b 12       		.uleb128 0x12
 1931 010c 06       		.uleb128 0x6
 1932 010d 40       		.uleb128 0x40
 1933 010e 18       		.uleb128 0x18
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 63


 1934 010f 9742     		.uleb128 0x2117
 1935 0111 19       		.uleb128 0x19
 1936 0112 01       		.uleb128 0x1
 1937 0113 13       		.uleb128 0x13
 1938 0114 00       		.byte	0
 1939 0115 00       		.byte	0
 1940 0116 11       		.uleb128 0x11
 1941 0117 0B       		.uleb128 0xb
 1942 0118 01       		.byte	0x1
 1943 0119 11       		.uleb128 0x11
 1944 011a 01       		.uleb128 0x1
 1945 011b 12       		.uleb128 0x12
 1946 011c 06       		.uleb128 0x6
 1947 011d 00       		.byte	0
 1948 011e 00       		.byte	0
 1949 011f 12       		.uleb128 0x12
 1950 0120 34       		.uleb128 0x34
 1951 0121 00       		.byte	0
 1952 0122 03       		.uleb128 0x3
 1953 0123 0E       		.uleb128 0xe
 1954 0124 3A       		.uleb128 0x3a
 1955 0125 0B       		.uleb128 0xb
 1956 0126 3B       		.uleb128 0x3b
 1957 0127 0B       		.uleb128 0xb
 1958 0128 49       		.uleb128 0x49
 1959 0129 13       		.uleb128 0x13
 1960 012a 3F       		.uleb128 0x3f
 1961 012b 19       		.uleb128 0x19
 1962 012c 02       		.uleb128 0x2
 1963 012d 18       		.uleb128 0x18
 1964 012e 00       		.byte	0
 1965 012f 00       		.byte	0
 1966 0130 13       		.uleb128 0x13
 1967 0131 01       		.uleb128 0x1
 1968 0132 01       		.byte	0x1
 1969 0133 49       		.uleb128 0x49
 1970 0134 13       		.uleb128 0x13
 1971 0135 01       		.uleb128 0x1
 1972 0136 13       		.uleb128 0x13
 1973 0137 00       		.byte	0
 1974 0138 00       		.byte	0
 1975 0139 14       		.uleb128 0x14
 1976 013a 21       		.uleb128 0x21
 1977 013b 00       		.byte	0
 1978 013c 49       		.uleb128 0x49
 1979 013d 13       		.uleb128 0x13
 1980 013e 2F       		.uleb128 0x2f
 1981 013f 05       		.uleb128 0x5
 1982 0140 00       		.byte	0
 1983 0141 00       		.byte	0
 1984 0142 00       		.byte	0
 1985              		.section	.debug_aranges,"",%progbits
 1986 0000 9C000000 		.4byte	0x9c
 1987 0004 0200     		.2byte	0x2
 1988 0006 00000000 		.4byte	.Ldebug_info0
 1989 000a 04       		.byte	0x4
 1990 000b 00       		.byte	0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 64


 1991 000c 0000     		.2byte	0
 1992 000e 0000     		.2byte	0
 1993 0010 00000000 		.4byte	.LFB0
 1994 0014 24000000 		.4byte	.LFE0-.LFB0
 1995 0018 00000000 		.4byte	.LFB1
 1996 001c 3C000000 		.4byte	.LFE1-.LFB1
 1997 0020 00000000 		.4byte	.LFB2
 1998 0024 4C000000 		.4byte	.LFE2-.LFB2
 1999 0028 00000000 		.4byte	.LFB3
 2000 002c 40000000 		.4byte	.LFE3-.LFB3
 2001 0030 00000000 		.4byte	.LFB4
 2002 0034 0E000000 		.4byte	.LFE4-.LFB4
 2003 0038 00000000 		.4byte	.LFB5
 2004 003c 14000000 		.4byte	.LFE5-.LFB5
 2005 0040 00000000 		.4byte	.LFB6
 2006 0044 20000000 		.4byte	.LFE6-.LFB6
 2007 0048 00000000 		.4byte	.LFB7
 2008 004c 94000000 		.4byte	.LFE7-.LFB7
 2009 0050 00000000 		.4byte	.LFB8
 2010 0054 18000000 		.4byte	.LFE8-.LFB8
 2011 0058 00000000 		.4byte	.LFB9
 2012 005c BC000000 		.4byte	.LFE9-.LFB9
 2013 0060 00000000 		.4byte	.LFB10
 2014 0064 44000000 		.4byte	.LFE10-.LFB10
 2015 0068 00000000 		.4byte	.LFB11
 2016 006c 44000000 		.4byte	.LFE11-.LFB11
 2017 0070 00000000 		.4byte	.LFB12
 2018 0074 34000000 		.4byte	.LFE12-.LFB12
 2019 0078 00000000 		.4byte	.LFB13
 2020 007c 74000000 		.4byte	.LFE13-.LFB13
 2021 0080 00000000 		.4byte	.LFB14
 2022 0084 6C000000 		.4byte	.LFE14-.LFB14
 2023 0088 00000000 		.4byte	.LFB15
 2024 008c 9C000000 		.4byte	.LFE15-.LFB15
 2025 0090 00000000 		.4byte	.LFB16
 2026 0094 14000000 		.4byte	.LFE16-.LFB16
 2027 0098 00000000 		.4byte	0
 2028 009c 00000000 		.4byte	0
 2029              		.section	.debug_ranges,"",%progbits
 2030              	.Ldebug_ranges0:
 2031 0000 00000000 		.4byte	.LFB0
 2032 0004 24000000 		.4byte	.LFE0
 2033 0008 00000000 		.4byte	.LFB1
 2034 000c 3C000000 		.4byte	.LFE1
 2035 0010 00000000 		.4byte	.LFB2
 2036 0014 4C000000 		.4byte	.LFE2
 2037 0018 00000000 		.4byte	.LFB3
 2038 001c 40000000 		.4byte	.LFE3
 2039 0020 00000000 		.4byte	.LFB4
 2040 0024 0E000000 		.4byte	.LFE4
 2041 0028 00000000 		.4byte	.LFB5
 2042 002c 14000000 		.4byte	.LFE5
 2043 0030 00000000 		.4byte	.LFB6
 2044 0034 20000000 		.4byte	.LFE6
 2045 0038 00000000 		.4byte	.LFB7
 2046 003c 94000000 		.4byte	.LFE7
 2047 0040 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 65


 2048 0044 18000000 		.4byte	.LFE8
 2049 0048 00000000 		.4byte	.LFB9
 2050 004c BC000000 		.4byte	.LFE9
 2051 0050 00000000 		.4byte	.LFB10
 2052 0054 44000000 		.4byte	.LFE10
 2053 0058 00000000 		.4byte	.LFB11
 2054 005c 44000000 		.4byte	.LFE11
 2055 0060 00000000 		.4byte	.LFB12
 2056 0064 34000000 		.4byte	.LFE12
 2057 0068 00000000 		.4byte	.LFB13
 2058 006c 74000000 		.4byte	.LFE13
 2059 0070 00000000 		.4byte	.LFB14
 2060 0074 6C000000 		.4byte	.LFE14
 2061 0078 00000000 		.4byte	.LFB15
 2062 007c 9C000000 		.4byte	.LFE15
 2063 0080 00000000 		.4byte	.LFB16
 2064 0084 14000000 		.4byte	.LFE16
 2065 0088 00000000 		.4byte	0
 2066 008c 00000000 		.4byte	0
 2067              		.section	.debug_line,"",%progbits
 2068              	.Ldebug_line0:
 2069 0000 30020000 		.section	.debug_str,"MS",%progbits,1
 2069      02004300 
 2069      00000201 
 2069      FB0E0D00 
 2069      01010101 
 2070              	.LASF6:
 2071 0000 6C6F6E67 		.ascii	"long long int\000"
 2071      206C6F6E 
 2071      6720696E 
 2071      7400
 2072              	.LASF21:
 2073 000e 55415254 		.ascii	"UART_1_Init\000"
 2073      5F315F49 
 2073      6E697400 
 2074              	.LASF20:
 2075 001a 55415254 		.ascii	"UART_1_Start\000"
 2075      5F315F53 
 2075      74617274 
 2075      00
 2076              	.LASF54:
 2077 0027 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2077      43313120 
 2077      352E342E 
 2077      31203230 
 2077      31363036 
 2078 005a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2078      20726576 
 2078      6973696F 
 2078      6E203233 
 2078      37373135 
 2079 008d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2079      66756E63 
 2079      74696F6E 
 2079      2D736563 
 2079      74696F6E 
 2080              	.LASF25:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 66


 2081 00b5 55415254 		.ascii	"UART_1_WriteControlRegister\000"
 2081      5F315F57 
 2081      72697465 
 2081      436F6E74 
 2081      726F6C52 
 2082              	.LASF47:
 2083 00d1 74785065 		.ascii	"txPeriod\000"
 2083      72696F64 
 2083      00
 2084              	.LASF46:
 2085 00da 746D7053 		.ascii	"tmpStat\000"
 2085      74617400 
 2086              	.LASF26:
 2087 00e2 55415254 		.ascii	"UART_1_SetTxInterruptMode\000"
 2087      5F315F53 
 2087      65745478 
 2087      496E7465 
 2087      72727570 
 2088              	.LASF3:
 2089 00fc 73686F72 		.ascii	"short unsigned int\000"
 2089      7420756E 
 2089      7369676E 
 2089      65642069 
 2089      6E7400
 2090              	.LASF8:
 2091 010f 756E7369 		.ascii	"unsigned int\000"
 2091      676E6564 
 2091      20696E74 
 2091      00
 2092              	.LASF48:
 2093 011c 55415254 		.ascii	"UART_1_SetTxAddressMode\000"
 2093      5F315F53 
 2093      65745478 
 2093      41646472 
 2093      6573734D 
 2094              	.LASF32:
 2095 0134 55415254 		.ascii	"UART_1_ReadTxStatus\000"
 2095      5F315F52 
 2095      65616454 
 2095      78537461 
 2095      74757300 
 2096              	.LASF37:
 2097 0148 73747269 		.ascii	"string\000"
 2097      6E6700
 2098              	.LASF12:
 2099 014f 666C6F61 		.ascii	"float\000"
 2099      7400
 2100              	.LASF34:
 2101 0155 6C6F6354 		.ascii	"locTxBufferWrite\000"
 2101      78427566 
 2101      66657257 
 2101      72697465 
 2101      00
 2102              	.LASF49:
 2103 0166 61646472 		.ascii	"addressMode\000"
 2103      6573734D 
 2103      6F646500 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 67


 2104              	.LASF16:
 2105 0172 72656738 		.ascii	"reg8\000"
 2105      00
 2106              	.LASF31:
 2107 0177 55415254 		.ascii	"UART_1_ReadControlRegister\000"
 2107      5F315F52 
 2107      65616443 
 2107      6F6E7472 
 2107      6F6C5265 
 2108              	.LASF23:
 2109 0192 55415254 		.ascii	"UART_1_Stop\000"
 2109      5F315F53 
 2109      746F7000 
 2110              	.LASF5:
 2111 019e 6C6F6E67 		.ascii	"long unsigned int\000"
 2111      20756E73 
 2111      69676E65 
 2111      6420696E 
 2111      7400
 2112              	.LASF9:
 2113 01b0 75696E74 		.ascii	"uint8\000"
 2113      3800
 2114              	.LASF27:
 2115 01b6 636F6E74 		.ascii	"control\000"
 2115      726F6C00 
 2116              	.LASF56:
 2117 01be 433A5C55 		.ascii	"C:\\Users\\marthnick\\Desktop\\firm_F1-TestFixture\\"
 2117      73657273 
 2117      5C6D6172 
 2117      74686E69 
 2117      636B5C44 
 2118 01ed 46312D54 		.ascii	"F1-TestFixture.cydsn\000"
 2118      65737446 
 2118      69787475 
 2118      72652E63 
 2118      7964736E 
 2119              	.LASF40:
 2120 0202 62797465 		.ascii	"byteCount\000"
 2120      436F756E 
 2120      7400
 2121              	.LASF24:
 2122 020c 656E6162 		.ascii	"enableInterrupts\000"
 2122      6C65496E 
 2122      74657272 
 2122      75707473 
 2122      00
 2123              	.LASF1:
 2124 021d 756E7369 		.ascii	"unsigned char\000"
 2124      676E6564 
 2124      20636861 
 2124      7200
 2125              	.LASF13:
 2126 022b 646F7562 		.ascii	"double\000"
 2126      6C6500
 2127              	.LASF28:
 2128 0232 696E7453 		.ascii	"intSrc\000"
 2128      726300
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 68


 2129              	.LASF2:
 2130 0239 73686F72 		.ascii	"short int\000"
 2130      7420696E 
 2130      7400
 2131              	.LASF10:
 2132 0243 75696E74 		.ascii	"uint16\000"
 2132      313600
 2133              	.LASF11:
 2134 024a 75696E74 		.ascii	"uint32\000"
 2134      333200
 2135              	.LASF33:
 2136 0251 55415254 		.ascii	"UART_1_PutChar\000"
 2136      5F315F50 
 2136      75744368 
 2136      617200
 2137              	.LASF55:
 2138 0260 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_1.c\000"
 2138      72617465 
 2138      645F536F 
 2138      75726365 
 2138      5C50536F 
 2139              	.LASF57:
 2140 0280 55415254 		.ascii	"UART_1_GetTxBufferSize\000"
 2140      5F315F47 
 2140      65745478 
 2140      42756666 
 2140      65725369 
 2141              	.LASF7:
 2142 0297 6C6F6E67 		.ascii	"long long unsigned int\000"
 2142      206C6F6E 
 2142      6720756E 
 2142      7369676E 
 2142      65642069 
 2143              	.LASF41:
 2144 02ae 55415254 		.ascii	"UART_1_PutCRLF\000"
 2144      5F315F50 
 2144      75744352 
 2144      4C4600
 2145              	.LASF38:
 2146 02bd 62756649 		.ascii	"bufIndex\000"
 2146      6E646578 
 2146      00
 2147              	.LASF44:
 2148 02c6 55415254 		.ascii	"UART_1_SendBreak\000"
 2148      5F315F53 
 2148      656E6442 
 2148      7265616B 
 2148      00
 2149              	.LASF39:
 2150 02d7 55415254 		.ascii	"UART_1_PutArray\000"
 2150      5F315F50 
 2150      75744172 
 2150      72617900 
 2151              	.LASF19:
 2152 02e7 73697A65 		.ascii	"sizetype\000"
 2152      74797065 
 2152      00
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 69


 2153              	.LASF14:
 2154 02f0 63686172 		.ascii	"char8\000"
 2154      3800
 2155              	.LASF30:
 2156 02f6 74784461 		.ascii	"txDataByte\000"
 2156      74614279 
 2156      746500
 2157              	.LASF15:
 2158 0301 63686172 		.ascii	"char\000"
 2158      00
 2159              	.LASF45:
 2160 0306 7265744D 		.ascii	"retMode\000"
 2160      6F646500 
 2161              	.LASF29:
 2162 030e 55415254 		.ascii	"UART_1_WriteTxData\000"
 2162      5F315F57 
 2162      72697465 
 2162      54784461 
 2162      746100
 2163              	.LASF43:
 2164 0321 55415254 		.ascii	"UART_1_ClearTxBuffer\000"
 2164      5F315F43 
 2164      6C656172 
 2164      54784275 
 2164      66666572 
 2165              	.LASF50:
 2166 0336 55415254 		.ascii	"UART_1_initVar\000"
 2166      5F315F69 
 2166      6E697456 
 2166      617200
 2167              	.LASF35:
 2168 0345 6C6F6354 		.ascii	"locTxBufferRead\000"
 2168      78427566 
 2168      66657252 
 2168      65616400 
 2169              	.LASF53:
 2170 0355 55415254 		.ascii	"UART_1_txBufferWrite\000"
 2170      5F315F74 
 2170      78427566 
 2170      66657257 
 2170      72697465 
 2171              	.LASF4:
 2172 036a 6C6F6E67 		.ascii	"long int\000"
 2172      20696E74 
 2172      00
 2173              	.LASF17:
 2174 0373 72656733 		.ascii	"reg32\000"
 2174      3200
 2175              	.LASF22:
 2176 0379 55415254 		.ascii	"UART_1_Enable\000"
 2176      5F315F45 
 2176      6E61626C 
 2176      6500
 2177              	.LASF18:
 2178 0387 6C6F6E67 		.ascii	"long double\000"
 2178      20646F75 
 2178      626C6500 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cckWA7hC.s 			page 70


 2179              	.LASF52:
 2180 0393 55415254 		.ascii	"UART_1_txBufferRead\000"
 2180      5F315F74 
 2180      78427566 
 2180      66657252 
 2180      65616400 
 2181              	.LASF0:
 2182 03a7 7369676E 		.ascii	"signed char\000"
 2182      65642063 
 2182      68617200 
 2183              	.LASF36:
 2184 03b3 55415254 		.ascii	"UART_1_PutString\000"
 2184      5F315F50 
 2184      75745374 
 2184      72696E67 
 2184      00
 2185              	.LASF42:
 2186 03c4 73697A65 		.ascii	"size\000"
 2186      00
 2187              	.LASF51:
 2188 03c9 55415254 		.ascii	"UART_1_txBuffer\000"
 2188      5F315F74 
 2188      78427566 
 2188      66657200 
 2189              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
