ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USBUART.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	USBUART_initVar
  20              		.bss
  21              		.type	USBUART_initVar, %object
  22              		.size	USBUART_initVar, 1
  23              	USBUART_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.USBUART_Start,"ax",%progbits
  26              		.align	2
  27              		.global	USBUART_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	USBUART_Start, %function
  31              	USBUART_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\USBUART.c"
   1:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/USBUART.c **** * File Name: USBUART.c
   3:Generated_Source\PSoC5/USBUART.c **** * Version 2.80
   4:Generated_Source\PSoC5/USBUART.c **** *
   5:Generated_Source\PSoC5/USBUART.c **** * Description:
   6:Generated_Source\PSoC5/USBUART.c **** *  API for USBFS Component.
   7:Generated_Source\PSoC5/USBUART.c **** *
   8:Generated_Source\PSoC5/USBUART.c **** * Note:
   9:Generated_Source\PSoC5/USBUART.c **** *  Many of the functions use endpoint number.  RAM arrays are sized with 9
  10:Generated_Source\PSoC5/USBUART.c **** *  elements so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USBUART.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USBUART.c **** *
  13:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USBUART.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  15:Generated_Source\PSoC5/USBUART.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:Generated_Source\PSoC5/USBUART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:Generated_Source\PSoC5/USBUART.c **** * the software package with which this file was provided.
  18:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
  19:Generated_Source\PSoC5/USBUART.c **** 
  20:Generated_Source\PSoC5/USBUART.c **** #include <CyDmac.h>
  21:Generated_Source\PSoC5/USBUART.c **** #include "USBUART.h"
  22:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_pvt.h"
  23:Generated_Source\PSoC5/USBUART.c **** #include "USBUART_hid.h"
  24:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA1_REMOVE == 0u)
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 2


  25:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep1_dma.h"
  26:Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA1_REMOVE */
  27:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA2_REMOVE == 0u)
  28:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep2_dma.h"
  29:Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA2_REMOVE */
  30:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA3_REMOVE == 0u)
  31:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep3_dma.h"
  32:Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA3_REMOVE */
  33:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA4_REMOVE == 0u)
  34:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep4_dma.h"
  35:Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA4_REMOVE */
  36:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA5_REMOVE == 0u)
  37:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep5_dma.h"
  38:Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA5_REMOVE */
  39:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA6_REMOVE == 0u)
  40:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep6_dma.h"
  41:Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA6_REMOVE */
  42:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA7_REMOVE == 0u)
  43:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep7_dma.h"
  44:Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA7_REMOVE */
  45:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_DMA8_REMOVE == 0u)
  46:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_ep8_dma.h"
  47:Generated_Source\PSoC5/USBUART.c **** #endif   /*  USBUART_DMA8_REMOVE */
  48:Generated_Source\PSoC5/USBUART.c **** #if((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
  49:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_EP_DMA_Done_isr.h"
  50:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_EP8_DMA_Done_SR.h"
  51:Generated_Source\PSoC5/USBUART.c ****     #include "USBUART_EP17_DMA_Done_SR.h"
  52:Generated_Source\PSoC5/USBUART.c **** #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
  53:Generated_Source\PSoC5/USBUART.c **** 
  54:Generated_Source\PSoC5/USBUART.c **** 
  55:Generated_Source\PSoC5/USBUART.c **** /***************************************
  56:Generated_Source\PSoC5/USBUART.c **** * Global data allocation
  57:Generated_Source\PSoC5/USBUART.c **** ***************************************/
  58:Generated_Source\PSoC5/USBUART.c **** 
  59:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_initVar = 0u;
  60:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_EP_MM != USBUART__EP_MANUAL)
  61:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_DmaChan[USBUART_MAX_EP];
  62:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_DmaTd[USBUART_MAX_EP];
  63:Generated_Source\PSoC5/USBUART.c **** #endif /*  USBUART_EP_MM */
  64:Generated_Source\PSoC5/USBUART.c **** #if((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
  65:Generated_Source\PSoC5/USBUART.c ****     static uint8 clearInDataRdyStatus = USBUART_ARB_EPX_CFG_DEFAULT;
  66:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_DmaNextTd[USBUART_MAX_EP];
  67:Generated_Source\PSoC5/USBUART.c ****     const uint8 USBUART_epX_TD_TERMOUT_EN[USBUART_MAX_EP] =
  68:Generated_Source\PSoC5/USBUART.c ****     {   0u,
  69:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep1_TD_TERMOUT_EN,
  70:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep2_TD_TERMOUT_EN,
  71:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep3_TD_TERMOUT_EN,
  72:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep4_TD_TERMOUT_EN,
  73:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep5_TD_TERMOUT_EN,
  74:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep6_TD_TERMOUT_EN,
  75:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep7_TD_TERMOUT_EN,
  76:Generated_Source\PSoC5/USBUART.c ****         USBUART_ep8_TD_TERMOUT_EN
  77:Generated_Source\PSoC5/USBUART.c ****     };
  78:Generated_Source\PSoC5/USBUART.c ****     volatile uint16 USBUART_inLength[USBUART_MAX_EP];
  79:Generated_Source\PSoC5/USBUART.c ****     const uint8 *USBUART_inDataPointer[USBUART_MAX_EP];
  80:Generated_Source\PSoC5/USBUART.c ****     volatile uint8 USBUART_inBufFull[USBUART_MAX_EP];
  81:Generated_Source\PSoC5/USBUART.c **** #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 3


  82:Generated_Source\PSoC5/USBUART.c **** 
  83:Generated_Source\PSoC5/USBUART.c **** 
  84:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
  85:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Start
  86:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
  87:Generated_Source\PSoC5/USBUART.c **** *
  88:Generated_Source\PSoC5/USBUART.c **** * Summary:
  89:Generated_Source\PSoC5/USBUART.c **** *  This function initialize the USB SIE, arbiter and the
  90:Generated_Source\PSoC5/USBUART.c **** *  endpoint APIs, including setting the D+ Pullup
  91:Generated_Source\PSoC5/USBUART.c **** *
  92:Generated_Source\PSoC5/USBUART.c **** * Parameters:
  93:Generated_Source\PSoC5/USBUART.c **** *  device: Contains the device number of the desired device descriptor.
  94:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
  95:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
  96:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
  97:Generated_Source\PSoC5/USBUART.c **** *  mode: The operating voltage. This determines whether the voltage regulator
  98:Generated_Source\PSoC5/USBUART.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
  99:Generated_Source\PSoC5/USBUART.c **** *        operation. Symbolic names and their associated values are given in the
 100:Generated_Source\PSoC5/USBUART.c **** *        following table.
 101:Generated_Source\PSoC5/USBUART.c **** *       USBUART_3V_OPERATION - Disable voltage regulator and pass-thru
 102:Generated_Source\PSoC5/USBUART.c **** *                                       Vcc for pull-up
 103:Generated_Source\PSoC5/USBUART.c **** *       USBUART_5V_OPERATION - Enable voltage regulator and use
 104:Generated_Source\PSoC5/USBUART.c **** *                                       regulator for pull-up
 105:Generated_Source\PSoC5/USBUART.c **** *       USBUART_DWR_VDDD_OPERATION - Enable or Disable voltage
 106:Generated_Source\PSoC5/USBUART.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 107:Generated_Source\PSoC5/USBUART.c **** *
 108:Generated_Source\PSoC5/USBUART.c **** * Return:
 109:Generated_Source\PSoC5/USBUART.c **** *   None.
 110:Generated_Source\PSoC5/USBUART.c **** *
 111:Generated_Source\PSoC5/USBUART.c **** * Global variables:
 112:Generated_Source\PSoC5/USBUART.c **** *  The USBUART_intiVar variable is used to indicate initial
 113:Generated_Source\PSoC5/USBUART.c **** *  configuration of this component. The variable is initialized to zero (0u)
 114:Generated_Source\PSoC5/USBUART.c **** *  and set to one (1u) the first time USBUART_Start() is called.
 115:Generated_Source\PSoC5/USBUART.c **** *  This allows for component Re-Start without unnecessary re-initialization
 116:Generated_Source\PSoC5/USBUART.c **** *  in all subsequent calls to the USBUART_Start() routine.
 117:Generated_Source\PSoC5/USBUART.c **** *  If re-initialization of the component is required the variable should be set
 118:Generated_Source\PSoC5/USBUART.c **** *  to zero before call of UART_Start() routine, or the user may call
 119:Generated_Source\PSoC5/USBUART.c **** *  USBUART_Init() and USBUART_InitComponent() as done
 120:Generated_Source\PSoC5/USBUART.c **** *  in the USBUART_Start() routine.
 121:Generated_Source\PSoC5/USBUART.c **** *
 122:Generated_Source\PSoC5/USBUART.c **** * Side Effects:
 123:Generated_Source\PSoC5/USBUART.c **** *   This function will reset all communication states to default.
 124:Generated_Source\PSoC5/USBUART.c **** *
 125:Generated_Source\PSoC5/USBUART.c **** * Reentrant:
 126:Generated_Source\PSoC5/USBUART.c **** *  No.
 127:Generated_Source\PSoC5/USBUART.c **** *
 128:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 129:Generated_Source\PSoC5/USBUART.c **** void USBUART_Start(uint8 device, uint8 mode) 
 130:Generated_Source\PSoC5/USBUART.c **** {
  34              		.loc 1 130 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 4


  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  46 0006 0346     		mov	r3, r0
  47 0008 0A46     		mov	r2, r1
  48 000a FB71     		strb	r3, [r7, #7]
  49 000c 1346     		mov	r3, r2
  50 000e BB71     		strb	r3, [r7, #6]
 131:Generated_Source\PSoC5/USBUART.c ****     /* If not Initialized then initialize all required hardware and software */
 132:Generated_Source\PSoC5/USBUART.c ****     if(USBUART_initVar == 0u)
  51              		.loc 1 132 0
  52 0010 094B     		ldr	r3, .L3
  53 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54 0014 002B     		cmp	r3, #0
  55 0016 04D1     		bne	.L2
 133:Generated_Source\PSoC5/USBUART.c ****     {
 134:Generated_Source\PSoC5/USBUART.c ****         USBUART_Init();
  56              		.loc 1 134 0
  57 0018 FFF7FEFF 		bl	USBUART_Init
 135:Generated_Source\PSoC5/USBUART.c ****         USBUART_initVar = 1u;
  58              		.loc 1 135 0
  59 001c 064B     		ldr	r3, .L3
  60 001e 0122     		movs	r2, #1
  61 0020 1A70     		strb	r2, [r3]
  62              	.L2:
 136:Generated_Source\PSoC5/USBUART.c ****     }
 137:Generated_Source\PSoC5/USBUART.c ****     USBUART_InitComponent(device, mode);
  63              		.loc 1 137 0
  64 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  65 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0026 1146     		mov	r1, r2
  67 0028 1846     		mov	r0, r3
  68 002a FFF7FEFF 		bl	USBUART_InitComponent
 138:Generated_Source\PSoC5/USBUART.c **** }
  69              		.loc 1 138 0
  70 002e 00BF     		nop
  71 0030 0837     		adds	r7, r7, #8
  72              		.cfi_def_cfa_offset 8
  73 0032 BD46     		mov	sp, r7
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 0034 80BD     		pop	{r7, pc}
  77              	.L4:
  78 0036 00BF     		.align	2
  79              	.L3:
  80 0038 00000000 		.word	USBUART_initVar
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USBUART_Start, .-USBUART_Start
  84              		.section	.text.USBUART_Init,"ax",%progbits
  85              		.align	2
  86              		.global	USBUART_Init
  87              		.thumb
  88              		.thumb_func
  89              		.type	USBUART_Init, %function
  90              	USBUART_Init:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 5


  91              	.LFB1:
 139:Generated_Source\PSoC5/USBUART.c **** 
 140:Generated_Source\PSoC5/USBUART.c **** 
 141:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 142:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Init
 143:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 144:Generated_Source\PSoC5/USBUART.c **** *
 145:Generated_Source\PSoC5/USBUART.c **** * Summary:
 146:Generated_Source\PSoC5/USBUART.c **** *  Initialize component's hardware. Usually called in USBUART_Start().
 147:Generated_Source\PSoC5/USBUART.c **** *
 148:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 149:Generated_Source\PSoC5/USBUART.c **** *  None.
 150:Generated_Source\PSoC5/USBUART.c **** *
 151:Generated_Source\PSoC5/USBUART.c **** * Return:
 152:Generated_Source\PSoC5/USBUART.c **** *  None.
 153:Generated_Source\PSoC5/USBUART.c **** *
 154:Generated_Source\PSoC5/USBUART.c **** * Reentrant:
 155:Generated_Source\PSoC5/USBUART.c **** *  No.
 156:Generated_Source\PSoC5/USBUART.c **** *
 157:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 158:Generated_Source\PSoC5/USBUART.c **** void USBUART_Init(void) 
 159:Generated_Source\PSoC5/USBUART.c **** {
  92              		.loc 1 159 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 8
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 82B0     		sub	sp, sp, #8
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 160:Generated_Source\PSoC5/USBUART.c ****     uint8 enableInterrupts;
 161:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 162:Generated_Source\PSoC5/USBUART.c ****         uint16 i;
 163:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 164:Generated_Source\PSoC5/USBUART.c **** 
 165:Generated_Source\PSoC5/USBUART.c ****     enableInterrupts = CyEnterCriticalSection();
 104              		.loc 1 165 0
 105 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 106 000a 0346     		mov	r3, r0
 107 000c FB71     		strb	r3, [r7, #7]
 166:Generated_Source\PSoC5/USBUART.c **** 
 167:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block  */
 168:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG |= USBUART_PM_ACT_EN_FSUSB;
 108              		.loc 1 168 0
 109 000e 504A     		ldr	r2, .L6
 110 0010 4F4B     		ldr	r3, .L6
 111 0012 1B78     		ldrb	r3, [r3]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 43F00103 		orr	r3, r3, #1
 114 001a DBB2     		uxtb	r3, r3
 115 001c 1370     		strb	r3, [r2]
 169:Generated_Source\PSoC5/USBUART.c ****     /* Enable USB block for Standby Power Mode */
 170:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG |= USBUART_PM_STBY_EN_FSUSB;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 6


 116              		.loc 1 170 0
 117 001e 4D4A     		ldr	r2, .L6+4
 118 0020 4C4B     		ldr	r3, .L6+4
 119 0022 1B78     		ldrb	r3, [r3]
 120 0024 DBB2     		uxtb	r3, r3
 121 0026 43F00103 		orr	r3, r3, #1
 122 002a DBB2     		uxtb	r3, r3
 123 002c 1370     		strb	r3, [r2]
 171:Generated_Source\PSoC5/USBUART.c **** 
 172:Generated_Source\PSoC5/USBUART.c ****     /* Enable core clock */
 173:Generated_Source\PSoC5/USBUART.c ****     USBUART_USB_CLK_EN_REG = USBUART_USB_CLK_ENABLE;
 124              		.loc 1 173 0
 125 002e 4A4B     		ldr	r3, .L6+8
 126 0030 0122     		movs	r2, #1
 127 0032 1A70     		strb	r2, [r3]
 174:Generated_Source\PSoC5/USBUART.c **** 
 175:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 128              		.loc 1 175 0
 129 0034 494B     		ldr	r3, .L6+12
 130 0036 0222     		movs	r2, #2
 131 0038 1A70     		strb	r2, [r3]
 176:Generated_Source\PSoC5/USBUART.c **** 
 177:Generated_Source\PSoC5/USBUART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE */
 178:Generated_Source\PSoC5/USBUART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled */
 179:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR0_REG &= ((uint8)(~USBUART_USBIO_CR0_TEN));
 132              		.loc 1 179 0
 133 003a 494A     		ldr	r2, .L6+16
 134 003c 484B     		ldr	r3, .L6+16
 135 003e 1B78     		ldrb	r3, [r3]
 136 0040 DBB2     		uxtb	r3, r3
 137 0042 03F07F03 		and	r3, r3, #127
 138 0046 DBB2     		uxtb	r3, r3
 139 0048 1370     		strb	r3, [r2]
 180:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(0u);  /*~50ns delay */
 140              		.loc 1 180 0
 141 004a 0020     		movs	r0, #0
 142 004c FFF7FEFF 		bl	CyDelayUs
 181:Generated_Source\PSoC5/USBUART.c ****     /* Disable the USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted)
 182:Generated_Source\PSoC5/USBUART.c ****     *  high. This will have been set low by the power manger out of reset.
 183:Generated_Source\PSoC5/USBUART.c ****     *  Also confirm USBIO pull-up disabled
 184:Generated_Source\PSoC5/USBUART.c ****     */
 185:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG &= ((uint8)(~(USBUART_PM_USB_CR0_PD_N |
 143              		.loc 1 185 0
 144 0050 444A     		ldr	r2, .L6+20
 145 0052 444B     		ldr	r3, .L6+20
 146 0054 1B78     		ldrb	r3, [r3]
 147 0056 DBB2     		uxtb	r3, r3
 148 0058 23F00603 		bic	r3, r3, #6
 149 005c DBB2     		uxtb	r3, r3
 150 005e 1370     		strb	r3, [r2]
 186:Generated_Source\PSoC5/USBUART.c ****                                                   USBUART_PM_USB_CR0_PD_PULLUP_N)));
 187:Generated_Source\PSoC5/USBUART.c **** 
 188:Generated_Source\PSoC5/USBUART.c ****     /* Select iomode to USB mode*/
 189:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= ((uint8)(~USBUART_USBIO_CR1_IOMODE));
 151              		.loc 1 189 0
 152 0060 414A     		ldr	r2, .L6+24
 153 0062 414B     		ldr	r3, .L6+24
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 7


 154 0064 1B78     		ldrb	r3, [r3]
 155 0066 DBB2     		uxtb	r3, r3
 156 0068 23F02003 		bic	r3, r3, #32
 157 006c DBB2     		uxtb	r3, r3
 158 006e 1370     		strb	r3, [r2]
 190:Generated_Source\PSoC5/USBUART.c **** 
 191:Generated_Source\PSoC5/USBUART.c ****     /* Enable the USBIO reference by setting PM.USB_CR0.fsusbio_ref_en.*/
 192:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_REF_EN;
 159              		.loc 1 192 0
 160 0070 3C4A     		ldr	r2, .L6+20
 161 0072 3C4B     		ldr	r3, .L6+20
 162 0074 1B78     		ldrb	r3, [r3]
 163 0076 DBB2     		uxtb	r3, r3
 164 0078 43F00103 		orr	r3, r3, #1
 165 007c DBB2     		uxtb	r3, r3
 166 007e 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC5/USBUART.c ****     /* The reference will be available 1 us after the regulator is enabled */
 194:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(1u);
 167              		.loc 1 194 0
 168 0080 0120     		movs	r0, #1
 169 0082 FFF7FEFF 		bl	CyDelayUs
 195:Generated_Source\PSoC5/USBUART.c ****     /* OR 40us after power restored */
 196:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(40u);
 170              		.loc 1 196 0
 171 0086 2820     		movs	r0, #40
 172 0088 FFF7FEFF 		bl	CyDelayUs
 197:Generated_Source\PSoC5/USBUART.c ****     /* Ensure the single ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). *
 198:Generated_Source\PSoC5/USBUART.c ****     USBUART_DM_INP_DIS_REG &= ((uint8)(~USBUART_DM_MASK));
 173              		.loc 1 198 0
 174 008c 374A     		ldr	r2, .L6+28
 175 008e 374B     		ldr	r3, .L6+28
 176 0090 1B78     		ldrb	r3, [r3]
 177 0092 DBB2     		uxtb	r3, r3
 178 0094 03F07F03 		and	r3, r3, #127
 179 0098 DBB2     		uxtb	r3, r3
 180 009a 1370     		strb	r3, [r2]
 199:Generated_Source\PSoC5/USBUART.c ****     USBUART_DP_INP_DIS_REG &= ((uint8)(~USBUART_DP_MASK));
 181              		.loc 1 199 0
 182 009c 334A     		ldr	r2, .L6+28
 183 009e 334B     		ldr	r3, .L6+28
 184 00a0 1B78     		ldrb	r3, [r3]
 185 00a2 DBB2     		uxtb	r3, r3
 186 00a4 23F04003 		bic	r3, r3, #64
 187 00a8 DBB2     		uxtb	r3, r3
 188 00aa 1370     		strb	r3, [r2]
 200:Generated_Source\PSoC5/USBUART.c **** 
 201:Generated_Source\PSoC5/USBUART.c ****     /* Enable USBIO */
 202:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_N;
 189              		.loc 1 202 0
 190 00ac 2D4A     		ldr	r2, .L6+20
 191 00ae 2D4B     		ldr	r3, .L6+20
 192 00b0 1B78     		ldrb	r3, [r3]
 193 00b2 DBB2     		uxtb	r3, r3
 194 00b4 43F00203 		orr	r3, r3, #2
 195 00b8 DBB2     		uxtb	r3, r3
 196 00ba 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/USBUART.c ****     CyDelayUs(2u);
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 8


 197              		.loc 1 203 0
 198 00bc 0220     		movs	r0, #2
 199 00be FFF7FEFF 		bl	CyDelayUs
 204:Generated_Source\PSoC5/USBUART.c ****     /* Set the USBIO pull-up enable */
 205:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_USB_CR0_REG |= USBUART_PM_USB_CR0_PD_PULLUP_N;
 200              		.loc 1 205 0
 201 00c2 284A     		ldr	r2, .L6+20
 202 00c4 274B     		ldr	r3, .L6+20
 203 00c6 1B78     		ldrb	r3, [r3]
 204 00c8 DBB2     		uxtb	r3, r3
 205 00ca 43F00403 		orr	r3, r3, #4
 206 00ce DBB2     		uxtb	r3, r3
 207 00d0 1370     		strb	r3, [r2]
 206:Generated_Source\PSoC5/USBUART.c **** 
 207:Generated_Source\PSoC5/USBUART.c ****     /* Write WAx */
 208:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_PTR,     0u);
 208              		.loc 1 208 0
 209 00d2 274B     		ldr	r3, .L6+32
 210 00d4 0022     		movs	r2, #0
 211 00d6 1A70     		strb	r2, [r3]
 209:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_ARB_RW1_WA_MSB_PTR, 0u);
 212              		.loc 1 209 0
 213 00d8 264B     		ldr	r3, .L6+36
 214 00da 0022     		movs	r2, #0
 215 00dc 1A70     		strb	r2, [r3]
 210:Generated_Source\PSoC5/USBUART.c **** 
 211:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 212:Generated_Source\PSoC5/USBUART.c ****         /* Init transfer descriptor. This will be used to detect the DMA state - initialized or not
 213:Generated_Source\PSoC5/USBUART.c ****         for (i = 0u; i < USBUART_MAX_EP; i++)
 214:Generated_Source\PSoC5/USBUART.c ****         {
 215:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[i] = DMA_INVALID_TD;
 216:Generated_Source\PSoC5/USBUART.c ****             #if ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
 217:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 218:Generated_Source\PSoC5/USBUART.c ****             #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) *
 219:Generated_Source\PSoC5/USBUART.c ****         }
 220:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 221:Generated_Source\PSoC5/USBUART.c **** 
 222:Generated_Source\PSoC5/USBUART.c ****     CyExitCriticalSection(enableInterrupts);
 216              		.loc 1 222 0
 217 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 00e0 1846     		mov	r0, r3
 219 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/USBUART.c **** 
 224:Generated_Source\PSoC5/USBUART.c **** 
 225:Generated_Source\PSoC5/USBUART.c ****     /* Set the bus reset Interrupt. */
 226:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_BUS_RESET_VECT_NUM,   &USBUART_BUS_RESET_ISR);
 220              		.loc 1 226 0
 221 00e6 2449     		ldr	r1, .L6+40
 222 00e8 1720     		movs	r0, #23
 223 00ea FFF7FEFF 		bl	CyIntSetVector
 227:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_BUS_RESET_VECT_NUM, USBUART_BUS_RESET_PRIOR);
 224              		.loc 1 227 0
 225 00ee 0721     		movs	r1, #7
 226 00f0 1720     		movs	r0, #23
 227 00f2 FFF7FEFF 		bl	CyIntSetPriority
 228:Generated_Source\PSoC5/USBUART.c **** 
 229:Generated_Source\PSoC5/USBUART.c ****     /* Set the SOF Interrupt. */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 9


 230:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_SOF_ISR_REMOVE == 0u)
 231:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_SOF_VECT_NUM,   &USBUART_SOF_ISR);
 228              		.loc 1 231 0
 229 00f6 2149     		ldr	r1, .L6+44
 230 00f8 1520     		movs	r0, #21
 231 00fa FFF7FEFF 		bl	CyIntSetVector
 232:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_SOF_VECT_NUM, USBUART_SOF_PRIOR);
 232              		.loc 1 232 0
 233 00fe 0721     		movs	r1, #7
 234 0100 1520     		movs	r0, #21
 235 0102 FFF7FEFF 		bl	CyIntSetPriority
 233:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_SOF_ISR_REMOVE */
 234:Generated_Source\PSoC5/USBUART.c **** 
 235:Generated_Source\PSoC5/USBUART.c ****     /* Set the Control Endpoint Interrupt. */
 236:Generated_Source\PSoC5/USBUART.c ****     (void) CyIntSetVector(USBUART_EP_0_VECT_NUM,   &USBUART_EP_0_ISR);
 236              		.loc 1 236 0
 237 0106 1E49     		ldr	r1, .L6+48
 238 0108 1820     		movs	r0, #24
 239 010a FFF7FEFF 		bl	CyIntSetVector
 237:Generated_Source\PSoC5/USBUART.c ****     CyIntSetPriority(USBUART_EP_0_VECT_NUM, USBUART_EP_0_PRIOR);
 240              		.loc 1 237 0
 241 010e 0721     		movs	r1, #7
 242 0110 1820     		movs	r0, #24
 243 0112 FFF7FEFF 		bl	CyIntSetPriority
 238:Generated_Source\PSoC5/USBUART.c **** 
 239:Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 1 Interrupt. */
 240:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP1_ISR_REMOVE == 0u)
 241:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_1_VECT_NUM,   &USBUART_EP_1_ISR);
 244              		.loc 1 241 0
 245 0116 1B49     		ldr	r1, .L6+52
 246 0118 0820     		movs	r0, #8
 247 011a FFF7FEFF 		bl	CyIntSetVector
 242:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_1_VECT_NUM, USBUART_EP_1_PRIOR);
 248              		.loc 1 242 0
 249 011e 0721     		movs	r1, #7
 250 0120 0820     		movs	r0, #8
 251 0122 FFF7FEFF 		bl	CyIntSetPriority
 243:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP1_ISR_REMOVE */
 244:Generated_Source\PSoC5/USBUART.c **** 
 245:Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 2 Interrupt. */
 246:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP2_ISR_REMOVE == 0u)
 247:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_2_VECT_NUM,   &USBUART_EP_2_ISR);
 252              		.loc 1 247 0
 253 0126 1849     		ldr	r1, .L6+56
 254 0128 0920     		movs	r0, #9
 255 012a FFF7FEFF 		bl	CyIntSetVector
 248:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_2_VECT_NUM, USBUART_EP_2_PRIOR);
 256              		.loc 1 248 0
 257 012e 0721     		movs	r1, #7
 258 0130 0920     		movs	r0, #9
 259 0132 FFF7FEFF 		bl	CyIntSetPriority
 249:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP2_ISR_REMOVE */
 250:Generated_Source\PSoC5/USBUART.c **** 
 251:Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 3 Interrupt. */
 252:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP3_ISR_REMOVE == 0u)
 253:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_3_VECT_NUM,   &USBUART_EP_3_ISR);
 260              		.loc 1 253 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 10


 261 0136 1549     		ldr	r1, .L6+60
 262 0138 0A20     		movs	r0, #10
 263 013a FFF7FEFF 		bl	CyIntSetVector
 254:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_3_VECT_NUM, USBUART_EP_3_PRIOR);
 264              		.loc 1 254 0
 265 013e 0721     		movs	r1, #7
 266 0140 0A20     		movs	r0, #10
 267 0142 FFF7FEFF 		bl	CyIntSetPriority
 255:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP3_ISR_REMOVE */
 256:Generated_Source\PSoC5/USBUART.c **** 
 257:Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 4 Interrupt. */
 258:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP4_ISR_REMOVE == 0u)
 259:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_4_VECT_NUM,   &USBUART_EP_4_ISR);
 260:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_4_VECT_NUM, USBUART_EP_4_PRIOR);
 261:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP4_ISR_REMOVE */
 262:Generated_Source\PSoC5/USBUART.c **** 
 263:Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 5 Interrupt. */
 264:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP5_ISR_REMOVE == 0u)
 265:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_5_VECT_NUM,   &USBUART_EP_5_ISR);
 266:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_5_VECT_NUM, USBUART_EP_5_PRIOR);
 267:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP5_ISR_REMOVE */
 268:Generated_Source\PSoC5/USBUART.c **** 
 269:Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 6 Interrupt. */
 270:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP6_ISR_REMOVE == 0u)
 271:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_6_VECT_NUM,   &USBUART_EP_6_ISR);
 272:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_6_VECT_NUM, USBUART_EP_6_PRIOR);
 273:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP6_ISR_REMOVE */
 274:Generated_Source\PSoC5/USBUART.c **** 
 275:Generated_Source\PSoC5/USBUART.c ****      /* Set the Data Endpoint 7 Interrupt. */
 276:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP7_ISR_REMOVE == 0u)
 277:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_7_VECT_NUM,   &USBUART_EP_7_ISR);
 278:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_7_VECT_NUM, USBUART_EP_7_PRIOR);
 279:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP7_ISR_REMOVE */
 280:Generated_Source\PSoC5/USBUART.c **** 
 281:Generated_Source\PSoC5/USBUART.c ****     /* Set the Data Endpoint 8 Interrupt. */
 282:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP8_ISR_REMOVE == 0u)
 283:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_EP_8_VECT_NUM,   &USBUART_EP_8_ISR);
 284:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_EP_8_VECT_NUM, USBUART_EP_8_PRIOR);
 285:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP8_ISR_REMOVE */
 286:Generated_Source\PSoC5/USBUART.c **** 
 287:Generated_Source\PSoC5/USBUART.c ****     #if((USBUART_EP_MM != USBUART__EP_MANUAL) && (USBUART_ARB_ISR_REMOVE == 0u))
 288:Generated_Source\PSoC5/USBUART.c ****         /* Set the ARB Interrupt. */
 289:Generated_Source\PSoC5/USBUART.c ****         (void) CyIntSetVector(USBUART_ARB_VECT_NUM,   &USBUART_ARB_ISR);
 290:Generated_Source\PSoC5/USBUART.c ****         CyIntSetPriority(USBUART_ARB_VECT_NUM, USBUART_ARB_PRIOR);
 291:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 292:Generated_Source\PSoC5/USBUART.c **** 
 293:Generated_Source\PSoC5/USBUART.c **** }
 268              		.loc 1 293 0
 269 0146 00BF     		nop
 270 0148 0837     		adds	r7, r7, #8
 271              		.cfi_def_cfa_offset 8
 272 014a BD46     		mov	sp, r7
 273              		.cfi_def_cfa_register 13
 274              		@ sp needed
 275 014c 80BD     		pop	{r7, pc}
 276              	.L7:
 277 014e 00BF     		.align	2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 11


 278              	.L6:
 279 0150 A5430040 		.word	1073759141
 280 0154 B5430040 		.word	1073759157
 281 0158 9D600040 		.word	1073766557
 282 015c 09600040 		.word	1073766409
 283 0160 10600040 		.word	1073766416
 284 0164 94430040 		.word	1073759124
 285 0168 12600040 		.word	1073766418
 286 016c F8510040 		.word	1073762808
 287 0170 84600040 		.word	1073766532
 288 0174 85600040 		.word	1073766533
 289 0178 00000000 		.word	USBUART_BUS_RESET_ISR
 290 017c 00000000 		.word	USBUART_SOF_ISR
 291 0180 00000000 		.word	USBUART_EP_0_ISR
 292 0184 00000000 		.word	USBUART_EP_1_ISR
 293 0188 00000000 		.word	USBUART_EP_2_ISR
 294 018c 00000000 		.word	USBUART_EP_3_ISR
 295              		.cfi_endproc
 296              	.LFE1:
 297              		.size	USBUART_Init, .-USBUART_Init
 298              		.section	.text.USBUART_InitComponent,"ax",%progbits
 299              		.align	2
 300              		.global	USBUART_InitComponent
 301              		.thumb
 302              		.thumb_func
 303              		.type	USBUART_InitComponent, %function
 304              	USBUART_InitComponent:
 305              	.LFB2:
 294:Generated_Source\PSoC5/USBUART.c **** 
 295:Generated_Source\PSoC5/USBUART.c **** 
 296:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 297:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_InitComponent
 298:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 299:Generated_Source\PSoC5/USBUART.c **** *
 300:Generated_Source\PSoC5/USBUART.c **** * Summary:
 301:Generated_Source\PSoC5/USBUART.c **** *  Initialize the component, except for the HW which is done one time in
 302:Generated_Source\PSoC5/USBUART.c **** *  the Start function.  This function pulls up D+.
 303:Generated_Source\PSoC5/USBUART.c **** *
 304:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 305:Generated_Source\PSoC5/USBUART.c **** *  device: Contains the device number of the desired device descriptor.
 306:Generated_Source\PSoC5/USBUART.c **** *          The device number can be found in the Device Descriptor Tab of
 307:Generated_Source\PSoC5/USBUART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 308:Generated_Source\PSoC5/USBUART.c **** *          in the "Device Number" field.
 309:Generated_Source\PSoC5/USBUART.c **** *  mode: The operating voltage. This determines whether the voltage regulator
 310:Generated_Source\PSoC5/USBUART.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
 311:Generated_Source\PSoC5/USBUART.c **** *        operation. Symbolic names and their associated values are given in the
 312:Generated_Source\PSoC5/USBUART.c **** *        following table.
 313:Generated_Source\PSoC5/USBUART.c **** *       USBUART_3V_OPERATION - Disable voltage regulator and pass-thru
 314:Generated_Source\PSoC5/USBUART.c **** *                                       Vcc for pull-up
 315:Generated_Source\PSoC5/USBUART.c **** *       USBUART_5V_OPERATION - Enable voltage regulator and use
 316:Generated_Source\PSoC5/USBUART.c **** *                                       regulator for pull-up
 317:Generated_Source\PSoC5/USBUART.c **** *       USBUART_DWR_VDDD_OPERATION - Enable or Disable voltage
 318:Generated_Source\PSoC5/USBUART.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 319:Generated_Source\PSoC5/USBUART.c **** *
 320:Generated_Source\PSoC5/USBUART.c **** * Return:
 321:Generated_Source\PSoC5/USBUART.c **** *   None.
 322:Generated_Source\PSoC5/USBUART.c **** *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 12


 323:Generated_Source\PSoC5/USBUART.c **** * Global variables:
 324:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device: Contains the device number of the desired device
 325:Generated_Source\PSoC5/USBUART.c **** *       descriptor. The device number can be found in the Device Descriptor Tab
 326:Generated_Source\PSoC5/USBUART.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 327:Generated_Source\PSoC5/USBUART.c **** *       in the "Device Number" field.
 328:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState: This variable used by the communication
 329:Generated_Source\PSoC5/USBUART.c **** *       functions to handle current transfer state. Initialized to
 330:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 331:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration: Contains current configuration number
 332:Generated_Source\PSoC5/USBUART.c **** *       which is set by the Host using SET_CONFIGURATION request.
 333:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 334:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress: Contains current device address. This
 335:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. Host starts to communicate
 336:Generated_Source\PSoC5/USBUART.c **** *      to device with address 0 and then set it to whatever value using
 337:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 338:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus: initialized to 0.
 339:Generated_Source\PSoC5/USBUART.c **** *       This is two bit variable which contain power status in first bit
 340:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 341:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 342:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize initialized to 0;
 343:Generated_Source\PSoC5/USBUART.c **** *
 344:Generated_Source\PSoC5/USBUART.c **** * Reentrant:
 345:Generated_Source\PSoC5/USBUART.c **** *  No.
 346:Generated_Source\PSoC5/USBUART.c **** *
 347:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 348:Generated_Source\PSoC5/USBUART.c **** void USBUART_InitComponent(uint8 device, uint8 mode) 
 349:Generated_Source\PSoC5/USBUART.c **** {
 306              		.loc 1 349 0
 307              		.cfi_startproc
 308              		@ args = 0, pretend = 0, frame = 8
 309              		@ frame_needed = 1, uses_anonymous_args = 0
 310 0000 80B5     		push	{r7, lr}
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 7, -8
 313              		.cfi_offset 14, -4
 314 0002 82B0     		sub	sp, sp, #8
 315              		.cfi_def_cfa_offset 16
 316 0004 00AF     		add	r7, sp, #0
 317              		.cfi_def_cfa_register 7
 318 0006 0346     		mov	r3, r0
 319 0008 0A46     		mov	r2, r1
 320 000a FB71     		strb	r3, [r7, #7]
 321 000c 1346     		mov	r3, r2
 322 000e BB71     		strb	r3, [r7, #6]
 350:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with
 351:Generated_Source\PSoC5/USBUART.c ****     *  HID 7.2.6 Set_Protocol Request:
 352:Generated_Source\PSoC5/USBUART.c ****     *  "When initialized, all devices default to report protocol."
 353:Generated_Source\PSoC5/USBUART.c ****     */
 354:Generated_Source\PSoC5/USBUART.c ****     #if defined(USBUART_ENABLE_HID_CLASS)
 355:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
 356:Generated_Source\PSoC5/USBUART.c **** 
 357:Generated_Source\PSoC5/USBUART.c ****         for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
 358:Generated_Source\PSoC5/USBUART.c ****         {
 359:Generated_Source\PSoC5/USBUART.c ****             USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 360:Generated_Source\PSoC5/USBUART.c ****         }
 361:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_ENABLE_HID_CLASS */
 362:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 13


 363:Generated_Source\PSoC5/USBUART.c ****     /* Enable Interrupts. */
 364:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_BUS_RESET_VECT_NUM);
 323              		.loc 1 364 0
 324 0010 264B     		ldr	r3, .L14
 325 0012 4FF40002 		mov	r2, #8388608
 326 0016 1A60     		str	r2, [r3]
 365:Generated_Source\PSoC5/USBUART.c ****     CyIntEnable(USBUART_EP_0_VECT_NUM);
 327              		.loc 1 365 0
 328 0018 244B     		ldr	r3, .L14
 329 001a 4FF08072 		mov	r2, #16777216
 330 001e 1A60     		str	r2, [r3]
 366:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP1_ISR_REMOVE == 0u)
 367:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_1_VECT_NUM);
 331              		.loc 1 367 0
 332 0020 224B     		ldr	r3, .L14
 333 0022 4FF48072 		mov	r2, #256
 334 0026 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP1_ISR_REMOVE */
 369:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP2_ISR_REMOVE == 0u)
 370:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_2_VECT_NUM);
 335              		.loc 1 370 0
 336 0028 204B     		ldr	r3, .L14
 337 002a 4FF40072 		mov	r2, #512
 338 002e 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP2_ISR_REMOVE */
 372:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP3_ISR_REMOVE == 0u)
 373:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_3_VECT_NUM);
 339              		.loc 1 373 0
 340 0030 1E4B     		ldr	r3, .L14
 341 0032 4FF48062 		mov	r2, #1024
 342 0036 1A60     		str	r2, [r3]
 374:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP3_ISR_REMOVE */
 375:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP4_ISR_REMOVE == 0u)
 376:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_4_VECT_NUM);
 377:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP4_ISR_REMOVE */
 378:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP5_ISR_REMOVE == 0u)
 379:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_5_VECT_NUM);
 380:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP5_ISR_REMOVE */
 381:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP6_ISR_REMOVE == 0u)
 382:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_6_VECT_NUM);
 383:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP6_ISR_REMOVE */
 384:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP7_ISR_REMOVE == 0u)
 385:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_7_VECT_NUM);
 386:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP7_ISR_REMOVE */
 387:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP8_ISR_REMOVE == 0u)
 388:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_EP_8_VECT_NUM);
 389:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP8_ISR_REMOVE */
 390:Generated_Source\PSoC5/USBUART.c ****     #if((USBUART_EP_MM != USBUART__EP_MANUAL) && (USBUART_ARB_ISR_REMOVE == 0u))
 391:Generated_Source\PSoC5/USBUART.c ****         /* usb arb interrupt enable */
 392:Generated_Source\PSoC5/USBUART.c ****         USBUART_ARB_INT_EN_REG = USBUART_ARB_INT_MASK;
 393:Generated_Source\PSoC5/USBUART.c ****         CyIntEnable(USBUART_ARB_VECT_NUM);
 394:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 395:Generated_Source\PSoC5/USBUART.c **** 
 396:Generated_Source\PSoC5/USBUART.c ****     /* Arbiter configuration for DMA transfers */
 397:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 398:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAMANUAL)
 399:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_CFG_REG = USBUART_ARB_CFG_MANUAL_DMA;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 14


 400:Generated_Source\PSoC5/USBUART.c ****         #endif   /*  USBUART_EP_MM == USBUART__EP_DMAMANUAL */
 401:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAAUTO)
 402:Generated_Source\PSoC5/USBUART.c ****             /*Set cfg cmplt this rises DMA request when the full configuration is done */
 403:Generated_Source\PSoC5/USBUART.c ****             USBUART_ARB_CFG_REG = USBUART_ARB_CFG_AUTO_DMA | USBUART_ARB_CFG_AUTO_MEM;
 404:Generated_Source\PSoC5/USBUART.c ****             #if(USBUART_EP_DMA_AUTO_OPT == 0u)
 405:Generated_Source\PSoC5/USBUART.c ****                 /* Init interrupt which handles verification of the successful DMA transaction */
 406:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP_DMA_Done_isr_StartEx(&USBUART_EP_DMA_DONE_ISR);
 407:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP17_DMA_Done_SR_InterruptEnable();
 408:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP8_DMA_Done_SR_InterruptEnable();
 409:Generated_Source\PSoC5/USBUART.c ****             #endif /* USBUART_EP_DMA_AUTO_OPT == 0u */
 410:Generated_Source\PSoC5/USBUART.c ****         #endif   /*  USBUART_EP_MM == USBUART__EP_DMAAUTO */
 411:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 412:Generated_Source\PSoC5/USBUART.c **** 
 413:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState = USBUART_TRANS_STATE_IDLE;
 343              		.loc 1 413 0
 344 0038 1D4B     		ldr	r3, .L14+4
 345 003a 0022     		movs	r2, #0
 346 003c 1A70     		strb	r2, [r3]
 414:Generated_Source\PSoC5/USBUART.c **** 
 415:Generated_Source\PSoC5/USBUART.c ****     /* USB Locking: Enabled, VRegulator: depend on mode or DWR Voltage configuration*/
 416:Generated_Source\PSoC5/USBUART.c ****     switch(mode)
 347              		.loc 1 416 0
 348 003e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 349 0040 002B     		cmp	r3, #0
 350 0042 02D0     		beq	.L10
 351 0044 012B     		cmp	r3, #1
 352 0046 04D0     		beq	.L11
 353 0048 07E0     		b	.L13
 354              	.L10:
 417:Generated_Source\PSoC5/USBUART.c ****     {
 418:Generated_Source\PSoC5/USBUART.c ****         case USBUART_3V_OPERATION:
 419:Generated_Source\PSoC5/USBUART.c ****             USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 355              		.loc 1 419 0
 356 004a 1A4B     		ldr	r3, .L14+8
 357 004c 0222     		movs	r2, #2
 358 004e 1A70     		strb	r2, [r3]
 420:Generated_Source\PSoC5/USBUART.c ****             break;
 359              		.loc 1 420 0
 360 0050 07E0     		b	.L12
 361              	.L11:
 421:Generated_Source\PSoC5/USBUART.c ****         case USBUART_5V_OPERATION:
 422:Generated_Source\PSoC5/USBUART.c ****             USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK | USBUART_CR1_REG_ENABLE;
 362              		.loc 1 422 0
 363 0052 184B     		ldr	r3, .L14+8
 364 0054 0322     		movs	r2, #3
 365 0056 1A70     		strb	r2, [r3]
 423:Generated_Source\PSoC5/USBUART.c ****             break;
 366              		.loc 1 423 0
 367 0058 03E0     		b	.L12
 368              	.L13:
 424:Generated_Source\PSoC5/USBUART.c ****         default:   /*USBUART_DWR_VDDD_OPERATION */
 425:Generated_Source\PSoC5/USBUART.c ****             #if(USBUART_VDDD_MV < USBUART_3500MV)
 426:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK;
 427:Generated_Source\PSoC5/USBUART.c ****             #else
 428:Generated_Source\PSoC5/USBUART.c ****                 USBUART_CR1_REG = USBUART_CR1_ENABLE_LOCK | USBUART_CR1_REG_ENABLE;
 369              		.loc 1 428 0
 370 005a 164B     		ldr	r3, .L14+8
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 15


 371 005c 0322     		movs	r2, #3
 372 005e 1A70     		strb	r2, [r3]
 429:Generated_Source\PSoC5/USBUART.c ****             #endif /*  USBUART_VDDD_MV < USBUART_3500MV */
 430:Generated_Source\PSoC5/USBUART.c ****             break;
 373              		.loc 1 430 0
 374 0060 00BF     		nop
 375              	.L12:
 431:Generated_Source\PSoC5/USBUART.c ****     }
 432:Generated_Source\PSoC5/USBUART.c **** 
 433:Generated_Source\PSoC5/USBUART.c ****     /* Record the descriptor selection */
 434:Generated_Source\PSoC5/USBUART.c ****     USBUART_device = device;
 376              		.loc 1 434 0
 377 0062 154A     		ldr	r2, .L14+12
 378 0064 FB79     		ldrb	r3, [r7, #7]
 379 0066 1370     		strb	r3, [r2]
 435:Generated_Source\PSoC5/USBUART.c **** 
 436:Generated_Source\PSoC5/USBUART.c ****     /* Clear all of the component data */
 437:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration = 0u;
 380              		.loc 1 437 0
 381 0068 144B     		ldr	r3, .L14+16
 382 006a 0022     		movs	r2, #0
 383 006c 1A70     		strb	r2, [r3]
 438:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 384              		.loc 1 438 0
 385 006e 144B     		ldr	r3, .L14+20
 386 0070 0022     		movs	r2, #0
 387 0072 1A70     		strb	r2, [r3]
 439:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 388              		.loc 1 439 0
 389 0074 134B     		ldr	r3, .L14+24
 390 0076 0022     		movs	r2, #0
 391 0078 1A70     		strb	r2, [r3]
 440:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress  = 0u;
 392              		.loc 1 440 0
 393 007a 134B     		ldr	r3, .L14+28
 394 007c 0022     		movs	r2, #0
 395 007e 1A70     		strb	r2, [r3]
 441:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus = 0u;
 396              		.loc 1 441 0
 397 0080 124B     		ldr	r3, .L14+32
 398 0082 0022     		movs	r2, #0
 399 0084 1A70     		strb	r2, [r3]
 442:Generated_Source\PSoC5/USBUART.c **** 
 443:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize = 0u;
 400              		.loc 1 443 0
 401 0086 124B     		ldr	r3, .L14+36
 402 0088 0022     		movs	r2, #0
 403 008a 1A70     		strb	r2, [r3]
 444:Generated_Source\PSoC5/USBUART.c **** 
 445:Generated_Source\PSoC5/USBUART.c ****     /*  ACK Setup, Stall IN/OUT */
 446:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_EP0_CR_PTR, USBUART_MODE_STALL_IN_OUT);
 404              		.loc 1 446 0
 405 008c 114B     		ldr	r3, .L14+40
 406 008e 0322     		movs	r2, #3
 407 0090 1A70     		strb	r2, [r3]
 447:Generated_Source\PSoC5/USBUART.c **** 
 448:Generated_Source\PSoC5/USBUART.c ****     /* Enable the SIE with an address 0 */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 16


 449:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_CR0_PTR, USBUART_CR0_ENABLE);
 408              		.loc 1 449 0
 409 0092 114B     		ldr	r3, .L14+44
 410 0094 8022     		movs	r2, #128
 411 0096 1A70     		strb	r2, [r3]
 450:Generated_Source\PSoC5/USBUART.c **** 
 451:Generated_Source\PSoC5/USBUART.c ****     /* Workaround for PSOC5LP */
 452:Generated_Source\PSoC5/USBUART.c ****     CyDelayCycles(1u);
 412              		.loc 1 452 0
 413 0098 0120     		movs	r0, #1
 414 009a FFF7FEFF 		bl	CyDelayCycles
 453:Generated_Source\PSoC5/USBUART.c **** 
 454:Generated_Source\PSoC5/USBUART.c ****     /* Finally, Enable d+ pullup and select iomode to USB mode*/
 455:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_USBIO_CR1_PTR, USBUART_USBIO_CR1_USBPUEN);
 415              		.loc 1 455 0
 416 009e 0F4B     		ldr	r3, .L14+48
 417 00a0 0422     		movs	r2, #4
 418 00a2 1A70     		strb	r2, [r3]
 456:Generated_Source\PSoC5/USBUART.c **** }
 419              		.loc 1 456 0
 420 00a4 00BF     		nop
 421 00a6 0837     		adds	r7, r7, #8
 422              		.cfi_def_cfa_offset 8
 423 00a8 BD46     		mov	sp, r7
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 00aa 80BD     		pop	{r7, pc}
 427              	.L15:
 428              		.align	2
 429              	.L14:
 430 00ac 00E100E0 		.word	-536813312
 431 00b0 00000000 		.word	USBUART_transferState
 432 00b4 09600040 		.word	1073766409
 433 00b8 00000000 		.word	USBUART_device
 434 00bc 00000000 		.word	USBUART_configuration
 435 00c0 00000000 		.word	USBUART_interfaceNumber
 436 00c4 00000000 		.word	USBUART_configurationChanged
 437 00c8 00000000 		.word	USBUART_deviceAddress
 438 00cc 00000000 		.word	USBUART_deviceStatus
 439 00d0 00000000 		.word	USBUART_lastPacketSize
 440 00d4 28600040 		.word	1073766440
 441 00d8 08600040 		.word	1073766408
 442 00dc 12600040 		.word	1073766418
 443              		.cfi_endproc
 444              	.LFE2:
 445              		.size	USBUART_InitComponent, .-USBUART_InitComponent
 446              		.section	.text.USBUART_ReInitComponent,"ax",%progbits
 447              		.align	2
 448              		.global	USBUART_ReInitComponent
 449              		.thumb
 450              		.thumb_func
 451              		.type	USBUART_ReInitComponent, %function
 452              	USBUART_ReInitComponent:
 453              	.LFB3:
 457:Generated_Source\PSoC5/USBUART.c **** 
 458:Generated_Source\PSoC5/USBUART.c **** 
 459:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 17


 460:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReInitComponent
 461:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 462:Generated_Source\PSoC5/USBUART.c **** *
 463:Generated_Source\PSoC5/USBUART.c **** * Summary:
 464:Generated_Source\PSoC5/USBUART.c **** *  This function reinitialize the component configuration and is
 465:Generated_Source\PSoC5/USBUART.c **** *  intend to be called from the Reset interrupt.
 466:Generated_Source\PSoC5/USBUART.c **** *
 467:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 468:Generated_Source\PSoC5/USBUART.c **** *  None.
 469:Generated_Source\PSoC5/USBUART.c **** *
 470:Generated_Source\PSoC5/USBUART.c **** * Return:
 471:Generated_Source\PSoC5/USBUART.c **** *   None.
 472:Generated_Source\PSoC5/USBUART.c **** *
 473:Generated_Source\PSoC5/USBUART.c **** * Global variables:
 474:Generated_Source\PSoC5/USBUART.c **** *   USBUART_device: Contains the device number of the desired device
 475:Generated_Source\PSoC5/USBUART.c **** *        descriptor. The device number can be found in the Device Descriptor Tab
 476:Generated_Source\PSoC5/USBUART.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 477:Generated_Source\PSoC5/USBUART.c **** *       in the "Device Number" field.
 478:Generated_Source\PSoC5/USBUART.c **** *   USBUART_transferState: This variable used by the communication
 479:Generated_Source\PSoC5/USBUART.c **** *       functions to handle current transfer state. Initialized to
 480:Generated_Source\PSoC5/USBUART.c **** *       TRANS_STATE_IDLE in this API.
 481:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration: Contains current configuration number
 482:Generated_Source\PSoC5/USBUART.c **** *       which is set by the Host using SET_CONFIGURATION request.
 483:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 484:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress: Contains current device address. This
 485:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. Host starts to communicate
 486:Generated_Source\PSoC5/USBUART.c **** *      to device with address 0 and then set it to whatever value using
 487:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 488:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus: initialized to 0.
 489:Generated_Source\PSoC5/USBUART.c **** *       This is two bit variable which contain power status in first bit
 490:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 491:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 492:Generated_Source\PSoC5/USBUART.c **** *   USBUART_lastPacketSize initialized to 0;
 493:Generated_Source\PSoC5/USBUART.c **** *
 494:Generated_Source\PSoC5/USBUART.c **** * Reentrant:
 495:Generated_Source\PSoC5/USBUART.c **** *  No.
 496:Generated_Source\PSoC5/USBUART.c **** *
 497:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 498:Generated_Source\PSoC5/USBUART.c **** void USBUART_ReInitComponent(void) 
 499:Generated_Source\PSoC5/USBUART.c **** {
 454              		.loc 1 499 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 0
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458              		@ link register save eliminated.
 459 0000 80B4     		push	{r7}
 460              		.cfi_def_cfa_offset 4
 461              		.cfi_offset 7, -4
 462 0002 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 500:Generated_Source\PSoC5/USBUART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 501:Generated_Source\PSoC5/USBUART.c ****     *  Request: "When initialized, all devices default to report protocol."
 502:Generated_Source\PSoC5/USBUART.c ****     */
 503:Generated_Source\PSoC5/USBUART.c ****     #if defined(USBUART_ENABLE_HID_CLASS)
 504:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
 505:Generated_Source\PSoC5/USBUART.c **** 
 506:Generated_Source\PSoC5/USBUART.c ****         for (i = 0u; i < USBUART_MAX_INTERFACES_NUMBER; i++)
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 18


 507:Generated_Source\PSoC5/USBUART.c ****         {
 508:Generated_Source\PSoC5/USBUART.c ****             USBUART_hidProtocol[i] = USBUART_PROTOCOL_REPORT;
 509:Generated_Source\PSoC5/USBUART.c ****         }
 510:Generated_Source\PSoC5/USBUART.c ****     #endif /* USBUART_ENABLE_HID_CLASS */
 511:Generated_Source\PSoC5/USBUART.c **** 
 512:Generated_Source\PSoC5/USBUART.c ****     USBUART_transferState = USBUART_TRANS_STATE_IDLE;
 464              		.loc 1 512 0
 465 0004 0F4B     		ldr	r3, .L17
 466 0006 0022     		movs	r2, #0
 467 0008 1A70     		strb	r2, [r3]
 513:Generated_Source\PSoC5/USBUART.c **** 
 514:Generated_Source\PSoC5/USBUART.c ****     /* Clear all of the component data */
 515:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration = 0u;
 468              		.loc 1 515 0
 469 000a 0F4B     		ldr	r3, .L17+4
 470 000c 0022     		movs	r2, #0
 471 000e 1A70     		strb	r2, [r3]
 516:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 472              		.loc 1 516 0
 473 0010 0E4B     		ldr	r3, .L17+8
 474 0012 0022     		movs	r2, #0
 475 0014 1A70     		strb	r2, [r3]
 517:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 476              		.loc 1 517 0
 477 0016 0E4B     		ldr	r3, .L17+12
 478 0018 0022     		movs	r2, #0
 479 001a 1A70     		strb	r2, [r3]
 518:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress  = 0u;
 480              		.loc 1 518 0
 481 001c 0D4B     		ldr	r3, .L17+16
 482 001e 0022     		movs	r2, #0
 483 0020 1A70     		strb	r2, [r3]
 519:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus = 0u;
 484              		.loc 1 519 0
 485 0022 0D4B     		ldr	r3, .L17+20
 486 0024 0022     		movs	r2, #0
 487 0026 1A70     		strb	r2, [r3]
 520:Generated_Source\PSoC5/USBUART.c **** 
 521:Generated_Source\PSoC5/USBUART.c ****     USBUART_lastPacketSize = 0u;
 488              		.loc 1 521 0
 489 0028 0C4B     		ldr	r3, .L17+24
 490 002a 0022     		movs	r2, #0
 491 002c 1A70     		strb	r2, [r3]
 522:Generated_Source\PSoC5/USBUART.c **** 
 523:Generated_Source\PSoC5/USBUART.c **** 
 524:Generated_Source\PSoC5/USBUART.c ****     /*  ACK Setup, Stall IN/OUT */
 525:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_EP0_CR_PTR, USBUART_MODE_STALL_IN_OUT);
 492              		.loc 1 525 0
 493 002e 0C4B     		ldr	r3, .L17+28
 494 0030 0322     		movs	r2, #3
 495 0032 1A70     		strb	r2, [r3]
 526:Generated_Source\PSoC5/USBUART.c **** 
 527:Generated_Source\PSoC5/USBUART.c ****     /* Enable the SIE with an address 0 */
 528:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_CR0_PTR, USBUART_CR0_ENABLE);
 496              		.loc 1 528 0
 497 0034 0B4B     		ldr	r3, .L17+32
 498 0036 8022     		movs	r2, #128
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 19


 499 0038 1A70     		strb	r2, [r3]
 529:Generated_Source\PSoC5/USBUART.c **** 
 530:Generated_Source\PSoC5/USBUART.c **** }
 500              		.loc 1 530 0
 501 003a 00BF     		nop
 502 003c BD46     		mov	sp, r7
 503              		.cfi_def_cfa_register 13
 504              		@ sp needed
 505 003e 80BC     		pop	{r7}
 506              		.cfi_restore 7
 507              		.cfi_def_cfa_offset 0
 508 0040 7047     		bx	lr
 509              	.L18:
 510 0042 00BF     		.align	2
 511              	.L17:
 512 0044 00000000 		.word	USBUART_transferState
 513 0048 00000000 		.word	USBUART_configuration
 514 004c 00000000 		.word	USBUART_interfaceNumber
 515 0050 00000000 		.word	USBUART_configurationChanged
 516 0054 00000000 		.word	USBUART_deviceAddress
 517 0058 00000000 		.word	USBUART_deviceStatus
 518 005c 00000000 		.word	USBUART_lastPacketSize
 519 0060 28600040 		.word	1073766440
 520 0064 08600040 		.word	1073766408
 521              		.cfi_endproc
 522              	.LFE3:
 523              		.size	USBUART_ReInitComponent, .-USBUART_ReInitComponent
 524              		.section	.text.USBUART_Stop,"ax",%progbits
 525              		.align	2
 526              		.global	USBUART_Stop
 527              		.thumb
 528              		.thumb_func
 529              		.type	USBUART_Stop, %function
 530              	USBUART_Stop:
 531              	.LFB4:
 531:Generated_Source\PSoC5/USBUART.c **** 
 532:Generated_Source\PSoC5/USBUART.c **** 
 533:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 534:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Stop
 535:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 536:Generated_Source\PSoC5/USBUART.c **** *
 537:Generated_Source\PSoC5/USBUART.c **** * Summary:
 538:Generated_Source\PSoC5/USBUART.c **** *  This function shuts down the USB function including to release
 539:Generated_Source\PSoC5/USBUART.c **** *  the D+ Pullup and disabling the SIE.
 540:Generated_Source\PSoC5/USBUART.c **** *
 541:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 542:Generated_Source\PSoC5/USBUART.c **** *  None.
 543:Generated_Source\PSoC5/USBUART.c **** *
 544:Generated_Source\PSoC5/USBUART.c **** * Return:
 545:Generated_Source\PSoC5/USBUART.c **** *  None.
 546:Generated_Source\PSoC5/USBUART.c **** *
 547:Generated_Source\PSoC5/USBUART.c **** * Global variables:
 548:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configuration: Contains current configuration number
 549:Generated_Source\PSoC5/USBUART.c **** *       which is set by the Host using SET_CONFIGURATION request.
 550:Generated_Source\PSoC5/USBUART.c **** *       Initialized to zero in this API.
 551:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceAddress: Contains current device address. This
 552:Generated_Source\PSoC5/USBUART.c **** *       variable is initialized to zero in this API. Host starts to communicate
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 20


 553:Generated_Source\PSoC5/USBUART.c **** *      to device with address 0 and then set it to whatever value using
 554:Generated_Source\PSoC5/USBUART.c **** *      SET_ADDRESS request.
 555:Generated_Source\PSoC5/USBUART.c **** *   USBUART_deviceStatus: initialized to 0.
 556:Generated_Source\PSoC5/USBUART.c **** *       This is two bit variable which contain power status in first bit
 557:Generated_Source\PSoC5/USBUART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 558:Generated_Source\PSoC5/USBUART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 559:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configurationChanged: This variable is set to one after
 560:Generated_Source\PSoC5/USBUART.c **** *       SET_CONFIGURATION request and cleared in this function.
 561:Generated_Source\PSoC5/USBUART.c **** *   USBUART_intiVar variable is set to zero
 562:Generated_Source\PSoC5/USBUART.c **** *
 563:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 564:Generated_Source\PSoC5/USBUART.c **** void USBUART_Stop(void) 
 565:Generated_Source\PSoC5/USBUART.c **** {
 532              		.loc 1 565 0
 533              		.cfi_startproc
 534              		@ args = 0, pretend = 0, frame = 0
 535              		@ frame_needed = 1, uses_anonymous_args = 0
 536              		@ link register save eliminated.
 537 0000 80B4     		push	{r7}
 538              		.cfi_def_cfa_offset 4
 539              		.cfi_offset 7, -4
 540 0002 00AF     		add	r7, sp, #0
 541              		.cfi_def_cfa_register 7
 566:Generated_Source\PSoC5/USBUART.c **** 
 567:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 568:Generated_Source\PSoC5/USBUART.c ****         USBUART_Stop_DMA(USBUART_MAX_EP);     /* Stop all DMAs */
 569:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 570:Generated_Source\PSoC5/USBUART.c **** 
 571:Generated_Source\PSoC5/USBUART.c ****     /* Disable the SIE */
 572:Generated_Source\PSoC5/USBUART.c ****     USBUART_CR0_REG &= (uint8)(~USBUART_CR0_ENABLE);
 542              		.loc 1 572 0
 543 0004 244A     		ldr	r2, .L20
 544 0006 244B     		ldr	r3, .L20
 545 0008 1B78     		ldrb	r3, [r3]
 546 000a DBB2     		uxtb	r3, r3
 547 000c 03F07F03 		and	r3, r3, #127
 548 0010 DBB2     		uxtb	r3, r3
 549 0012 1370     		strb	r3, [r2]
 573:Generated_Source\PSoC5/USBUART.c ****     /* Disable the d+ pullup */
 574:Generated_Source\PSoC5/USBUART.c ****     USBUART_USBIO_CR1_REG &= (uint8)(~USBUART_USBIO_CR1_USBPUEN);
 550              		.loc 1 574 0
 551 0014 214A     		ldr	r2, .L20+4
 552 0016 214B     		ldr	r3, .L20+4
 553 0018 1B78     		ldrb	r3, [r3]
 554 001a DBB2     		uxtb	r3, r3
 555 001c 23F00403 		bic	r3, r3, #4
 556 0020 DBB2     		uxtb	r3, r3
 557 0022 1370     		strb	r3, [r2]
 575:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB in ACT PM */
 576:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_ACT_CFG_REG &= (uint8)(~USBUART_PM_ACT_EN_FSUSB);
 558              		.loc 1 576 0
 559 0024 1E4A     		ldr	r2, .L20+8
 560 0026 1E4B     		ldr	r3, .L20+8
 561 0028 1B78     		ldrb	r3, [r3]
 562 002a DBB2     		uxtb	r3, r3
 563 002c 23F00103 		bic	r3, r3, #1
 564 0030 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 21


 565 0032 1370     		strb	r3, [r2]
 577:Generated_Source\PSoC5/USBUART.c ****     /* Disable USB block for Standby Power Mode */
 578:Generated_Source\PSoC5/USBUART.c ****     USBUART_PM_STBY_CFG_REG &= (uint8)(~USBUART_PM_STBY_EN_FSUSB);
 566              		.loc 1 578 0
 567 0034 1B4A     		ldr	r2, .L20+12
 568 0036 1B4B     		ldr	r3, .L20+12
 569 0038 1B78     		ldrb	r3, [r3]
 570 003a DBB2     		uxtb	r3, r3
 571 003c 23F00103 		bic	r3, r3, #1
 572 0040 DBB2     		uxtb	r3, r3
 573 0042 1370     		strb	r3, [r2]
 579:Generated_Source\PSoC5/USBUART.c **** 
 580:Generated_Source\PSoC5/USBUART.c ****     /* Disable the reset and EP interrupts */
 581:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_BUS_RESET_VECT_NUM);
 574              		.loc 1 581 0
 575 0044 184B     		ldr	r3, .L20+16
 576 0046 4FF40002 		mov	r2, #8388608
 577 004a 1A60     		str	r2, [r3]
 582:Generated_Source\PSoC5/USBUART.c ****     CyIntDisable(USBUART_EP_0_VECT_NUM);
 578              		.loc 1 582 0
 579 004c 164B     		ldr	r3, .L20+16
 580 004e 4FF08072 		mov	r2, #16777216
 581 0052 1A60     		str	r2, [r3]
 583:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP1_ISR_REMOVE == 0u)
 584:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_1_VECT_NUM);
 582              		.loc 1 584 0
 583 0054 144B     		ldr	r3, .L20+16
 584 0056 4FF48072 		mov	r2, #256
 585 005a 1A60     		str	r2, [r3]
 585:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP1_ISR_REMOVE */
 586:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP2_ISR_REMOVE == 0u)
 587:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_2_VECT_NUM);
 586              		.loc 1 587 0
 587 005c 124B     		ldr	r3, .L20+16
 588 005e 4FF40072 		mov	r2, #512
 589 0062 1A60     		str	r2, [r3]
 588:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP2_ISR_REMOVE */
 589:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP3_ISR_REMOVE == 0u)
 590:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_3_VECT_NUM);
 590              		.loc 1 590 0
 591 0064 104B     		ldr	r3, .L20+16
 592 0066 4FF48062 		mov	r2, #1024
 593 006a 1A60     		str	r2, [r3]
 591:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP3_ISR_REMOVE */
 592:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP4_ISR_REMOVE == 0u)
 593:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_4_VECT_NUM);
 594:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP4_ISR_REMOVE */
 595:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP5_ISR_REMOVE == 0u)
 596:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_5_VECT_NUM);
 597:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP5_ISR_REMOVE */
 598:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP6_ISR_REMOVE == 0u)
 599:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_6_VECT_NUM);
 600:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP6_ISR_REMOVE */
 601:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP7_ISR_REMOVE == 0u)
 602:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_7_VECT_NUM);
 603:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP7_ISR_REMOVE */
 604:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP8_ISR_REMOVE == 0u)
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 22


 605:Generated_Source\PSoC5/USBUART.c ****         CyIntDisable(USBUART_EP_8_VECT_NUM);
 606:Generated_Source\PSoC5/USBUART.c ****     #endif   /*  USBUART_EP8_ISR_REMOVE */
 607:Generated_Source\PSoC5/USBUART.c **** 
 608:Generated_Source\PSoC5/USBUART.c ****     /* Clear all of the component data */
 609:Generated_Source\PSoC5/USBUART.c ****     USBUART_configuration = 0u;
 594              		.loc 1 609 0
 595 006c 0F4B     		ldr	r3, .L20+20
 596 006e 0022     		movs	r2, #0
 597 0070 1A70     		strb	r2, [r3]
 610:Generated_Source\PSoC5/USBUART.c ****     USBUART_interfaceNumber = 0u;
 598              		.loc 1 610 0
 599 0072 0F4B     		ldr	r3, .L20+24
 600 0074 0022     		movs	r2, #0
 601 0076 1A70     		strb	r2, [r3]
 611:Generated_Source\PSoC5/USBUART.c ****     USBUART_configurationChanged = 0u;
 602              		.loc 1 611 0
 603 0078 0E4B     		ldr	r3, .L20+28
 604 007a 0022     		movs	r2, #0
 605 007c 1A70     		strb	r2, [r3]
 612:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceAddress  = 0u;
 606              		.loc 1 612 0
 607 007e 0E4B     		ldr	r3, .L20+32
 608 0080 0022     		movs	r2, #0
 609 0082 1A70     		strb	r2, [r3]
 613:Generated_Source\PSoC5/USBUART.c ****     USBUART_deviceStatus = 0u;
 610              		.loc 1 613 0
 611 0084 0D4B     		ldr	r3, .L20+36
 612 0086 0022     		movs	r2, #0
 613 0088 1A70     		strb	r2, [r3]
 614:Generated_Source\PSoC5/USBUART.c ****     USBUART_initVar = 0u;
 614              		.loc 1 614 0
 615 008a 0D4B     		ldr	r3, .L20+40
 616 008c 0022     		movs	r2, #0
 617 008e 1A70     		strb	r2, [r3]
 615:Generated_Source\PSoC5/USBUART.c **** 
 616:Generated_Source\PSoC5/USBUART.c **** }
 618              		.loc 1 616 0
 619 0090 00BF     		nop
 620 0092 BD46     		mov	sp, r7
 621              		.cfi_def_cfa_register 13
 622              		@ sp needed
 623 0094 80BC     		pop	{r7}
 624              		.cfi_restore 7
 625              		.cfi_def_cfa_offset 0
 626 0096 7047     		bx	lr
 627              	.L21:
 628              		.align	2
 629              	.L20:
 630 0098 08600040 		.word	1073766408
 631 009c 12600040 		.word	1073766418
 632 00a0 A5430040 		.word	1073759141
 633 00a4 B5430040 		.word	1073759157
 634 00a8 80E100E0 		.word	-536813184
 635 00ac 00000000 		.word	USBUART_configuration
 636 00b0 00000000 		.word	USBUART_interfaceNumber
 637 00b4 00000000 		.word	USBUART_configurationChanged
 638 00b8 00000000 		.word	USBUART_deviceAddress
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 23


 639 00bc 00000000 		.word	USBUART_deviceStatus
 640 00c0 00000000 		.word	USBUART_initVar
 641              		.cfi_endproc
 642              	.LFE4:
 643              		.size	USBUART_Stop, .-USBUART_Stop
 644              		.section	.text.USBUART_CheckActivity,"ax",%progbits
 645              		.align	2
 646              		.global	USBUART_CheckActivity
 647              		.thumb
 648              		.thumb_func
 649              		.type	USBUART_CheckActivity, %function
 650              	USBUART_CheckActivity:
 651              	.LFB5:
 617:Generated_Source\PSoC5/USBUART.c **** 
 618:Generated_Source\PSoC5/USBUART.c **** 
 619:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 620:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_CheckActivity
 621:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 622:Generated_Source\PSoC5/USBUART.c **** *
 623:Generated_Source\PSoC5/USBUART.c **** * Summary:
 624:Generated_Source\PSoC5/USBUART.c **** *  Returns the activity status of the bus.  Clears the status hardware to
 625:Generated_Source\PSoC5/USBUART.c **** *  provide fresh activity status on the next call of this routine.
 626:Generated_Source\PSoC5/USBUART.c **** *
 627:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 628:Generated_Source\PSoC5/USBUART.c **** *  None.
 629:Generated_Source\PSoC5/USBUART.c **** *
 630:Generated_Source\PSoC5/USBUART.c **** * Return:
 631:Generated_Source\PSoC5/USBUART.c **** *  1 - If bus activity was detected since the last call to this function
 632:Generated_Source\PSoC5/USBUART.c **** *  0 - If bus activity not was detected since the last call to this function
 633:Generated_Source\PSoC5/USBUART.c **** *
 634:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 635:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_CheckActivity(void) 
 636:Generated_Source\PSoC5/USBUART.c **** {
 652              		.loc 1 636 0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 8
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656              		@ link register save eliminated.
 657 0000 80B4     		push	{r7}
 658              		.cfi_def_cfa_offset 4
 659              		.cfi_offset 7, -4
 660 0002 83B0     		sub	sp, sp, #12
 661              		.cfi_def_cfa_offset 16
 662 0004 00AF     		add	r7, sp, #0
 663              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC5/USBUART.c ****     uint8 r;
 638:Generated_Source\PSoC5/USBUART.c **** 
 639:Generated_Source\PSoC5/USBUART.c ****     r = CY_GET_REG8(USBUART_CR1_PTR);
 664              		.loc 1 639 0
 665 0006 0A4B     		ldr	r3, .L24
 666 0008 1B78     		ldrb	r3, [r3]
 667 000a FB71     		strb	r3, [r7, #7]
 640:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_CR1_PTR, (r & ((uint8)(~USBUART_CR1_BUS_ACTIVITY))));
 668              		.loc 1 640 0
 669 000c 084A     		ldr	r2, .L24
 670 000e FB79     		ldrb	r3, [r7, #7]
 671 0010 23F00403 		bic	r3, r3, #4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 24


 672 0014 DBB2     		uxtb	r3, r3
 673 0016 1370     		strb	r3, [r2]
 641:Generated_Source\PSoC5/USBUART.c **** 
 642:Generated_Source\PSoC5/USBUART.c ****     return((r & USBUART_CR1_BUS_ACTIVITY) >> USBUART_CR1_BUS_ACTIVITY_SHIFT);
 674              		.loc 1 642 0
 675 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 676 001a 9B10     		asrs	r3, r3, #2
 677 001c DBB2     		uxtb	r3, r3
 678 001e 03F00103 		and	r3, r3, #1
 679 0022 DBB2     		uxtb	r3, r3
 643:Generated_Source\PSoC5/USBUART.c **** }
 680              		.loc 1 643 0
 681 0024 1846     		mov	r0, r3
 682 0026 0C37     		adds	r7, r7, #12
 683              		.cfi_def_cfa_offset 4
 684 0028 BD46     		mov	sp, r7
 685              		.cfi_def_cfa_register 13
 686              		@ sp needed
 687 002a 80BC     		pop	{r7}
 688              		.cfi_restore 7
 689              		.cfi_def_cfa_offset 0
 690 002c 7047     		bx	lr
 691              	.L25:
 692 002e 00BF     		.align	2
 693              	.L24:
 694 0030 09600040 		.word	1073766409
 695              		.cfi_endproc
 696              	.LFE5:
 697              		.size	USBUART_CheckActivity, .-USBUART_CheckActivity
 698              		.section	.text.USBUART_GetConfiguration,"ax",%progbits
 699              		.align	2
 700              		.global	USBUART_GetConfiguration
 701              		.thumb
 702              		.thumb_func
 703              		.type	USBUART_GetConfiguration, %function
 704              	USBUART_GetConfiguration:
 705              	.LFB6:
 644:Generated_Source\PSoC5/USBUART.c **** 
 645:Generated_Source\PSoC5/USBUART.c **** 
 646:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetConfiguration
 648:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 649:Generated_Source\PSoC5/USBUART.c **** *
 650:Generated_Source\PSoC5/USBUART.c **** * Summary:
 651:Generated_Source\PSoC5/USBUART.c **** *  Returns the current configuration setting
 652:Generated_Source\PSoC5/USBUART.c **** *
 653:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 654:Generated_Source\PSoC5/USBUART.c **** *  None.
 655:Generated_Source\PSoC5/USBUART.c **** *
 656:Generated_Source\PSoC5/USBUART.c **** * Return:
 657:Generated_Source\PSoC5/USBUART.c **** *  configuration.
 658:Generated_Source\PSoC5/USBUART.c **** *
 659:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetConfiguration(void) 
 661:Generated_Source\PSoC5/USBUART.c **** {
 706              		.loc 1 661 0
 707              		.cfi_startproc
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 25


 708              		@ args = 0, pretend = 0, frame = 0
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711 0000 80B4     		push	{r7}
 712              		.cfi_def_cfa_offset 4
 713              		.cfi_offset 7, -4
 714 0002 00AF     		add	r7, sp, #0
 715              		.cfi_def_cfa_register 7
 662:Generated_Source\PSoC5/USBUART.c ****     return(USBUART_configuration);
 716              		.loc 1 662 0
 717 0004 034B     		ldr	r3, .L28
 718 0006 1B78     		ldrb	r3, [r3]
 719 0008 DBB2     		uxtb	r3, r3
 663:Generated_Source\PSoC5/USBUART.c **** }
 720              		.loc 1 663 0
 721 000a 1846     		mov	r0, r3
 722 000c BD46     		mov	sp, r7
 723              		.cfi_def_cfa_register 13
 724              		@ sp needed
 725 000e 80BC     		pop	{r7}
 726              		.cfi_restore 7
 727              		.cfi_def_cfa_offset 0
 728 0010 7047     		bx	lr
 729              	.L29:
 730 0012 00BF     		.align	2
 731              	.L28:
 732 0014 00000000 		.word	USBUART_configuration
 733              		.cfi_endproc
 734              	.LFE6:
 735              		.size	USBUART_GetConfiguration, .-USBUART_GetConfiguration
 736              		.section	.text.USBUART_IsConfigurationChanged,"ax",%progbits
 737              		.align	2
 738              		.global	USBUART_IsConfigurationChanged
 739              		.thumb
 740              		.thumb_func
 741              		.type	USBUART_IsConfigurationChanged, %function
 742              	USBUART_IsConfigurationChanged:
 743              	.LFB7:
 664:Generated_Source\PSoC5/USBUART.c **** 
 665:Generated_Source\PSoC5/USBUART.c **** 
 666:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 667:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_IsConfigurationChanged
 668:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 669:Generated_Source\PSoC5/USBUART.c **** *
 670:Generated_Source\PSoC5/USBUART.c **** * Summary:
 671:Generated_Source\PSoC5/USBUART.c **** *  Returns the clear on read configuration state. It is usefull when PC send
 672:Generated_Source\PSoC5/USBUART.c **** *  double SET_CONFIGURATION request with same configuration number.
 673:Generated_Source\PSoC5/USBUART.c **** *
 674:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 675:Generated_Source\PSoC5/USBUART.c **** *  None.
 676:Generated_Source\PSoC5/USBUART.c **** *
 677:Generated_Source\PSoC5/USBUART.c **** * Return:
 678:Generated_Source\PSoC5/USBUART.c **** *  Not zero value when new configuration has been changed, otherwise zero is
 679:Generated_Source\PSoC5/USBUART.c **** *  returned.
 680:Generated_Source\PSoC5/USBUART.c **** *
 681:Generated_Source\PSoC5/USBUART.c **** * Global variables:
 682:Generated_Source\PSoC5/USBUART.c **** *   USBUART_configurationChanged: This variable is set to one after
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 26


 683:Generated_Source\PSoC5/USBUART.c **** *       SET_CONFIGURATION request and cleared in this function.
 684:Generated_Source\PSoC5/USBUART.c **** *
 685:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 686:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_IsConfigurationChanged(void) 
 687:Generated_Source\PSoC5/USBUART.c **** {
 744              		.loc 1 687 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 8
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748              		@ link register save eliminated.
 749 0000 80B4     		push	{r7}
 750              		.cfi_def_cfa_offset 4
 751              		.cfi_offset 7, -4
 752 0002 83B0     		sub	sp, sp, #12
 753              		.cfi_def_cfa_offset 16
 754 0004 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 688:Generated_Source\PSoC5/USBUART.c ****     uint8 res = 0u;
 756              		.loc 1 688 0
 757 0006 0023     		movs	r3, #0
 758 0008 FB71     		strb	r3, [r7, #7]
 689:Generated_Source\PSoC5/USBUART.c **** 
 690:Generated_Source\PSoC5/USBUART.c ****     if(USBUART_configurationChanged != 0u)
 759              		.loc 1 690 0
 760 000a 084B     		ldr	r3, .L33
 761 000c 1B78     		ldrb	r3, [r3]
 762 000e DBB2     		uxtb	r3, r3
 763 0010 002B     		cmp	r3, #0
 764 0012 05D0     		beq	.L31
 691:Generated_Source\PSoC5/USBUART.c ****     {
 692:Generated_Source\PSoC5/USBUART.c ****         res = USBUART_configurationChanged;
 765              		.loc 1 692 0
 766 0014 054B     		ldr	r3, .L33
 767 0016 1B78     		ldrb	r3, [r3]
 768 0018 FB71     		strb	r3, [r7, #7]
 693:Generated_Source\PSoC5/USBUART.c ****         USBUART_configurationChanged = 0u;
 769              		.loc 1 693 0
 770 001a 044B     		ldr	r3, .L33
 771 001c 0022     		movs	r2, #0
 772 001e 1A70     		strb	r2, [r3]
 773              	.L31:
 694:Generated_Source\PSoC5/USBUART.c ****     }
 695:Generated_Source\PSoC5/USBUART.c **** 
 696:Generated_Source\PSoC5/USBUART.c ****     return(res);
 774              		.loc 1 696 0
 775 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 697:Generated_Source\PSoC5/USBUART.c **** }
 776              		.loc 1 697 0
 777 0022 1846     		mov	r0, r3
 778 0024 0C37     		adds	r7, r7, #12
 779              		.cfi_def_cfa_offset 4
 780 0026 BD46     		mov	sp, r7
 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 0028 80BC     		pop	{r7}
 784              		.cfi_restore 7
 785              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 27


 786 002a 7047     		bx	lr
 787              	.L34:
 788              		.align	2
 789              	.L33:
 790 002c 00000000 		.word	USBUART_configurationChanged
 791              		.cfi_endproc
 792              	.LFE7:
 793              		.size	USBUART_IsConfigurationChanged, .-USBUART_IsConfigurationChanged
 794              		.section	.text.USBUART_GetInterfaceSetting,"ax",%progbits
 795              		.align	2
 796              		.global	USBUART_GetInterfaceSetting
 797              		.thumb
 798              		.thumb_func
 799              		.type	USBUART_GetInterfaceSetting, %function
 800              	USBUART_GetInterfaceSetting:
 801              	.LFB8:
 698:Generated_Source\PSoC5/USBUART.c **** 
 699:Generated_Source\PSoC5/USBUART.c **** 
 700:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 701:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetInterfaceSetting
 702:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 703:Generated_Source\PSoC5/USBUART.c **** *
 704:Generated_Source\PSoC5/USBUART.c **** * Summary:
 705:Generated_Source\PSoC5/USBUART.c **** *  Returns the alternate setting from current interface
 706:Generated_Source\PSoC5/USBUART.c **** *
 707:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 708:Generated_Source\PSoC5/USBUART.c **** *  uint8 interfaceNumber, interface number
 709:Generated_Source\PSoC5/USBUART.c **** *
 710:Generated_Source\PSoC5/USBUART.c **** * Return:
 711:Generated_Source\PSoC5/USBUART.c **** *  Alternate setting.
 712:Generated_Source\PSoC5/USBUART.c **** *
 713:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 714:Generated_Source\PSoC5/USBUART.c **** uint8  USBUART_GetInterfaceSetting(uint8 interfaceNumber)
 715:Generated_Source\PSoC5/USBUART.c ****                                                     
 716:Generated_Source\PSoC5/USBUART.c **** {
 802              		.loc 1 716 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 8
 805              		@ frame_needed = 1, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 807 0000 80B4     		push	{r7}
 808              		.cfi_def_cfa_offset 4
 809              		.cfi_offset 7, -4
 810 0002 83B0     		sub	sp, sp, #12
 811              		.cfi_def_cfa_offset 16
 812 0004 00AF     		add	r7, sp, #0
 813              		.cfi_def_cfa_register 7
 814 0006 0346     		mov	r3, r0
 815 0008 FB71     		strb	r3, [r7, #7]
 717:Generated_Source\PSoC5/USBUART.c ****     return(USBUART_interfaceSetting[interfaceNumber]);
 816              		.loc 1 717 0
 817 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 818 000c 034A     		ldr	r2, .L37
 819 000e D35C     		ldrb	r3, [r2, r3]
 820 0010 DBB2     		uxtb	r3, r3
 718:Generated_Source\PSoC5/USBUART.c **** }
 821              		.loc 1 718 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 28


 822 0012 1846     		mov	r0, r3
 823 0014 0C37     		adds	r7, r7, #12
 824              		.cfi_def_cfa_offset 4
 825 0016 BD46     		mov	sp, r7
 826              		.cfi_def_cfa_register 13
 827              		@ sp needed
 828 0018 80BC     		pop	{r7}
 829              		.cfi_restore 7
 830              		.cfi_def_cfa_offset 0
 831 001a 7047     		bx	lr
 832              	.L38:
 833              		.align	2
 834              	.L37:
 835 001c 00000000 		.word	USBUART_interfaceSetting
 836              		.cfi_endproc
 837              	.LFE8:
 838              		.size	USBUART_GetInterfaceSetting, .-USBUART_GetInterfaceSetting
 839              		.section	.text.USBUART_GetEPState,"ax",%progbits
 840              		.align	2
 841              		.global	USBUART_GetEPState
 842              		.thumb
 843              		.thumb_func
 844              		.type	USBUART_GetEPState, %function
 845              	USBUART_GetEPState:
 846              	.LFB9:
 719:Generated_Source\PSoC5/USBUART.c **** 
 720:Generated_Source\PSoC5/USBUART.c **** 
 721:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 722:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPState
 723:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 724:Generated_Source\PSoC5/USBUART.c **** *
 725:Generated_Source\PSoC5/USBUART.c **** * Summary:
 726:Generated_Source\PSoC5/USBUART.c **** *  Returned the state of the requested endpoint.
 727:Generated_Source\PSoC5/USBUART.c **** *
 728:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 729:Generated_Source\PSoC5/USBUART.c **** *  epNumber: Endpoint Number
 730:Generated_Source\PSoC5/USBUART.c **** *
 731:Generated_Source\PSoC5/USBUART.c **** * Return:
 732:Generated_Source\PSoC5/USBUART.c **** *  State of the requested endpoint.
 733:Generated_Source\PSoC5/USBUART.c **** *
 734:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 735:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPState(uint8 epNumber) 
 736:Generated_Source\PSoC5/USBUART.c **** {
 847              		.loc 1 736 0
 848              		.cfi_startproc
 849              		@ args = 0, pretend = 0, frame = 8
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851              		@ link register save eliminated.
 852 0000 80B4     		push	{r7}
 853              		.cfi_def_cfa_offset 4
 854              		.cfi_offset 7, -4
 855 0002 83B0     		sub	sp, sp, #12
 856              		.cfi_def_cfa_offset 16
 857 0004 00AF     		add	r7, sp, #0
 858              		.cfi_def_cfa_register 7
 859 0006 0346     		mov	r3, r0
 860 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 29


 737:Generated_Source\PSoC5/USBUART.c ****     return(USBUART_EP[epNumber].apiEpState);
 861              		.loc 1 737 0
 862 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 863 000c 0649     		ldr	r1, .L41
 864 000e 1346     		mov	r3, r2
 865 0010 5B00     		lsls	r3, r3, #1
 866 0012 1344     		add	r3, r3, r2
 867 0014 9B00     		lsls	r3, r3, #2
 868 0016 0B44     		add	r3, r3, r1
 869 0018 0133     		adds	r3, r3, #1
 870 001a 1B78     		ldrb	r3, [r3]
 871 001c DBB2     		uxtb	r3, r3
 738:Generated_Source\PSoC5/USBUART.c **** }
 872              		.loc 1 738 0
 873 001e 1846     		mov	r0, r3
 874 0020 0C37     		adds	r7, r7, #12
 875              		.cfi_def_cfa_offset 4
 876 0022 BD46     		mov	sp, r7
 877              		.cfi_def_cfa_register 13
 878              		@ sp needed
 879 0024 80BC     		pop	{r7}
 880              		.cfi_restore 7
 881              		.cfi_def_cfa_offset 0
 882 0026 7047     		bx	lr
 883              	.L42:
 884              		.align	2
 885              	.L41:
 886 0028 00000000 		.word	USBUART_EP
 887              		.cfi_endproc
 888              	.LFE9:
 889              		.size	USBUART_GetEPState, .-USBUART_GetEPState
 890              		.section	.text.USBUART_GetEPCount,"ax",%progbits
 891              		.align	2
 892              		.global	USBUART_GetEPCount
 893              		.thumb
 894              		.thumb_func
 895              		.type	USBUART_GetEPCount, %function
 896              	USBUART_GetEPCount:
 897              	.LFB10:
 739:Generated_Source\PSoC5/USBUART.c **** 
 740:Generated_Source\PSoC5/USBUART.c **** 
 741:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 742:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPCount
 743:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 744:Generated_Source\PSoC5/USBUART.c **** *
 745:Generated_Source\PSoC5/USBUART.c **** * Summary:
 746:Generated_Source\PSoC5/USBUART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 747:Generated_Source\PSoC5/USBUART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 748:Generated_Source\PSoC5/USBUART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 749:Generated_Source\PSoC5/USBUART.c **** *  packet.  This function subtracts the two counts.
 750:Generated_Source\PSoC5/USBUART.c **** *
 751:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 752:Generated_Source\PSoC5/USBUART.c **** *  epNumber: Data Endpoint Number.
 753:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
 754:Generated_Source\PSoC5/USBUART.c **** *
 755:Generated_Source\PSoC5/USBUART.c **** * Return:
 756:Generated_Source\PSoC5/USBUART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 30


 757:Generated_Source\PSoC5/USBUART.c **** *  invalid endpoint.
 758:Generated_Source\PSoC5/USBUART.c **** *
 759:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
 760:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_GetEPCount(uint8 epNumber) 
 761:Generated_Source\PSoC5/USBUART.c **** {
 898              		.loc 1 761 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 16
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903 0000 80B4     		push	{r7}
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 7, -4
 906 0002 85B0     		sub	sp, sp, #20
 907              		.cfi_def_cfa_offset 24
 908 0004 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
 910 0006 0346     		mov	r3, r0
 911 0008 FB71     		strb	r3, [r7, #7]
 762:Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
 763:Generated_Source\PSoC5/USBUART.c ****     uint16 result = 0u;
 912              		.loc 1 763 0
 913 000a 0023     		movs	r3, #0
 914 000c FB81     		strh	r3, [r7, #14]	@ movhi
 764:Generated_Source\PSoC5/USBUART.c **** 
 765:Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 915              		.loc 1 765 0
 916 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 917 0010 002B     		cmp	r3, #0
 918 0012 1FD0     		beq	.L44
 919              		.loc 1 765 0 is_stmt 0 discriminator 1
 920 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 921 0016 082B     		cmp	r3, #8
 922 0018 1CD8     		bhi	.L44
 766:Generated_Source\PSoC5/USBUART.c ****     {
 767:Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 923              		.loc 1 767 0 is_stmt 1
 924 001a FB79     		ldrb	r3, [r7, #7]
 925 001c 013B     		subs	r3, r3, #1
 926 001e DBB2     		uxtb	r3, r3
 927 0020 1B01     		lsls	r3, r3, #4
 928 0022 7B73     		strb	r3, [r7, #13]
 768:Generated_Source\PSoC5/USBUART.c **** 
 769:Generated_Source\PSoC5/USBUART.c ****         result = (uint8)(CY_GET_REG8((reg8 *)(USBUART_SIE_EP1_CNT0_IND + ri)) &
 929              		.loc 1 769 0
 930 0024 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 931 0026 0E4B     		ldr	r3, .L46
 932 0028 1344     		add	r3, r3, r2
 933 002a 1B78     		ldrb	r3, [r3]
 934 002c DBB2     		uxtb	r3, r3
 935 002e 9BB2     		uxth	r3, r3
 936 0030 03F00F03 		and	r3, r3, #15
 937 0034 FB81     		strh	r3, [r7, #14]	@ movhi
 770:Generated_Source\PSoC5/USBUART.c ****                           USBUART_EPX_CNT0_MASK);
 771:Generated_Source\PSoC5/USBUART.c ****         result = (result << 8u) | CY_GET_REG8((reg8 *)(USBUART_SIE_EP1_CNT1_IND + ri));
 938              		.loc 1 771 0
 939 0036 FB89     		ldrh	r3, [r7, #14]
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 31


 940 0038 1B02     		lsls	r3, r3, #8
 941 003a 1AB2     		sxth	r2, r3
 942 003c 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 943 003e 094B     		ldr	r3, .L46+4
 944 0040 0B44     		add	r3, r3, r1
 945 0042 1B78     		ldrb	r3, [r3]
 946 0044 DBB2     		uxtb	r3, r3
 947 0046 1BB2     		sxth	r3, r3
 948 0048 1343     		orrs	r3, r3, r2
 949 004a 1BB2     		sxth	r3, r3
 950 004c FB81     		strh	r3, [r7, #14]	@ movhi
 772:Generated_Source\PSoC5/USBUART.c ****         result -= USBUART_EPX_CNTX_CRC_COUNT;
 951              		.loc 1 772 0
 952 004e FB89     		ldrh	r3, [r7, #14]	@ movhi
 953 0050 023B     		subs	r3, r3, #2
 954 0052 FB81     		strh	r3, [r7, #14]	@ movhi
 955              	.L44:
 773:Generated_Source\PSoC5/USBUART.c ****     }
 774:Generated_Source\PSoC5/USBUART.c ****     return(result);
 956              		.loc 1 774 0
 957 0054 FB89     		ldrh	r3, [r7, #14]
 775:Generated_Source\PSoC5/USBUART.c **** }
 958              		.loc 1 775 0
 959 0056 1846     		mov	r0, r3
 960 0058 1437     		adds	r7, r7, #20
 961              		.cfi_def_cfa_offset 4
 962 005a BD46     		mov	sp, r7
 963              		.cfi_def_cfa_register 13
 964              		@ sp needed
 965 005c 80BC     		pop	{r7}
 966              		.cfi_restore 7
 967              		.cfi_def_cfa_offset 0
 968 005e 7047     		bx	lr
 969              	.L47:
 970              		.align	2
 971              	.L46:
 972 0060 0C600040 		.word	1073766412
 973 0064 0D600040 		.word	1073766413
 974              		.cfi_endproc
 975              	.LFE10:
 976              		.size	USBUART_GetEPCount, .-USBUART_GetEPCount
 977              		.section	.text.USBUART_LoadInEP,"ax",%progbits
 978              		.align	2
 979              		.global	USBUART_LoadInEP
 980              		.thumb
 981              		.thumb_func
 982              		.type	USBUART_LoadInEP, %function
 983              	USBUART_LoadInEP:
 984              	.LFB11:
 776:Generated_Source\PSoC5/USBUART.c **** 
 777:Generated_Source\PSoC5/USBUART.c **** 
 778:Generated_Source\PSoC5/USBUART.c **** #if(USBUART_EP_MM != USBUART__EP_MANUAL)
 779:Generated_Source\PSoC5/USBUART.c **** 
 780:Generated_Source\PSoC5/USBUART.c **** 
 781:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
 782:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_InitEP_DMA
 783:Generated_Source\PSoC5/USBUART.c ****     ********************************************************************************
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 32


 784:Generated_Source\PSoC5/USBUART.c ****     *
 785:Generated_Source\PSoC5/USBUART.c ****     * Summary:
 786:Generated_Source\PSoC5/USBUART.c ****     *  This function allocates and initializes a DMA channel to be used by the
 787:Generated_Source\PSoC5/USBUART.c ****     *  USBUART_LoadInEP() or USBUART_ReadOutEP() APIs for data
 788:Generated_Source\PSoC5/USBUART.c ****     *  transfer.
 789:Generated_Source\PSoC5/USBUART.c ****     *
 790:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
 791:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
 792:Generated_Source\PSoC5/USBUART.c ****     *            Valid values are between 1 and 8.
 793:Generated_Source\PSoC5/USBUART.c ****     *  *pData: Pointer to a data array that is related to the EP transfers.
 794:Generated_Source\PSoC5/USBUART.c ****     *
 795:Generated_Source\PSoC5/USBUART.c ****     * Return:
 796:Generated_Source\PSoC5/USBUART.c ****     *  None.
 797:Generated_Source\PSoC5/USBUART.c ****     *
 798:Generated_Source\PSoC5/USBUART.c ****     * Reentrant:
 799:Generated_Source\PSoC5/USBUART.c ****     *  No.
 800:Generated_Source\PSoC5/USBUART.c ****     *
 801:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
 802:Generated_Source\PSoC5/USBUART.c ****     void USBUART_InitEP_DMA(uint8 epNumber, const uint8* pData)
 803:Generated_Source\PSoC5/USBUART.c ****                                                                     
 804:Generated_Source\PSoC5/USBUART.c ****     {
 805:Generated_Source\PSoC5/USBUART.c ****         uint16 src;
 806:Generated_Source\PSoC5/USBUART.c ****         uint16 dst;
 807:Generated_Source\PSoC5/USBUART.c ****         #if (CY_PSOC3)                  /* PSoC 3 */
 808:Generated_Source\PSoC5/USBUART.c ****             src = HI16(CYDEV_SRAM_BASE);
 809:Generated_Source\PSoC5/USBUART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
 810:Generated_Source\PSoC5/USBUART.c ****             pData = pData;
 811:Generated_Source\PSoC5/USBUART.c ****         #else                           /* PSoC 5 */
 812:Generated_Source\PSoC5/USBUART.c ****             if((USBUART_EP[epNumber].addr & USBUART_DIR_IN) != 0u )
 813:Generated_Source\PSoC5/USBUART.c ****             {   /* for the IN EP source is the SRAM memory buffer */
 814:Generated_Source\PSoC5/USBUART.c ****                 src = HI16(pData);
 815:Generated_Source\PSoC5/USBUART.c ****                 dst = HI16(CYDEV_PERIPH_BASE);
 816:Generated_Source\PSoC5/USBUART.c ****             }
 817:Generated_Source\PSoC5/USBUART.c ****             else
 818:Generated_Source\PSoC5/USBUART.c ****             {   /* for the OUT EP source is the SIE register */
 819:Generated_Source\PSoC5/USBUART.c ****                 src = HI16(CYDEV_PERIPH_BASE);
 820:Generated_Source\PSoC5/USBUART.c ****                 dst = HI16(pData);
 821:Generated_Source\PSoC5/USBUART.c ****             }
 822:Generated_Source\PSoC5/USBUART.c ****         #endif  /*  C51 */
 823:Generated_Source\PSoC5/USBUART.c ****         switch(epNumber)
 824:Generated_Source\PSoC5/USBUART.c ****         {
 825:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP1:
 826:Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA1_REMOVE == 0u)
 827:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep1_DmaInitialize(
 828:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 829:Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA1_REMOVE */
 830:Generated_Source\PSoC5/USBUART.c ****                 break;
 831:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP2:
 832:Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA2_REMOVE == 0u)
 833:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep2_DmaInitialize(
 834:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 835:Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA2_REMOVE */
 836:Generated_Source\PSoC5/USBUART.c ****                 break;
 837:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP3:
 838:Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA3_REMOVE == 0u)
 839:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep3_DmaInitialize(
 840:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 33


 841:Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA3_REMOVE */
 842:Generated_Source\PSoC5/USBUART.c ****                 break;
 843:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP4:
 844:Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA4_REMOVE == 0u)
 845:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep4_DmaInitialize(
 846:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 847:Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA4_REMOVE */
 848:Generated_Source\PSoC5/USBUART.c ****                 break;
 849:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP5:
 850:Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA5_REMOVE == 0u)
 851:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep5_DmaInitialize(
 852:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 853:Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA5_REMOVE */
 854:Generated_Source\PSoC5/USBUART.c ****                 break;
 855:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP6:
 856:Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA6_REMOVE == 0u)
 857:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep6_DmaInitialize(
 858:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 859:Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA6_REMOVE */
 860:Generated_Source\PSoC5/USBUART.c ****                 break;
 861:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP7:
 862:Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA7_REMOVE == 0u)
 863:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep7_DmaInitialize(
 864:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 865:Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA7_REMOVE */
 866:Generated_Source\PSoC5/USBUART.c ****                 break;
 867:Generated_Source\PSoC5/USBUART.c ****             case USBUART_EP8:
 868:Generated_Source\PSoC5/USBUART.c ****                 #if(USBUART_DMA8_REMOVE == 0u)
 869:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaChan[epNumber] = USBUART_ep8_DmaInitialize(
 870:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST, USBUART_DMA_REQUEST_PER_BURST, src, dst);
 871:Generated_Source\PSoC5/USBUART.c ****                 #endif   /*  USBUART_DMA8_REMOVE */
 872:Generated_Source\PSoC5/USBUART.c ****                 break;
 873:Generated_Source\PSoC5/USBUART.c ****             default:
 874:Generated_Source\PSoC5/USBUART.c ****                 /* Do not support EP0 DMA transfers */
 875:Generated_Source\PSoC5/USBUART.c ****                 break;
 876:Generated_Source\PSoC5/USBUART.c ****         }
 877:Generated_Source\PSoC5/USBUART.c ****         if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 878:Generated_Source\PSoC5/USBUART.c ****         {
 879:Generated_Source\PSoC5/USBUART.c ****             USBUART_DmaTd[epNumber] = CyDmaTdAllocate();
 880:Generated_Source\PSoC5/USBUART.c ****             #if ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
 881:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaNextTd[epNumber] = CyDmaTdAllocate();
 882:Generated_Source\PSoC5/USBUART.c ****             #endif /*  ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) 
 883:Generated_Source\PSoC5/USBUART.c **** 
 884:Generated_Source\PSoC5/USBUART.c ****         }
 885:Generated_Source\PSoC5/USBUART.c ****     }
 886:Generated_Source\PSoC5/USBUART.c **** 
 887:Generated_Source\PSoC5/USBUART.c **** 
 888:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
 889:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_Stop_DMA
 890:Generated_Source\PSoC5/USBUART.c ****     ********************************************************************************
 891:Generated_Source\PSoC5/USBUART.c ****     *
 892:Generated_Source\PSoC5/USBUART.c ****     * Summary: Stops and free DMA
 893:Generated_Source\PSoC5/USBUART.c ****     *
 894:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
 895:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number or
 896:Generated_Source\PSoC5/USBUART.c ****     *           USBUART_MAX_EP to stop all DMAs
 897:Generated_Source\PSoC5/USBUART.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 34


 898:Generated_Source\PSoC5/USBUART.c ****     * Return:
 899:Generated_Source\PSoC5/USBUART.c ****     *  None.
 900:Generated_Source\PSoC5/USBUART.c ****     *
 901:Generated_Source\PSoC5/USBUART.c ****     * Reentrant:
 902:Generated_Source\PSoC5/USBUART.c ****     *  No.
 903:Generated_Source\PSoC5/USBUART.c ****     *
 904:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
 905:Generated_Source\PSoC5/USBUART.c ****     void USBUART_Stop_DMA(uint8 epNumber) 
 906:Generated_Source\PSoC5/USBUART.c ****     {
 907:Generated_Source\PSoC5/USBUART.c ****         uint8 i;
 908:Generated_Source\PSoC5/USBUART.c ****         i = (epNumber < USBUART_MAX_EP) ? epNumber : USBUART_EP1;
 909:Generated_Source\PSoC5/USBUART.c ****         do
 910:Generated_Source\PSoC5/USBUART.c ****         {
 911:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[i] != DMA_INVALID_TD)
 912:Generated_Source\PSoC5/USBUART.c ****             {
 913:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[i]);
 914:Generated_Source\PSoC5/USBUART.c ****                 CyDmaTdFree(USBUART_DmaTd[i]);
 915:Generated_Source\PSoC5/USBUART.c ****                 USBUART_DmaTd[i] = DMA_INVALID_TD;
 916:Generated_Source\PSoC5/USBUART.c ****             }
 917:Generated_Source\PSoC5/USBUART.c ****             #if ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
 918:Generated_Source\PSoC5/USBUART.c ****                 if(USBUART_DmaNextTd[i] != DMA_INVALID_TD)
 919:Generated_Source\PSoC5/USBUART.c ****                 {
 920:Generated_Source\PSoC5/USBUART.c ****                     CyDmaTdFree(USBUART_DmaNextTd[i]);
 921:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[i] = DMA_INVALID_TD;
 922:Generated_Source\PSoC5/USBUART.c ****                 }
 923:Generated_Source\PSoC5/USBUART.c ****             #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) *
 924:Generated_Source\PSoC5/USBUART.c ****             i++;
 925:Generated_Source\PSoC5/USBUART.c ****         }while((i < USBUART_MAX_EP) && (epNumber == USBUART_MAX_EP));
 926:Generated_Source\PSoC5/USBUART.c ****     }
 927:Generated_Source\PSoC5/USBUART.c **** 
 928:Generated_Source\PSoC5/USBUART.c **** #endif /*  USBUART_EP_MM != USBUART__EP_MANUAL */
 929:Generated_Source\PSoC5/USBUART.c **** 
 930:Generated_Source\PSoC5/USBUART.c **** 
 931:Generated_Source\PSoC5/USBUART.c **** #if ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u))
 932:Generated_Source\PSoC5/USBUART.c **** 
 933:Generated_Source\PSoC5/USBUART.c **** 
 934:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
 935:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_LoadNextInEP
 936:Generated_Source\PSoC5/USBUART.c ****     ********************************************************************************
 937:Generated_Source\PSoC5/USBUART.c ****     *
 938:Generated_Source\PSoC5/USBUART.c ****     * Summary:
 939:Generated_Source\PSoC5/USBUART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
 940:Generated_Source\PSoC5/USBUART.c ****     *  Auto DMA mode.
 941:Generated_Source\PSoC5/USBUART.c ****     *
 942:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
 943:Generated_Source\PSoC5/USBUART.c ****     *  epNumber: Contains the data endpoint number.
 944:Generated_Source\PSoC5/USBUART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
 945:Generated_Source\PSoC5/USBUART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
 946:Generated_Source\PSoC5/USBUART.c ****     *
 947:Generated_Source\PSoC5/USBUART.c ****     * Return:
 948:Generated_Source\PSoC5/USBUART.c ****     *  None.
 949:Generated_Source\PSoC5/USBUART.c ****     *
 950:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
 951:Generated_Source\PSoC5/USBUART.c ****     void USBUART_LoadNextInEP(uint8 epNumber, uint8 mode) 
 952:Generated_Source\PSoC5/USBUART.c ****     {
 953:Generated_Source\PSoC5/USBUART.c ****         reg16 *convert;
 954:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 35


 955:Generated_Source\PSoC5/USBUART.c ****         if(mode == 0u)
 956:Generated_Source\PSoC5/USBUART.c ****         {
 957:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to send the the rest of data */
 958:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimised to change only transfer length and configur
 959:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
 960:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length */
 961:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_inLength[epNumber] - USBUART_DMA_BYTES_PER_BURST);
 962:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change only source address */
 963:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
 964:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, LO16((uint32)USBUART_inDataPointer[epNumber] +
 965:Generated_Source\PSoC5/USBUART.c ****                                             USBUART_DMA_BYTES_PER_BURST));
 966:Generated_Source\PSoC5/USBUART.c ****             USBUART_inBufFull[epNumber] = 1u;
 967:Generated_Source\PSoC5/USBUART.c ****         }
 968:Generated_Source\PSoC5/USBUART.c ****         else
 969:Generated_Source\PSoC5/USBUART.c ****         {
 970:Generated_Source\PSoC5/USBUART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
 971:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetConfiguration API is optimised to change only transfer length and configur
 972:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD0[0u];
 973:Generated_Source\PSoC5/USBUART.c ****             /* Set transfer length */
 974:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert, USBUART_DMA_BYTES_REPEAT);
 975:Generated_Source\PSoC5/USBUART.c ****             /* CyDmaTdSetAddress API is optimized to change only source address */
 976:Generated_Source\PSoC5/USBUART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USBUART_DmaTd[epNumber]].TD1[0u];
 977:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG16(convert,  LO16((uint32)USBUART_inDataPointer[epNumber] +
 978:Generated_Source\PSoC5/USBUART.c ****                                    USBUART_DMA_BYTES_PER_BURST - USBUART_DMA_BYTES_REPEAT));
 979:Generated_Source\PSoC5/USBUART.c ****         }
 980:Generated_Source\PSoC5/USBUART.c **** 
 981:Generated_Source\PSoC5/USBUART.c ****         /* CyDmaChSetInitialTd API is optimised to init TD */
 982:Generated_Source\PSoC5/USBUART.c ****         CY_DMA_CH_STRUCT_PTR[USBUART_DmaChan[epNumber]].basic_status[1u] = USBUART_DmaTd[epNumber];
 983:Generated_Source\PSoC5/USBUART.c ****     }
 984:Generated_Source\PSoC5/USBUART.c **** #endif /* ((USBUART_EP_MM == USBUART__EP_DMAAUTO) && (USBUART_EP_DMA_AUTO_OPT == 0u)) */
 985:Generated_Source\PSoC5/USBUART.c **** 
 986:Generated_Source\PSoC5/USBUART.c **** 
 987:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
 988:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_LoadInEP
 989:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
 990:Generated_Source\PSoC5/USBUART.c **** *
 991:Generated_Source\PSoC5/USBUART.c **** * Summary:
 992:Generated_Source\PSoC5/USBUART.c **** *  Loads and enables the specified USB data endpoint for an IN transfer.
 993:Generated_Source\PSoC5/USBUART.c **** *
 994:Generated_Source\PSoC5/USBUART.c **** * Parameters:
 995:Generated_Source\PSoC5/USBUART.c **** *  epNumber: Contains the data endpoint number.
 996:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
 997:Generated_Source\PSoC5/USBUART.c **** *  *pData: A pointer to a data array from which the data for the endpoint space
 998:Generated_Source\PSoC5/USBUART.c **** *          is loaded.
 999:Generated_Source\PSoC5/USBUART.c **** *  length: The number of bytes to transfer from the array and then send as a
1000:Generated_Source\PSoC5/USBUART.c **** *          result of an IN request. Valid values are between 0 and 512.
1001:Generated_Source\PSoC5/USBUART.c **** *
1002:Generated_Source\PSoC5/USBUART.c **** * Return:
1003:Generated_Source\PSoC5/USBUART.c **** *  None.
1004:Generated_Source\PSoC5/USBUART.c **** *
1005:Generated_Source\PSoC5/USBUART.c **** * Reentrant:
1006:Generated_Source\PSoC5/USBUART.c **** *  No.
1007:Generated_Source\PSoC5/USBUART.c **** *
1008:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1009:Generated_Source\PSoC5/USBUART.c **** void USBUART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1010:Generated_Source\PSoC5/USBUART.c ****                                                                         
1011:Generated_Source\PSoC5/USBUART.c **** {
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 36


 985              		.loc 1 1011 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 16
 988              		@ frame_needed = 1, uses_anonymous_args = 0
 989              		@ link register save eliminated.
 990 0000 90B4     		push	{r4, r7}
 991              		.cfi_def_cfa_offset 8
 992              		.cfi_offset 4, -8
 993              		.cfi_offset 7, -4
 994 0002 84B0     		sub	sp, sp, #16
 995              		.cfi_def_cfa_offset 24
 996 0004 00AF     		add	r7, sp, #0
 997              		.cfi_def_cfa_register 7
 998 0006 0346     		mov	r3, r0
 999 0008 3960     		str	r1, [r7]
 1000 000a FB71     		strb	r3, [r7, #7]
 1001 000c 1346     		mov	r3, r2	@ movhi
 1002 000e BB80     		strh	r3, [r7, #4]	@ movhi
1012:Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
1013:Generated_Source\PSoC5/USBUART.c ****     reg8 *p;
1014:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM == USBUART__EP_MANUAL)
1015:Generated_Source\PSoC5/USBUART.c ****         uint16 i;
1016:Generated_Source\PSoC5/USBUART.c ****     #endif /*  USBUART_EP_MM == USBUART__EP_MANUAL */
1017:Generated_Source\PSoC5/USBUART.c **** 
1018:Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1003              		.loc 1 1018 0
 1004 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1005 0012 002B     		cmp	r3, #0
 1006 0014 6ED0     		beq	.L54
 1007              		.loc 1 1018 0 is_stmt 0 discriminator 1
 1008 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1009 0018 082B     		cmp	r3, #8
 1010 001a 6BD8     		bhi	.L54
1019:Generated_Source\PSoC5/USBUART.c ****     {
1020:Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1011              		.loc 1 1020 0 is_stmt 1
 1012 001c FB79     		ldrb	r3, [r7, #7]
 1013 001e 013B     		subs	r3, r3, #1
 1014 0020 DBB2     		uxtb	r3, r3
 1015 0022 1B01     		lsls	r3, r3, #4
 1016 0024 7B73     		strb	r3, [r7, #13]
1021:Generated_Source\PSoC5/USBUART.c ****         p = (reg8 *)(USBUART_ARB_RW1_DR_IND + ri);
 1017              		.loc 1 1021 0
 1018 0026 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1019 0028 354B     		ldr	r3, .L55
 1020 002a 1344     		add	r3, r3, r2
 1021 002c BB60     		str	r3, [r7, #8]
1022:Generated_Source\PSoC5/USBUART.c **** 
1023:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM != USBUART__EP_DMAAUTO)
1024:Generated_Source\PSoC5/USBUART.c ****             /* Limits length to available buffer space, auto MM could send packets up to 1024 bytes
1025:Generated_Source\PSoC5/USBUART.c ****             if(length > (USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset))
 1022              		.loc 1 1025 0
 1023 002e B988     		ldrh	r1, [r7, #4]
 1024 0030 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1025 0032 3448     		ldr	r0, .L55+4
 1026 0034 1346     		mov	r3, r2
 1027 0036 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 37


 1028 0038 1344     		add	r3, r3, r2
 1029 003a 9B00     		lsls	r3, r3, #2
 1030 003c 0344     		add	r3, r3, r0
 1031 003e 0633     		adds	r3, r3, #6
 1032 0040 1B88     		ldrh	r3, [r3]	@ movhi
 1033 0042 9BB2     		uxth	r3, r3
 1034 0044 C3F50073 		rsb	r3, r3, #512
 1035 0048 9942     		cmp	r1, r3
 1036 004a 0CD9     		bls	.L50
1026:Generated_Source\PSoC5/USBUART.c ****             {
1027:Generated_Source\PSoC5/USBUART.c ****                 length = USBUART_EPX_DATA_BUF_MAX - USBUART_EP[epNumber].buffOffset;
 1037              		.loc 1 1027 0
 1038 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1039 004e 2D49     		ldr	r1, .L55+4
 1040 0050 1346     		mov	r3, r2
 1041 0052 5B00     		lsls	r3, r3, #1
 1042 0054 1344     		add	r3, r3, r2
 1043 0056 9B00     		lsls	r3, r3, #2
 1044 0058 0B44     		add	r3, r3, r1
 1045 005a 0633     		adds	r3, r3, #6
 1046 005c 1B88     		ldrh	r3, [r3]	@ movhi
 1047 005e 9BB2     		uxth	r3, r3
 1048 0060 C3F50073 		rsb	r3, r3, #512
 1049 0064 BB80     		strh	r3, [r7, #4]	@ movhi
 1050              	.L50:
1028:Generated_Source\PSoC5/USBUART.c ****             }
1029:Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM != USBUART__EP_DMAAUTO */
1030:Generated_Source\PSoC5/USBUART.c **** 
1031:Generated_Source\PSoC5/USBUART.c ****         /* Set the count and data toggle */
1032:Generated_Source\PSoC5/USBUART.c ****         CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CNT0_IND + ri),
 1051              		.loc 1 1032 0
 1052 0066 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1053 0068 274B     		ldr	r3, .L55+8
 1054 006a 1344     		add	r3, r3, r2
 1055 006c 1C46     		mov	r4, r3
 1056 006e BB88     		ldrh	r3, [r7, #4]
 1057 0070 1B0A     		lsrs	r3, r3, #8
 1058 0072 9BB2     		uxth	r3, r3
 1059 0074 D9B2     		uxtb	r1, r3
 1060 0076 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1061 0078 2248     		ldr	r0, .L55+4
 1062 007a 1346     		mov	r3, r2
 1063 007c 5B00     		lsls	r3, r3, #1
 1064 007e 1344     		add	r3, r3, r2
 1065 0080 9B00     		lsls	r3, r3, #2
 1066 0082 0344     		add	r3, r3, r0
 1067 0084 0333     		adds	r3, r3, #3
 1068 0086 1B78     		ldrb	r3, [r3]
 1069 0088 DBB2     		uxtb	r3, r3
 1070 008a 0B43     		orrs	r3, r3, r1
 1071 008c DBB2     		uxtb	r3, r3
 1072 008e 2370     		strb	r3, [r4]
1033:Generated_Source\PSoC5/USBUART.c ****                             (length >> 8u) | (USBUART_EP[epNumber].epToggle));
1034:Generated_Source\PSoC5/USBUART.c ****         CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CNT1_IND + ri),  length & 0xFFu);
 1073              		.loc 1 1034 0
 1074 0090 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1075 0092 1E4B     		ldr	r3, .L55+12
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 38


 1076 0094 1344     		add	r3, r3, r2
 1077 0096 BA88     		ldrh	r2, [r7, #4]	@ movhi
 1078 0098 D2B2     		uxtb	r2, r2
 1079 009a 1A70     		strb	r2, [r3]
1035:Generated_Source\PSoC5/USBUART.c **** 
1036:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_MANUAL)
1037:Generated_Source\PSoC5/USBUART.c ****             if(pData != NULL)
 1080              		.loc 1 1037 0
 1081 009c 3B68     		ldr	r3, [r7]
 1082 009e 002B     		cmp	r3, #0
 1083 00a0 0FD0     		beq	.L51
1038:Generated_Source\PSoC5/USBUART.c ****             {
1039:Generated_Source\PSoC5/USBUART.c ****                 /* Copy the data using the arbiter data register */
1040:Generated_Source\PSoC5/USBUART.c ****                 for (i = 0u; i < length; i++)
 1084              		.loc 1 1040 0
 1085 00a2 0023     		movs	r3, #0
 1086 00a4 FB81     		strh	r3, [r7, #14]	@ movhi
 1087 00a6 08E0     		b	.L52
 1088              	.L53:
1041:Generated_Source\PSoC5/USBUART.c ****                 {
1042:Generated_Source\PSoC5/USBUART.c ****                     CY_SET_REG8(p, pData[i]);
 1089              		.loc 1 1042 0 discriminator 3
 1090 00a8 FB89     		ldrh	r3, [r7, #14]
 1091 00aa 3A68     		ldr	r2, [r7]
 1092 00ac 1344     		add	r3, r3, r2
 1093 00ae 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1094 00b0 BB68     		ldr	r3, [r7, #8]
 1095 00b2 1A70     		strb	r2, [r3]
1040:Generated_Source\PSoC5/USBUART.c ****                 {
 1096              		.loc 1 1040 0 discriminator 3
 1097 00b4 FB89     		ldrh	r3, [r7, #14]
 1098 00b6 0133     		adds	r3, r3, #1
 1099 00b8 FB81     		strh	r3, [r7, #14]	@ movhi
 1100              	.L52:
1040:Generated_Source\PSoC5/USBUART.c ****                 {
 1101              		.loc 1 1040 0 is_stmt 0 discriminator 1
 1102 00ba FA89     		ldrh	r2, [r7, #14]
 1103 00bc BB88     		ldrh	r3, [r7, #4]
 1104 00be 9A42     		cmp	r2, r3
 1105 00c0 F2D3     		bcc	.L53
 1106              	.L51:
1043:Generated_Source\PSoC5/USBUART.c ****                 }
1044:Generated_Source\PSoC5/USBUART.c ****             }
1045:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1107              		.loc 1 1045 0 is_stmt 1
 1108 00c2 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1109 00c4 0F49     		ldr	r1, .L55+4
 1110 00c6 1346     		mov	r3, r2
 1111 00c8 5B00     		lsls	r3, r3, #1
 1112 00ca 1344     		add	r3, r3, r2
 1113 00cc 9B00     		lsls	r3, r3, #2
 1114 00ce 0B44     		add	r3, r3, r1
 1115 00d0 0133     		adds	r3, r3, #1
 1116 00d2 0022     		movs	r2, #0
 1117 00d4 1A70     		strb	r2, [r3]
1046:Generated_Source\PSoC5/USBUART.c ****             /* Write the Mode register */
1047:Generated_Source\PSoC5/USBUART.c ****             CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_EP[epNumber].epMode);
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 39


 1118              		.loc 1 1047 0
 1119 00d6 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1120 00d8 0D4B     		ldr	r3, .L55+16
 1121 00da 1344     		add	r3, r3, r2
 1122 00dc 1846     		mov	r0, r3
 1123 00de FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1124 00e0 0849     		ldr	r1, .L55+4
 1125 00e2 1346     		mov	r3, r2
 1126 00e4 5B00     		lsls	r3, r3, #1
 1127 00e6 1344     		add	r3, r3, r2
 1128 00e8 9B00     		lsls	r3, r3, #2
 1129 00ea 0B44     		add	r3, r3, r1
 1130 00ec 0533     		adds	r3, r3, #5
 1131 00ee 1B78     		ldrb	r3, [r3]
 1132 00f0 DBB2     		uxtb	r3, r3
 1133 00f2 0370     		strb	r3, [r0]
 1134              	.L54:
1048:Generated_Source\PSoC5/USBUART.c ****         #else
1049:Generated_Source\PSoC5/USBUART.c ****             /* Init DMA if it was not initialized */
1050:Generated_Source\PSoC5/USBUART.c ****             if (USBUART_DmaTd[epNumber] == DMA_INVALID_TD)
1051:Generated_Source\PSoC5/USBUART.c ****             {
1052:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1053:Generated_Source\PSoC5/USBUART.c ****             }
1054:Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_MANUAL */
1055:Generated_Source\PSoC5/USBUART.c **** 
1056:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAMANUAL)
1057:Generated_Source\PSoC5/USBUART.c ****             USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1058:Generated_Source\PSoC5/USBUART.c ****             if ((pData != NULL) && (length > 0u))
1059:Generated_Source\PSoC5/USBUART.c ****             {
1060:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA in mode2 for transferring data */
1061:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1062:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD,
1063:Generated_Source\PSoC5/USBUART.c ****                                                                                  TD_TERMIN_EN | TD_
1064:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint3
1065:Generated_Source\PSoC5/USBUART.c ****                 /* Enable the DMA */
1066:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1067:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1068:Generated_Source\PSoC5/USBUART.c ****                 /* Generate DMA request */
1069:Generated_Source\PSoC5/USBUART.c ****                 * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) |= USBUART_ARB_EPX_CFG_DMA_REQ;
1070:Generated_Source\PSoC5/USBUART.c ****                 * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) &= ((uint8)(~USBUART_ARB_EPX_CFG_DMA_REQ))
1071:Generated_Source\PSoC5/USBUART.c ****                 /* Mode register will be written in arb ISR after DMA transfer complete */
1072:Generated_Source\PSoC5/USBUART.c ****             }
1073:Generated_Source\PSoC5/USBUART.c ****             else
1074:Generated_Source\PSoC5/USBUART.c ****             {
1075:Generated_Source\PSoC5/USBUART.c ****                 /* When zero-length packet - write the Mode register directly */
1076:Generated_Source\PSoC5/USBUART.c ****                 CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_EP[epNumber].epMode);
1077:Generated_Source\PSoC5/USBUART.c ****             }
1078:Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_DMAMANUAL */
1079:Generated_Source\PSoC5/USBUART.c **** 
1080:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAAUTO)
1081:Generated_Source\PSoC5/USBUART.c ****             if (pData != NULL)
1082:Generated_Source\PSoC5/USBUART.c ****             {
1083:Generated_Source\PSoC5/USBUART.c ****                 /* Enable DMA in mode3 for transferring data */
1084:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1085:Generated_Source\PSoC5/USBUART.c ****             #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1086:Generated_Source\PSoC5/USBUART.c ****                 USBUART_inLength[epNumber] = length;
1087:Generated_Source\PSoC5/USBUART.c ****                 USBUART_inDataPointer[epNumber] = pData;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 40


1088:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DMA to send the data only for the first burst */
1089:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber],
1090:Generated_Source\PSoC5/USBUART.c ****                     (length > USBUART_DMA_BYTES_PER_BURST) ? USBUART_DMA_BYTES_PER_BURST : length,
1091:Generated_Source\PSoC5/USBUART.c ****                     USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1092:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint3
1093:Generated_Source\PSoC5/USBUART.c ****                 /* The second TD will be executed only when the first one fails.
1094:Generated_Source\PSoC5/USBUART.c ****                 *  The intention of this TD is to generate NRQ interrupt
1095:Generated_Source\PSoC5/USBUART.c ****                 *  and repeat 2 last bytes of the first burst.
1096:Generated_Source\PSoC5/USBUART.c ****                 */
1097:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaNextTd[epNumber], 1u,
1098:Generated_Source\PSoC5/USBUART.c ****                                                USBUART_DmaNextTd[epNumber],
1099:Generated_Source\PSoC5/USBUART.c ****                                                USBUART_epX_TD_TERMOUT_EN[epNumber]);
1100:Generated_Source\PSoC5/USBUART.c ****                 /* Configure DmaNextTd to clear Data ready status */
1101:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaNextTd[epNumber],  LO16((uint32)&clearInDataRdy
1102:Generated_Source\PSoC5/USBUART.c ****                                                                 LO16((uint32)(USBUART_ARB_EP1_CFG_I
1103:Generated_Source\PSoC5/USBUART.c ****             #else /* Configure DMA to send all data*/
1104:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length,
1105:Generated_Source\PSoC5/USBUART.c ****                                                USBUART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_A
1106:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint3
1107:Generated_Source\PSoC5/USBUART.c ****             #endif /* USBUART_EP_DMA_AUTO_OPT == 0u */
1108:Generated_Source\PSoC5/USBUART.c **** 
1109:Generated_Source\PSoC5/USBUART.c ****                 /* Clear Any potential pending DMA requests before starting the DMA channel to tran
1110:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1111:Generated_Source\PSoC5/USBUART.c ****                 /* Enable the DMA */
1112:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1113:Generated_Source\PSoC5/USBUART.c ****                 (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1114:Generated_Source\PSoC5/USBUART.c ****             }
1115:Generated_Source\PSoC5/USBUART.c ****             else
1116:Generated_Source\PSoC5/USBUART.c ****             {
1117:Generated_Source\PSoC5/USBUART.c ****                 USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
1118:Generated_Source\PSoC5/USBUART.c ****                 if(length > 0u)
1119:Generated_Source\PSoC5/USBUART.c ****                 {
1120:Generated_Source\PSoC5/USBUART.c ****                 #if (USBUART_EP_DMA_AUTO_OPT == 0u)
1121:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inLength[epNumber] = length;
1122:Generated_Source\PSoC5/USBUART.c ****                     USBUART_inBufFull[epNumber] = 0u;
1123:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1124:Generated_Source\PSoC5/USBUART.c ****                     /* Configure DMA to send the data only for the first burst */
1125:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetConfiguration(
1126:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaTd[epNumber], (length > USBUART_DMA_BYTES_PER_BURST) ?
1127:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DMA_BYTES_PER_BURST : length,
1128:Generated_Source\PSoC5/USBUART.c ****                         USBUART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1129:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],
1130:Generated_Source\PSoC5/USBUART.c ****                                              LO16((uint32)USBUART_inDataPointer[epNumber]), LO16((u
1131:Generated_Source\PSoC5/USBUART.c ****                     /* Clear Any potential pending DMA requests before starting the DMA channel to 
1132:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1133:Generated_Source\PSoC5/USBUART.c ****                     /* Enable the DMA */
1134:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1135:Generated_Source\PSoC5/USBUART.c ****                     (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1136:Generated_Source\PSoC5/USBUART.c ****                 #endif /* (USBUART_EP_DMA_AUTO_OPT == 0u) */
1137:Generated_Source\PSoC5/USBUART.c **** 
1138:Generated_Source\PSoC5/USBUART.c ****                     /* Set Data ready status, This will generate DMA request */
1139:Generated_Source\PSoC5/USBUART.c ****                     #ifndef USBUART_MANUAL_IN_EP_ARM
1140:Generated_Source\PSoC5/USBUART.c ****                         * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) |= USBUART_ARB_EPX_CFG_IN_DATA_RDY
1141:Generated_Source\PSoC5/USBUART.c ****                     #endif  /* USBUART_MANUAL_IN_EP_ARM */
1142:Generated_Source\PSoC5/USBUART.c ****                     /* Mode register will be written in arb ISR(In Buffer Full) after first DMA tra
1143:Generated_Source\PSoC5/USBUART.c ****                 }
1144:Generated_Source\PSoC5/USBUART.c ****                 else
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 41


1145:Generated_Source\PSoC5/USBUART.c ****                 {
1146:Generated_Source\PSoC5/USBUART.c ****                     /* When zero-length packet - write the Mode register directly */
1147:Generated_Source\PSoC5/USBUART.c ****                     CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_EP[epNumber].epMode
1148:Generated_Source\PSoC5/USBUART.c ****                 }
1149:Generated_Source\PSoC5/USBUART.c ****             }
1150:Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_DMAAUTO */
1151:Generated_Source\PSoC5/USBUART.c ****     }
1152:Generated_Source\PSoC5/USBUART.c **** }
 1135              		.loc 1 1152 0
 1136 00f4 00BF     		nop
 1137 00f6 1037     		adds	r7, r7, #16
 1138              		.cfi_def_cfa_offset 8
 1139 00f8 BD46     		mov	sp, r7
 1140              		.cfi_def_cfa_register 13
 1141              		@ sp needed
 1142 00fa 90BC     		pop	{r4, r7}
 1143              		.cfi_restore 7
 1144              		.cfi_restore 4
 1145              		.cfi_def_cfa_offset 0
 1146 00fc 7047     		bx	lr
 1147              	.L56:
 1148 00fe 00BF     		.align	2
 1149              	.L55:
 1150 0100 88600040 		.word	1073766536
 1151 0104 00000000 		.word	USBUART_EP
 1152 0108 0C600040 		.word	1073766412
 1153 010c 0D600040 		.word	1073766413
 1154 0110 0E600040 		.word	1073766414
 1155              		.cfi_endproc
 1156              	.LFE11:
 1157              		.size	USBUART_LoadInEP, .-USBUART_LoadInEP
 1158              		.section	.text.USBUART_ReadOutEP,"ax",%progbits
 1159              		.align	2
 1160              		.global	USBUART_ReadOutEP
 1161              		.thumb
 1162              		.thumb_func
 1163              		.type	USBUART_ReadOutEP, %function
 1164              	USBUART_ReadOutEP:
 1165              	.LFB12:
1153:Generated_Source\PSoC5/USBUART.c **** 
1154:Generated_Source\PSoC5/USBUART.c **** 
1155:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1156:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_ReadOutEP
1157:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1158:Generated_Source\PSoC5/USBUART.c **** *
1159:Generated_Source\PSoC5/USBUART.c **** * Summary:
1160:Generated_Source\PSoC5/USBUART.c **** *  Read data from an endpoint.  The application must call
1161:Generated_Source\PSoC5/USBUART.c **** *  USBUART_GetEPState to see if an event is pending.
1162:Generated_Source\PSoC5/USBUART.c **** *
1163:Generated_Source\PSoC5/USBUART.c **** * Parameters:
1164:Generated_Source\PSoC5/USBUART.c **** *  epNumber: Contains the data endpoint number.
1165:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1166:Generated_Source\PSoC5/USBUART.c **** *  pData: A pointer to a data array from which the data for the endpoint space
1167:Generated_Source\PSoC5/USBUART.c **** *         is loaded.
1168:Generated_Source\PSoC5/USBUART.c **** *  length: The number of bytes to transfer from the USB Out endpoint and loads
1169:Generated_Source\PSoC5/USBUART.c **** *          it into data array. Valid values are between 0 and 1023. The function
1170:Generated_Source\PSoC5/USBUART.c **** *          moves fewer than the requested number of bytes if the host sends
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 42


1171:Generated_Source\PSoC5/USBUART.c **** *          fewer bytes than requested.
1172:Generated_Source\PSoC5/USBUART.c **** *
1173:Generated_Source\PSoC5/USBUART.c **** * Returns:
1174:Generated_Source\PSoC5/USBUART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1175:Generated_Source\PSoC5/USBUART.c **** *
1176:Generated_Source\PSoC5/USBUART.c **** * Reentrant:
1177:Generated_Source\PSoC5/USBUART.c **** *  No.
1178:Generated_Source\PSoC5/USBUART.c **** *
1179:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1180:Generated_Source\PSoC5/USBUART.c **** uint16 USBUART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1181:Generated_Source\PSoC5/USBUART.c ****                                                                         
1182:Generated_Source\PSoC5/USBUART.c **** {
 1166              		.loc 1 1182 0
 1167              		.cfi_startproc
 1168              		@ args = 0, pretend = 0, frame = 24
 1169              		@ frame_needed = 1, uses_anonymous_args = 0
 1170 0000 80B5     		push	{r7, lr}
 1171              		.cfi_def_cfa_offset 8
 1172              		.cfi_offset 7, -8
 1173              		.cfi_offset 14, -4
 1174 0002 86B0     		sub	sp, sp, #24
 1175              		.cfi_def_cfa_offset 32
 1176 0004 00AF     		add	r7, sp, #0
 1177              		.cfi_def_cfa_register 7
 1178 0006 0346     		mov	r3, r0
 1179 0008 3960     		str	r1, [r7]
 1180 000a FB71     		strb	r3, [r7, #7]
 1181 000c 1346     		mov	r3, r2	@ movhi
 1182 000e BB80     		strh	r3, [r7, #4]	@ movhi
1183:Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
1184:Generated_Source\PSoC5/USBUART.c ****     reg8 *p;
1185:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM == USBUART__EP_MANUAL)
1186:Generated_Source\PSoC5/USBUART.c ****         uint16 i;
1187:Generated_Source\PSoC5/USBUART.c ****     #endif /*  USBUART_EP_MM == USBUART__EP_MANUAL */
1188:Generated_Source\PSoC5/USBUART.c ****     #if(USBUART_EP_MM != USBUART__EP_DMAAUTO)
1189:Generated_Source\PSoC5/USBUART.c ****         uint16 xferCount;
1190:Generated_Source\PSoC5/USBUART.c ****     #endif /*  USBUART_EP_MM != USBUART__EP_DMAAUTO */
1191:Generated_Source\PSoC5/USBUART.c **** 
1192:Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP) && (pData != NULL))
 1183              		.loc 1 1192 0
 1184 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1185 0012 002B     		cmp	r3, #0
 1186 0014 30D0     		beq	.L58
 1187              		.loc 1 1192 0 is_stmt 0 discriminator 1
 1188 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1189 0018 082B     		cmp	r3, #8
 1190 001a 2DD8     		bhi	.L58
 1191              		.loc 1 1192 0 discriminator 2
 1192 001c 3B68     		ldr	r3, [r7]
 1193 001e 002B     		cmp	r3, #0
 1194 0020 2AD0     		beq	.L58
1193:Generated_Source\PSoC5/USBUART.c ****     {
1194:Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1195              		.loc 1 1194 0 is_stmt 1
 1196 0022 FB79     		ldrb	r3, [r7, #7]
 1197 0024 013B     		subs	r3, r3, #1
 1198 0026 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 43


 1199 0028 1B01     		lsls	r3, r3, #4
 1200 002a 7B75     		strb	r3, [r7, #21]
1195:Generated_Source\PSoC5/USBUART.c ****         p = (reg8 *)(USBUART_ARB_RW1_DR_IND + ri);
 1201              		.loc 1 1195 0
 1202 002c 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1203 002e 164B     		ldr	r3, .L64
 1204 0030 1344     		add	r3, r3, r2
 1205 0032 3B61     		str	r3, [r7, #16]
1196:Generated_Source\PSoC5/USBUART.c **** 
1197:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM != USBUART__EP_DMAAUTO)
1198:Generated_Source\PSoC5/USBUART.c ****             /* Determine which is smaller the requested data or the available data */
1199:Generated_Source\PSoC5/USBUART.c ****             xferCount = USBUART_GetEPCount(epNumber);
 1206              		.loc 1 1199 0
 1207 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1208 0036 1846     		mov	r0, r3
 1209 0038 FFF7FEFF 		bl	USBUART_GetEPCount
 1210 003c 0346     		mov	r3, r0
 1211 003e FB81     		strh	r3, [r7, #14]	@ movhi
1200:Generated_Source\PSoC5/USBUART.c ****             if (length > xferCount)
 1212              		.loc 1 1200 0
 1213 0040 BA88     		ldrh	r2, [r7, #4]
 1214 0042 FB89     		ldrh	r3, [r7, #14]
 1215 0044 9A42     		cmp	r2, r3
 1216 0046 01D9     		bls	.L59
1201:Generated_Source\PSoC5/USBUART.c ****             {
1202:Generated_Source\PSoC5/USBUART.c ****                 length = xferCount;
 1217              		.loc 1 1202 0
 1218 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1219 004a BB80     		strh	r3, [r7, #4]	@ movhi
 1220              	.L59:
1203:Generated_Source\PSoC5/USBUART.c ****             }
1204:Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM != USBUART__EP_DMAAUTO */
1205:Generated_Source\PSoC5/USBUART.c **** 
1206:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_MANUAL)
1207:Generated_Source\PSoC5/USBUART.c ****             /* Copy the data using the arbiter data register */
1208:Generated_Source\PSoC5/USBUART.c ****             for (i = 0u; i < length; i++)
 1221              		.loc 1 1208 0
 1222 004c 0023     		movs	r3, #0
 1223 004e FB82     		strh	r3, [r7, #22]	@ movhi
 1224 0050 09E0     		b	.L60
 1225              	.L61:
1209:Generated_Source\PSoC5/USBUART.c ****             {
1210:Generated_Source\PSoC5/USBUART.c ****                 pData[i] = CY_GET_REG8(p);
 1226              		.loc 1 1210 0 discriminator 3
 1227 0052 FB8A     		ldrh	r3, [r7, #22]
 1228 0054 3A68     		ldr	r2, [r7]
 1229 0056 1344     		add	r3, r3, r2
 1230 0058 3A69     		ldr	r2, [r7, #16]
 1231 005a 1278     		ldrb	r2, [r2]
 1232 005c D2B2     		uxtb	r2, r2
 1233 005e 1A70     		strb	r2, [r3]
1208:Generated_Source\PSoC5/USBUART.c ****             {
 1234              		.loc 1 1208 0 discriminator 3
 1235 0060 FB8A     		ldrh	r3, [r7, #22]
 1236 0062 0133     		adds	r3, r3, #1
 1237 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 1238              	.L60:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 44


1208:Generated_Source\PSoC5/USBUART.c ****             {
 1239              		.loc 1 1208 0 is_stmt 0 discriminator 1
 1240 0066 FA8A     		ldrh	r2, [r7, #22]
 1241 0068 BB88     		ldrh	r3, [r7, #4]
 1242 006a 9A42     		cmp	r2, r3
 1243 006c F1D3     		bcc	.L61
1211:Generated_Source\PSoC5/USBUART.c ****             }
1212:Generated_Source\PSoC5/USBUART.c **** 
1213:Generated_Source\PSoC5/USBUART.c ****             /* (re)arming of OUT endpoint */
1214:Generated_Source\PSoC5/USBUART.c ****             USBUART_EnableOutEP(epNumber);
 1244              		.loc 1 1214 0 is_stmt 1
 1245 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1246 0070 1846     		mov	r0, r3
 1247 0072 FFF7FEFF 		bl	USBUART_EnableOutEP
 1248 0076 01E0     		b	.L62
 1249              	.L58:
1215:Generated_Source\PSoC5/USBUART.c ****         #else
1216:Generated_Source\PSoC5/USBUART.c ****             /*Init DMA if it was not initialized */
1217:Generated_Source\PSoC5/USBUART.c ****             if(USBUART_DmaTd[epNumber] == DMA_INVALID_TD)
1218:Generated_Source\PSoC5/USBUART.c ****             {
1219:Generated_Source\PSoC5/USBUART.c ****                 USBUART_InitEP_DMA(epNumber, pData);
1220:Generated_Source\PSoC5/USBUART.c ****             }
1221:Generated_Source\PSoC5/USBUART.c **** 
1222:Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_MANUAL */
1223:Generated_Source\PSoC5/USBUART.c **** 
1224:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAMANUAL)
1225:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA in mode2 for transferring data */
1226:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1227:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD,
1228:Generated_Source\PSoC5/USBUART.c ****                                                                                 TD_TERMIN_EN | TD_I
1229:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData)
1230:Generated_Source\PSoC5/USBUART.c ****             /* Enable the DMA */
1231:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1232:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1233:Generated_Source\PSoC5/USBUART.c **** 
1234:Generated_Source\PSoC5/USBUART.c ****             /* Generate DMA request */
1235:Generated_Source\PSoC5/USBUART.c ****             * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) |= USBUART_ARB_EPX_CFG_DMA_REQ;
1236:Generated_Source\PSoC5/USBUART.c ****             * (reg8 *)(USBUART_ARB_EP1_CFG_IND + ri) &= ((uint8)(~USBUART_ARB_EPX_CFG_DMA_REQ));
1237:Generated_Source\PSoC5/USBUART.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1238:Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_DMAMANUAL */
1239:Generated_Source\PSoC5/USBUART.c **** 
1240:Generated_Source\PSoC5/USBUART.c ****         #if(USBUART_EP_MM == USBUART__EP_DMAAUTO)
1241:Generated_Source\PSoC5/USBUART.c ****             /* Enable DMA in mode3 for transferring data */
1242:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChDisable(USBUART_DmaChan[epNumber]);
1243:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetConfiguration(USBUART_DmaTd[epNumber], length, USBUART_DmaTd[epNumber]
1244:Generated_Source\PSoC5/USBUART.c ****                                                                                 TD_TERMIN_EN | TD_I
1245:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaTdSetAddress(USBUART_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData)
1246:Generated_Source\PSoC5/USBUART.c **** 
1247:Generated_Source\PSoC5/USBUART.c ****             /* Clear Any potential pending DMA requests before starting the DMA channel to transfer
1248:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaClearPendingDrq(USBUART_DmaChan[epNumber]);
1249:Generated_Source\PSoC5/USBUART.c ****             /* Enable the DMA */
1250:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChSetInitialTd(USBUART_DmaChan[epNumber], USBUART_DmaTd[epNumber]);
1251:Generated_Source\PSoC5/USBUART.c ****             (void) CyDmaChEnable(USBUART_DmaChan[epNumber], 1u);
1252:Generated_Source\PSoC5/USBUART.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1253:Generated_Source\PSoC5/USBUART.c ****         #endif /*  USBUART_EP_MM == USBUART__EP_DMAAUTO */
1254:Generated_Source\PSoC5/USBUART.c **** 
1255:Generated_Source\PSoC5/USBUART.c ****     }
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 45


1256:Generated_Source\PSoC5/USBUART.c ****     else
1257:Generated_Source\PSoC5/USBUART.c ****     {
1258:Generated_Source\PSoC5/USBUART.c ****         length = 0u;
 1250              		.loc 1 1258 0
 1251 0078 0023     		movs	r3, #0
 1252 007a BB80     		strh	r3, [r7, #4]	@ movhi
 1253              	.L62:
1259:Generated_Source\PSoC5/USBUART.c ****     }
1260:Generated_Source\PSoC5/USBUART.c **** 
1261:Generated_Source\PSoC5/USBUART.c ****     return(length);
 1254              		.loc 1 1261 0
 1255 007c BB88     		ldrh	r3, [r7, #4]
1262:Generated_Source\PSoC5/USBUART.c **** }
 1256              		.loc 1 1262 0
 1257 007e 1846     		mov	r0, r3
 1258 0080 1837     		adds	r7, r7, #24
 1259              		.cfi_def_cfa_offset 8
 1260 0082 BD46     		mov	sp, r7
 1261              		.cfi_def_cfa_register 13
 1262              		@ sp needed
 1263 0084 80BD     		pop	{r7, pc}
 1264              	.L65:
 1265 0086 00BF     		.align	2
 1266              	.L64:
 1267 0088 88600040 		.word	1073766536
 1268              		.cfi_endproc
 1269              	.LFE12:
 1270              		.size	USBUART_ReadOutEP, .-USBUART_ReadOutEP
 1271              		.section	.text.USBUART_EnableOutEP,"ax",%progbits
 1272              		.align	2
 1273              		.global	USBUART_EnableOutEP
 1274              		.thumb
 1275              		.thumb_func
 1276              		.type	USBUART_EnableOutEP, %function
 1277              	USBUART_EnableOutEP:
 1278              	.LFB13:
1263:Generated_Source\PSoC5/USBUART.c **** 
1264:Generated_Source\PSoC5/USBUART.c **** 
1265:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1266:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_EnableOutEP
1267:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1268:Generated_Source\PSoC5/USBUART.c **** *
1269:Generated_Source\PSoC5/USBUART.c **** * Summary:
1270:Generated_Source\PSoC5/USBUART.c **** *  This function enables an OUT endpoint.  It should not be
1271:Generated_Source\PSoC5/USBUART.c **** *  called for an IN endpoint.
1272:Generated_Source\PSoC5/USBUART.c **** *
1273:Generated_Source\PSoC5/USBUART.c **** * Parameters:
1274:Generated_Source\PSoC5/USBUART.c **** *  epNumber: Endpoint Number
1275:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1276:Generated_Source\PSoC5/USBUART.c **** *
1277:Generated_Source\PSoC5/USBUART.c **** * Return:
1278:Generated_Source\PSoC5/USBUART.c **** *   None.
1279:Generated_Source\PSoC5/USBUART.c **** *
1280:Generated_Source\PSoC5/USBUART.c **** * Global variables:
1281:Generated_Source\PSoC5/USBUART.c **** *  USBUART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
1282:Generated_Source\PSoC5/USBUART.c **** *
1283:Generated_Source\PSoC5/USBUART.c **** * Reentrant:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 46


1284:Generated_Source\PSoC5/USBUART.c **** *  No.
1285:Generated_Source\PSoC5/USBUART.c **** *
1286:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1287:Generated_Source\PSoC5/USBUART.c **** void USBUART_EnableOutEP(uint8 epNumber) 
1288:Generated_Source\PSoC5/USBUART.c **** {
 1279              		.loc 1 1288 0
 1280              		.cfi_startproc
 1281              		@ args = 0, pretend = 0, frame = 16
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283              		@ link register save eliminated.
 1284 0000 80B4     		push	{r7}
 1285              		.cfi_def_cfa_offset 4
 1286              		.cfi_offset 7, -4
 1287 0002 85B0     		sub	sp, sp, #20
 1288              		.cfi_def_cfa_offset 24
 1289 0004 00AF     		add	r7, sp, #0
 1290              		.cfi_def_cfa_register 7
 1291 0006 0346     		mov	r3, r0
 1292 0008 FB71     		strb	r3, [r7, #7]
1289:Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
1290:Generated_Source\PSoC5/USBUART.c **** 
1291:Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1293              		.loc 1 1291 0
 1294 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1295 000c 002B     		cmp	r3, #0
 1296 000e 20D0     		beq	.L68
 1297              		.loc 1 1291 0 is_stmt 0 discriminator 1
 1298 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1299 0012 082B     		cmp	r3, #8
 1300 0014 1DD8     		bhi	.L68
1292:Generated_Source\PSoC5/USBUART.c ****     {
1293:Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1301              		.loc 1 1293 0 is_stmt 1
 1302 0016 FB79     		ldrb	r3, [r7, #7]
 1303 0018 013B     		subs	r3, r3, #1
 1304 001a DBB2     		uxtb	r3, r3
 1305 001c 1B01     		lsls	r3, r3, #4
 1306 001e FB73     		strb	r3, [r7, #15]
1294:Generated_Source\PSoC5/USBUART.c ****         USBUART_EP[epNumber].apiEpState = USBUART_NO_EVENT_PENDING;
 1307              		.loc 1 1294 0
 1308 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1309 0022 0E49     		ldr	r1, .L69
 1310 0024 1346     		mov	r3, r2
 1311 0026 5B00     		lsls	r3, r3, #1
 1312 0028 1344     		add	r3, r3, r2
 1313 002a 9B00     		lsls	r3, r3, #2
 1314 002c 0B44     		add	r3, r3, r1
 1315 002e 0133     		adds	r3, r3, #1
 1316 0030 0022     		movs	r2, #0
 1317 0032 1A70     		strb	r2, [r3]
1295:Generated_Source\PSoC5/USBUART.c ****         /* Write the Mode register */
1296:Generated_Source\PSoC5/USBUART.c ****         CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_EP[epNumber].epMode);
 1318              		.loc 1 1296 0
 1319 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1320 0036 0A4B     		ldr	r3, .L69+4
 1321 0038 1344     		add	r3, r3, r2
 1322 003a 1846     		mov	r0, r3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 47


 1323 003c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1324 003e 0749     		ldr	r1, .L69
 1325 0040 1346     		mov	r3, r2
 1326 0042 5B00     		lsls	r3, r3, #1
 1327 0044 1344     		add	r3, r3, r2
 1328 0046 9B00     		lsls	r3, r3, #2
 1329 0048 0B44     		add	r3, r3, r1
 1330 004a 0533     		adds	r3, r3, #5
 1331 004c 1B78     		ldrb	r3, [r3]
 1332 004e DBB2     		uxtb	r3, r3
 1333 0050 0370     		strb	r3, [r0]
 1334              	.L68:
1297:Generated_Source\PSoC5/USBUART.c ****     }
1298:Generated_Source\PSoC5/USBUART.c **** }
 1335              		.loc 1 1298 0
 1336 0052 00BF     		nop
 1337 0054 1437     		adds	r7, r7, #20
 1338              		.cfi_def_cfa_offset 4
 1339 0056 BD46     		mov	sp, r7
 1340              		.cfi_def_cfa_register 13
 1341              		@ sp needed
 1342 0058 80BC     		pop	{r7}
 1343              		.cfi_restore 7
 1344              		.cfi_def_cfa_offset 0
 1345 005a 7047     		bx	lr
 1346              	.L70:
 1347              		.align	2
 1348              	.L69:
 1349 005c 00000000 		.word	USBUART_EP
 1350 0060 0E600040 		.word	1073766414
 1351              		.cfi_endproc
 1352              	.LFE13:
 1353              		.size	USBUART_EnableOutEP, .-USBUART_EnableOutEP
 1354              		.section	.text.USBUART_DisableOutEP,"ax",%progbits
 1355              		.align	2
 1356              		.global	USBUART_DisableOutEP
 1357              		.thumb
 1358              		.thumb_func
 1359              		.type	USBUART_DisableOutEP, %function
 1360              	USBUART_DisableOutEP:
 1361              	.LFB14:
1299:Generated_Source\PSoC5/USBUART.c **** 
1300:Generated_Source\PSoC5/USBUART.c **** 
1301:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1302:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_DisableOutEP
1303:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1304:Generated_Source\PSoC5/USBUART.c **** *
1305:Generated_Source\PSoC5/USBUART.c **** * Summary:
1306:Generated_Source\PSoC5/USBUART.c **** *  This function disables an OUT endpoint.  It should not be
1307:Generated_Source\PSoC5/USBUART.c **** *  called for an IN endpoint.
1308:Generated_Source\PSoC5/USBUART.c **** *
1309:Generated_Source\PSoC5/USBUART.c **** * Parameters:
1310:Generated_Source\PSoC5/USBUART.c **** *  epNumber: Endpoint Number
1311:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1312:Generated_Source\PSoC5/USBUART.c **** *
1313:Generated_Source\PSoC5/USBUART.c **** * Return:
1314:Generated_Source\PSoC5/USBUART.c **** *  None.
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 48


1315:Generated_Source\PSoC5/USBUART.c **** *
1316:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1317:Generated_Source\PSoC5/USBUART.c **** void USBUART_DisableOutEP(uint8 epNumber) 
1318:Generated_Source\PSoC5/USBUART.c **** {
 1362              		.loc 1 1318 0
 1363              		.cfi_startproc
 1364              		@ args = 0, pretend = 0, frame = 16
 1365              		@ frame_needed = 1, uses_anonymous_args = 0
 1366              		@ link register save eliminated.
 1367 0000 80B4     		push	{r7}
 1368              		.cfi_def_cfa_offset 4
 1369              		.cfi_offset 7, -4
 1370 0002 85B0     		sub	sp, sp, #20
 1371              		.cfi_def_cfa_offset 24
 1372 0004 00AF     		add	r7, sp, #0
 1373              		.cfi_def_cfa_register 7
 1374 0006 0346     		mov	r3, r0
 1375 0008 FB71     		strb	r3, [r7, #7]
1319:Generated_Source\PSoC5/USBUART.c ****     uint8 ri ;
1320:Generated_Source\PSoC5/USBUART.c **** 
1321:Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1376              		.loc 1 1321 0
 1377 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1378 000c 002B     		cmp	r3, #0
 1379 000e 0CD0     		beq	.L73
 1380              		.loc 1 1321 0 is_stmt 0 discriminator 1
 1381 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1382 0012 082B     		cmp	r3, #8
 1383 0014 09D8     		bhi	.L73
1322:Generated_Source\PSoC5/USBUART.c ****     {
1323:Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1384              		.loc 1 1323 0 is_stmt 1
 1385 0016 FB79     		ldrb	r3, [r7, #7]
 1386 0018 013B     		subs	r3, r3, #1
 1387 001a DBB2     		uxtb	r3, r3
 1388 001c 1B01     		lsls	r3, r3, #4
 1389 001e FB73     		strb	r3, [r7, #15]
1324:Generated_Source\PSoC5/USBUART.c ****         /* Write the Mode register */
1325:Generated_Source\PSoC5/USBUART.c ****         CY_SET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri), USBUART_MODE_NAK_OUT);
 1390              		.loc 1 1325 0
 1391 0020 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1392 0022 044B     		ldr	r3, .L74
 1393 0024 1344     		add	r3, r3, r2
 1394 0026 0822     		movs	r2, #8
 1395 0028 1A70     		strb	r2, [r3]
 1396              	.L73:
1326:Generated_Source\PSoC5/USBUART.c ****     }
1327:Generated_Source\PSoC5/USBUART.c **** }
 1397              		.loc 1 1327 0
 1398 002a 00BF     		nop
 1399 002c 1437     		adds	r7, r7, #20
 1400              		.cfi_def_cfa_offset 4
 1401 002e BD46     		mov	sp, r7
 1402              		.cfi_def_cfa_register 13
 1403              		@ sp needed
 1404 0030 80BC     		pop	{r7}
 1405              		.cfi_restore 7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 49


 1406              		.cfi_def_cfa_offset 0
 1407 0032 7047     		bx	lr
 1408              	.L75:
 1409              		.align	2
 1410              	.L74:
 1411 0034 0E600040 		.word	1073766414
 1412              		.cfi_endproc
 1413              	.LFE14:
 1414              		.size	USBUART_DisableOutEP, .-USBUART_DisableOutEP
 1415              		.section	.text.USBUART_Force,"ax",%progbits
 1416              		.align	2
 1417              		.global	USBUART_Force
 1418              		.thumb
 1419              		.thumb_func
 1420              		.type	USBUART_Force, %function
 1421              	USBUART_Force:
 1422              	.LFB15:
1328:Generated_Source\PSoC5/USBUART.c **** 
1329:Generated_Source\PSoC5/USBUART.c **** 
1330:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1331:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_Force
1332:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1333:Generated_Source\PSoC5/USBUART.c **** *
1334:Generated_Source\PSoC5/USBUART.c **** * Summary:
1335:Generated_Source\PSoC5/USBUART.c **** *  Forces the bus state
1336:Generated_Source\PSoC5/USBUART.c **** *
1337:Generated_Source\PSoC5/USBUART.c **** * Parameters:
1338:Generated_Source\PSoC5/USBUART.c **** *  bState
1339:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_J
1340:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_K
1341:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_SE0
1342:Generated_Source\PSoC5/USBUART.c **** *    USBUART_FORCE_NONE
1343:Generated_Source\PSoC5/USBUART.c **** *
1344:Generated_Source\PSoC5/USBUART.c **** * Return:
1345:Generated_Source\PSoC5/USBUART.c **** *  None.
1346:Generated_Source\PSoC5/USBUART.c **** *
1347:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1348:Generated_Source\PSoC5/USBUART.c **** void USBUART_Force(uint8 bState) 
1349:Generated_Source\PSoC5/USBUART.c **** {
 1423              		.loc 1 1349 0
 1424              		.cfi_startproc
 1425              		@ args = 0, pretend = 0, frame = 8
 1426              		@ frame_needed = 1, uses_anonymous_args = 0
 1427              		@ link register save eliminated.
 1428 0000 80B4     		push	{r7}
 1429              		.cfi_def_cfa_offset 4
 1430              		.cfi_offset 7, -4
 1431 0002 83B0     		sub	sp, sp, #12
 1432              		.cfi_def_cfa_offset 16
 1433 0004 00AF     		add	r7, sp, #0
 1434              		.cfi_def_cfa_register 7
 1435 0006 0346     		mov	r3, r0
 1436 0008 FB71     		strb	r3, [r7, #7]
1350:Generated_Source\PSoC5/USBUART.c ****     CY_SET_REG8(USBUART_USBIO_CR0_PTR, bState);
 1437              		.loc 1 1350 0
 1438 000a 044A     		ldr	r2, .L77
 1439 000c FB79     		ldrb	r3, [r7, #7]
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 50


 1440 000e 1370     		strb	r3, [r2]
1351:Generated_Source\PSoC5/USBUART.c **** }
 1441              		.loc 1 1351 0
 1442 0010 00BF     		nop
 1443 0012 0C37     		adds	r7, r7, #12
 1444              		.cfi_def_cfa_offset 4
 1445 0014 BD46     		mov	sp, r7
 1446              		.cfi_def_cfa_register 13
 1447              		@ sp needed
 1448 0016 80BC     		pop	{r7}
 1449              		.cfi_restore 7
 1450              		.cfi_def_cfa_offset 0
 1451 0018 7047     		bx	lr
 1452              	.L78:
 1453 001a 00BF     		.align	2
 1454              	.L77:
 1455 001c 10600040 		.word	1073766416
 1456              		.cfi_endproc
 1457              	.LFE15:
 1458              		.size	USBUART_Force, .-USBUART_Force
 1459              		.section	.text.USBUART_GetEPAckState,"ax",%progbits
 1460              		.align	2
 1461              		.global	USBUART_GetEPAckState
 1462              		.thumb
 1463              		.thumb_func
 1464              		.type	USBUART_GetEPAckState, %function
 1465              	USBUART_GetEPAckState:
 1466              	.LFB16:
1352:Generated_Source\PSoC5/USBUART.c **** 
1353:Generated_Source\PSoC5/USBUART.c **** 
1354:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1355:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_GetEPAckState
1356:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1357:Generated_Source\PSoC5/USBUART.c **** *
1358:Generated_Source\PSoC5/USBUART.c **** * Summary:
1359:Generated_Source\PSoC5/USBUART.c **** *  Returns the ACK of the CR0 Register (ACKD)
1360:Generated_Source\PSoC5/USBUART.c **** *
1361:Generated_Source\PSoC5/USBUART.c **** * Parameters:
1362:Generated_Source\PSoC5/USBUART.c **** *  epNumber: Endpoint Number
1363:Generated_Source\PSoC5/USBUART.c **** *            Valid values are between 1 and 8.
1364:Generated_Source\PSoC5/USBUART.c **** *
1365:Generated_Source\PSoC5/USBUART.c **** * Returns
1366:Generated_Source\PSoC5/USBUART.c **** *  0 if nothing has been ACKD, non-=zero something has been ACKD
1367:Generated_Source\PSoC5/USBUART.c **** *
1368:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1369:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_GetEPAckState(uint8 epNumber) 
1370:Generated_Source\PSoC5/USBUART.c **** {
 1467              		.loc 1 1370 0
 1468              		.cfi_startproc
 1469              		@ args = 0, pretend = 0, frame = 16
 1470              		@ frame_needed = 1, uses_anonymous_args = 0
 1471              		@ link register save eliminated.
 1472 0000 80B4     		push	{r7}
 1473              		.cfi_def_cfa_offset 4
 1474              		.cfi_offset 7, -4
 1475 0002 85B0     		sub	sp, sp, #20
 1476              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 51


 1477 0004 00AF     		add	r7, sp, #0
 1478              		.cfi_def_cfa_register 7
 1479 0006 0346     		mov	r3, r0
 1480 0008 FB71     		strb	r3, [r7, #7]
1371:Generated_Source\PSoC5/USBUART.c ****     uint8 ri;
1372:Generated_Source\PSoC5/USBUART.c ****     uint8 cr = 0u;
 1481              		.loc 1 1372 0
 1482 000a 0023     		movs	r3, #0
 1483 000c FB73     		strb	r3, [r7, #15]
1373:Generated_Source\PSoC5/USBUART.c **** 
1374:Generated_Source\PSoC5/USBUART.c ****     if((epNumber > USBUART_EP0) && (epNumber < USBUART_MAX_EP))
 1484              		.loc 1 1374 0
 1485 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1486 0010 002B     		cmp	r3, #0
 1487 0012 0FD0     		beq	.L80
 1488              		.loc 1 1374 0 is_stmt 0 discriminator 1
 1489 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1490 0016 082B     		cmp	r3, #8
 1491 0018 0CD8     		bhi	.L80
1375:Generated_Source\PSoC5/USBUART.c ****     {
1376:Generated_Source\PSoC5/USBUART.c ****         ri = ((epNumber - USBUART_EP1) << USBUART_EPX_CNTX_ADDR_SHIFT);
 1492              		.loc 1 1376 0 is_stmt 1
 1493 001a FB79     		ldrb	r3, [r7, #7]
 1494 001c 013B     		subs	r3, r3, #1
 1495 001e DBB2     		uxtb	r3, r3
 1496 0020 1B01     		lsls	r3, r3, #4
 1497 0022 BB73     		strb	r3, [r7, #14]
1377:Generated_Source\PSoC5/USBUART.c ****         cr = CY_GET_REG8((reg8 *)(USBUART_SIE_EP1_CR0_IND + ri)) & USBUART_MODE_ACKD;
 1498              		.loc 1 1377 0
 1499 0024 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1500 0026 064B     		ldr	r3, .L82
 1501 0028 1344     		add	r3, r3, r2
 1502 002a 1B78     		ldrb	r3, [r3]
 1503 002c DBB2     		uxtb	r3, r3
 1504 002e 03F01003 		and	r3, r3, #16
 1505 0032 FB73     		strb	r3, [r7, #15]
 1506              	.L80:
1378:Generated_Source\PSoC5/USBUART.c ****     }
1379:Generated_Source\PSoC5/USBUART.c **** 
1380:Generated_Source\PSoC5/USBUART.c ****     return(cr);
 1507              		.loc 1 1380 0
 1508 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1381:Generated_Source\PSoC5/USBUART.c **** }
 1509              		.loc 1 1381 0
 1510 0036 1846     		mov	r0, r3
 1511 0038 1437     		adds	r7, r7, #20
 1512              		.cfi_def_cfa_offset 4
 1513 003a BD46     		mov	sp, r7
 1514              		.cfi_def_cfa_register 13
 1515              		@ sp needed
 1516 003c 80BC     		pop	{r7}
 1517              		.cfi_restore 7
 1518              		.cfi_def_cfa_offset 0
 1519 003e 7047     		bx	lr
 1520              	.L83:
 1521              		.align	2
 1522              	.L82:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 52


 1523 0040 0E600040 		.word	1073766414
 1524              		.cfi_endproc
 1525              	.LFE16:
 1526              		.size	USBUART_GetEPAckState, .-USBUART_GetEPAckState
 1527              		.section	.text.USBUART_SetPowerStatus,"ax",%progbits
 1528              		.align	2
 1529              		.global	USBUART_SetPowerStatus
 1530              		.thumb
 1531              		.thumb_func
 1532              		.type	USBUART_SetPowerStatus, %function
 1533              	USBUART_SetPowerStatus:
 1534              	.LFB17:
1382:Generated_Source\PSoC5/USBUART.c **** 
1383:Generated_Source\PSoC5/USBUART.c **** 
1384:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1385:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_SetPowerStatus
1386:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1387:Generated_Source\PSoC5/USBUART.c **** *
1388:Generated_Source\PSoC5/USBUART.c **** * Summary:
1389:Generated_Source\PSoC5/USBUART.c **** *  Sets the device power status for reporting in the Get Device Status
1390:Generated_Source\PSoC5/USBUART.c **** *  request
1391:Generated_Source\PSoC5/USBUART.c **** *
1392:Generated_Source\PSoC5/USBUART.c **** * Parameters:
1393:Generated_Source\PSoC5/USBUART.c **** *  powerStatus: USBUART_DEVICE_STATUS_BUS_POWERED(0) - Bus Powered,
1394:Generated_Source\PSoC5/USBUART.c **** *               USBUART_DEVICE_STATUS_SELF_POWERED(1) - Self Powered
1395:Generated_Source\PSoC5/USBUART.c **** *
1396:Generated_Source\PSoC5/USBUART.c **** * Return:
1397:Generated_Source\PSoC5/USBUART.c **** *   None.
1398:Generated_Source\PSoC5/USBUART.c **** *
1399:Generated_Source\PSoC5/USBUART.c **** * Global variables:
1400:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - set power status
1401:Generated_Source\PSoC5/USBUART.c **** *
1402:Generated_Source\PSoC5/USBUART.c **** * Reentrant:
1403:Generated_Source\PSoC5/USBUART.c **** *  No.
1404:Generated_Source\PSoC5/USBUART.c **** *
1405:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1406:Generated_Source\PSoC5/USBUART.c **** void USBUART_SetPowerStatus(uint8 powerStatus) 
1407:Generated_Source\PSoC5/USBUART.c **** {
 1535              		.loc 1 1407 0
 1536              		.cfi_startproc
 1537              		@ args = 0, pretend = 0, frame = 8
 1538              		@ frame_needed = 1, uses_anonymous_args = 0
 1539              		@ link register save eliminated.
 1540 0000 80B4     		push	{r7}
 1541              		.cfi_def_cfa_offset 4
 1542              		.cfi_offset 7, -4
 1543 0002 83B0     		sub	sp, sp, #12
 1544              		.cfi_def_cfa_offset 16
 1545 0004 00AF     		add	r7, sp, #0
 1546              		.cfi_def_cfa_register 7
 1547 0006 0346     		mov	r3, r0
 1548 0008 FB71     		strb	r3, [r7, #7]
1408:Generated_Source\PSoC5/USBUART.c ****     if (powerStatus != USBUART_DEVICE_STATUS_BUS_POWERED)
 1549              		.loc 1 1408 0
 1550 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1551 000c 002B     		cmp	r3, #0
 1552 000e 08D0     		beq	.L85
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 53


1409:Generated_Source\PSoC5/USBUART.c ****     {
1410:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus |=  USBUART_DEVICE_STATUS_SELF_POWERED;
 1553              		.loc 1 1410 0
 1554 0010 0A4B     		ldr	r3, .L88
 1555 0012 1B78     		ldrb	r3, [r3]
 1556 0014 DBB2     		uxtb	r3, r3
 1557 0016 43F00103 		orr	r3, r3, #1
 1558 001a DAB2     		uxtb	r2, r3
 1559 001c 074B     		ldr	r3, .L88
 1560 001e 1A70     		strb	r2, [r3]
1411:Generated_Source\PSoC5/USBUART.c ****     }
1412:Generated_Source\PSoC5/USBUART.c ****     else
1413:Generated_Source\PSoC5/USBUART.c ****     {
1414:Generated_Source\PSoC5/USBUART.c ****         USBUART_deviceStatus &=  ((uint8)(~USBUART_DEVICE_STATUS_SELF_POWERED));
1415:Generated_Source\PSoC5/USBUART.c ****     }
1416:Generated_Source\PSoC5/USBUART.c **** }
 1561              		.loc 1 1416 0
 1562 0020 07E0     		b	.L87
 1563              	.L85:
1414:Generated_Source\PSoC5/USBUART.c ****     }
 1564              		.loc 1 1414 0
 1565 0022 064B     		ldr	r3, .L88
 1566 0024 1B78     		ldrb	r3, [r3]
 1567 0026 DBB2     		uxtb	r3, r3
 1568 0028 23F00103 		bic	r3, r3, #1
 1569 002c DAB2     		uxtb	r2, r3
 1570 002e 034B     		ldr	r3, .L88
 1571 0030 1A70     		strb	r2, [r3]
 1572              	.L87:
 1573              		.loc 1 1416 0
 1574 0032 00BF     		nop
 1575 0034 0C37     		adds	r7, r7, #12
 1576              		.cfi_def_cfa_offset 4
 1577 0036 BD46     		mov	sp, r7
 1578              		.cfi_def_cfa_register 13
 1579              		@ sp needed
 1580 0038 80BC     		pop	{r7}
 1581              		.cfi_restore 7
 1582              		.cfi_def_cfa_offset 0
 1583 003a 7047     		bx	lr
 1584              	.L89:
 1585              		.align	2
 1586              	.L88:
 1587 003c 00000000 		.word	USBUART_deviceStatus
 1588              		.cfi_endproc
 1589              	.LFE17:
 1590              		.size	USBUART_SetPowerStatus, .-USBUART_SetPowerStatus
 1591              		.section	.text.USBUART_VBusPresent,"ax",%progbits
 1592              		.align	2
 1593              		.global	USBUART_VBusPresent
 1594              		.thumb
 1595              		.thumb_func
 1596              		.type	USBUART_VBusPresent, %function
 1597              	USBUART_VBusPresent:
 1598              	.LFB18:
1417:Generated_Source\PSoC5/USBUART.c **** 
1418:Generated_Source\PSoC5/USBUART.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 54


1419:Generated_Source\PSoC5/USBUART.c **** #if (USBUART_MON_VBUS == 1u)
1420:Generated_Source\PSoC5/USBUART.c **** 
1421:Generated_Source\PSoC5/USBUART.c ****     /*******************************************************************************
1422:Generated_Source\PSoC5/USBUART.c ****     * Function Name: USBUART_VBusPresent
1423:Generated_Source\PSoC5/USBUART.c ****     ********************************************************************************
1424:Generated_Source\PSoC5/USBUART.c ****     *
1425:Generated_Source\PSoC5/USBUART.c ****     * Summary:
1426:Generated_Source\PSoC5/USBUART.c ****     *  Determines VBUS presence for Self Powered Devices.
1427:Generated_Source\PSoC5/USBUART.c ****     *
1428:Generated_Source\PSoC5/USBUART.c ****     * Parameters:
1429:Generated_Source\PSoC5/USBUART.c ****     *  None.
1430:Generated_Source\PSoC5/USBUART.c ****     *
1431:Generated_Source\PSoC5/USBUART.c ****     * Return:
1432:Generated_Source\PSoC5/USBUART.c ****     *  1 if VBUS is present, otherwise 0.
1433:Generated_Source\PSoC5/USBUART.c ****     *
1434:Generated_Source\PSoC5/USBUART.c ****     *******************************************************************************/
1435:Generated_Source\PSoC5/USBUART.c ****     uint8 USBUART_VBusPresent(void) 
1436:Generated_Source\PSoC5/USBUART.c ****     {
 1599              		.loc 1 1436 0
 1600              		.cfi_startproc
 1601              		@ args = 0, pretend = 0, frame = 0
 1602              		@ frame_needed = 1, uses_anonymous_args = 0
 1603              		@ link register save eliminated.
 1604 0000 80B4     		push	{r7}
 1605              		.cfi_def_cfa_offset 4
 1606              		.cfi_offset 7, -4
 1607 0002 00AF     		add	r7, sp, #0
 1608              		.cfi_def_cfa_register 7
1437:Generated_Source\PSoC5/USBUART.c ****         return((0u != (CY_GET_REG8(USBUART_VBUS_PS_PTR) & USBUART_VBUS_MASK)) ? 1u : 0u);
 1609              		.loc 1 1437 0
 1610 0004 064B     		ldr	r3, .L94
 1611 0006 1B78     		ldrb	r3, [r3]
 1612 0008 DBB2     		uxtb	r3, r3
 1613 000a 5BB2     		sxtb	r3, r3
 1614 000c 002B     		cmp	r3, #0
 1615 000e 01DA     		bge	.L91
 1616              		.loc 1 1437 0 is_stmt 0 discriminator 1
 1617 0010 0123     		movs	r3, #1
 1618 0012 00E0     		b	.L92
 1619              	.L91:
 1620              		.loc 1 1437 0 discriminator 2
 1621 0014 0023     		movs	r3, #0
 1622              	.L92:
1438:Generated_Source\PSoC5/USBUART.c ****     }
 1623              		.loc 1 1438 0 is_stmt 1 discriminator 4
 1624 0016 1846     		mov	r0, r3
 1625 0018 BD46     		mov	sp, r7
 1626              		.cfi_def_cfa_register 13
 1627              		@ sp needed
 1628 001a 80BC     		pop	{r7}
 1629              		.cfi_restore 7
 1630              		.cfi_def_cfa_offset 0
 1631 001c 7047     		bx	lr
 1632              	.L95:
 1633 001e 00BF     		.align	2
 1634              	.L94:
 1635 0020 51510040 		.word	1073762641
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 55


 1636              		.cfi_endproc
 1637              	.LFE18:
 1638              		.size	USBUART_VBusPresent, .-USBUART_VBusPresent
 1639              		.section	.text.USBUART_RWUEnabled,"ax",%progbits
 1640              		.align	2
 1641              		.global	USBUART_RWUEnabled
 1642              		.thumb
 1643              		.thumb_func
 1644              		.type	USBUART_RWUEnabled, %function
 1645              	USBUART_RWUEnabled:
 1646              	.LFB19:
1439:Generated_Source\PSoC5/USBUART.c **** 
1440:Generated_Source\PSoC5/USBUART.c **** #endif /* USBUART_MON_VBUS */
1441:Generated_Source\PSoC5/USBUART.c **** 
1442:Generated_Source\PSoC5/USBUART.c **** 
1443:Generated_Source\PSoC5/USBUART.c **** /*******************************************************************************
1444:Generated_Source\PSoC5/USBUART.c **** * Function Name: USBUART_RWUEnabled
1445:Generated_Source\PSoC5/USBUART.c **** ********************************************************************************
1446:Generated_Source\PSoC5/USBUART.c **** *
1447:Generated_Source\PSoC5/USBUART.c **** * Summary:
1448:Generated_Source\PSoC5/USBUART.c **** *  Returns TRUE if Remote Wake Up is enabled, otherwise FALSE
1449:Generated_Source\PSoC5/USBUART.c **** *
1450:Generated_Source\PSoC5/USBUART.c **** * Parameters:
1451:Generated_Source\PSoC5/USBUART.c **** *   None.
1452:Generated_Source\PSoC5/USBUART.c **** *
1453:Generated_Source\PSoC5/USBUART.c **** * Return:
1454:Generated_Source\PSoC5/USBUART.c **** *  TRUE -  Remote Wake Up Enabled
1455:Generated_Source\PSoC5/USBUART.c **** *  FALSE - Remote Wake Up Disabled
1456:Generated_Source\PSoC5/USBUART.c **** *
1457:Generated_Source\PSoC5/USBUART.c **** * Global variables:
1458:Generated_Source\PSoC5/USBUART.c **** *  USBUART_deviceStatus - checked to determine remote status
1459:Generated_Source\PSoC5/USBUART.c **** *
1460:Generated_Source\PSoC5/USBUART.c **** *******************************************************************************/
1461:Generated_Source\PSoC5/USBUART.c **** uint8 USBUART_RWUEnabled(void) 
1462:Generated_Source\PSoC5/USBUART.c **** {
 1647              		.loc 1 1462 0
 1648              		.cfi_startproc
 1649              		@ args = 0, pretend = 0, frame = 8
 1650              		@ frame_needed = 1, uses_anonymous_args = 0
 1651              		@ link register save eliminated.
 1652 0000 80B4     		push	{r7}
 1653              		.cfi_def_cfa_offset 4
 1654              		.cfi_offset 7, -4
 1655 0002 83B0     		sub	sp, sp, #12
 1656              		.cfi_def_cfa_offset 16
 1657 0004 00AF     		add	r7, sp, #0
 1658              		.cfi_def_cfa_register 7
1463:Generated_Source\PSoC5/USBUART.c ****     uint8 result = USBUART_FALSE;
 1659              		.loc 1 1463 0
 1660 0006 0023     		movs	r3, #0
 1661 0008 FB71     		strb	r3, [r7, #7]
1464:Generated_Source\PSoC5/USBUART.c ****     if((USBUART_deviceStatus & USBUART_DEVICE_STATUS_REMOTE_WAKEUP) != 0u)
 1662              		.loc 1 1464 0
 1663 000a 074B     		ldr	r3, .L99
 1664 000c 1B78     		ldrb	r3, [r3]
 1665 000e DBB2     		uxtb	r3, r3
 1666 0010 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 56


 1667 0014 002B     		cmp	r3, #0
 1668 0016 01D0     		beq	.L97
1465:Generated_Source\PSoC5/USBUART.c ****     {
1466:Generated_Source\PSoC5/USBUART.c ****         result = USBUART_TRUE;
 1669              		.loc 1 1466 0
 1670 0018 0123     		movs	r3, #1
 1671 001a FB71     		strb	r3, [r7, #7]
 1672              	.L97:
1467:Generated_Source\PSoC5/USBUART.c ****     }
1468:Generated_Source\PSoC5/USBUART.c **** 
1469:Generated_Source\PSoC5/USBUART.c ****     return(result);
 1673              		.loc 1 1469 0
 1674 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1470:Generated_Source\PSoC5/USBUART.c **** }
 1675              		.loc 1 1470 0
 1676 001e 1846     		mov	r0, r3
 1677 0020 0C37     		adds	r7, r7, #12
 1678              		.cfi_def_cfa_offset 4
 1679 0022 BD46     		mov	sp, r7
 1680              		.cfi_def_cfa_register 13
 1681              		@ sp needed
 1682 0024 80BC     		pop	{r7}
 1683              		.cfi_restore 7
 1684              		.cfi_def_cfa_offset 0
 1685 0026 7047     		bx	lr
 1686              	.L100:
 1687              		.align	2
 1688              	.L99:
 1689 0028 00000000 		.word	USBUART_deviceStatus
 1690              		.cfi_endproc
 1691              	.LFE19:
 1692              		.size	USBUART_RWUEnabled, .-USBUART_RWUEnabled
 1693              		.text
 1694              	.Letext0:
 1695              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 1696              		.file 3 "Generated_Source\\PSoC5\\USBUART.h"
 1697              		.file 4 "Generated_Source\\PSoC5\\USBUART_pvt.h"
 1698              		.section	.debug_info,"",%progbits
 1699              	.Ldebug_info0:
 1700 0000 F2050000 		.4byte	0x5f2
 1701 0004 0400     		.2byte	0x4
 1702 0006 00000000 		.4byte	.Ldebug_abbrev0
 1703 000a 04       		.byte	0x4
 1704 000b 01       		.uleb128 0x1
 1705 000c 4D000000 		.4byte	.LASF71
 1706 0010 0C       		.byte	0xc
 1707 0011 C8020000 		.4byte	.LASF72
 1708 0015 08030000 		.4byte	.LASF73
 1709 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1710 001d 00000000 		.4byte	0
 1711 0021 00000000 		.4byte	.Ldebug_line0
 1712 0025 02       		.uleb128 0x2
 1713 0026 01       		.byte	0x1
 1714 0027 06       		.byte	0x6
 1715 0028 4F010000 		.4byte	.LASF0
 1716 002c 02       		.uleb128 0x2
 1717 002d 01       		.byte	0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 57


 1718 002e 08       		.byte	0x8
 1719 002f 91030000 		.4byte	.LASF1
 1720 0033 02       		.uleb128 0x2
 1721 0034 02       		.byte	0x2
 1722 0035 05       		.byte	0x5
 1723 0036 9F030000 		.4byte	.LASF2
 1724 003a 02       		.uleb128 0x2
 1725 003b 02       		.byte	0x2
 1726 003c 07       		.byte	0x7
 1727 003d 58020000 		.4byte	.LASF3
 1728 0041 02       		.uleb128 0x2
 1729 0042 04       		.byte	0x4
 1730 0043 05       		.byte	0x5
 1731 0044 A6010000 		.4byte	.LASF4
 1732 0048 02       		.uleb128 0x2
 1733 0049 04       		.byte	0x4
 1734 004a 07       		.byte	0x7
 1735 004b 46020000 		.4byte	.LASF5
 1736 004f 02       		.uleb128 0x2
 1737 0050 08       		.byte	0x8
 1738 0051 05       		.byte	0x5
 1739 0052 41010000 		.4byte	.LASF6
 1740 0056 02       		.uleb128 0x2
 1741 0057 08       		.byte	0x8
 1742 0058 07       		.byte	0x7
 1743 0059 EC000000 		.4byte	.LASF7
 1744 005d 03       		.uleb128 0x3
 1745 005e 04       		.byte	0x4
 1746 005f 05       		.byte	0x5
 1747 0060 696E7400 		.ascii	"int\000"
 1748 0064 02       		.uleb128 0x2
 1749 0065 04       		.byte	0x4
 1750 0066 07       		.byte	0x7
 1751 0067 39020000 		.4byte	.LASF8
 1752 006b 04       		.uleb128 0x4
 1753 006c AF010000 		.4byte	.LASF9
 1754 0070 02       		.byte	0x2
 1755 0071 E401     		.2byte	0x1e4
 1756 0073 2C000000 		.4byte	0x2c
 1757 0077 04       		.uleb128 0x4
 1758 0078 00000000 		.4byte	.LASF10
 1759 007c 02       		.byte	0x2
 1760 007d E501     		.2byte	0x1e5
 1761 007f 3A000000 		.4byte	0x3a
 1762 0083 04       		.uleb128 0x4
 1763 0084 10020000 		.4byte	.LASF11
 1764 0088 02       		.byte	0x2
 1765 0089 E601     		.2byte	0x1e6
 1766 008b 48000000 		.4byte	0x48
 1767 008f 02       		.uleb128 0x2
 1768 0090 04       		.byte	0x4
 1769 0091 04       		.byte	0x4
 1770 0092 50030000 		.4byte	.LASF12
 1771 0096 02       		.uleb128 0x2
 1772 0097 08       		.byte	0x8
 1773 0098 04       		.byte	0x4
 1774 0099 BE010000 		.4byte	.LASF13
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 58


 1775 009d 02       		.uleb128 0x2
 1776 009e 01       		.byte	0x1
 1777 009f 08       		.byte	0x8
 1778 00a0 ED030000 		.4byte	.LASF14
 1779 00a4 04       		.uleb128 0x4
 1780 00a5 73030000 		.4byte	.LASF15
 1781 00a9 02       		.byte	0x2
 1782 00aa 8E02     		.2byte	0x28e
 1783 00ac B0000000 		.4byte	0xb0
 1784 00b0 05       		.uleb128 0x5
 1785 00b1 6B000000 		.4byte	0x6b
 1786 00b5 04       		.uleb128 0x4
 1787 00b6 AC020000 		.4byte	.LASF16
 1788 00ba 02       		.byte	0x2
 1789 00bb 9002     		.2byte	0x290
 1790 00bd C1000000 		.4byte	0xc1
 1791 00c1 05       		.uleb128 0x5
 1792 00c2 83000000 		.4byte	0x83
 1793 00c6 02       		.uleb128 0x2
 1794 00c7 08       		.byte	0x8
 1795 00c8 04       		.byte	0x4
 1796 00c9 FC020000 		.4byte	.LASF17
 1797 00cd 02       		.uleb128 0x2
 1798 00ce 04       		.byte	0x4
 1799 00cf 07       		.byte	0x7
 1800 00d0 F3020000 		.4byte	.LASF18
 1801 00d4 06       		.uleb128 0x6
 1802 00d5 0C       		.byte	0xc
 1803 00d6 03       		.byte	0x3
 1804 00d7 7A       		.byte	0x7a
 1805 00d8 49010000 		.4byte	0x149
 1806 00dc 07       		.uleb128 0x7
 1807 00dd 49030000 		.4byte	.LASF19
 1808 00e1 03       		.byte	0x3
 1809 00e2 7C       		.byte	0x7c
 1810 00e3 6B000000 		.4byte	0x6b
 1811 00e7 00       		.byte	0
 1812 00e8 07       		.uleb128 0x7
 1813 00e9 68030000 		.4byte	.LASF20
 1814 00ed 03       		.byte	0x3
 1815 00ee 7D       		.byte	0x7d
 1816 00ef 6B000000 		.4byte	0x6b
 1817 00f3 01       		.byte	0x1
 1818 00f4 07       		.uleb128 0x7
 1819 00f5 E9020000 		.4byte	.LASF21
 1820 00f9 03       		.byte	0x3
 1821 00fa 7E       		.byte	0x7e
 1822 00fb 6B000000 		.4byte	0x6b
 1823 00ff 02       		.byte	0x2
 1824 0100 07       		.uleb128 0x7
 1825 0101 B5010000 		.4byte	.LASF22
 1826 0105 03       		.byte	0x3
 1827 0106 7F       		.byte	0x7f
 1828 0107 6B000000 		.4byte	0x6b
 1829 010b 03       		.byte	0x3
 1830 010c 07       		.uleb128 0x7
 1831 010d 03010000 		.4byte	.LASF23
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 59


 1832 0111 03       		.byte	0x3
 1833 0112 80       		.byte	0x80
 1834 0113 6B000000 		.4byte	0x6b
 1835 0117 04       		.byte	0x4
 1836 0118 07       		.uleb128 0x7
 1837 0119 1D020000 		.4byte	.LASF24
 1838 011d 03       		.byte	0x3
 1839 011e 81       		.byte	0x81
 1840 011f 6B000000 		.4byte	0x6b
 1841 0123 05       		.byte	0x5
 1842 0124 07       		.uleb128 0x7
 1843 0125 2D040000 		.4byte	.LASF25
 1844 0129 03       		.byte	0x3
 1845 012a 82       		.byte	0x82
 1846 012b 77000000 		.4byte	0x77
 1847 012f 06       		.byte	0x6
 1848 0130 07       		.uleb128 0x7
 1849 0131 F7030000 		.4byte	.LASF26
 1850 0135 03       		.byte	0x3
 1851 0136 83       		.byte	0x83
 1852 0137 77000000 		.4byte	0x77
 1853 013b 08       		.byte	0x8
 1854 013c 07       		.uleb128 0x7
 1855 013d A2020000 		.4byte	.LASF27
 1856 0141 03       		.byte	0x3
 1857 0142 84       		.byte	0x84
 1858 0143 6B000000 		.4byte	0x6b
 1859 0147 0A       		.byte	0xa
 1860 0148 00       		.byte	0
 1861 0149 08       		.uleb128 0x8
 1862 014a 16040000 		.4byte	.LASF28
 1863 014e 03       		.byte	0x3
 1864 014f 85       		.byte	0x85
 1865 0150 D4000000 		.4byte	0xd4
 1866 0154 09       		.uleb128 0x9
 1867 0155 6B020000 		.4byte	.LASF31
 1868 0159 01       		.byte	0x1
 1869 015a 81       		.byte	0x81
 1870 015b 00000000 		.4byte	.LFB0
 1871 015f 3C000000 		.4byte	.LFE0-.LFB0
 1872 0163 01       		.uleb128 0x1
 1873 0164 9C       		.byte	0x9c
 1874 0165 86010000 		.4byte	0x186
 1875 0169 0A       		.uleb128 0xa
 1876 016a 21010000 		.4byte	.LASF29
 1877 016e 01       		.byte	0x1
 1878 016f 81       		.byte	0x81
 1879 0170 6B000000 		.4byte	0x6b
 1880 0174 02       		.uleb128 0x2
 1881 0175 91       		.byte	0x91
 1882 0176 77       		.sleb128 -9
 1883 0177 0A       		.uleb128 0xa
 1884 0178 F2030000 		.4byte	.LASF30
 1885 017c 01       		.byte	0x1
 1886 017d 81       		.byte	0x81
 1887 017e 6B000000 		.4byte	0x6b
 1888 0182 02       		.uleb128 0x2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 60


 1889 0183 91       		.byte	0x91
 1890 0184 76       		.sleb128 -10
 1891 0185 00       		.byte	0
 1892 0186 09       		.uleb128 0x9
 1893 0187 95020000 		.4byte	.LASF32
 1894 018b 01       		.byte	0x1
 1895 018c 9E       		.byte	0x9e
 1896 018d 00000000 		.4byte	.LFB1
 1897 0191 90010000 		.4byte	.LFE1-.LFB1
 1898 0195 01       		.uleb128 0x1
 1899 0196 9C       		.byte	0x9c
 1900 0197 AA010000 		.4byte	0x1aa
 1901 019b 0B       		.uleb128 0xb
 1902 019c 4B040000 		.4byte	.LASF36
 1903 01a0 01       		.byte	0x1
 1904 01a1 A0       		.byte	0xa0
 1905 01a2 6B000000 		.4byte	0x6b
 1906 01a6 02       		.uleb128 0x2
 1907 01a7 91       		.byte	0x91
 1908 01a8 77       		.sleb128 -9
 1909 01a9 00       		.byte	0
 1910 01aa 0C       		.uleb128 0xc
 1911 01ab 5C040000 		.4byte	.LASF33
 1912 01af 01       		.byte	0x1
 1913 01b0 5C01     		.2byte	0x15c
 1914 01b2 00000000 		.4byte	.LFB2
 1915 01b6 E0000000 		.4byte	.LFE2-.LFB2
 1916 01ba 01       		.uleb128 0x1
 1917 01bb 9C       		.byte	0x9c
 1918 01bc DF010000 		.4byte	0x1df
 1919 01c0 0D       		.uleb128 0xd
 1920 01c1 21010000 		.4byte	.LASF29
 1921 01c5 01       		.byte	0x1
 1922 01c6 5C01     		.2byte	0x15c
 1923 01c8 6B000000 		.4byte	0x6b
 1924 01cc 02       		.uleb128 0x2
 1925 01cd 91       		.byte	0x91
 1926 01ce 77       		.sleb128 -9
 1927 01cf 0D       		.uleb128 0xd
 1928 01d0 F2030000 		.4byte	.LASF30
 1929 01d4 01       		.byte	0x1
 1930 01d5 5C01     		.2byte	0x15c
 1931 01d7 6B000000 		.4byte	0x6b
 1932 01db 02       		.uleb128 0x2
 1933 01dc 91       		.byte	0x91
 1934 01dd 76       		.sleb128 -10
 1935 01de 00       		.byte	0
 1936 01df 0E       		.uleb128 0xe
 1937 01e0 B1040000 		.4byte	.LASF34
 1938 01e4 01       		.byte	0x1
 1939 01e5 F201     		.2byte	0x1f2
 1940 01e7 00000000 		.4byte	.LFB3
 1941 01eb 68000000 		.4byte	.LFE3-.LFB3
 1942 01ef 01       		.uleb128 0x1
 1943 01f0 9C       		.byte	0x9c
 1944 01f1 0E       		.uleb128 0xe
 1945 01f2 16000000 		.4byte	.LASF35
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 61


 1946 01f6 01       		.byte	0x1
 1947 01f7 3402     		.2byte	0x234
 1948 01f9 00000000 		.4byte	.LFB4
 1949 01fd C4000000 		.4byte	.LFE4-.LFB4
 1950 0201 01       		.uleb128 0x1
 1951 0202 9C       		.byte	0x9c
 1952 0203 0F       		.uleb128 0xf
 1953 0204 90010000 		.4byte	.LASF37
 1954 0208 01       		.byte	0x1
 1955 0209 7B02     		.2byte	0x27b
 1956 020b 6B000000 		.4byte	0x6b
 1957 020f 00000000 		.4byte	.LFB5
 1958 0213 34000000 		.4byte	.LFE5-.LFB5
 1959 0217 01       		.uleb128 0x1
 1960 0218 9C       		.byte	0x9c
 1961 0219 2B020000 		.4byte	0x22b
 1962 021d 10       		.uleb128 0x10
 1963 021e 7200     		.ascii	"r\000"
 1964 0220 01       		.byte	0x1
 1965 0221 7D02     		.2byte	0x27d
 1966 0223 6B000000 		.4byte	0x6b
 1967 0227 02       		.uleb128 0x2
 1968 0228 91       		.byte	0x91
 1969 0229 77       		.sleb128 -9
 1970 022a 00       		.byte	0
 1971 022b 11       		.uleb128 0x11
 1972 022c 28010000 		.4byte	.LASF57
 1973 0230 01       		.byte	0x1
 1974 0231 9402     		.2byte	0x294
 1975 0233 6B000000 		.4byte	0x6b
 1976 0237 00000000 		.4byte	.LFB6
 1977 023b 18000000 		.4byte	.LFE6-.LFB6
 1978 023f 01       		.uleb128 0x1
 1979 0240 9C       		.byte	0x9c
 1980 0241 0F       		.uleb128 0xf
 1981 0242 92040000 		.4byte	.LASF38
 1982 0246 01       		.byte	0x1
 1983 0247 AE02     		.2byte	0x2ae
 1984 0249 6B000000 		.4byte	0x6b
 1985 024d 00000000 		.4byte	.LFB7
 1986 0251 30000000 		.4byte	.LFE7-.LFB7
 1987 0255 01       		.uleb128 0x1
 1988 0256 9C       		.byte	0x9c
 1989 0257 6B020000 		.4byte	0x26b
 1990 025b 10       		.uleb128 0x10
 1991 025c 72657300 		.ascii	"res\000"
 1992 0260 01       		.byte	0x1
 1993 0261 B002     		.2byte	0x2b0
 1994 0263 6B000000 		.4byte	0x6b
 1995 0267 02       		.uleb128 0x2
 1996 0268 91       		.byte	0x91
 1997 0269 77       		.sleb128 -9
 1998 026a 00       		.byte	0
 1999 026b 0F       		.uleb128 0xf
 2000 026c 79020000 		.4byte	.LASF39
 2001 0270 01       		.byte	0x1
 2002 0271 CA02     		.2byte	0x2ca
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 62


 2003 0273 6B000000 		.4byte	0x6b
 2004 0277 00000000 		.4byte	.LFB8
 2005 027b 20000000 		.4byte	.LFE8-.LFB8
 2006 027f 01       		.uleb128 0x1
 2007 0280 9C       		.byte	0x9c
 2008 0281 95020000 		.4byte	0x295
 2009 0285 0D       		.uleb128 0xd
 2010 0286 08010000 		.4byte	.LASF40
 2011 028a 01       		.byte	0x1
 2012 028b CA02     		.2byte	0x2ca
 2013 028d 6B000000 		.4byte	0x6b
 2014 0291 02       		.uleb128 0x2
 2015 0292 91       		.byte	0x91
 2016 0293 77       		.sleb128 -9
 2017 0294 00       		.byte	0
 2018 0295 0F       		.uleb128 0xf
 2019 0296 A9030000 		.4byte	.LASF41
 2020 029a 01       		.byte	0x1
 2021 029b DF02     		.2byte	0x2df
 2022 029d 6B000000 		.4byte	0x6b
 2023 02a1 00000000 		.4byte	.LFB9
 2024 02a5 2C000000 		.4byte	.LFE9-.LFB9
 2025 02a9 01       		.uleb128 0x1
 2026 02aa 9C       		.byte	0x9c
 2027 02ab BF020000 		.4byte	0x2bf
 2028 02af 0D       		.uleb128 0xd
 2029 02b0 18010000 		.4byte	.LASF42
 2030 02b4 01       		.byte	0x1
 2031 02b5 DF02     		.2byte	0x2df
 2032 02b7 6B000000 		.4byte	0x6b
 2033 02bb 02       		.uleb128 0x2
 2034 02bc 91       		.byte	0x91
 2035 02bd 77       		.sleb128 -9
 2036 02be 00       		.byte	0
 2037 02bf 0F       		.uleb128 0xf
 2038 02c0 38040000 		.4byte	.LASF43
 2039 02c4 01       		.byte	0x1
 2040 02c5 F802     		.2byte	0x2f8
 2041 02c7 77000000 		.4byte	0x77
 2042 02cb 00000000 		.4byte	.LFB10
 2043 02cf 68000000 		.4byte	.LFE10-.LFB10
 2044 02d3 01       		.uleb128 0x1
 2045 02d4 9C       		.byte	0x9c
 2046 02d5 06030000 		.4byte	0x306
 2047 02d9 0D       		.uleb128 0xd
 2048 02da 18010000 		.4byte	.LASF42
 2049 02de 01       		.byte	0x1
 2050 02df F802     		.2byte	0x2f8
 2051 02e1 6B000000 		.4byte	0x6b
 2052 02e5 02       		.uleb128 0x2
 2053 02e6 91       		.byte	0x91
 2054 02e7 6F       		.sleb128 -17
 2055 02e8 10       		.uleb128 0x10
 2056 02e9 726900   		.ascii	"ri\000"
 2057 02ec 01       		.byte	0x1
 2058 02ed FA02     		.2byte	0x2fa
 2059 02ef 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 63


 2060 02f3 02       		.uleb128 0x2
 2061 02f4 91       		.byte	0x91
 2062 02f5 75       		.sleb128 -11
 2063 02f6 12       		.uleb128 0x12
 2064 02f7 FC040000 		.4byte	.LASF44
 2065 02fb 01       		.byte	0x1
 2066 02fc FB02     		.2byte	0x2fb
 2067 02fe 77000000 		.4byte	0x77
 2068 0302 02       		.uleb128 0x2
 2069 0303 91       		.byte	0x91
 2070 0304 76       		.sleb128 -10
 2071 0305 00       		.byte	0
 2072 0306 13       		.uleb128 0x13
 2073 0307 DB000000 		.4byte	.LASF45
 2074 030b 01       		.byte	0x1
 2075 030c F103     		.2byte	0x3f1
 2076 030e 00000000 		.4byte	.LFB11
 2077 0312 14010000 		.4byte	.LFE11-.LFB11
 2078 0316 01       		.uleb128 0x1
 2079 0317 9C       		.byte	0x9c
 2080 0318 72030000 		.4byte	0x372
 2081 031c 0D       		.uleb128 0xd
 2082 031d 18010000 		.4byte	.LASF42
 2083 0321 01       		.byte	0x1
 2084 0322 F103     		.2byte	0x3f1
 2085 0324 6B000000 		.4byte	0x6b
 2086 0328 02       		.uleb128 0x2
 2087 0329 91       		.byte	0x91
 2088 032a 6F       		.sleb128 -17
 2089 032b 0D       		.uleb128 0xd
 2090 032c 17020000 		.4byte	.LASF46
 2091 0330 01       		.byte	0x1
 2092 0331 F103     		.2byte	0x3f1
 2093 0333 72030000 		.4byte	0x372
 2094 0337 02       		.uleb128 0x2
 2095 0338 91       		.byte	0x91
 2096 0339 68       		.sleb128 -24
 2097 033a 0D       		.uleb128 0xd
 2098 033b E6030000 		.4byte	.LASF47
 2099 033f 01       		.byte	0x1
 2100 0340 F103     		.2byte	0x3f1
 2101 0342 77000000 		.4byte	0x77
 2102 0346 02       		.uleb128 0x2
 2103 0347 91       		.byte	0x91
 2104 0348 6C       		.sleb128 -20
 2105 0349 10       		.uleb128 0x10
 2106 034a 726900   		.ascii	"ri\000"
 2107 034d 01       		.byte	0x1
 2108 034e F403     		.2byte	0x3f4
 2109 0350 6B000000 		.4byte	0x6b
 2110 0354 02       		.uleb128 0x2
 2111 0355 91       		.byte	0x91
 2112 0356 75       		.sleb128 -11
 2113 0357 10       		.uleb128 0x10
 2114 0358 7000     		.ascii	"p\000"
 2115 035a 01       		.byte	0x1
 2116 035b F503     		.2byte	0x3f5
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 64


 2117 035d 7D030000 		.4byte	0x37d
 2118 0361 02       		.uleb128 0x2
 2119 0362 91       		.byte	0x91
 2120 0363 70       		.sleb128 -16
 2121 0364 10       		.uleb128 0x10
 2122 0365 6900     		.ascii	"i\000"
 2123 0367 01       		.byte	0x1
 2124 0368 F703     		.2byte	0x3f7
 2125 036a 77000000 		.4byte	0x77
 2126 036e 02       		.uleb128 0x2
 2127 036f 91       		.byte	0x91
 2128 0370 76       		.sleb128 -10
 2129 0371 00       		.byte	0
 2130 0372 14       		.uleb128 0x14
 2131 0373 04       		.byte	0x4
 2132 0374 78030000 		.4byte	0x378
 2133 0378 15       		.uleb128 0x15
 2134 0379 6B000000 		.4byte	0x6b
 2135 037d 14       		.uleb128 0x14
 2136 037e 04       		.byte	0x4
 2137 037f A4000000 		.4byte	0xa4
 2138 0383 16       		.uleb128 0x16
 2139 0384 56030000 		.4byte	.LASF48
 2140 0388 01       		.byte	0x1
 2141 0389 9C04     		.2byte	0x49c
 2142 038b 77000000 		.4byte	0x77
 2143 038f 00000000 		.4byte	.LFB12
 2144 0393 8C000000 		.4byte	.LFE12-.LFB12
 2145 0397 01       		.uleb128 0x1
 2146 0398 9C       		.byte	0x9c
 2147 0399 02040000 		.4byte	0x402
 2148 039d 0D       		.uleb128 0xd
 2149 039e 18010000 		.4byte	.LASF42
 2150 03a2 01       		.byte	0x1
 2151 03a3 9C04     		.2byte	0x49c
 2152 03a5 6B000000 		.4byte	0x6b
 2153 03a9 02       		.uleb128 0x2
 2154 03aa 91       		.byte	0x91
 2155 03ab 67       		.sleb128 -25
 2156 03ac 0D       		.uleb128 0xd
 2157 03ad 17020000 		.4byte	.LASF46
 2158 03b1 01       		.byte	0x1
 2159 03b2 9C04     		.2byte	0x49c
 2160 03b4 02040000 		.4byte	0x402
 2161 03b8 02       		.uleb128 0x2
 2162 03b9 91       		.byte	0x91
 2163 03ba 60       		.sleb128 -32
 2164 03bb 0D       		.uleb128 0xd
 2165 03bc E6030000 		.4byte	.LASF47
 2166 03c0 01       		.byte	0x1
 2167 03c1 9C04     		.2byte	0x49c
 2168 03c3 77000000 		.4byte	0x77
 2169 03c7 02       		.uleb128 0x2
 2170 03c8 91       		.byte	0x91
 2171 03c9 64       		.sleb128 -28
 2172 03ca 10       		.uleb128 0x10
 2173 03cb 726900   		.ascii	"ri\000"
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 65


 2174 03ce 01       		.byte	0x1
 2175 03cf 9F04     		.2byte	0x49f
 2176 03d1 6B000000 		.4byte	0x6b
 2177 03d5 02       		.uleb128 0x2
 2178 03d6 91       		.byte	0x91
 2179 03d7 75       		.sleb128 -11
 2180 03d8 10       		.uleb128 0x10
 2181 03d9 7000     		.ascii	"p\000"
 2182 03db 01       		.byte	0x1
 2183 03dc A004     		.2byte	0x4a0
 2184 03de 7D030000 		.4byte	0x37d
 2185 03e2 02       		.uleb128 0x2
 2186 03e3 91       		.byte	0x91
 2187 03e4 70       		.sleb128 -16
 2188 03e5 10       		.uleb128 0x10
 2189 03e6 6900     		.ascii	"i\000"
 2190 03e8 01       		.byte	0x1
 2191 03e9 A204     		.2byte	0x4a2
 2192 03eb 77000000 		.4byte	0x77
 2193 03ef 02       		.uleb128 0x2
 2194 03f0 91       		.byte	0x91
 2195 03f1 76       		.sleb128 -10
 2196 03f2 12       		.uleb128 0x12
 2197 03f3 88040000 		.4byte	.LASF49
 2198 03f7 01       		.byte	0x1
 2199 03f8 A504     		.2byte	0x4a5
 2200 03fa 77000000 		.4byte	0x77
 2201 03fe 02       		.uleb128 0x2
 2202 03ff 91       		.byte	0x91
 2203 0400 6E       		.sleb128 -18
 2204 0401 00       		.byte	0
 2205 0402 14       		.uleb128 0x14
 2206 0403 04       		.byte	0x4
 2207 0404 6B000000 		.4byte	0x6b
 2208 0408 13       		.uleb128 0x13
 2209 0409 5B010000 		.4byte	.LASF50
 2210 040d 01       		.byte	0x1
 2211 040e 0705     		.2byte	0x507
 2212 0410 00000000 		.4byte	.LFB13
 2213 0414 64000000 		.4byte	.LFE13-.LFB13
 2214 0418 01       		.uleb128 0x1
 2215 0419 9C       		.byte	0x9c
 2216 041a 3C040000 		.4byte	0x43c
 2217 041e 0D       		.uleb128 0xd
 2218 041f 18010000 		.4byte	.LASF42
 2219 0423 01       		.byte	0x1
 2220 0424 0705     		.2byte	0x507
 2221 0426 6B000000 		.4byte	0x6b
 2222 042a 02       		.uleb128 0x2
 2223 042b 91       		.byte	0x91
 2224 042c 6F       		.sleb128 -17
 2225 042d 10       		.uleb128 0x10
 2226 042e 726900   		.ascii	"ri\000"
 2227 0431 01       		.byte	0x1
 2228 0432 0905     		.2byte	0x509
 2229 0434 6B000000 		.4byte	0x6b
 2230 0438 02       		.uleb128 0x2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 66


 2231 0439 91       		.byte	0x91
 2232 043a 77       		.sleb128 -9
 2233 043b 00       		.byte	0
 2234 043c 13       		.uleb128 0x13
 2235 043d BC030000 		.4byte	.LASF51
 2236 0441 01       		.byte	0x1
 2237 0442 2505     		.2byte	0x525
 2238 0444 00000000 		.4byte	.LFB14
 2239 0448 38000000 		.4byte	.LFE14-.LFB14
 2240 044c 01       		.uleb128 0x1
 2241 044d 9C       		.byte	0x9c
 2242 044e 70040000 		.4byte	0x470
 2243 0452 0D       		.uleb128 0xd
 2244 0453 18010000 		.4byte	.LASF42
 2245 0457 01       		.byte	0x1
 2246 0458 2505     		.2byte	0x525
 2247 045a 6B000000 		.4byte	0x6b
 2248 045e 02       		.uleb128 0x2
 2249 045f 91       		.byte	0x91
 2250 0460 6F       		.sleb128 -17
 2251 0461 10       		.uleb128 0x10
 2252 0462 726900   		.ascii	"ri\000"
 2253 0465 01       		.byte	0x1
 2254 0466 2705     		.2byte	0x527
 2255 0468 6B000000 		.4byte	0x6b
 2256 046c 02       		.uleb128 0x2
 2257 046d 91       		.byte	0x91
 2258 046e 77       		.sleb128 -9
 2259 046f 00       		.byte	0
 2260 0470 13       		.uleb128 0x13
 2261 0471 D1030000 		.4byte	.LASF52
 2262 0475 01       		.byte	0x1
 2263 0476 4405     		.2byte	0x544
 2264 0478 00000000 		.4byte	.LFB15
 2265 047c 20000000 		.4byte	.LFE15-.LFB15
 2266 0480 01       		.uleb128 0x1
 2267 0481 9C       		.byte	0x9c
 2268 0482 96040000 		.4byte	0x496
 2269 0486 0D       		.uleb128 0xd
 2270 0487 DF030000 		.4byte	.LASF53
 2271 048b 01       		.byte	0x1
 2272 048c 4405     		.2byte	0x544
 2273 048e 6B000000 		.4byte	0x6b
 2274 0492 02       		.uleb128 0x2
 2275 0493 91       		.byte	0x91
 2276 0494 77       		.sleb128 -9
 2277 0495 00       		.byte	0
 2278 0496 0F       		.uleb128 0xf
 2279 0497 6F010000 		.4byte	.LASF54
 2280 049b 01       		.byte	0x1
 2281 049c 5905     		.2byte	0x559
 2282 049e 6B000000 		.4byte	0x6b
 2283 04a2 00000000 		.4byte	.LFB16
 2284 04a6 44000000 		.4byte	.LFE16-.LFB16
 2285 04aa 01       		.uleb128 0x1
 2286 04ab 9C       		.byte	0x9c
 2287 04ac DC040000 		.4byte	0x4dc
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 67


 2288 04b0 0D       		.uleb128 0xd
 2289 04b1 18010000 		.4byte	.LASF42
 2290 04b5 01       		.byte	0x1
 2291 04b6 5905     		.2byte	0x559
 2292 04b8 6B000000 		.4byte	0x6b
 2293 04bc 02       		.uleb128 0x2
 2294 04bd 91       		.byte	0x91
 2295 04be 6F       		.sleb128 -17
 2296 04bf 10       		.uleb128 0x10
 2297 04c0 726900   		.ascii	"ri\000"
 2298 04c3 01       		.byte	0x1
 2299 04c4 5B05     		.2byte	0x55b
 2300 04c6 6B000000 		.4byte	0x6b
 2301 04ca 02       		.uleb128 0x2
 2302 04cb 91       		.byte	0x91
 2303 04cc 76       		.sleb128 -10
 2304 04cd 10       		.uleb128 0x10
 2305 04ce 637200   		.ascii	"cr\000"
 2306 04d1 01       		.byte	0x1
 2307 04d2 5C05     		.2byte	0x55c
 2308 04d4 6B000000 		.4byte	0x6b
 2309 04d8 02       		.uleb128 0x2
 2310 04d9 91       		.byte	0x91
 2311 04da 77       		.sleb128 -9
 2312 04db 00       		.byte	0
 2313 04dc 13       		.uleb128 0x13
 2314 04dd D1010000 		.4byte	.LASF55
 2315 04e1 01       		.byte	0x1
 2316 04e2 7E05     		.2byte	0x57e
 2317 04e4 00000000 		.4byte	.LFB17
 2318 04e8 40000000 		.4byte	.LFE17-.LFB17
 2319 04ec 01       		.uleb128 0x1
 2320 04ed 9C       		.byte	0x9c
 2321 04ee 02050000 		.4byte	0x502
 2322 04f2 0D       		.uleb128 0xd
 2323 04f3 C5010000 		.4byte	.LASF56
 2324 04f7 01       		.byte	0x1
 2325 04f8 7E05     		.2byte	0x57e
 2326 04fa 6B000000 		.4byte	0x6b
 2327 04fe 02       		.uleb128 0x2
 2328 04ff 91       		.byte	0x91
 2329 0500 77       		.sleb128 -9
 2330 0501 00       		.byte	0
 2331 0502 11       		.uleb128 0x11
 2332 0503 02040000 		.4byte	.LASF58
 2333 0507 01       		.byte	0x1
 2334 0508 9B05     		.2byte	0x59b
 2335 050a 6B000000 		.4byte	0x6b
 2336 050e 00000000 		.4byte	.LFB18
 2337 0512 24000000 		.4byte	.LFE18-.LFB18
 2338 0516 01       		.uleb128 0x1
 2339 0517 9C       		.byte	0x9c
 2340 0518 0F       		.uleb128 0xf
 2341 0519 23000000 		.4byte	.LASF59
 2342 051d 01       		.byte	0x1
 2343 051e B505     		.2byte	0x5b5
 2344 0520 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 68


 2345 0524 00000000 		.4byte	.LFB19
 2346 0528 2C000000 		.4byte	.LFE19-.LFB19
 2347 052c 01       		.uleb128 0x1
 2348 052d 9C       		.byte	0x9c
 2349 052e 42050000 		.4byte	0x542
 2350 0532 12       		.uleb128 0x12
 2351 0533 FC040000 		.4byte	.LASF44
 2352 0537 01       		.byte	0x1
 2353 0538 B705     		.2byte	0x5b7
 2354 053a 6B000000 		.4byte	0x6b
 2355 053e 02       		.uleb128 0x2
 2356 053f 91       		.byte	0x91
 2357 0540 77       		.sleb128 -9
 2358 0541 00       		.byte	0
 2359 0542 17       		.uleb128 0x17
 2360 0543 E8010000 		.4byte	.LASF60
 2361 0547 01       		.byte	0x1
 2362 0548 3B       		.byte	0x3b
 2363 0549 6B000000 		.4byte	0x6b
 2364 054d 05       		.uleb128 0x5
 2365 054e 03       		.byte	0x3
 2366 054f 00000000 		.4byte	USBUART_initVar
 2367 0553 18       		.uleb128 0x18
 2368 0554 07000000 		.4byte	.LASF61
 2369 0558 03       		.byte	0x3
 2370 0559 4C02     		.2byte	0x24c
 2371 055b B0000000 		.4byte	0xb0
 2372 055f 18       		.uleb128 0x18
 2373 0560 C9040000 		.4byte	.LASF62
 2374 0564 03       		.byte	0x3
 2375 0565 4D02     		.2byte	0x24d
 2376 0567 B0000000 		.4byte	0xb0
 2377 056b 18       		.uleb128 0x18
 2378 056c 72040000 		.4byte	.LASF63
 2379 0570 03       		.byte	0x3
 2380 0571 4E02     		.2byte	0x24e
 2381 0573 B0000000 		.4byte	0xb0
 2382 0577 18       		.uleb128 0x18
 2383 0578 DF040000 		.4byte	.LASF64
 2384 057c 03       		.byte	0x3
 2385 057d 4F02     		.2byte	0x24f
 2386 057f B0000000 		.4byte	0xb0
 2387 0583 18       		.uleb128 0x18
 2388 0584 24020000 		.4byte	.LASF65
 2389 0588 03       		.byte	0x3
 2390 0589 5002     		.2byte	0x250
 2391 058b B0000000 		.4byte	0xb0
 2392 058f 19       		.uleb128 0x19
 2393 0590 F8010000 		.4byte	.LASF66
 2394 0594 04       		.byte	0x4
 2395 0595 2D       		.byte	0x2d
 2396 0596 B0000000 		.4byte	0xb0
 2397 059a 1A       		.uleb128 0x1a
 2398 059b B0000000 		.4byte	0xb0
 2399 059f AA050000 		.4byte	0x5aa
 2400 05a3 1B       		.uleb128 0x1b
 2401 05a4 CD000000 		.4byte	0xcd
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 69


 2402 05a8 01       		.byte	0x1
 2403 05a9 00       		.byte	0
 2404 05aa 19       		.uleb128 0x19
 2405 05ab 78030000 		.4byte	.LASF67
 2406 05af 04       		.byte	0x4
 2407 05b0 2E       		.byte	0x2e
 2408 05b1 B5050000 		.4byte	0x5b5
 2409 05b5 05       		.uleb128 0x5
 2410 05b6 9A050000 		.4byte	0x59a
 2411 05ba 19       		.uleb128 0x19
 2412 05bb B2020000 		.4byte	.LASF68
 2413 05bf 04       		.byte	0x4
 2414 05c0 30       		.byte	0x30
 2415 05c1 B0000000 		.4byte	0xb0
 2416 05c5 1A       		.uleb128 0x1a
 2417 05c6 D5050000 		.4byte	0x5d5
 2418 05ca D5050000 		.4byte	0x5d5
 2419 05ce 1B       		.uleb128 0x1b
 2420 05cf CD000000 		.4byte	0xcd
 2421 05d3 08       		.byte	0x8
 2422 05d4 00       		.byte	0
 2423 05d5 05       		.uleb128 0x5
 2424 05d6 49010000 		.4byte	0x149
 2425 05da 19       		.uleb128 0x19
 2426 05db 85010000 		.4byte	.LASF69
 2427 05df 04       		.byte	0x4
 2428 05e0 34       		.byte	0x34
 2429 05e1 E5050000 		.4byte	0x5e5
 2430 05e5 05       		.uleb128 0x5
 2431 05e6 C5050000 		.4byte	0x5c5
 2432 05ea 19       		.uleb128 0x19
 2433 05eb 36000000 		.4byte	.LASF70
 2434 05ef 04       		.byte	0x4
 2435 05f0 44       		.byte	0x44
 2436 05f1 B0000000 		.4byte	0xb0
 2437 05f5 00       		.byte	0
 2438              		.section	.debug_abbrev,"",%progbits
 2439              	.Ldebug_abbrev0:
 2440 0000 01       		.uleb128 0x1
 2441 0001 11       		.uleb128 0x11
 2442 0002 01       		.byte	0x1
 2443 0003 25       		.uleb128 0x25
 2444 0004 0E       		.uleb128 0xe
 2445 0005 13       		.uleb128 0x13
 2446 0006 0B       		.uleb128 0xb
 2447 0007 03       		.uleb128 0x3
 2448 0008 0E       		.uleb128 0xe
 2449 0009 1B       		.uleb128 0x1b
 2450 000a 0E       		.uleb128 0xe
 2451 000b 55       		.uleb128 0x55
 2452 000c 17       		.uleb128 0x17
 2453 000d 11       		.uleb128 0x11
 2454 000e 01       		.uleb128 0x1
 2455 000f 10       		.uleb128 0x10
 2456 0010 17       		.uleb128 0x17
 2457 0011 00       		.byte	0
 2458 0012 00       		.byte	0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 70


 2459 0013 02       		.uleb128 0x2
 2460 0014 24       		.uleb128 0x24
 2461 0015 00       		.byte	0
 2462 0016 0B       		.uleb128 0xb
 2463 0017 0B       		.uleb128 0xb
 2464 0018 3E       		.uleb128 0x3e
 2465 0019 0B       		.uleb128 0xb
 2466 001a 03       		.uleb128 0x3
 2467 001b 0E       		.uleb128 0xe
 2468 001c 00       		.byte	0
 2469 001d 00       		.byte	0
 2470 001e 03       		.uleb128 0x3
 2471 001f 24       		.uleb128 0x24
 2472 0020 00       		.byte	0
 2473 0021 0B       		.uleb128 0xb
 2474 0022 0B       		.uleb128 0xb
 2475 0023 3E       		.uleb128 0x3e
 2476 0024 0B       		.uleb128 0xb
 2477 0025 03       		.uleb128 0x3
 2478 0026 08       		.uleb128 0x8
 2479 0027 00       		.byte	0
 2480 0028 00       		.byte	0
 2481 0029 04       		.uleb128 0x4
 2482 002a 16       		.uleb128 0x16
 2483 002b 00       		.byte	0
 2484 002c 03       		.uleb128 0x3
 2485 002d 0E       		.uleb128 0xe
 2486 002e 3A       		.uleb128 0x3a
 2487 002f 0B       		.uleb128 0xb
 2488 0030 3B       		.uleb128 0x3b
 2489 0031 05       		.uleb128 0x5
 2490 0032 49       		.uleb128 0x49
 2491 0033 13       		.uleb128 0x13
 2492 0034 00       		.byte	0
 2493 0035 00       		.byte	0
 2494 0036 05       		.uleb128 0x5
 2495 0037 35       		.uleb128 0x35
 2496 0038 00       		.byte	0
 2497 0039 49       		.uleb128 0x49
 2498 003a 13       		.uleb128 0x13
 2499 003b 00       		.byte	0
 2500 003c 00       		.byte	0
 2501 003d 06       		.uleb128 0x6
 2502 003e 13       		.uleb128 0x13
 2503 003f 01       		.byte	0x1
 2504 0040 0B       		.uleb128 0xb
 2505 0041 0B       		.uleb128 0xb
 2506 0042 3A       		.uleb128 0x3a
 2507 0043 0B       		.uleb128 0xb
 2508 0044 3B       		.uleb128 0x3b
 2509 0045 0B       		.uleb128 0xb
 2510 0046 01       		.uleb128 0x1
 2511 0047 13       		.uleb128 0x13
 2512 0048 00       		.byte	0
 2513 0049 00       		.byte	0
 2514 004a 07       		.uleb128 0x7
 2515 004b 0D       		.uleb128 0xd
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 71


 2516 004c 00       		.byte	0
 2517 004d 03       		.uleb128 0x3
 2518 004e 0E       		.uleb128 0xe
 2519 004f 3A       		.uleb128 0x3a
 2520 0050 0B       		.uleb128 0xb
 2521 0051 3B       		.uleb128 0x3b
 2522 0052 0B       		.uleb128 0xb
 2523 0053 49       		.uleb128 0x49
 2524 0054 13       		.uleb128 0x13
 2525 0055 38       		.uleb128 0x38
 2526 0056 0B       		.uleb128 0xb
 2527 0057 00       		.byte	0
 2528 0058 00       		.byte	0
 2529 0059 08       		.uleb128 0x8
 2530 005a 16       		.uleb128 0x16
 2531 005b 00       		.byte	0
 2532 005c 03       		.uleb128 0x3
 2533 005d 0E       		.uleb128 0xe
 2534 005e 3A       		.uleb128 0x3a
 2535 005f 0B       		.uleb128 0xb
 2536 0060 3B       		.uleb128 0x3b
 2537 0061 0B       		.uleb128 0xb
 2538 0062 49       		.uleb128 0x49
 2539 0063 13       		.uleb128 0x13
 2540 0064 00       		.byte	0
 2541 0065 00       		.byte	0
 2542 0066 09       		.uleb128 0x9
 2543 0067 2E       		.uleb128 0x2e
 2544 0068 01       		.byte	0x1
 2545 0069 3F       		.uleb128 0x3f
 2546 006a 19       		.uleb128 0x19
 2547 006b 03       		.uleb128 0x3
 2548 006c 0E       		.uleb128 0xe
 2549 006d 3A       		.uleb128 0x3a
 2550 006e 0B       		.uleb128 0xb
 2551 006f 3B       		.uleb128 0x3b
 2552 0070 0B       		.uleb128 0xb
 2553 0071 27       		.uleb128 0x27
 2554 0072 19       		.uleb128 0x19
 2555 0073 11       		.uleb128 0x11
 2556 0074 01       		.uleb128 0x1
 2557 0075 12       		.uleb128 0x12
 2558 0076 06       		.uleb128 0x6
 2559 0077 40       		.uleb128 0x40
 2560 0078 18       		.uleb128 0x18
 2561 0079 9642     		.uleb128 0x2116
 2562 007b 19       		.uleb128 0x19
 2563 007c 01       		.uleb128 0x1
 2564 007d 13       		.uleb128 0x13
 2565 007e 00       		.byte	0
 2566 007f 00       		.byte	0
 2567 0080 0A       		.uleb128 0xa
 2568 0081 05       		.uleb128 0x5
 2569 0082 00       		.byte	0
 2570 0083 03       		.uleb128 0x3
 2571 0084 0E       		.uleb128 0xe
 2572 0085 3A       		.uleb128 0x3a
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 72


 2573 0086 0B       		.uleb128 0xb
 2574 0087 3B       		.uleb128 0x3b
 2575 0088 0B       		.uleb128 0xb
 2576 0089 49       		.uleb128 0x49
 2577 008a 13       		.uleb128 0x13
 2578 008b 02       		.uleb128 0x2
 2579 008c 18       		.uleb128 0x18
 2580 008d 00       		.byte	0
 2581 008e 00       		.byte	0
 2582 008f 0B       		.uleb128 0xb
 2583 0090 34       		.uleb128 0x34
 2584 0091 00       		.byte	0
 2585 0092 03       		.uleb128 0x3
 2586 0093 0E       		.uleb128 0xe
 2587 0094 3A       		.uleb128 0x3a
 2588 0095 0B       		.uleb128 0xb
 2589 0096 3B       		.uleb128 0x3b
 2590 0097 0B       		.uleb128 0xb
 2591 0098 49       		.uleb128 0x49
 2592 0099 13       		.uleb128 0x13
 2593 009a 02       		.uleb128 0x2
 2594 009b 18       		.uleb128 0x18
 2595 009c 00       		.byte	0
 2596 009d 00       		.byte	0
 2597 009e 0C       		.uleb128 0xc
 2598 009f 2E       		.uleb128 0x2e
 2599 00a0 01       		.byte	0x1
 2600 00a1 3F       		.uleb128 0x3f
 2601 00a2 19       		.uleb128 0x19
 2602 00a3 03       		.uleb128 0x3
 2603 00a4 0E       		.uleb128 0xe
 2604 00a5 3A       		.uleb128 0x3a
 2605 00a6 0B       		.uleb128 0xb
 2606 00a7 3B       		.uleb128 0x3b
 2607 00a8 05       		.uleb128 0x5
 2608 00a9 27       		.uleb128 0x27
 2609 00aa 19       		.uleb128 0x19
 2610 00ab 11       		.uleb128 0x11
 2611 00ac 01       		.uleb128 0x1
 2612 00ad 12       		.uleb128 0x12
 2613 00ae 06       		.uleb128 0x6
 2614 00af 40       		.uleb128 0x40
 2615 00b0 18       		.uleb128 0x18
 2616 00b1 9642     		.uleb128 0x2116
 2617 00b3 19       		.uleb128 0x19
 2618 00b4 01       		.uleb128 0x1
 2619 00b5 13       		.uleb128 0x13
 2620 00b6 00       		.byte	0
 2621 00b7 00       		.byte	0
 2622 00b8 0D       		.uleb128 0xd
 2623 00b9 05       		.uleb128 0x5
 2624 00ba 00       		.byte	0
 2625 00bb 03       		.uleb128 0x3
 2626 00bc 0E       		.uleb128 0xe
 2627 00bd 3A       		.uleb128 0x3a
 2628 00be 0B       		.uleb128 0xb
 2629 00bf 3B       		.uleb128 0x3b
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 73


 2630 00c0 05       		.uleb128 0x5
 2631 00c1 49       		.uleb128 0x49
 2632 00c2 13       		.uleb128 0x13
 2633 00c3 02       		.uleb128 0x2
 2634 00c4 18       		.uleb128 0x18
 2635 00c5 00       		.byte	0
 2636 00c6 00       		.byte	0
 2637 00c7 0E       		.uleb128 0xe
 2638 00c8 2E       		.uleb128 0x2e
 2639 00c9 00       		.byte	0
 2640 00ca 3F       		.uleb128 0x3f
 2641 00cb 19       		.uleb128 0x19
 2642 00cc 03       		.uleb128 0x3
 2643 00cd 0E       		.uleb128 0xe
 2644 00ce 3A       		.uleb128 0x3a
 2645 00cf 0B       		.uleb128 0xb
 2646 00d0 3B       		.uleb128 0x3b
 2647 00d1 05       		.uleb128 0x5
 2648 00d2 27       		.uleb128 0x27
 2649 00d3 19       		.uleb128 0x19
 2650 00d4 11       		.uleb128 0x11
 2651 00d5 01       		.uleb128 0x1
 2652 00d6 12       		.uleb128 0x12
 2653 00d7 06       		.uleb128 0x6
 2654 00d8 40       		.uleb128 0x40
 2655 00d9 18       		.uleb128 0x18
 2656 00da 9742     		.uleb128 0x2117
 2657 00dc 19       		.uleb128 0x19
 2658 00dd 00       		.byte	0
 2659 00de 00       		.byte	0
 2660 00df 0F       		.uleb128 0xf
 2661 00e0 2E       		.uleb128 0x2e
 2662 00e1 01       		.byte	0x1
 2663 00e2 3F       		.uleb128 0x3f
 2664 00e3 19       		.uleb128 0x19
 2665 00e4 03       		.uleb128 0x3
 2666 00e5 0E       		.uleb128 0xe
 2667 00e6 3A       		.uleb128 0x3a
 2668 00e7 0B       		.uleb128 0xb
 2669 00e8 3B       		.uleb128 0x3b
 2670 00e9 05       		.uleb128 0x5
 2671 00ea 27       		.uleb128 0x27
 2672 00eb 19       		.uleb128 0x19
 2673 00ec 49       		.uleb128 0x49
 2674 00ed 13       		.uleb128 0x13
 2675 00ee 11       		.uleb128 0x11
 2676 00ef 01       		.uleb128 0x1
 2677 00f0 12       		.uleb128 0x12
 2678 00f1 06       		.uleb128 0x6
 2679 00f2 40       		.uleb128 0x40
 2680 00f3 18       		.uleb128 0x18
 2681 00f4 9742     		.uleb128 0x2117
 2682 00f6 19       		.uleb128 0x19
 2683 00f7 01       		.uleb128 0x1
 2684 00f8 13       		.uleb128 0x13
 2685 00f9 00       		.byte	0
 2686 00fa 00       		.byte	0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 74


 2687 00fb 10       		.uleb128 0x10
 2688 00fc 34       		.uleb128 0x34
 2689 00fd 00       		.byte	0
 2690 00fe 03       		.uleb128 0x3
 2691 00ff 08       		.uleb128 0x8
 2692 0100 3A       		.uleb128 0x3a
 2693 0101 0B       		.uleb128 0xb
 2694 0102 3B       		.uleb128 0x3b
 2695 0103 05       		.uleb128 0x5
 2696 0104 49       		.uleb128 0x49
 2697 0105 13       		.uleb128 0x13
 2698 0106 02       		.uleb128 0x2
 2699 0107 18       		.uleb128 0x18
 2700 0108 00       		.byte	0
 2701 0109 00       		.byte	0
 2702 010a 11       		.uleb128 0x11
 2703 010b 2E       		.uleb128 0x2e
 2704 010c 00       		.byte	0
 2705 010d 3F       		.uleb128 0x3f
 2706 010e 19       		.uleb128 0x19
 2707 010f 03       		.uleb128 0x3
 2708 0110 0E       		.uleb128 0xe
 2709 0111 3A       		.uleb128 0x3a
 2710 0112 0B       		.uleb128 0xb
 2711 0113 3B       		.uleb128 0x3b
 2712 0114 05       		.uleb128 0x5
 2713 0115 27       		.uleb128 0x27
 2714 0116 19       		.uleb128 0x19
 2715 0117 49       		.uleb128 0x49
 2716 0118 13       		.uleb128 0x13
 2717 0119 11       		.uleb128 0x11
 2718 011a 01       		.uleb128 0x1
 2719 011b 12       		.uleb128 0x12
 2720 011c 06       		.uleb128 0x6
 2721 011d 40       		.uleb128 0x40
 2722 011e 18       		.uleb128 0x18
 2723 011f 9742     		.uleb128 0x2117
 2724 0121 19       		.uleb128 0x19
 2725 0122 00       		.byte	0
 2726 0123 00       		.byte	0
 2727 0124 12       		.uleb128 0x12
 2728 0125 34       		.uleb128 0x34
 2729 0126 00       		.byte	0
 2730 0127 03       		.uleb128 0x3
 2731 0128 0E       		.uleb128 0xe
 2732 0129 3A       		.uleb128 0x3a
 2733 012a 0B       		.uleb128 0xb
 2734 012b 3B       		.uleb128 0x3b
 2735 012c 05       		.uleb128 0x5
 2736 012d 49       		.uleb128 0x49
 2737 012e 13       		.uleb128 0x13
 2738 012f 02       		.uleb128 0x2
 2739 0130 18       		.uleb128 0x18
 2740 0131 00       		.byte	0
 2741 0132 00       		.byte	0
 2742 0133 13       		.uleb128 0x13
 2743 0134 2E       		.uleb128 0x2e
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 75


 2744 0135 01       		.byte	0x1
 2745 0136 3F       		.uleb128 0x3f
 2746 0137 19       		.uleb128 0x19
 2747 0138 03       		.uleb128 0x3
 2748 0139 0E       		.uleb128 0xe
 2749 013a 3A       		.uleb128 0x3a
 2750 013b 0B       		.uleb128 0xb
 2751 013c 3B       		.uleb128 0x3b
 2752 013d 05       		.uleb128 0x5
 2753 013e 27       		.uleb128 0x27
 2754 013f 19       		.uleb128 0x19
 2755 0140 11       		.uleb128 0x11
 2756 0141 01       		.uleb128 0x1
 2757 0142 12       		.uleb128 0x12
 2758 0143 06       		.uleb128 0x6
 2759 0144 40       		.uleb128 0x40
 2760 0145 18       		.uleb128 0x18
 2761 0146 9742     		.uleb128 0x2117
 2762 0148 19       		.uleb128 0x19
 2763 0149 01       		.uleb128 0x1
 2764 014a 13       		.uleb128 0x13
 2765 014b 00       		.byte	0
 2766 014c 00       		.byte	0
 2767 014d 14       		.uleb128 0x14
 2768 014e 0F       		.uleb128 0xf
 2769 014f 00       		.byte	0
 2770 0150 0B       		.uleb128 0xb
 2771 0151 0B       		.uleb128 0xb
 2772 0152 49       		.uleb128 0x49
 2773 0153 13       		.uleb128 0x13
 2774 0154 00       		.byte	0
 2775 0155 00       		.byte	0
 2776 0156 15       		.uleb128 0x15
 2777 0157 26       		.uleb128 0x26
 2778 0158 00       		.byte	0
 2779 0159 49       		.uleb128 0x49
 2780 015a 13       		.uleb128 0x13
 2781 015b 00       		.byte	0
 2782 015c 00       		.byte	0
 2783 015d 16       		.uleb128 0x16
 2784 015e 2E       		.uleb128 0x2e
 2785 015f 01       		.byte	0x1
 2786 0160 3F       		.uleb128 0x3f
 2787 0161 19       		.uleb128 0x19
 2788 0162 03       		.uleb128 0x3
 2789 0163 0E       		.uleb128 0xe
 2790 0164 3A       		.uleb128 0x3a
 2791 0165 0B       		.uleb128 0xb
 2792 0166 3B       		.uleb128 0x3b
 2793 0167 05       		.uleb128 0x5
 2794 0168 27       		.uleb128 0x27
 2795 0169 19       		.uleb128 0x19
 2796 016a 49       		.uleb128 0x49
 2797 016b 13       		.uleb128 0x13
 2798 016c 11       		.uleb128 0x11
 2799 016d 01       		.uleb128 0x1
 2800 016e 12       		.uleb128 0x12
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 76


 2801 016f 06       		.uleb128 0x6
 2802 0170 40       		.uleb128 0x40
 2803 0171 18       		.uleb128 0x18
 2804 0172 9642     		.uleb128 0x2116
 2805 0174 19       		.uleb128 0x19
 2806 0175 01       		.uleb128 0x1
 2807 0176 13       		.uleb128 0x13
 2808 0177 00       		.byte	0
 2809 0178 00       		.byte	0
 2810 0179 17       		.uleb128 0x17
 2811 017a 34       		.uleb128 0x34
 2812 017b 00       		.byte	0
 2813 017c 03       		.uleb128 0x3
 2814 017d 0E       		.uleb128 0xe
 2815 017e 3A       		.uleb128 0x3a
 2816 017f 0B       		.uleb128 0xb
 2817 0180 3B       		.uleb128 0x3b
 2818 0181 0B       		.uleb128 0xb
 2819 0182 49       		.uleb128 0x49
 2820 0183 13       		.uleb128 0x13
 2821 0184 3F       		.uleb128 0x3f
 2822 0185 19       		.uleb128 0x19
 2823 0186 02       		.uleb128 0x2
 2824 0187 18       		.uleb128 0x18
 2825 0188 00       		.byte	0
 2826 0189 00       		.byte	0
 2827 018a 18       		.uleb128 0x18
 2828 018b 34       		.uleb128 0x34
 2829 018c 00       		.byte	0
 2830 018d 03       		.uleb128 0x3
 2831 018e 0E       		.uleb128 0xe
 2832 018f 3A       		.uleb128 0x3a
 2833 0190 0B       		.uleb128 0xb
 2834 0191 3B       		.uleb128 0x3b
 2835 0192 05       		.uleb128 0x5
 2836 0193 49       		.uleb128 0x49
 2837 0194 13       		.uleb128 0x13
 2838 0195 3F       		.uleb128 0x3f
 2839 0196 19       		.uleb128 0x19
 2840 0197 3C       		.uleb128 0x3c
 2841 0198 19       		.uleb128 0x19
 2842 0199 00       		.byte	0
 2843 019a 00       		.byte	0
 2844 019b 19       		.uleb128 0x19
 2845 019c 34       		.uleb128 0x34
 2846 019d 00       		.byte	0
 2847 019e 03       		.uleb128 0x3
 2848 019f 0E       		.uleb128 0xe
 2849 01a0 3A       		.uleb128 0x3a
 2850 01a1 0B       		.uleb128 0xb
 2851 01a2 3B       		.uleb128 0x3b
 2852 01a3 0B       		.uleb128 0xb
 2853 01a4 49       		.uleb128 0x49
 2854 01a5 13       		.uleb128 0x13
 2855 01a6 3F       		.uleb128 0x3f
 2856 01a7 19       		.uleb128 0x19
 2857 01a8 3C       		.uleb128 0x3c
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 77


 2858 01a9 19       		.uleb128 0x19
 2859 01aa 00       		.byte	0
 2860 01ab 00       		.byte	0
 2861 01ac 1A       		.uleb128 0x1a
 2862 01ad 01       		.uleb128 0x1
 2863 01ae 01       		.byte	0x1
 2864 01af 49       		.uleb128 0x49
 2865 01b0 13       		.uleb128 0x13
 2866 01b1 01       		.uleb128 0x1
 2867 01b2 13       		.uleb128 0x13
 2868 01b3 00       		.byte	0
 2869 01b4 00       		.byte	0
 2870 01b5 1B       		.uleb128 0x1b
 2871 01b6 21       		.uleb128 0x21
 2872 01b7 00       		.byte	0
 2873 01b8 49       		.uleb128 0x49
 2874 01b9 13       		.uleb128 0x13
 2875 01ba 2F       		.uleb128 0x2f
 2876 01bb 0B       		.uleb128 0xb
 2877 01bc 00       		.byte	0
 2878 01bd 00       		.byte	0
 2879 01be 00       		.byte	0
 2880              		.section	.debug_aranges,"",%progbits
 2881 0000 B4000000 		.4byte	0xb4
 2882 0004 0200     		.2byte	0x2
 2883 0006 00000000 		.4byte	.Ldebug_info0
 2884 000a 04       		.byte	0x4
 2885 000b 00       		.byte	0
 2886 000c 0000     		.2byte	0
 2887 000e 0000     		.2byte	0
 2888 0010 00000000 		.4byte	.LFB0
 2889 0014 3C000000 		.4byte	.LFE0-.LFB0
 2890 0018 00000000 		.4byte	.LFB1
 2891 001c 90010000 		.4byte	.LFE1-.LFB1
 2892 0020 00000000 		.4byte	.LFB2
 2893 0024 E0000000 		.4byte	.LFE2-.LFB2
 2894 0028 00000000 		.4byte	.LFB3
 2895 002c 68000000 		.4byte	.LFE3-.LFB3
 2896 0030 00000000 		.4byte	.LFB4
 2897 0034 C4000000 		.4byte	.LFE4-.LFB4
 2898 0038 00000000 		.4byte	.LFB5
 2899 003c 34000000 		.4byte	.LFE5-.LFB5
 2900 0040 00000000 		.4byte	.LFB6
 2901 0044 18000000 		.4byte	.LFE6-.LFB6
 2902 0048 00000000 		.4byte	.LFB7
 2903 004c 30000000 		.4byte	.LFE7-.LFB7
 2904 0050 00000000 		.4byte	.LFB8
 2905 0054 20000000 		.4byte	.LFE8-.LFB8
 2906 0058 00000000 		.4byte	.LFB9
 2907 005c 2C000000 		.4byte	.LFE9-.LFB9
 2908 0060 00000000 		.4byte	.LFB10
 2909 0064 68000000 		.4byte	.LFE10-.LFB10
 2910 0068 00000000 		.4byte	.LFB11
 2911 006c 14010000 		.4byte	.LFE11-.LFB11
 2912 0070 00000000 		.4byte	.LFB12
 2913 0074 8C000000 		.4byte	.LFE12-.LFB12
 2914 0078 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 78


 2915 007c 64000000 		.4byte	.LFE13-.LFB13
 2916 0080 00000000 		.4byte	.LFB14
 2917 0084 38000000 		.4byte	.LFE14-.LFB14
 2918 0088 00000000 		.4byte	.LFB15
 2919 008c 20000000 		.4byte	.LFE15-.LFB15
 2920 0090 00000000 		.4byte	.LFB16
 2921 0094 44000000 		.4byte	.LFE16-.LFB16
 2922 0098 00000000 		.4byte	.LFB17
 2923 009c 40000000 		.4byte	.LFE17-.LFB17
 2924 00a0 00000000 		.4byte	.LFB18
 2925 00a4 24000000 		.4byte	.LFE18-.LFB18
 2926 00a8 00000000 		.4byte	.LFB19
 2927 00ac 2C000000 		.4byte	.LFE19-.LFB19
 2928 00b0 00000000 		.4byte	0
 2929 00b4 00000000 		.4byte	0
 2930              		.section	.debug_ranges,"",%progbits
 2931              	.Ldebug_ranges0:
 2932 0000 00000000 		.4byte	.LFB0
 2933 0004 3C000000 		.4byte	.LFE0
 2934 0008 00000000 		.4byte	.LFB1
 2935 000c 90010000 		.4byte	.LFE1
 2936 0010 00000000 		.4byte	.LFB2
 2937 0014 E0000000 		.4byte	.LFE2
 2938 0018 00000000 		.4byte	.LFB3
 2939 001c 68000000 		.4byte	.LFE3
 2940 0020 00000000 		.4byte	.LFB4
 2941 0024 C4000000 		.4byte	.LFE4
 2942 0028 00000000 		.4byte	.LFB5
 2943 002c 34000000 		.4byte	.LFE5
 2944 0030 00000000 		.4byte	.LFB6
 2945 0034 18000000 		.4byte	.LFE6
 2946 0038 00000000 		.4byte	.LFB7
 2947 003c 30000000 		.4byte	.LFE7
 2948 0040 00000000 		.4byte	.LFB8
 2949 0044 20000000 		.4byte	.LFE8
 2950 0048 00000000 		.4byte	.LFB9
 2951 004c 2C000000 		.4byte	.LFE9
 2952 0050 00000000 		.4byte	.LFB10
 2953 0054 68000000 		.4byte	.LFE10
 2954 0058 00000000 		.4byte	.LFB11
 2955 005c 14010000 		.4byte	.LFE11
 2956 0060 00000000 		.4byte	.LFB12
 2957 0064 8C000000 		.4byte	.LFE12
 2958 0068 00000000 		.4byte	.LFB13
 2959 006c 64000000 		.4byte	.LFE13
 2960 0070 00000000 		.4byte	.LFB14
 2961 0074 38000000 		.4byte	.LFE14
 2962 0078 00000000 		.4byte	.LFB15
 2963 007c 20000000 		.4byte	.LFE15
 2964 0080 00000000 		.4byte	.LFB16
 2965 0084 44000000 		.4byte	.LFE16
 2966 0088 00000000 		.4byte	.LFB17
 2967 008c 40000000 		.4byte	.LFE17
 2968 0090 00000000 		.4byte	.LFB18
 2969 0094 24000000 		.4byte	.LFE18
 2970 0098 00000000 		.4byte	.LFB19
 2971 009c 2C000000 		.4byte	.LFE19
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 79


 2972 00a0 00000000 		.4byte	0
 2973 00a4 00000000 		.4byte	0
 2974              		.section	.debug_line,"",%progbits
 2975              	.Ldebug_line0:
 2976 0000 C2020000 		.section	.debug_str,"MS",%progbits,1
 2976      02006200 
 2976      00000201 
 2976      FB0E0D00 
 2976      01010101 
 2977              	.LASF10:
 2978 0000 75696E74 		.ascii	"uint16\000"
 2978      313600
 2979              	.LASF61:
 2980 0007 55534255 		.ascii	"USBUART_device\000"
 2980      4152545F 
 2980      64657669 
 2980      636500
 2981              	.LASF35:
 2982 0016 55534255 		.ascii	"USBUART_Stop\000"
 2982      4152545F 
 2982      53746F70 
 2982      00
 2983              	.LASF59:
 2984 0023 55534255 		.ascii	"USBUART_RWUEnabled\000"
 2984      4152545F 
 2984      52575545 
 2984      6E61626C 
 2984      656400
 2985              	.LASF70:
 2986 0036 55534255 		.ascii	"USBUART_lastPacketSize\000"
 2986      4152545F 
 2986      6C617374 
 2986      5061636B 
 2986      65745369 
 2987              	.LASF71:
 2988 004d 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2988      43313120 
 2988      352E342E 
 2988      31203230 
 2988      31363036 
 2989 0080 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2989      20726576 
 2989      6973696F 
 2989      6E203233 
 2989      37373135 
 2990 00b3 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2990      66756E63 
 2990      74696F6E 
 2990      2D736563 
 2990      74696F6E 
 2991              	.LASF45:
 2992 00db 55534255 		.ascii	"USBUART_LoadInEP\000"
 2992      4152545F 
 2992      4C6F6164 
 2992      496E4550 
 2992      00
 2993              	.LASF7:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 80


 2994 00ec 6C6F6E67 		.ascii	"long long unsigned int\000"
 2994      206C6F6E 
 2994      6720756E 
 2994      7369676E 
 2994      65642069 
 2995              	.LASF23:
 2996 0103 61646472 		.ascii	"addr\000"
 2996      00
 2997              	.LASF40:
 2998 0108 696E7465 		.ascii	"interfaceNumber\000"
 2998      72666163 
 2998      654E756D 
 2998      62657200 
 2999              	.LASF42:
 3000 0118 65704E75 		.ascii	"epNumber\000"
 3000      6D626572 
 3000      00
 3001              	.LASF29:
 3002 0121 64657669 		.ascii	"device\000"
 3002      636500
 3003              	.LASF57:
 3004 0128 55534255 		.ascii	"USBUART_GetConfiguration\000"
 3004      4152545F 
 3004      47657443 
 3004      6F6E6669 
 3004      67757261 
 3005              	.LASF6:
 3006 0141 6C6F6E67 		.ascii	"long long int\000"
 3006      206C6F6E 
 3006      6720696E 
 3006      7400
 3007              	.LASF0:
 3008 014f 7369676E 		.ascii	"signed char\000"
 3008      65642063 
 3008      68617200 
 3009              	.LASF50:
 3010 015b 55534255 		.ascii	"USBUART_EnableOutEP\000"
 3010      4152545F 
 3010      456E6162 
 3010      6C654F75 
 3010      74455000 
 3011              	.LASF54:
 3012 016f 55534255 		.ascii	"USBUART_GetEPAckState\000"
 3012      4152545F 
 3012      47657445 
 3012      5041636B 
 3012      53746174 
 3013              	.LASF69:
 3014 0185 55534255 		.ascii	"USBUART_EP\000"
 3014      4152545F 
 3014      455000
 3015              	.LASF37:
 3016 0190 55534255 		.ascii	"USBUART_CheckActivity\000"
 3016      4152545F 
 3016      43686563 
 3016      6B416374 
 3016      69766974 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 81


 3017              	.LASF4:
 3018 01a6 6C6F6E67 		.ascii	"long int\000"
 3018      20696E74 
 3018      00
 3019              	.LASF9:
 3020 01af 75696E74 		.ascii	"uint8\000"
 3020      3800
 3021              	.LASF22:
 3022 01b5 6570546F 		.ascii	"epToggle\000"
 3022      67676C65 
 3022      00
 3023              	.LASF13:
 3024 01be 646F7562 		.ascii	"double\000"
 3024      6C6500
 3025              	.LASF56:
 3026 01c5 706F7765 		.ascii	"powerStatus\000"
 3026      72537461 
 3026      74757300 
 3027              	.LASF55:
 3028 01d1 55534255 		.ascii	"USBUART_SetPowerStatus\000"
 3028      4152545F 
 3028      53657450 
 3028      6F776572 
 3028      53746174 
 3029              	.LASF60:
 3030 01e8 55534255 		.ascii	"USBUART_initVar\000"
 3030      4152545F 
 3030      696E6974 
 3030      56617200 
 3031              	.LASF66:
 3032 01f8 55534255 		.ascii	"USBUART_interfaceNumber\000"
 3032      4152545F 
 3032      696E7465 
 3032      72666163 
 3032      654E756D 
 3033              	.LASF11:
 3034 0210 75696E74 		.ascii	"uint32\000"
 3034      333200
 3035              	.LASF46:
 3036 0217 70446174 		.ascii	"pData\000"
 3036      6100
 3037              	.LASF24:
 3038 021d 65704D6F 		.ascii	"epMode\000"
 3038      646500
 3039              	.LASF65:
 3040 0224 55534255 		.ascii	"USBUART_deviceStatus\000"
 3040      4152545F 
 3040      64657669 
 3040      63655374 
 3040      61747573 
 3041              	.LASF8:
 3042 0239 756E7369 		.ascii	"unsigned int\000"
 3042      676E6564 
 3042      20696E74 
 3042      00
 3043              	.LASF5:
 3044 0246 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 82


 3044      20756E73 
 3044      69676E65 
 3044      6420696E 
 3044      7400
 3045              	.LASF3:
 3046 0258 73686F72 		.ascii	"short unsigned int\000"
 3046      7420756E 
 3046      7369676E 
 3046      65642069 
 3046      6E7400
 3047              	.LASF31:
 3048 026b 55534255 		.ascii	"USBUART_Start\000"
 3048      4152545F 
 3048      53746172 
 3048      7400
 3049              	.LASF39:
 3050 0279 55534255 		.ascii	"USBUART_GetInterfaceSetting\000"
 3050      4152545F 
 3050      47657449 
 3050      6E746572 
 3050      66616365 
 3051              	.LASF32:
 3052 0295 55534255 		.ascii	"USBUART_Init\000"
 3052      4152545F 
 3052      496E6974 
 3052      00
 3053              	.LASF27:
 3054 02a2 696E7465 		.ascii	"interface\000"
 3054      72666163 
 3054      6500
 3055              	.LASF16:
 3056 02ac 72656733 		.ascii	"reg32\000"
 3056      3200
 3057              	.LASF68:
 3058 02b2 55534255 		.ascii	"USBUART_deviceAddress\000"
 3058      4152545F 
 3058      64657669 
 3058      63654164 
 3058      64726573 
 3059              	.LASF72:
 3060 02c8 47656E65 		.ascii	"Generated_Source\\PSoC5\\USBUART.c\000"
 3060      72617465 
 3060      645F536F 
 3060      75726365 
 3060      5C50536F 
 3061              	.LASF21:
 3062 02e9 68774570 		.ascii	"hwEpState\000"
 3062      53746174 
 3062      6500
 3063              	.LASF18:
 3064 02f3 73697A65 		.ascii	"sizetype\000"
 3064      74797065 
 3064      00
 3065              	.LASF17:
 3066 02fc 6C6F6E67 		.ascii	"long double\000"
 3066      20646F75 
 3066      626C6500 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 83


 3067              	.LASF73:
 3068 0308 433A5C55 		.ascii	"C:\\Users\\marthnick\\Desktop\\Firm-F1Siren200W\\Re"
 3068      73657273 
 3068      5C6D6172 
 3068      74686E69 
 3068      636B5C44 
 3069 0336 6C656173 		.ascii	"leaseVersion.cydsn\000"
 3069      65566572 
 3069      73696F6E 
 3069      2E637964 
 3069      736E00
 3070              	.LASF19:
 3071 0349 61747472 		.ascii	"attrib\000"
 3071      696200
 3072              	.LASF12:
 3073 0350 666C6F61 		.ascii	"float\000"
 3073      7400
 3074              	.LASF48:
 3075 0356 55534255 		.ascii	"USBUART_ReadOutEP\000"
 3075      4152545F 
 3075      52656164 
 3075      4F757445 
 3075      5000
 3076              	.LASF20:
 3077 0368 61706945 		.ascii	"apiEpState\000"
 3077      70537461 
 3077      746500
 3078              	.LASF15:
 3079 0373 72656738 		.ascii	"reg8\000"
 3079      00
 3080              	.LASF67:
 3081 0378 55534255 		.ascii	"USBUART_interfaceSetting\000"
 3081      4152545F 
 3081      696E7465 
 3081      72666163 
 3081      65536574 
 3082              	.LASF1:
 3083 0391 756E7369 		.ascii	"unsigned char\000"
 3083      676E6564 
 3083      20636861 
 3083      7200
 3084              	.LASF2:
 3085 039f 73686F72 		.ascii	"short int\000"
 3085      7420696E 
 3085      7400
 3086              	.LASF41:
 3087 03a9 55534255 		.ascii	"USBUART_GetEPState\000"
 3087      4152545F 
 3087      47657445 
 3087      50537461 
 3087      746500
 3088              	.LASF51:
 3089 03bc 55534255 		.ascii	"USBUART_DisableOutEP\000"
 3089      4152545F 
 3089      44697361 
 3089      626C654F 
 3089      75744550 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 84


 3090              	.LASF52:
 3091 03d1 55534255 		.ascii	"USBUART_Force\000"
 3091      4152545F 
 3091      466F7263 
 3091      6500
 3092              	.LASF53:
 3093 03df 62537461 		.ascii	"bState\000"
 3093      746500
 3094              	.LASF47:
 3095 03e6 6C656E67 		.ascii	"length\000"
 3095      746800
 3096              	.LASF14:
 3097 03ed 63686172 		.ascii	"char\000"
 3097      00
 3098              	.LASF30:
 3099 03f2 6D6F6465 		.ascii	"mode\000"
 3099      00
 3100              	.LASF26:
 3101 03f7 62756666 		.ascii	"bufferSize\000"
 3101      65725369 
 3101      7A6500
 3102              	.LASF58:
 3103 0402 55534255 		.ascii	"USBUART_VBusPresent\000"
 3103      4152545F 
 3103      56427573 
 3103      50726573 
 3103      656E7400 
 3104              	.LASF28:
 3105 0416 545F5553 		.ascii	"T_USBUART_EP_CTL_BLOCK\000"
 3105      42554152 
 3105      545F4550 
 3105      5F43544C 
 3105      5F424C4F 
 3106              	.LASF25:
 3107 042d 62756666 		.ascii	"buffOffset\000"
 3107      4F666673 
 3107      657400
 3108              	.LASF43:
 3109 0438 55534255 		.ascii	"USBUART_GetEPCount\000"
 3109      4152545F 
 3109      47657445 
 3109      50436F75 
 3109      6E7400
 3110              	.LASF36:
 3111 044b 656E6162 		.ascii	"enableInterrupts\000"
 3111      6C65496E 
 3111      74657272 
 3111      75707473 
 3111      00
 3112              	.LASF33:
 3113 045c 55534255 		.ascii	"USBUART_InitComponent\000"
 3113      4152545F 
 3113      496E6974 
 3113      436F6D70 
 3113      6F6E656E 
 3114              	.LASF63:
 3115 0472 55534255 		.ascii	"USBUART_configuration\000"
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccp8lHLI.s 			page 85


 3115      4152545F 
 3115      636F6E66 
 3115      69677572 
 3115      6174696F 
 3116              	.LASF49:
 3117 0488 78666572 		.ascii	"xferCount\000"
 3117      436F756E 
 3117      7400
 3118              	.LASF38:
 3119 0492 55534255 		.ascii	"USBUART_IsConfigurationChanged\000"
 3119      4152545F 
 3119      4973436F 
 3119      6E666967 
 3119      75726174 
 3120              	.LASF34:
 3121 04b1 55534255 		.ascii	"USBUART_ReInitComponent\000"
 3121      4152545F 
 3121      5265496E 
 3121      6974436F 
 3121      6D706F6E 
 3122              	.LASF62:
 3123 04c9 55534255 		.ascii	"USBUART_transferState\000"
 3123      4152545F 
 3123      7472616E 
 3123      73666572 
 3123      53746174 
 3124              	.LASF64:
 3125 04df 55534255 		.ascii	"USBUART_configurationChanged\000"
 3125      4152545F 
 3125      636F6E66 
 3125      69677572 
 3125      6174696F 
 3126              	.LASF44:
 3127 04fc 72657375 		.ascii	"result\000"
 3127      6C7400
 3128              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
