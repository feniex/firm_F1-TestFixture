ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"UART_460800.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	UART_460800_initVar
  20              		.bss
  21              		.type	UART_460800_initVar, %object
  22              		.size	UART_460800_initVar, 1
  23              	UART_460800_initVar:
  24 0000 00       		.space	1
  25              		.comm	UART_460800_txBuffer,2048,4
  26              		.global	UART_460800_txBufferRead
  27 0001 00       		.align	1
  28              		.type	UART_460800_txBufferRead, %object
  29              		.size	UART_460800_txBufferRead, 2
  30              	UART_460800_txBufferRead:
  31 0002 0000     		.space	2
  32              		.global	UART_460800_txBufferWrite
  33              		.align	1
  34              		.type	UART_460800_txBufferWrite, %object
  35              		.size	UART_460800_txBufferWrite, 2
  36              	UART_460800_txBufferWrite:
  37 0004 0000     		.space	2
  38              		.section	.text.UART_460800_Start,"ax",%progbits
  39              		.align	2
  40              		.global	UART_460800_Start
  41              		.thumb
  42              		.thumb_func
  43              		.type	UART_460800_Start, %function
  44              	UART_460800_Start:
  45              	.LFB0:
  46              		.file 1 "Generated_Source\\PSoC5\\UART_460800.c"
   1:Generated_Source\PSoC5/UART_460800.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/UART_460800.c **** * File Name: UART_460800.c
   3:Generated_Source\PSoC5/UART_460800.c **** * Version 2.50
   4:Generated_Source\PSoC5/UART_460800.c **** *
   5:Generated_Source\PSoC5/UART_460800.c **** * Description:
   6:Generated_Source\PSoC5/UART_460800.c **** *  This file provides all API functionality of the UART component
   7:Generated_Source\PSoC5/UART_460800.c **** *
   8:Generated_Source\PSoC5/UART_460800.c **** * Note:
   9:Generated_Source\PSoC5/UART_460800.c **** *
  10:Generated_Source\PSoC5/UART_460800.c **** ********************************************************************************
  11:Generated_Source\PSoC5/UART_460800.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 2


  12:Generated_Source\PSoC5/UART_460800.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:Generated_Source\PSoC5/UART_460800.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:Generated_Source\PSoC5/UART_460800.c **** * the software package with which this file was provided.
  15:Generated_Source\PSoC5/UART_460800.c **** *******************************************************************************/
  16:Generated_Source\PSoC5/UART_460800.c **** 
  17:Generated_Source\PSoC5/UART_460800.c **** #include "UART_460800.h"
  18:Generated_Source\PSoC5/UART_460800.c **** #if (UART_460800_INTERNAL_CLOCK_USED)
  19:Generated_Source\PSoC5/UART_460800.c ****     #include "UART_460800_IntClock.h"
  20:Generated_Source\PSoC5/UART_460800.c **** #endif /* End UART_460800_INTERNAL_CLOCK_USED */
  21:Generated_Source\PSoC5/UART_460800.c **** 
  22:Generated_Source\PSoC5/UART_460800.c **** 
  23:Generated_Source\PSoC5/UART_460800.c **** /***************************************
  24:Generated_Source\PSoC5/UART_460800.c **** * Global data allocation
  25:Generated_Source\PSoC5/UART_460800.c **** ***************************************/
  26:Generated_Source\PSoC5/UART_460800.c **** 
  27:Generated_Source\PSoC5/UART_460800.c **** uint8 UART_460800_initVar = 0u;
  28:Generated_Source\PSoC5/UART_460800.c **** 
  29:Generated_Source\PSoC5/UART_460800.c **** #if (UART_460800_TX_INTERRUPT_ENABLED && UART_460800_TX_ENABLED)
  30:Generated_Source\PSoC5/UART_460800.c ****     volatile uint8 UART_460800_txBuffer[UART_460800_TX_BUFFER_SIZE];
  31:Generated_Source\PSoC5/UART_460800.c ****     volatile uint16 UART_460800_txBufferRead = 0u;
  32:Generated_Source\PSoC5/UART_460800.c ****     uint16 UART_460800_txBufferWrite = 0u;
  33:Generated_Source\PSoC5/UART_460800.c **** #endif /* (UART_460800_TX_INTERRUPT_ENABLED && UART_460800_TX_ENABLED) */
  34:Generated_Source\PSoC5/UART_460800.c **** 
  35:Generated_Source\PSoC5/UART_460800.c **** #if (UART_460800_RX_INTERRUPT_ENABLED && (UART_460800_RX_ENABLED || UART_460800_HD_ENABLED))
  36:Generated_Source\PSoC5/UART_460800.c ****     uint8 UART_460800_errorStatus = 0u;
  37:Generated_Source\PSoC5/UART_460800.c ****     volatile uint8 UART_460800_rxBuffer[UART_460800_RX_BUFFER_SIZE];
  38:Generated_Source\PSoC5/UART_460800.c ****     volatile uint8 UART_460800_rxBufferRead  = 0u;
  39:Generated_Source\PSoC5/UART_460800.c ****     volatile uint8 UART_460800_rxBufferWrite = 0u;
  40:Generated_Source\PSoC5/UART_460800.c ****     volatile uint8 UART_460800_rxBufferLoopDetect = 0u;
  41:Generated_Source\PSoC5/UART_460800.c ****     volatile uint8 UART_460800_rxBufferOverflow   = 0u;
  42:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RXHW_ADDRESS_ENABLED)
  43:Generated_Source\PSoC5/UART_460800.c ****         volatile uint8 UART_460800_rxAddressMode = UART_460800_RX_ADDRESS_MODE;
  44:Generated_Source\PSoC5/UART_460800.c ****         volatile uint8 UART_460800_rxAddressDetected = 0u;
  45:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_RXHW_ADDRESS_ENABLED) */
  46:Generated_Source\PSoC5/UART_460800.c **** #endif /* (UART_460800_RX_INTERRUPT_ENABLED && (UART_460800_RX_ENABLED || UART_460800_HD_ENABLED)) 
  47:Generated_Source\PSoC5/UART_460800.c **** 
  48:Generated_Source\PSoC5/UART_460800.c **** 
  49:Generated_Source\PSoC5/UART_460800.c **** /*******************************************************************************
  50:Generated_Source\PSoC5/UART_460800.c **** * Function Name: UART_460800_Start
  51:Generated_Source\PSoC5/UART_460800.c **** ********************************************************************************
  52:Generated_Source\PSoC5/UART_460800.c **** *
  53:Generated_Source\PSoC5/UART_460800.c **** * Summary:
  54:Generated_Source\PSoC5/UART_460800.c **** *  This is the preferred method to begin component operation.
  55:Generated_Source\PSoC5/UART_460800.c **** *  UART_460800_Start() sets the initVar variable, calls the
  56:Generated_Source\PSoC5/UART_460800.c **** *  UART_460800_Init() function, and then calls the
  57:Generated_Source\PSoC5/UART_460800.c **** *  UART_460800_Enable() function.
  58:Generated_Source\PSoC5/UART_460800.c **** *
  59:Generated_Source\PSoC5/UART_460800.c **** * Parameters:
  60:Generated_Source\PSoC5/UART_460800.c **** *  None.
  61:Generated_Source\PSoC5/UART_460800.c **** *
  62:Generated_Source\PSoC5/UART_460800.c **** * Return:
  63:Generated_Source\PSoC5/UART_460800.c **** *  None.
  64:Generated_Source\PSoC5/UART_460800.c **** *
  65:Generated_Source\PSoC5/UART_460800.c **** * Global variables:
  66:Generated_Source\PSoC5/UART_460800.c **** *  The UART_460800_intiVar variable is used to indicate initial
  67:Generated_Source\PSoC5/UART_460800.c **** *  configuration of this component. The variable is initialized to zero (0u)
  68:Generated_Source\PSoC5/UART_460800.c **** *  and set to one (1u) the first time UART_460800_Start() is called. This
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 3


  69:Generated_Source\PSoC5/UART_460800.c **** *  allows for component initialization without re-initialization in all
  70:Generated_Source\PSoC5/UART_460800.c **** *  subsequent calls to the UART_460800_Start() routine.
  71:Generated_Source\PSoC5/UART_460800.c **** *
  72:Generated_Source\PSoC5/UART_460800.c **** * Reentrant:
  73:Generated_Source\PSoC5/UART_460800.c **** *  No.
  74:Generated_Source\PSoC5/UART_460800.c **** *
  75:Generated_Source\PSoC5/UART_460800.c **** *******************************************************************************/
  76:Generated_Source\PSoC5/UART_460800.c **** void UART_460800_Start(void) 
  77:Generated_Source\PSoC5/UART_460800.c **** {
  47              		.loc 1 77 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 1, uses_anonymous_args = 0
  51 0000 80B5     		push	{r7, lr}
  52              		.cfi_def_cfa_offset 8
  53              		.cfi_offset 7, -8
  54              		.cfi_offset 14, -4
  55 0002 00AF     		add	r7, sp, #0
  56              		.cfi_def_cfa_register 7
  78:Generated_Source\PSoC5/UART_460800.c ****     /* If not initialized then initialize all required hardware and software */
  79:Generated_Source\PSoC5/UART_460800.c ****     if(UART_460800_initVar == 0u)
  57              		.loc 1 79 0
  58 0004 064B     		ldr	r3, .L3
  59 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  60 0008 002B     		cmp	r3, #0
  61 000a 04D1     		bne	.L2
  80:Generated_Source\PSoC5/UART_460800.c ****     {
  81:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_Init();
  62              		.loc 1 81 0
  63 000c FFF7FEFF 		bl	UART_460800_Init
  82:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_initVar = 1u;
  64              		.loc 1 82 0
  65 0010 034B     		ldr	r3, .L3
  66 0012 0122     		movs	r2, #1
  67 0014 1A70     		strb	r2, [r3]
  68              	.L2:
  83:Generated_Source\PSoC5/UART_460800.c ****     }
  84:Generated_Source\PSoC5/UART_460800.c **** 
  85:Generated_Source\PSoC5/UART_460800.c ****     UART_460800_Enable();
  69              		.loc 1 85 0
  70 0016 FFF7FEFF 		bl	UART_460800_Enable
  86:Generated_Source\PSoC5/UART_460800.c **** }
  71              		.loc 1 86 0
  72 001a 00BF     		nop
  73 001c 80BD     		pop	{r7, pc}
  74              	.L4:
  75 001e 00BF     		.align	2
  76              	.L3:
  77 0020 00000000 		.word	UART_460800_initVar
  78              		.cfi_endproc
  79              	.LFE0:
  80              		.size	UART_460800_Start, .-UART_460800_Start
  81              		.section	.text.UART_460800_Init,"ax",%progbits
  82              		.align	2
  83              		.global	UART_460800_Init
  84              		.thumb
  85              		.thumb_func
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 4


  86              		.type	UART_460800_Init, %function
  87              	UART_460800_Init:
  88              	.LFB1:
  87:Generated_Source\PSoC5/UART_460800.c **** 
  88:Generated_Source\PSoC5/UART_460800.c **** 
  89:Generated_Source\PSoC5/UART_460800.c **** /*******************************************************************************
  90:Generated_Source\PSoC5/UART_460800.c **** * Function Name: UART_460800_Init
  91:Generated_Source\PSoC5/UART_460800.c **** ********************************************************************************
  92:Generated_Source\PSoC5/UART_460800.c **** *
  93:Generated_Source\PSoC5/UART_460800.c **** * Summary:
  94:Generated_Source\PSoC5/UART_460800.c **** *  Initializes or restores the component according to the customizer Configure
  95:Generated_Source\PSoC5/UART_460800.c **** *  dialog settings. It is not necessary to call UART_460800_Init() because
  96:Generated_Source\PSoC5/UART_460800.c **** *  the UART_460800_Start() API calls this function and is the preferred
  97:Generated_Source\PSoC5/UART_460800.c **** *  method to begin component operation.
  98:Generated_Source\PSoC5/UART_460800.c **** *
  99:Generated_Source\PSoC5/UART_460800.c **** * Parameters:
 100:Generated_Source\PSoC5/UART_460800.c **** *  None.
 101:Generated_Source\PSoC5/UART_460800.c **** *
 102:Generated_Source\PSoC5/UART_460800.c **** * Return:
 103:Generated_Source\PSoC5/UART_460800.c **** *  None.
 104:Generated_Source\PSoC5/UART_460800.c **** *
 105:Generated_Source\PSoC5/UART_460800.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/UART_460800.c **** void UART_460800_Init(void) 
 107:Generated_Source\PSoC5/UART_460800.c **** {
  89              		.loc 1 107 0
  90              		.cfi_startproc
  91              		@ args = 0, pretend = 0, frame = 0
  92              		@ frame_needed = 1, uses_anonymous_args = 0
  93 0000 80B5     		push	{r7, lr}
  94              		.cfi_def_cfa_offset 8
  95              		.cfi_offset 7, -8
  96              		.cfi_offset 14, -4
  97 0002 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/UART_460800.c ****     #if(UART_460800_RX_ENABLED || UART_460800_HD_ENABLED)
 109:Generated_Source\PSoC5/UART_460800.c **** 
 110:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_RX_INTERRUPT_ENABLED)
 111:Generated_Source\PSoC5/UART_460800.c ****             /* Set RX interrupt vector and priority */
 112:Generated_Source\PSoC5/UART_460800.c ****             (void) CyIntSetVector(UART_460800_RX_VECT_NUM, &UART_460800_RXISR);
 113:Generated_Source\PSoC5/UART_460800.c ****             CyIntSetPriority(UART_460800_RX_VECT_NUM, UART_460800_RX_PRIOR_NUM);
 114:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_errorStatus = 0u;
 115:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_RX_INTERRUPT_ENABLED) */
 116:Generated_Source\PSoC5/UART_460800.c **** 
 117:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_RXHW_ADDRESS_ENABLED)
 118:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_SetRxAddressMode(UART_460800_RX_ADDRESS_MODE);
 119:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_SetRxAddress1(UART_460800_RX_HW_ADDRESS1);
 120:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_SetRxAddress2(UART_460800_RX_HW_ADDRESS2);
 121:Generated_Source\PSoC5/UART_460800.c ****         #endif /* End UART_460800_RXHW_ADDRESS_ENABLED */
 122:Generated_Source\PSoC5/UART_460800.c **** 
 123:Generated_Source\PSoC5/UART_460800.c ****         /* Init Count7 period */
 124:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXBITCTR_PERIOD_REG = UART_460800_RXBITCTR_INIT;
  99              		.loc 1 124 0
 100 0004 0C4B     		ldr	r3, .L6
 101 0006 7222     		movs	r2, #114
 102 0008 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/UART_460800.c ****         /* Configure the Initial RX interrupt mask */
 126:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXSTATUS_MASK_REG  = UART_460800_INIT_RX_INTERRUPTS_MASK;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 5


 103              		.loc 1 126 0
 104 000a 0C4B     		ldr	r3, .L6+4
 105 000c 2022     		movs	r2, #32
 106 000e 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/UART_460800.c ****     #endif /* End UART_460800_RX_ENABLED || UART_460800_HD_ENABLED*/
 128:Generated_Source\PSoC5/UART_460800.c **** 
 129:Generated_Source\PSoC5/UART_460800.c ****     #if(UART_460800_TX_ENABLED)
 130:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_TX_INTERRUPT_ENABLED)
 131:Generated_Source\PSoC5/UART_460800.c ****             /* Set TX interrupt vector and priority */
 132:Generated_Source\PSoC5/UART_460800.c ****             (void) CyIntSetVector(UART_460800_TX_VECT_NUM, &UART_460800_TXISR);
 107              		.loc 1 132 0
 108 0010 0B49     		ldr	r1, .L6+8
 109 0012 0320     		movs	r0, #3
 110 0014 FFF7FEFF 		bl	CyIntSetVector
 133:Generated_Source\PSoC5/UART_460800.c ****             CyIntSetPriority(UART_460800_TX_VECT_NUM, UART_460800_TX_PRIOR_NUM);
 111              		.loc 1 133 0
 112 0018 0721     		movs	r1, #7
 113 001a 0320     		movs	r0, #3
 114 001c FFF7FEFF 		bl	CyIntSetPriority
 134:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_TX_INTERRUPT_ENABLED) */
 135:Generated_Source\PSoC5/UART_460800.c **** 
 136:Generated_Source\PSoC5/UART_460800.c ****         /* Write Counter Value for TX Bit Clk Generator*/
 137:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_TXCLKGEN_DP)
 138:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_TXBITCLKGEN_CTR_REG = UART_460800_BIT_CENTER;
 115              		.loc 1 138 0
 116 0020 084B     		ldr	r3, .L6+12
 117 0022 0622     		movs	r2, #6
 118 0024 1A70     		strb	r2, [r3]
 139:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_TXBITCLKTX_COMPLETE_REG = ((UART_460800_NUMBER_OF_DATA_BITS +
 119              		.loc 1 139 0
 120 0026 084B     		ldr	r3, .L6+16
 121 0028 4722     		movs	r2, #71
 122 002a 1A70     		strb	r2, [r3]
 140:Generated_Source\PSoC5/UART_460800.c ****                         UART_460800_NUMBER_OF_START_BIT) * UART_460800_OVER_SAMPLE_COUNT) - 1u;
 141:Generated_Source\PSoC5/UART_460800.c ****         #else
 142:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_TXBITCTR_PERIOD_REG = ((UART_460800_NUMBER_OF_DATA_BITS +
 143:Generated_Source\PSoC5/UART_460800.c ****                         UART_460800_NUMBER_OF_START_BIT) * UART_460800_OVER_SAMPLE_8) - 1u;
 144:Generated_Source\PSoC5/UART_460800.c ****         #endif /* End UART_460800_TXCLKGEN_DP */
 145:Generated_Source\PSoC5/UART_460800.c **** 
 146:Generated_Source\PSoC5/UART_460800.c ****         /* Configure the Initial TX interrupt mask */
 147:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_TX_INTERRUPT_ENABLED)
 148:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_TXSTATUS_MASK_REG = UART_460800_TX_STS_FIFO_EMPTY;
 123              		.loc 1 148 0
 124 002c 074B     		ldr	r3, .L6+20
 125 002e 0222     		movs	r2, #2
 126 0030 1A70     		strb	r2, [r3]
 149:Generated_Source\PSoC5/UART_460800.c ****         #else
 150:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_TXSTATUS_MASK_REG = UART_460800_INIT_TX_INTERRUPTS_MASK;
 151:Generated_Source\PSoC5/UART_460800.c ****         #endif /*End UART_460800_TX_INTERRUPT_ENABLED*/
 152:Generated_Source\PSoC5/UART_460800.c **** 
 153:Generated_Source\PSoC5/UART_460800.c ****     #endif /* End UART_460800_TX_ENABLED */
 154:Generated_Source\PSoC5/UART_460800.c **** 
 155:Generated_Source\PSoC5/UART_460800.c ****     #if(UART_460800_PARITY_TYPE_SW)  /* Write Parity to Control Register */
 156:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_WriteControlRegister( \
 157:Generated_Source\PSoC5/UART_460800.c ****             (UART_460800_ReadControlRegister() & (uint8)~UART_460800_CTRL_PARITY_TYPE_MASK) | \
 158:Generated_Source\PSoC5/UART_460800.c ****             (uint8)(UART_460800_PARITY_TYPE << UART_460800_CTRL_PARITY_TYPE0_SHIFT) );
 159:Generated_Source\PSoC5/UART_460800.c ****     #endif /* End UART_460800_PARITY_TYPE_SW */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 6


 160:Generated_Source\PSoC5/UART_460800.c **** }
 127              		.loc 1 160 0
 128 0032 00BF     		nop
 129 0034 80BD     		pop	{r7, pc}
 130              	.L7:
 131 0036 00BF     		.align	2
 132              	.L6:
 133 0038 89650040 		.word	1073767817
 134 003c 89640040 		.word	1073767561
 135 0040 00000000 		.word	UART_460800_TXISR
 136 0044 28640040 		.word	1073767464
 137 0048 38640040 		.word	1073767480
 138 004c 84640040 		.word	1073767556
 139              		.cfi_endproc
 140              	.LFE1:
 141              		.size	UART_460800_Init, .-UART_460800_Init
 142              		.section	.text.UART_460800_Enable,"ax",%progbits
 143              		.align	2
 144              		.global	UART_460800_Enable
 145              		.thumb
 146              		.thumb_func
 147              		.type	UART_460800_Enable, %function
 148              	UART_460800_Enable:
 149              	.LFB2:
 161:Generated_Source\PSoC5/UART_460800.c **** 
 162:Generated_Source\PSoC5/UART_460800.c **** 
 163:Generated_Source\PSoC5/UART_460800.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/UART_460800.c **** * Function Name: UART_460800_Enable
 165:Generated_Source\PSoC5/UART_460800.c **** ********************************************************************************
 166:Generated_Source\PSoC5/UART_460800.c **** *
 167:Generated_Source\PSoC5/UART_460800.c **** * Summary:
 168:Generated_Source\PSoC5/UART_460800.c **** *  Activates the hardware and begins component operation. It is not necessary
 169:Generated_Source\PSoC5/UART_460800.c **** *  to call UART_460800_Enable() because the UART_460800_Start() API
 170:Generated_Source\PSoC5/UART_460800.c **** *  calls this function, which is the preferred method to begin component
 171:Generated_Source\PSoC5/UART_460800.c **** *  operation.
 172:Generated_Source\PSoC5/UART_460800.c **** 
 173:Generated_Source\PSoC5/UART_460800.c **** * Parameters:
 174:Generated_Source\PSoC5/UART_460800.c **** *  None.
 175:Generated_Source\PSoC5/UART_460800.c **** *
 176:Generated_Source\PSoC5/UART_460800.c **** * Return:
 177:Generated_Source\PSoC5/UART_460800.c **** *  None.
 178:Generated_Source\PSoC5/UART_460800.c **** *
 179:Generated_Source\PSoC5/UART_460800.c **** * Global Variables:
 180:Generated_Source\PSoC5/UART_460800.c **** *  UART_460800_rxAddressDetected - set to initial state (0).
 181:Generated_Source\PSoC5/UART_460800.c **** *
 182:Generated_Source\PSoC5/UART_460800.c **** *******************************************************************************/
 183:Generated_Source\PSoC5/UART_460800.c **** void UART_460800_Enable(void) 
 184:Generated_Source\PSoC5/UART_460800.c **** {
 150              		.loc 1 184 0
 151              		.cfi_startproc
 152              		@ args = 0, pretend = 0, frame = 8
 153              		@ frame_needed = 1, uses_anonymous_args = 0
 154 0000 80B5     		push	{r7, lr}
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 7


 159              		.cfi_def_cfa_offset 16
 160 0004 00AF     		add	r7, sp, #0
 161              		.cfi_def_cfa_register 7
 185:Generated_Source\PSoC5/UART_460800.c ****     uint8 enableInterrupts;
 186:Generated_Source\PSoC5/UART_460800.c ****     enableInterrupts = CyEnterCriticalSection();
 162              		.loc 1 186 0
 163 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 164 000a 0346     		mov	r3, r0
 165 000c FB71     		strb	r3, [r7, #7]
 187:Generated_Source\PSoC5/UART_460800.c **** 
 188:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RX_ENABLED || UART_460800_HD_ENABLED)
 189:Generated_Source\PSoC5/UART_460800.c ****         /* RX Counter (Count7) Enable */
 190:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXBITCTR_CONTROL_REG |= UART_460800_CNTR_ENABLE;
 166              		.loc 1 190 0
 167 000e 144A     		ldr	r2, .L9
 168 0010 134B     		ldr	r3, .L9
 169 0012 1B78     		ldrb	r3, [r3]
 170 0014 DBB2     		uxtb	r3, r3
 171 0016 43F02003 		orr	r3, r3, #32
 172 001a DBB2     		uxtb	r3, r3
 173 001c 1370     		strb	r3, [r2]
 191:Generated_Source\PSoC5/UART_460800.c **** 
 192:Generated_Source\PSoC5/UART_460800.c ****         /* Enable the RX Interrupt */
 193:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXSTATUS_ACTL_REG  |= UART_460800_INT_ENABLE;
 174              		.loc 1 193 0
 175 001e 114A     		ldr	r2, .L9+4
 176 0020 104B     		ldr	r3, .L9+4
 177 0022 1B78     		ldrb	r3, [r3]
 178 0024 DBB2     		uxtb	r3, r3
 179 0026 43F01003 		orr	r3, r3, #16
 180 002a DBB2     		uxtb	r3, r3
 181 002c 1370     		strb	r3, [r2]
 194:Generated_Source\PSoC5/UART_460800.c **** 
 195:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_RX_INTERRUPT_ENABLED)
 196:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_EnableRxInt();
 197:Generated_Source\PSoC5/UART_460800.c **** 
 198:Generated_Source\PSoC5/UART_460800.c ****             #if (UART_460800_RXHW_ADDRESS_ENABLED)
 199:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_rxAddressDetected = 0u;
 200:Generated_Source\PSoC5/UART_460800.c ****             #endif /* (UART_460800_RXHW_ADDRESS_ENABLED) */
 201:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_RX_INTERRUPT_ENABLED) */
 202:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_RX_ENABLED || UART_460800_HD_ENABLED) */
 203:Generated_Source\PSoC5/UART_460800.c **** 
 204:Generated_Source\PSoC5/UART_460800.c ****     #if(UART_460800_TX_ENABLED)
 205:Generated_Source\PSoC5/UART_460800.c ****         /* TX Counter (DP/Count7) Enable */
 206:Generated_Source\PSoC5/UART_460800.c ****         #if(!UART_460800_TXCLKGEN_DP)
 207:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_TXBITCTR_CONTROL_REG |= UART_460800_CNTR_ENABLE;
 208:Generated_Source\PSoC5/UART_460800.c ****         #endif /* End UART_460800_TXCLKGEN_DP */
 209:Generated_Source\PSoC5/UART_460800.c **** 
 210:Generated_Source\PSoC5/UART_460800.c ****         /* Enable the TX Interrupt */
 211:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_TXSTATUS_ACTL_REG |= UART_460800_INT_ENABLE;
 182              		.loc 1 211 0
 183 002e 0E4A     		ldr	r2, .L9+8
 184 0030 0D4B     		ldr	r3, .L9+8
 185 0032 1B78     		ldrb	r3, [r3]
 186 0034 DBB2     		uxtb	r3, r3
 187 0036 43F01003 		orr	r3, r3, #16
 188 003a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 8


 189 003c 1370     		strb	r3, [r2]
 212:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_TX_INTERRUPT_ENABLED)
 213:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_ClearPendingTxInt(); /* Clear history of TX_NOT_EMPTY */
 190              		.loc 1 213 0
 191 003e 0B4B     		ldr	r3, .L9+12
 192 0040 0822     		movs	r2, #8
 193 0042 1A60     		str	r2, [r3]
 214:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_EnableTxInt();
 194              		.loc 1 214 0
 195 0044 0A4B     		ldr	r3, .L9+16
 196 0046 0822     		movs	r2, #8
 197 0048 1A60     		str	r2, [r3]
 215:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_TX_INTERRUPT_ENABLED) */
 216:Generated_Source\PSoC5/UART_460800.c ****      #endif /* (UART_460800_TX_INTERRUPT_ENABLED) */
 217:Generated_Source\PSoC5/UART_460800.c **** 
 218:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_INTERNAL_CLOCK_USED)
 219:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_IntClock_Start();  /* Enable the clock */
 198              		.loc 1 219 0
 199 004a FFF7FEFF 		bl	UART_460800_IntClock_Start
 220:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_INTERNAL_CLOCK_USED) */
 221:Generated_Source\PSoC5/UART_460800.c **** 
 222:Generated_Source\PSoC5/UART_460800.c ****     CyExitCriticalSection(enableInterrupts);
 200              		.loc 1 222 0
 201 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 202 0050 1846     		mov	r0, r3
 203 0052 FFF7FEFF 		bl	CyExitCriticalSection
 223:Generated_Source\PSoC5/UART_460800.c **** }
 204              		.loc 1 223 0
 205 0056 00BF     		nop
 206 0058 0837     		adds	r7, r7, #8
 207              		.cfi_def_cfa_offset 8
 208 005a BD46     		mov	sp, r7
 209              		.cfi_def_cfa_register 13
 210              		@ sp needed
 211 005c 80BD     		pop	{r7, pc}
 212              	.L10:
 213 005e 00BF     		.align	2
 214              	.L9:
 215 0060 99650040 		.word	1073767833
 216 0064 99640040 		.word	1073767577
 217 0068 94640040 		.word	1073767572
 218 006c 80E200E0 		.word	-536812928
 219 0070 00E100E0 		.word	-536813312
 220              		.cfi_endproc
 221              	.LFE2:
 222              		.size	UART_460800_Enable, .-UART_460800_Enable
 223              		.section	.text.UART_460800_Stop,"ax",%progbits
 224              		.align	2
 225              		.global	UART_460800_Stop
 226              		.thumb
 227              		.thumb_func
 228              		.type	UART_460800_Stop, %function
 229              	UART_460800_Stop:
 230              	.LFB3:
 224:Generated_Source\PSoC5/UART_460800.c **** 
 225:Generated_Source\PSoC5/UART_460800.c **** 
 226:Generated_Source\PSoC5/UART_460800.c **** /*******************************************************************************
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 9


 227:Generated_Source\PSoC5/UART_460800.c **** * Function Name: UART_460800_Stop
 228:Generated_Source\PSoC5/UART_460800.c **** ********************************************************************************
 229:Generated_Source\PSoC5/UART_460800.c **** *
 230:Generated_Source\PSoC5/UART_460800.c **** * Summary:
 231:Generated_Source\PSoC5/UART_460800.c **** *  Disables the UART operation.
 232:Generated_Source\PSoC5/UART_460800.c **** *
 233:Generated_Source\PSoC5/UART_460800.c **** * Parameters:
 234:Generated_Source\PSoC5/UART_460800.c **** *  None.
 235:Generated_Source\PSoC5/UART_460800.c **** *
 236:Generated_Source\PSoC5/UART_460800.c **** * Return:
 237:Generated_Source\PSoC5/UART_460800.c **** *  None.
 238:Generated_Source\PSoC5/UART_460800.c **** *
 239:Generated_Source\PSoC5/UART_460800.c **** *******************************************************************************/
 240:Generated_Source\PSoC5/UART_460800.c **** void UART_460800_Stop(void) 
 241:Generated_Source\PSoC5/UART_460800.c **** {
 231              		.loc 1 241 0
 232              		.cfi_startproc
 233              		@ args = 0, pretend = 0, frame = 8
 234              		@ frame_needed = 1, uses_anonymous_args = 0
 235 0000 80B5     		push	{r7, lr}
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 7, -8
 238              		.cfi_offset 14, -4
 239 0002 82B0     		sub	sp, sp, #8
 240              		.cfi_def_cfa_offset 16
 241 0004 00AF     		add	r7, sp, #0
 242              		.cfi_def_cfa_register 7
 242:Generated_Source\PSoC5/UART_460800.c ****     uint8 enableInterrupts;
 243:Generated_Source\PSoC5/UART_460800.c ****     enableInterrupts = CyEnterCriticalSection();
 243              		.loc 1 243 0
 244 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 245 000a 0346     		mov	r3, r0
 246 000c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/UART_460800.c **** 
 245:Generated_Source\PSoC5/UART_460800.c ****     /* Write Bit Counter Disable */
 246:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RX_ENABLED || UART_460800_HD_ENABLED)
 247:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXBITCTR_CONTROL_REG &= (uint8) ~UART_460800_CNTR_ENABLE;
 247              		.loc 1 247 0
 248 000e 124A     		ldr	r2, .L12
 249 0010 114B     		ldr	r3, .L12
 250 0012 1B78     		ldrb	r3, [r3]
 251 0014 DBB2     		uxtb	r3, r3
 252 0016 23F02003 		bic	r3, r3, #32
 253 001a DBB2     		uxtb	r3, r3
 254 001c 1370     		strb	r3, [r2]
 248:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_RX_ENABLED || UART_460800_HD_ENABLED) */
 249:Generated_Source\PSoC5/UART_460800.c **** 
 250:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_TX_ENABLED)
 251:Generated_Source\PSoC5/UART_460800.c ****         #if(!UART_460800_TXCLKGEN_DP)
 252:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_TXBITCTR_CONTROL_REG &= (uint8) ~UART_460800_CNTR_ENABLE;
 253:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (!UART_460800_TXCLKGEN_DP) */
 254:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_TX_ENABLED) */
 255:Generated_Source\PSoC5/UART_460800.c **** 
 256:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_INTERNAL_CLOCK_USED)
 257:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_IntClock_Stop();   /* Disable the clock */
 255              		.loc 1 257 0
 256 001e FFF7FEFF 		bl	UART_460800_IntClock_Stop
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 10


 258:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_INTERNAL_CLOCK_USED) */
 259:Generated_Source\PSoC5/UART_460800.c **** 
 260:Generated_Source\PSoC5/UART_460800.c ****     /* Disable internal interrupt component */
 261:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RX_ENABLED || UART_460800_HD_ENABLED)
 262:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXSTATUS_ACTL_REG  &= (uint8) ~UART_460800_INT_ENABLE;
 257              		.loc 1 262 0
 258 0022 0E4A     		ldr	r2, .L12+4
 259 0024 0D4B     		ldr	r3, .L12+4
 260 0026 1B78     		ldrb	r3, [r3]
 261 0028 DBB2     		uxtb	r3, r3
 262 002a 23F01003 		bic	r3, r3, #16
 263 002e DBB2     		uxtb	r3, r3
 264 0030 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/UART_460800.c **** 
 264:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_RX_INTERRUPT_ENABLED)
 265:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_DisableRxInt();
 266:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_RX_INTERRUPT_ENABLED) */
 267:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_RX_ENABLED || UART_460800_HD_ENABLED) */
 268:Generated_Source\PSoC5/UART_460800.c **** 
 269:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_TX_ENABLED)
 270:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_TXSTATUS_ACTL_REG &= (uint8) ~UART_460800_INT_ENABLE;
 265              		.loc 1 270 0
 266 0032 0B4A     		ldr	r2, .L12+8
 267 0034 0A4B     		ldr	r3, .L12+8
 268 0036 1B78     		ldrb	r3, [r3]
 269 0038 DBB2     		uxtb	r3, r3
 270 003a 23F01003 		bic	r3, r3, #16
 271 003e DBB2     		uxtb	r3, r3
 272 0040 1370     		strb	r3, [r2]
 271:Generated_Source\PSoC5/UART_460800.c **** 
 272:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_TX_INTERRUPT_ENABLED)
 273:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_DisableTxInt();
 273              		.loc 1 273 0
 274 0042 084B     		ldr	r3, .L12+12
 275 0044 0822     		movs	r2, #8
 276 0046 1A60     		str	r2, [r3]
 274:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_TX_INTERRUPT_ENABLED) */
 275:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_TX_ENABLED) */
 276:Generated_Source\PSoC5/UART_460800.c **** 
 277:Generated_Source\PSoC5/UART_460800.c ****     CyExitCriticalSection(enableInterrupts);
 277              		.loc 1 277 0
 278 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 279 004a 1846     		mov	r0, r3
 280 004c FFF7FEFF 		bl	CyExitCriticalSection
 278:Generated_Source\PSoC5/UART_460800.c **** }
 281              		.loc 1 278 0
 282 0050 00BF     		nop
 283 0052 0837     		adds	r7, r7, #8
 284              		.cfi_def_cfa_offset 8
 285 0054 BD46     		mov	sp, r7
 286              		.cfi_def_cfa_register 13
 287              		@ sp needed
 288 0056 80BD     		pop	{r7, pc}
 289              	.L13:
 290              		.align	2
 291              	.L12:
 292 0058 99650040 		.word	1073767833
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 11


 293 005c 99640040 		.word	1073767577
 294 0060 94640040 		.word	1073767572
 295 0064 80E100E0 		.word	-536813184
 296              		.cfi_endproc
 297              	.LFE3:
 298              		.size	UART_460800_Stop, .-UART_460800_Stop
 299              		.section	.text.UART_460800_ReadControlRegister,"ax",%progbits
 300              		.align	2
 301              		.global	UART_460800_ReadControlRegister
 302              		.thumb
 303              		.thumb_func
 304              		.type	UART_460800_ReadControlRegister, %function
 305              	UART_460800_ReadControlRegister:
 306              	.LFB4:
 279:Generated_Source\PSoC5/UART_460800.c **** 
 280:Generated_Source\PSoC5/UART_460800.c **** 
 281:Generated_Source\PSoC5/UART_460800.c **** /*******************************************************************************
 282:Generated_Source\PSoC5/UART_460800.c **** * Function Name: UART_460800_ReadControlRegister
 283:Generated_Source\PSoC5/UART_460800.c **** ********************************************************************************
 284:Generated_Source\PSoC5/UART_460800.c **** *
 285:Generated_Source\PSoC5/UART_460800.c **** * Summary:
 286:Generated_Source\PSoC5/UART_460800.c **** *  Returns the current value of the control register.
 287:Generated_Source\PSoC5/UART_460800.c **** *
 288:Generated_Source\PSoC5/UART_460800.c **** * Parameters:
 289:Generated_Source\PSoC5/UART_460800.c **** *  None.
 290:Generated_Source\PSoC5/UART_460800.c **** *
 291:Generated_Source\PSoC5/UART_460800.c **** * Return:
 292:Generated_Source\PSoC5/UART_460800.c **** *  Contents of the control register.
 293:Generated_Source\PSoC5/UART_460800.c **** *
 294:Generated_Source\PSoC5/UART_460800.c **** *******************************************************************************/
 295:Generated_Source\PSoC5/UART_460800.c **** uint8 UART_460800_ReadControlRegister(void) 
 296:Generated_Source\PSoC5/UART_460800.c **** {
 307              		.loc 1 296 0
 308              		.cfi_startproc
 309              		@ args = 0, pretend = 0, frame = 0
 310              		@ frame_needed = 1, uses_anonymous_args = 0
 311              		@ link register save eliminated.
 312 0000 80B4     		push	{r7}
 313              		.cfi_def_cfa_offset 4
 314              		.cfi_offset 7, -4
 315 0002 00AF     		add	r7, sp, #0
 316              		.cfi_def_cfa_register 7
 297:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_CONTROL_REG_REMOVED)
 298:Generated_Source\PSoC5/UART_460800.c ****         return(0u);
 317              		.loc 1 298 0
 318 0004 0023     		movs	r3, #0
 299:Generated_Source\PSoC5/UART_460800.c ****     #else
 300:Generated_Source\PSoC5/UART_460800.c ****         return(UART_460800_CONTROL_REG);
 301:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_CONTROL_REG_REMOVED) */
 302:Generated_Source\PSoC5/UART_460800.c **** }
 319              		.loc 1 302 0
 320 0006 1846     		mov	r0, r3
 321 0008 BD46     		mov	sp, r7
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 000a 80BC     		pop	{r7}
 325              		.cfi_restore 7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 12


 326              		.cfi_def_cfa_offset 0
 327 000c 7047     		bx	lr
 328              		.cfi_endproc
 329              	.LFE4:
 330              		.size	UART_460800_ReadControlRegister, .-UART_460800_ReadControlRegister
 331 000e 00BF     		.section	.text.UART_460800_WriteControlRegister,"ax",%progbits
 332              		.align	2
 333              		.global	UART_460800_WriteControlRegister
 334              		.thumb
 335              		.thumb_func
 336              		.type	UART_460800_WriteControlRegister, %function
 337              	UART_460800_WriteControlRegister:
 338              	.LFB5:
 303:Generated_Source\PSoC5/UART_460800.c **** 
 304:Generated_Source\PSoC5/UART_460800.c **** 
 305:Generated_Source\PSoC5/UART_460800.c **** /*******************************************************************************
 306:Generated_Source\PSoC5/UART_460800.c **** * Function Name: UART_460800_WriteControlRegister
 307:Generated_Source\PSoC5/UART_460800.c **** ********************************************************************************
 308:Generated_Source\PSoC5/UART_460800.c **** *
 309:Generated_Source\PSoC5/UART_460800.c **** * Summary:
 310:Generated_Source\PSoC5/UART_460800.c **** *  Writes an 8-bit value into the control register
 311:Generated_Source\PSoC5/UART_460800.c **** *
 312:Generated_Source\PSoC5/UART_460800.c **** * Parameters:
 313:Generated_Source\PSoC5/UART_460800.c **** *  control:  control register value
 314:Generated_Source\PSoC5/UART_460800.c **** *
 315:Generated_Source\PSoC5/UART_460800.c **** * Return:
 316:Generated_Source\PSoC5/UART_460800.c **** *  None.
 317:Generated_Source\PSoC5/UART_460800.c **** *
 318:Generated_Source\PSoC5/UART_460800.c **** *******************************************************************************/
 319:Generated_Source\PSoC5/UART_460800.c **** void  UART_460800_WriteControlRegister(uint8 control) 
 320:Generated_Source\PSoC5/UART_460800.c **** {
 339              		.loc 1 320 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343              		@ link register save eliminated.
 344 0000 80B4     		push	{r7}
 345              		.cfi_def_cfa_offset 4
 346              		.cfi_offset 7, -4
 347 0002 83B0     		sub	sp, sp, #12
 348              		.cfi_def_cfa_offset 16
 349 0004 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 351 0006 0346     		mov	r3, r0
 352 0008 FB71     		strb	r3, [r7, #7]
 321:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_CONTROL_REG_REMOVED)
 322:Generated_Source\PSoC5/UART_460800.c ****         if(0u != control)
 323:Generated_Source\PSoC5/UART_460800.c ****         {
 324:Generated_Source\PSoC5/UART_460800.c ****             /* Suppress compiler warning */
 325:Generated_Source\PSoC5/UART_460800.c ****         }
 326:Generated_Source\PSoC5/UART_460800.c ****     #else
 327:Generated_Source\PSoC5/UART_460800.c ****        UART_460800_CONTROL_REG = control;
 328:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_CONTROL_REG_REMOVED) */
 329:Generated_Source\PSoC5/UART_460800.c **** }
 353              		.loc 1 329 0
 354 000a 00BF     		nop
 355 000c 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 13


 356              		.cfi_def_cfa_offset 4
 357 000e BD46     		mov	sp, r7
 358              		.cfi_def_cfa_register 13
 359              		@ sp needed
 360 0010 80BC     		pop	{r7}
 361              		.cfi_restore 7
 362              		.cfi_def_cfa_offset 0
 363 0012 7047     		bx	lr
 364              		.cfi_endproc
 365              	.LFE5:
 366              		.size	UART_460800_WriteControlRegister, .-UART_460800_WriteControlRegister
 367              		.section	.text.UART_460800_SetRxInterruptMode,"ax",%progbits
 368              		.align	2
 369              		.global	UART_460800_SetRxInterruptMode
 370              		.thumb
 371              		.thumb_func
 372              		.type	UART_460800_SetRxInterruptMode, %function
 373              	UART_460800_SetRxInterruptMode:
 374              	.LFB6:
 330:Generated_Source\PSoC5/UART_460800.c **** 
 331:Generated_Source\PSoC5/UART_460800.c **** 
 332:Generated_Source\PSoC5/UART_460800.c **** #if(UART_460800_RX_ENABLED || UART_460800_HD_ENABLED)
 333:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 334:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_SetRxInterruptMode
 335:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 336:Generated_Source\PSoC5/UART_460800.c ****     *
 337:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 338:Generated_Source\PSoC5/UART_460800.c ****     *  Configures the RX interrupt sources enabled.
 339:Generated_Source\PSoC5/UART_460800.c ****     *
 340:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 341:Generated_Source\PSoC5/UART_460800.c ****     *  IntSrc:  Bit field containing the RX interrupts to enable. Based on the 
 342:Generated_Source\PSoC5/UART_460800.c ****     *  bit-field arrangement of the status register. This value must be a 
 343:Generated_Source\PSoC5/UART_460800.c ****     *  combination of status register bit-masks shown below:
 344:Generated_Source\PSoC5/UART_460800.c ****     *      UART_460800_RX_STS_FIFO_NOTEMPTY    Interrupt on byte received.
 345:Generated_Source\PSoC5/UART_460800.c ****     *      UART_460800_RX_STS_PAR_ERROR        Interrupt on parity error.
 346:Generated_Source\PSoC5/UART_460800.c ****     *      UART_460800_RX_STS_STOP_ERROR       Interrupt on stop error.
 347:Generated_Source\PSoC5/UART_460800.c ****     *      UART_460800_RX_STS_BREAK            Interrupt on break.
 348:Generated_Source\PSoC5/UART_460800.c ****     *      UART_460800_RX_STS_OVERRUN          Interrupt on overrun error.
 349:Generated_Source\PSoC5/UART_460800.c ****     *      UART_460800_RX_STS_ADDR_MATCH       Interrupt on address match.
 350:Generated_Source\PSoC5/UART_460800.c ****     *      UART_460800_RX_STS_MRKSPC           Interrupt on address detect.
 351:Generated_Source\PSoC5/UART_460800.c ****     *
 352:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 353:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 354:Generated_Source\PSoC5/UART_460800.c ****     *
 355:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
 356:Generated_Source\PSoC5/UART_460800.c ****     *  Enables the output of specific status bits to the interrupt controller
 357:Generated_Source\PSoC5/UART_460800.c ****     *
 358:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 359:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_SetRxInterruptMode(uint8 intSrc) 
 360:Generated_Source\PSoC5/UART_460800.c ****     {
 375              		.loc 1 360 0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 8
 378              		@ frame_needed = 1, uses_anonymous_args = 0
 379              		@ link register save eliminated.
 380 0000 80B4     		push	{r7}
 381              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 14


 382              		.cfi_offset 7, -4
 383 0002 83B0     		sub	sp, sp, #12
 384              		.cfi_def_cfa_offset 16
 385 0004 00AF     		add	r7, sp, #0
 386              		.cfi_def_cfa_register 7
 387 0006 0346     		mov	r3, r0
 388 0008 FB71     		strb	r3, [r7, #7]
 361:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXSTATUS_MASK_REG  = intSrc;
 389              		.loc 1 361 0
 390 000a 044A     		ldr	r2, .L18
 391 000c FB79     		ldrb	r3, [r7, #7]
 392 000e 1370     		strb	r3, [r2]
 362:Generated_Source\PSoC5/UART_460800.c ****     }
 393              		.loc 1 362 0
 394 0010 00BF     		nop
 395 0012 0C37     		adds	r7, r7, #12
 396              		.cfi_def_cfa_offset 4
 397 0014 BD46     		mov	sp, r7
 398              		.cfi_def_cfa_register 13
 399              		@ sp needed
 400 0016 80BC     		pop	{r7}
 401              		.cfi_restore 7
 402              		.cfi_def_cfa_offset 0
 403 0018 7047     		bx	lr
 404              	.L19:
 405 001a 00BF     		.align	2
 406              	.L18:
 407 001c 89640040 		.word	1073767561
 408              		.cfi_endproc
 409              	.LFE6:
 410              		.size	UART_460800_SetRxInterruptMode, .-UART_460800_SetRxInterruptMode
 411              		.section	.text.UART_460800_ReadRxData,"ax",%progbits
 412              		.align	2
 413              		.global	UART_460800_ReadRxData
 414              		.thumb
 415              		.thumb_func
 416              		.type	UART_460800_ReadRxData, %function
 417              	UART_460800_ReadRxData:
 418              	.LFB7:
 363:Generated_Source\PSoC5/UART_460800.c **** 
 364:Generated_Source\PSoC5/UART_460800.c **** 
 365:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 366:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_ReadRxData
 367:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 368:Generated_Source\PSoC5/UART_460800.c ****     *
 369:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 370:Generated_Source\PSoC5/UART_460800.c ****     *  Returns the next byte of received data. This function returns data without
 371:Generated_Source\PSoC5/UART_460800.c ****     *  checking the status. You must check the status separately.
 372:Generated_Source\PSoC5/UART_460800.c ****     *
 373:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 374:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 375:Generated_Source\PSoC5/UART_460800.c ****     *
 376:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 377:Generated_Source\PSoC5/UART_460800.c ****     *  Received data from RX register
 378:Generated_Source\PSoC5/UART_460800.c ****     *
 379:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
 380:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBuffer - RAM buffer pointer for save received data.
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 15


 381:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferWrite - cyclic index for write to rxBuffer,
 382:Generated_Source\PSoC5/UART_460800.c ****     *     checked to identify new data.
 383:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferRead - cyclic index for read from rxBuffer,
 384:Generated_Source\PSoC5/UART_460800.c ****     *     incremented after each byte has been read from buffer.
 385:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferLoopDetect - cleared if loop condition was detected
 386:Generated_Source\PSoC5/UART_460800.c ****     *     in RX ISR.
 387:Generated_Source\PSoC5/UART_460800.c ****     *
 388:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
 389:Generated_Source\PSoC5/UART_460800.c ****     *  No.
 390:Generated_Source\PSoC5/UART_460800.c ****     *
 391:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 392:Generated_Source\PSoC5/UART_460800.c ****     uint8 UART_460800_ReadRxData(void) 
 393:Generated_Source\PSoC5/UART_460800.c ****     {
 419              		.loc 1 393 0
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 8
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423              		@ link register save eliminated.
 424 0000 80B4     		push	{r7}
 425              		.cfi_def_cfa_offset 4
 426              		.cfi_offset 7, -4
 427 0002 83B0     		sub	sp, sp, #12
 428              		.cfi_def_cfa_offset 16
 429 0004 00AF     		add	r7, sp, #0
 430              		.cfi_def_cfa_register 7
 394:Generated_Source\PSoC5/UART_460800.c ****         uint8 rxData;
 395:Generated_Source\PSoC5/UART_460800.c **** 
 396:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RX_INTERRUPT_ENABLED)
 397:Generated_Source\PSoC5/UART_460800.c **** 
 398:Generated_Source\PSoC5/UART_460800.c ****         uint8 locRxBufferRead;
 399:Generated_Source\PSoC5/UART_460800.c ****         uint8 locRxBufferWrite;
 400:Generated_Source\PSoC5/UART_460800.c **** 
 401:Generated_Source\PSoC5/UART_460800.c ****         /* Protect variables that could change on interrupt */
 402:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_DisableRxInt();
 403:Generated_Source\PSoC5/UART_460800.c **** 
 404:Generated_Source\PSoC5/UART_460800.c ****         locRxBufferRead  = UART_460800_rxBufferRead;
 405:Generated_Source\PSoC5/UART_460800.c ****         locRxBufferWrite = UART_460800_rxBufferWrite;
 406:Generated_Source\PSoC5/UART_460800.c **** 
 407:Generated_Source\PSoC5/UART_460800.c ****         if( (UART_460800_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 408:Generated_Source\PSoC5/UART_460800.c ****         {
 409:Generated_Source\PSoC5/UART_460800.c ****             rxData = UART_460800_rxBuffer[locRxBufferRead];
 410:Generated_Source\PSoC5/UART_460800.c ****             locRxBufferRead++;
 411:Generated_Source\PSoC5/UART_460800.c **** 
 412:Generated_Source\PSoC5/UART_460800.c ****             if(locRxBufferRead >= UART_460800_RX_BUFFER_SIZE)
 413:Generated_Source\PSoC5/UART_460800.c ****             {
 414:Generated_Source\PSoC5/UART_460800.c ****                 locRxBufferRead = 0u;
 415:Generated_Source\PSoC5/UART_460800.c ****             }
 416:Generated_Source\PSoC5/UART_460800.c ****             /* Update the real pointer */
 417:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_rxBufferRead = locRxBufferRead;
 418:Generated_Source\PSoC5/UART_460800.c **** 
 419:Generated_Source\PSoC5/UART_460800.c ****             if(UART_460800_rxBufferLoopDetect != 0u)
 420:Generated_Source\PSoC5/UART_460800.c ****             {
 421:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_rxBufferLoopDetect = 0u;
 422:Generated_Source\PSoC5/UART_460800.c ****                 #if ((UART_460800_RX_INTERRUPT_ENABLED) && (UART_460800_FLOW_CONTROL != 0u))
 423:Generated_Source\PSoC5/UART_460800.c ****                     /* When Hardware Flow Control selected - return RX mask */
 424:Generated_Source\PSoC5/UART_460800.c ****                     #if( UART_460800_HD_ENABLED )
 425:Generated_Source\PSoC5/UART_460800.c ****                         if((UART_460800_CONTROL_REG & UART_460800_CTRL_HD_SEND) == 0u)
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 16


 426:Generated_Source\PSoC5/UART_460800.c ****                         {   /* In Half duplex mode return RX mask only in RX
 427:Generated_Source\PSoC5/UART_460800.c ****                             *  configuration set, otherwise
 428:Generated_Source\PSoC5/UART_460800.c ****                             *  mask will be returned in LoadRxConfig() API.
 429:Generated_Source\PSoC5/UART_460800.c ****                             */
 430:Generated_Source\PSoC5/UART_460800.c ****                             UART_460800_RXSTATUS_MASK_REG  |= UART_460800_RX_STS_FIFO_NOTEMPTY;
 431:Generated_Source\PSoC5/UART_460800.c ****                         }
 432:Generated_Source\PSoC5/UART_460800.c ****                     #else
 433:Generated_Source\PSoC5/UART_460800.c ****                         UART_460800_RXSTATUS_MASK_REG  |= UART_460800_RX_STS_FIFO_NOTEMPTY;
 434:Generated_Source\PSoC5/UART_460800.c ****                     #endif /* end UART_460800_HD_ENABLED */
 435:Generated_Source\PSoC5/UART_460800.c ****                 #endif /* ((UART_460800_RX_INTERRUPT_ENABLED) && (UART_460800_FLOW_CONTROL != 0u)) 
 436:Generated_Source\PSoC5/UART_460800.c ****             }
 437:Generated_Source\PSoC5/UART_460800.c ****         }
 438:Generated_Source\PSoC5/UART_460800.c ****         else
 439:Generated_Source\PSoC5/UART_460800.c ****         {   /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 440:Generated_Source\PSoC5/UART_460800.c ****             rxData = UART_460800_RXDATA_REG;
 441:Generated_Source\PSoC5/UART_460800.c ****         }
 442:Generated_Source\PSoC5/UART_460800.c **** 
 443:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_EnableRxInt();
 444:Generated_Source\PSoC5/UART_460800.c **** 
 445:Generated_Source\PSoC5/UART_460800.c ****     #else
 446:Generated_Source\PSoC5/UART_460800.c **** 
 447:Generated_Source\PSoC5/UART_460800.c ****         /* Needs to check status for RX_STS_FIFO_NOTEMPTY bit */
 448:Generated_Source\PSoC5/UART_460800.c ****         rxData = UART_460800_RXDATA_REG;
 431              		.loc 1 448 0
 432 0006 044B     		ldr	r3, .L22
 433 0008 1B78     		ldrb	r3, [r3]
 434 000a FB71     		strb	r3, [r7, #7]
 449:Generated_Source\PSoC5/UART_460800.c **** 
 450:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_RX_INTERRUPT_ENABLED) */
 451:Generated_Source\PSoC5/UART_460800.c **** 
 452:Generated_Source\PSoC5/UART_460800.c ****         return(rxData);
 435              		.loc 1 452 0
 436 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 453:Generated_Source\PSoC5/UART_460800.c ****     }
 437              		.loc 1 453 0
 438 000e 1846     		mov	r0, r3
 439 0010 0C37     		adds	r7, r7, #12
 440              		.cfi_def_cfa_offset 4
 441 0012 BD46     		mov	sp, r7
 442              		.cfi_def_cfa_register 13
 443              		@ sp needed
 444 0014 80BC     		pop	{r7}
 445              		.cfi_restore 7
 446              		.cfi_def_cfa_offset 0
 447 0016 7047     		bx	lr
 448              	.L23:
 449              		.align	2
 450              	.L22:
 451 0018 49650040 		.word	1073767753
 452              		.cfi_endproc
 453              	.LFE7:
 454              		.size	UART_460800_ReadRxData, .-UART_460800_ReadRxData
 455              		.section	.text.UART_460800_ReadRxStatus,"ax",%progbits
 456              		.align	2
 457              		.global	UART_460800_ReadRxStatus
 458              		.thumb
 459              		.thumb_func
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 17


 460              		.type	UART_460800_ReadRxStatus, %function
 461              	UART_460800_ReadRxStatus:
 462              	.LFB8:
 454:Generated_Source\PSoC5/UART_460800.c **** 
 455:Generated_Source\PSoC5/UART_460800.c **** 
 456:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 457:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_ReadRxStatus
 458:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 459:Generated_Source\PSoC5/UART_460800.c ****     *
 460:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 461:Generated_Source\PSoC5/UART_460800.c ****     *  Returns the current state of the receiver status register and the software
 462:Generated_Source\PSoC5/UART_460800.c ****     *  buffer overflow status.
 463:Generated_Source\PSoC5/UART_460800.c ****     *
 464:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 465:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 466:Generated_Source\PSoC5/UART_460800.c ****     *
 467:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 468:Generated_Source\PSoC5/UART_460800.c ****     *  Current state of the status register.
 469:Generated_Source\PSoC5/UART_460800.c ****     *
 470:Generated_Source\PSoC5/UART_460800.c ****     * Side Effect:
 471:Generated_Source\PSoC5/UART_460800.c ****     *  All status register bits are clear-on-read except
 472:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_RX_STS_FIFO_NOTEMPTY.
 473:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_RX_STS_FIFO_NOTEMPTY clears immediately after RX data
 474:Generated_Source\PSoC5/UART_460800.c ****     *  register read.
 475:Generated_Source\PSoC5/UART_460800.c ****     *
 476:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
 477:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferOverflow - used to indicate overload condition.
 478:Generated_Source\PSoC5/UART_460800.c ****     *   It set to one in RX interrupt when there isn't free space in
 479:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_rxBufferRead to write new data. This condition returned
 480:Generated_Source\PSoC5/UART_460800.c ****     *   and cleared to zero by this API as an
 481:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_RX_STS_SOFT_BUFF_OVER bit along with RX Status register
 482:Generated_Source\PSoC5/UART_460800.c ****     *   bits.
 483:Generated_Source\PSoC5/UART_460800.c ****     *
 484:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 485:Generated_Source\PSoC5/UART_460800.c ****     uint8 UART_460800_ReadRxStatus(void) 
 486:Generated_Source\PSoC5/UART_460800.c ****     {
 463              		.loc 1 486 0
 464              		.cfi_startproc
 465              		@ args = 0, pretend = 0, frame = 8
 466              		@ frame_needed = 1, uses_anonymous_args = 0
 467              		@ link register save eliminated.
 468 0000 80B4     		push	{r7}
 469              		.cfi_def_cfa_offset 4
 470              		.cfi_offset 7, -4
 471 0002 83B0     		sub	sp, sp, #12
 472              		.cfi_def_cfa_offset 16
 473 0004 00AF     		add	r7, sp, #0
 474              		.cfi_def_cfa_register 7
 487:Generated_Source\PSoC5/UART_460800.c ****         uint8 status;
 488:Generated_Source\PSoC5/UART_460800.c **** 
 489:Generated_Source\PSoC5/UART_460800.c ****         status = UART_460800_RXSTATUS_REG & UART_460800_RX_HW_MASK;
 475              		.loc 1 489 0
 476 0006 064B     		ldr	r3, .L26
 477 0008 1B78     		ldrb	r3, [r3]
 478 000a DBB2     		uxtb	r3, r3
 479 000c 03F07F03 		and	r3, r3, #127
 480 0010 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 18


 490:Generated_Source\PSoC5/UART_460800.c **** 
 491:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RX_INTERRUPT_ENABLED)
 492:Generated_Source\PSoC5/UART_460800.c ****         if(UART_460800_rxBufferOverflow != 0u)
 493:Generated_Source\PSoC5/UART_460800.c ****         {
 494:Generated_Source\PSoC5/UART_460800.c ****             status |= UART_460800_RX_STS_SOFT_BUFF_OVER;
 495:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_rxBufferOverflow = 0u;
 496:Generated_Source\PSoC5/UART_460800.c ****         }
 497:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_RX_INTERRUPT_ENABLED) */
 498:Generated_Source\PSoC5/UART_460800.c **** 
 499:Generated_Source\PSoC5/UART_460800.c ****         return(status);
 481              		.loc 1 499 0
 482 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 500:Generated_Source\PSoC5/UART_460800.c ****     }
 483              		.loc 1 500 0
 484 0014 1846     		mov	r0, r3
 485 0016 0C37     		adds	r7, r7, #12
 486              		.cfi_def_cfa_offset 4
 487 0018 BD46     		mov	sp, r7
 488              		.cfi_def_cfa_register 13
 489              		@ sp needed
 490 001a 80BC     		pop	{r7}
 491              		.cfi_restore 7
 492              		.cfi_def_cfa_offset 0
 493 001c 7047     		bx	lr
 494              	.L27:
 495 001e 00BF     		.align	2
 496              	.L26:
 497 0020 69640040 		.word	1073767529
 498              		.cfi_endproc
 499              	.LFE8:
 500              		.size	UART_460800_ReadRxStatus, .-UART_460800_ReadRxStatus
 501              		.section	.text.UART_460800_GetChar,"ax",%progbits
 502              		.align	2
 503              		.global	UART_460800_GetChar
 504              		.thumb
 505              		.thumb_func
 506              		.type	UART_460800_GetChar, %function
 507              	UART_460800_GetChar:
 508              	.LFB9:
 501:Generated_Source\PSoC5/UART_460800.c **** 
 502:Generated_Source\PSoC5/UART_460800.c **** 
 503:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 504:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_GetChar
 505:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 506:Generated_Source\PSoC5/UART_460800.c ****     *
 507:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 508:Generated_Source\PSoC5/UART_460800.c ****     *  Returns the last received byte of data. UART_460800_GetChar() is
 509:Generated_Source\PSoC5/UART_460800.c ****     *  designed for ASCII characters and returns a uint8 where 1 to 255 are values
 510:Generated_Source\PSoC5/UART_460800.c ****     *  for valid characters and 0 indicates an error occurred or no data is present.
 511:Generated_Source\PSoC5/UART_460800.c ****     *
 512:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 513:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 514:Generated_Source\PSoC5/UART_460800.c ****     *
 515:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 516:Generated_Source\PSoC5/UART_460800.c ****     *  Character read from UART RX buffer. ASCII characters from 1 to 255 are valid.
 517:Generated_Source\PSoC5/UART_460800.c ****     *  A returned zero signifies an error condition or no data available.
 518:Generated_Source\PSoC5/UART_460800.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 19


 519:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
 520:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBuffer - RAM buffer pointer for save received data.
 521:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferWrite - cyclic index for write to rxBuffer,
 522:Generated_Source\PSoC5/UART_460800.c ****     *     checked to identify new data.
 523:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferRead - cyclic index for read from rxBuffer,
 524:Generated_Source\PSoC5/UART_460800.c ****     *     incremented after each byte has been read from buffer.
 525:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferLoopDetect - cleared if loop condition was detected
 526:Generated_Source\PSoC5/UART_460800.c ****     *     in RX ISR.
 527:Generated_Source\PSoC5/UART_460800.c ****     *
 528:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
 529:Generated_Source\PSoC5/UART_460800.c ****     *  No.
 530:Generated_Source\PSoC5/UART_460800.c ****     *
 531:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 532:Generated_Source\PSoC5/UART_460800.c ****     uint8 UART_460800_GetChar(void) 
 533:Generated_Source\PSoC5/UART_460800.c ****     {
 509              		.loc 1 533 0
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 8
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513              		@ link register save eliminated.
 514 0000 80B4     		push	{r7}
 515              		.cfi_def_cfa_offset 4
 516              		.cfi_offset 7, -4
 517 0002 83B0     		sub	sp, sp, #12
 518              		.cfi_def_cfa_offset 16
 519 0004 00AF     		add	r7, sp, #0
 520              		.cfi_def_cfa_register 7
 534:Generated_Source\PSoC5/UART_460800.c ****         uint8 rxData = 0u;
 521              		.loc 1 534 0
 522 0006 0023     		movs	r3, #0
 523 0008 FB71     		strb	r3, [r7, #7]
 535:Generated_Source\PSoC5/UART_460800.c ****         uint8 rxStatus;
 536:Generated_Source\PSoC5/UART_460800.c **** 
 537:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RX_INTERRUPT_ENABLED)
 538:Generated_Source\PSoC5/UART_460800.c ****         uint8 locRxBufferRead;
 539:Generated_Source\PSoC5/UART_460800.c ****         uint8 locRxBufferWrite;
 540:Generated_Source\PSoC5/UART_460800.c **** 
 541:Generated_Source\PSoC5/UART_460800.c ****         /* Protect variables that could change on interrupt */
 542:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_DisableRxInt();
 543:Generated_Source\PSoC5/UART_460800.c **** 
 544:Generated_Source\PSoC5/UART_460800.c ****         locRxBufferRead  = UART_460800_rxBufferRead;
 545:Generated_Source\PSoC5/UART_460800.c ****         locRxBufferWrite = UART_460800_rxBufferWrite;
 546:Generated_Source\PSoC5/UART_460800.c **** 
 547:Generated_Source\PSoC5/UART_460800.c ****         if( (UART_460800_rxBufferLoopDetect != 0u) || (locRxBufferRead != locRxBufferWrite) )
 548:Generated_Source\PSoC5/UART_460800.c ****         {
 549:Generated_Source\PSoC5/UART_460800.c ****             rxData = UART_460800_rxBuffer[locRxBufferRead];
 550:Generated_Source\PSoC5/UART_460800.c ****             locRxBufferRead++;
 551:Generated_Source\PSoC5/UART_460800.c ****             if(locRxBufferRead >= UART_460800_RX_BUFFER_SIZE)
 552:Generated_Source\PSoC5/UART_460800.c ****             {
 553:Generated_Source\PSoC5/UART_460800.c ****                 locRxBufferRead = 0u;
 554:Generated_Source\PSoC5/UART_460800.c ****             }
 555:Generated_Source\PSoC5/UART_460800.c ****             /* Update the real pointer */
 556:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_rxBufferRead = locRxBufferRead;
 557:Generated_Source\PSoC5/UART_460800.c **** 
 558:Generated_Source\PSoC5/UART_460800.c ****             if(UART_460800_rxBufferLoopDetect != 0u)
 559:Generated_Source\PSoC5/UART_460800.c ****             {
 560:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_rxBufferLoopDetect = 0u;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 20


 561:Generated_Source\PSoC5/UART_460800.c ****                 #if( (UART_460800_RX_INTERRUPT_ENABLED) && (UART_460800_FLOW_CONTROL != 0u) )
 562:Generated_Source\PSoC5/UART_460800.c ****                     /* When Hardware Flow Control selected - return RX mask */
 563:Generated_Source\PSoC5/UART_460800.c ****                     #if( UART_460800_HD_ENABLED )
 564:Generated_Source\PSoC5/UART_460800.c ****                         if((UART_460800_CONTROL_REG & UART_460800_CTRL_HD_SEND) == 0u)
 565:Generated_Source\PSoC5/UART_460800.c ****                         {   /* In Half duplex mode return RX mask only if
 566:Generated_Source\PSoC5/UART_460800.c ****                             *  RX configuration set, otherwise
 567:Generated_Source\PSoC5/UART_460800.c ****                             *  mask will be returned in LoadRxConfig() API.
 568:Generated_Source\PSoC5/UART_460800.c ****                             */
 569:Generated_Source\PSoC5/UART_460800.c ****                             UART_460800_RXSTATUS_MASK_REG |= UART_460800_RX_STS_FIFO_NOTEMPTY;
 570:Generated_Source\PSoC5/UART_460800.c ****                         }
 571:Generated_Source\PSoC5/UART_460800.c ****                     #else
 572:Generated_Source\PSoC5/UART_460800.c ****                         UART_460800_RXSTATUS_MASK_REG |= UART_460800_RX_STS_FIFO_NOTEMPTY;
 573:Generated_Source\PSoC5/UART_460800.c ****                     #endif /* end UART_460800_HD_ENABLED */
 574:Generated_Source\PSoC5/UART_460800.c ****                 #endif /* UART_460800_RX_INTERRUPT_ENABLED and Hardware flow control*/
 575:Generated_Source\PSoC5/UART_460800.c ****             }
 576:Generated_Source\PSoC5/UART_460800.c **** 
 577:Generated_Source\PSoC5/UART_460800.c ****         }
 578:Generated_Source\PSoC5/UART_460800.c ****         else
 579:Generated_Source\PSoC5/UART_460800.c ****         {   rxStatus = UART_460800_RXSTATUS_REG;
 580:Generated_Source\PSoC5/UART_460800.c ****             if((rxStatus & UART_460800_RX_STS_FIFO_NOTEMPTY) != 0u)
 581:Generated_Source\PSoC5/UART_460800.c ****             {   /* Read received data from FIFO */
 582:Generated_Source\PSoC5/UART_460800.c ****                 rxData = UART_460800_RXDATA_REG;
 583:Generated_Source\PSoC5/UART_460800.c ****                 /*Check status on error*/
 584:Generated_Source\PSoC5/UART_460800.c ****                 if((rxStatus & (UART_460800_RX_STS_BREAK | UART_460800_RX_STS_PAR_ERROR |
 585:Generated_Source\PSoC5/UART_460800.c ****                                 UART_460800_RX_STS_STOP_ERROR | UART_460800_RX_STS_OVERRUN)) != 0u)
 586:Generated_Source\PSoC5/UART_460800.c ****                 {
 587:Generated_Source\PSoC5/UART_460800.c ****                     rxData = 0u;
 588:Generated_Source\PSoC5/UART_460800.c ****                 }
 589:Generated_Source\PSoC5/UART_460800.c ****             }
 590:Generated_Source\PSoC5/UART_460800.c ****         }
 591:Generated_Source\PSoC5/UART_460800.c **** 
 592:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_EnableRxInt();
 593:Generated_Source\PSoC5/UART_460800.c **** 
 594:Generated_Source\PSoC5/UART_460800.c ****     #else
 595:Generated_Source\PSoC5/UART_460800.c **** 
 596:Generated_Source\PSoC5/UART_460800.c ****         rxStatus =UART_460800_RXSTATUS_REG;
 524              		.loc 1 596 0
 525 000a 0C4B     		ldr	r3, .L31
 526 000c 1B78     		ldrb	r3, [r3]
 527 000e BB71     		strb	r3, [r7, #6]
 597:Generated_Source\PSoC5/UART_460800.c ****         if((rxStatus & UART_460800_RX_STS_FIFO_NOTEMPTY) != 0u)
 528              		.loc 1 597 0
 529 0010 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 530 0012 03F02003 		and	r3, r3, #32
 531 0016 002B     		cmp	r3, #0
 532 0018 09D0     		beq	.L29
 598:Generated_Source\PSoC5/UART_460800.c ****         {
 599:Generated_Source\PSoC5/UART_460800.c ****             /* Read received data from FIFO */
 600:Generated_Source\PSoC5/UART_460800.c ****             rxData = UART_460800_RXDATA_REG;
 533              		.loc 1 600 0
 534 001a 094B     		ldr	r3, .L31+4
 535 001c 1B78     		ldrb	r3, [r3]
 536 001e FB71     		strb	r3, [r7, #7]
 601:Generated_Source\PSoC5/UART_460800.c **** 
 602:Generated_Source\PSoC5/UART_460800.c ****             /*Check status on error*/
 603:Generated_Source\PSoC5/UART_460800.c ****             if((rxStatus & (UART_460800_RX_STS_BREAK | UART_460800_RX_STS_PAR_ERROR |
 604:Generated_Source\PSoC5/UART_460800.c ****                             UART_460800_RX_STS_STOP_ERROR | UART_460800_RX_STS_OVERRUN)) != 0u)
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 21


 537              		.loc 1 604 0
 538 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 539 0022 03F01E03 		and	r3, r3, #30
 603:Generated_Source\PSoC5/UART_460800.c ****                             UART_460800_RX_STS_STOP_ERROR | UART_460800_RX_STS_OVERRUN)) != 0u)
 540              		.loc 1 603 0
 541 0026 002B     		cmp	r3, #0
 542 0028 01D0     		beq	.L29
 605:Generated_Source\PSoC5/UART_460800.c ****             {
 606:Generated_Source\PSoC5/UART_460800.c ****                 rxData = 0u;
 543              		.loc 1 606 0
 544 002a 0023     		movs	r3, #0
 545 002c FB71     		strb	r3, [r7, #7]
 546              	.L29:
 607:Generated_Source\PSoC5/UART_460800.c ****             }
 608:Generated_Source\PSoC5/UART_460800.c ****         }
 609:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_RX_INTERRUPT_ENABLED) */
 610:Generated_Source\PSoC5/UART_460800.c **** 
 611:Generated_Source\PSoC5/UART_460800.c ****         return(rxData);
 547              		.loc 1 611 0
 548 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 612:Generated_Source\PSoC5/UART_460800.c ****     }
 549              		.loc 1 612 0
 550 0030 1846     		mov	r0, r3
 551 0032 0C37     		adds	r7, r7, #12
 552              		.cfi_def_cfa_offset 4
 553 0034 BD46     		mov	sp, r7
 554              		.cfi_def_cfa_register 13
 555              		@ sp needed
 556 0036 80BC     		pop	{r7}
 557              		.cfi_restore 7
 558              		.cfi_def_cfa_offset 0
 559 0038 7047     		bx	lr
 560              	.L32:
 561 003a 00BF     		.align	2
 562              	.L31:
 563 003c 69640040 		.word	1073767529
 564 0040 49650040 		.word	1073767753
 565              		.cfi_endproc
 566              	.LFE9:
 567              		.size	UART_460800_GetChar, .-UART_460800_GetChar
 568              		.section	.text.UART_460800_GetByte,"ax",%progbits
 569              		.align	2
 570              		.global	UART_460800_GetByte
 571              		.thumb
 572              		.thumb_func
 573              		.type	UART_460800_GetByte, %function
 574              	UART_460800_GetByte:
 575              	.LFB10:
 613:Generated_Source\PSoC5/UART_460800.c **** 
 614:Generated_Source\PSoC5/UART_460800.c **** 
 615:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 616:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_GetByte
 617:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 618:Generated_Source\PSoC5/UART_460800.c ****     *
 619:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 620:Generated_Source\PSoC5/UART_460800.c ****     *  Reads UART RX buffer immediately, returns received character and error
 621:Generated_Source\PSoC5/UART_460800.c ****     *  condition.
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 22


 622:Generated_Source\PSoC5/UART_460800.c ****     *
 623:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 624:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 625:Generated_Source\PSoC5/UART_460800.c ****     *
 626:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 627:Generated_Source\PSoC5/UART_460800.c ****     *  MSB contains status and LSB contains UART RX data. If the MSB is nonzero,
 628:Generated_Source\PSoC5/UART_460800.c ****     *  an error has occurred.
 629:Generated_Source\PSoC5/UART_460800.c ****     *
 630:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
 631:Generated_Source\PSoC5/UART_460800.c ****     *  No.
 632:Generated_Source\PSoC5/UART_460800.c ****     *
 633:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 634:Generated_Source\PSoC5/UART_460800.c ****     uint16 UART_460800_GetByte(void) 
 635:Generated_Source\PSoC5/UART_460800.c ****     {
 576              		.loc 1 635 0
 577              		.cfi_startproc
 578              		@ args = 0, pretend = 0, frame = 0
 579              		@ frame_needed = 1, uses_anonymous_args = 0
 580 0000 98B5     		push	{r3, r4, r7, lr}
 581              		.cfi_def_cfa_offset 16
 582              		.cfi_offset 3, -16
 583              		.cfi_offset 4, -12
 584              		.cfi_offset 7, -8
 585              		.cfi_offset 14, -4
 586 0002 00AF     		add	r7, sp, #0
 587              		.cfi_def_cfa_register 7
 636:Generated_Source\PSoC5/UART_460800.c ****         
 637:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RX_INTERRUPT_ENABLED)
 638:Generated_Source\PSoC5/UART_460800.c ****         uint16 locErrorStatus;
 639:Generated_Source\PSoC5/UART_460800.c ****         /* Protect variables that could change on interrupt */
 640:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_DisableRxInt();
 641:Generated_Source\PSoC5/UART_460800.c ****         locErrorStatus = (uint16)UART_460800_errorStatus;
 642:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_errorStatus = 0u;
 643:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_EnableRxInt();
 644:Generated_Source\PSoC5/UART_460800.c ****         return ( (uint16)(locErrorStatus << 8u) | UART_460800_ReadRxData() );
 645:Generated_Source\PSoC5/UART_460800.c ****     #else
 646:Generated_Source\PSoC5/UART_460800.c ****         return ( ((uint16)UART_460800_ReadRxStatus() << 8u) | UART_460800_ReadRxData() );
 588              		.loc 1 646 0
 589 0004 FFF7FEFF 		bl	UART_460800_ReadRxStatus
 590 0008 0346     		mov	r3, r0
 591 000a 1B02     		lsls	r3, r3, #8
 592 000c 1CB2     		sxth	r4, r3
 593 000e FFF7FEFF 		bl	UART_460800_ReadRxData
 594 0012 0346     		mov	r3, r0
 595 0014 1BB2     		sxth	r3, r3
 596 0016 2343     		orrs	r3, r3, r4
 597 0018 1BB2     		sxth	r3, r3
 598 001a 9BB2     		uxth	r3, r3
 647:Generated_Source\PSoC5/UART_460800.c ****     #endif /* UART_460800_RX_INTERRUPT_ENABLED */
 648:Generated_Source\PSoC5/UART_460800.c ****         
 649:Generated_Source\PSoC5/UART_460800.c ****     }
 599              		.loc 1 649 0
 600 001c 1846     		mov	r0, r3
 601 001e 98BD     		pop	{r3, r4, r7, pc}
 602              		.cfi_endproc
 603              	.LFE10:
 604              		.size	UART_460800_GetByte, .-UART_460800_GetByte
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 23


 605              		.section	.text.UART_460800_GetRxBufferSize,"ax",%progbits
 606              		.align	2
 607              		.global	UART_460800_GetRxBufferSize
 608              		.thumb
 609              		.thumb_func
 610              		.type	UART_460800_GetRxBufferSize, %function
 611              	UART_460800_GetRxBufferSize:
 612              	.LFB11:
 650:Generated_Source\PSoC5/UART_460800.c **** 
 651:Generated_Source\PSoC5/UART_460800.c **** 
 652:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 653:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_GetRxBufferSize
 654:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 655:Generated_Source\PSoC5/UART_460800.c ****     *
 656:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 657:Generated_Source\PSoC5/UART_460800.c ****     *  Returns the number of received bytes available in the RX buffer.
 658:Generated_Source\PSoC5/UART_460800.c ****     *  * RX software buffer is disabled (RX Buffer Size parameter is equal to 4): 
 659:Generated_Source\PSoC5/UART_460800.c ****     *    returns 0 for empty RX FIFO or 1 for not empty RX FIFO.
 660:Generated_Source\PSoC5/UART_460800.c ****     *  * RX software buffer is enabled: returns the number of bytes available in 
 661:Generated_Source\PSoC5/UART_460800.c ****     *    the RX software buffer. Bytes available in the RX FIFO do not take to 
 662:Generated_Source\PSoC5/UART_460800.c ****     *    account.
 663:Generated_Source\PSoC5/UART_460800.c ****     *
 664:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 665:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 666:Generated_Source\PSoC5/UART_460800.c ****     *
 667:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 668:Generated_Source\PSoC5/UART_460800.c ****     *  uint8: Number of bytes in the RX buffer. 
 669:Generated_Source\PSoC5/UART_460800.c ****     *    Return value type depends on RX Buffer Size parameter.
 670:Generated_Source\PSoC5/UART_460800.c ****     *
 671:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
 672:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferWrite - used to calculate left bytes.
 673:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferRead - used to calculate left bytes.
 674:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferLoopDetect - checked to decide left bytes amount.
 675:Generated_Source\PSoC5/UART_460800.c ****     *
 676:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
 677:Generated_Source\PSoC5/UART_460800.c ****     *  No.
 678:Generated_Source\PSoC5/UART_460800.c ****     *
 679:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
 680:Generated_Source\PSoC5/UART_460800.c ****     *  Allows the user to find out how full the RX Buffer is.
 681:Generated_Source\PSoC5/UART_460800.c ****     *
 682:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 683:Generated_Source\PSoC5/UART_460800.c ****     uint8 UART_460800_GetRxBufferSize(void)
 684:Generated_Source\PSoC5/UART_460800.c ****                                                             
 685:Generated_Source\PSoC5/UART_460800.c ****     {
 613              		.loc 1 685 0
 614              		.cfi_startproc
 615              		@ args = 0, pretend = 0, frame = 8
 616              		@ frame_needed = 1, uses_anonymous_args = 0
 617              		@ link register save eliminated.
 618 0000 80B4     		push	{r7}
 619              		.cfi_def_cfa_offset 4
 620              		.cfi_offset 7, -4
 621 0002 83B0     		sub	sp, sp, #12
 622              		.cfi_def_cfa_offset 16
 623 0004 00AF     		add	r7, sp, #0
 624              		.cfi_def_cfa_register 7
 686:Generated_Source\PSoC5/UART_460800.c ****         uint8 size;
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 24


 687:Generated_Source\PSoC5/UART_460800.c **** 
 688:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RX_INTERRUPT_ENABLED)
 689:Generated_Source\PSoC5/UART_460800.c **** 
 690:Generated_Source\PSoC5/UART_460800.c ****         /* Protect variables that could change on interrupt */
 691:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_DisableRxInt();
 692:Generated_Source\PSoC5/UART_460800.c **** 
 693:Generated_Source\PSoC5/UART_460800.c ****         if(UART_460800_rxBufferRead == UART_460800_rxBufferWrite)
 694:Generated_Source\PSoC5/UART_460800.c ****         {
 695:Generated_Source\PSoC5/UART_460800.c ****             if(UART_460800_rxBufferLoopDetect != 0u)
 696:Generated_Source\PSoC5/UART_460800.c ****             {
 697:Generated_Source\PSoC5/UART_460800.c ****                 size = UART_460800_RX_BUFFER_SIZE;
 698:Generated_Source\PSoC5/UART_460800.c ****             }
 699:Generated_Source\PSoC5/UART_460800.c ****             else
 700:Generated_Source\PSoC5/UART_460800.c ****             {
 701:Generated_Source\PSoC5/UART_460800.c ****                 size = 0u;
 702:Generated_Source\PSoC5/UART_460800.c ****             }
 703:Generated_Source\PSoC5/UART_460800.c ****         }
 704:Generated_Source\PSoC5/UART_460800.c ****         else if(UART_460800_rxBufferRead < UART_460800_rxBufferWrite)
 705:Generated_Source\PSoC5/UART_460800.c ****         {
 706:Generated_Source\PSoC5/UART_460800.c ****             size = (UART_460800_rxBufferWrite - UART_460800_rxBufferRead);
 707:Generated_Source\PSoC5/UART_460800.c ****         }
 708:Generated_Source\PSoC5/UART_460800.c ****         else
 709:Generated_Source\PSoC5/UART_460800.c ****         {
 710:Generated_Source\PSoC5/UART_460800.c ****             size = (UART_460800_RX_BUFFER_SIZE - UART_460800_rxBufferRead) + UART_460800_rxBufferWr
 711:Generated_Source\PSoC5/UART_460800.c ****         }
 712:Generated_Source\PSoC5/UART_460800.c **** 
 713:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_EnableRxInt();
 714:Generated_Source\PSoC5/UART_460800.c **** 
 715:Generated_Source\PSoC5/UART_460800.c ****     #else
 716:Generated_Source\PSoC5/UART_460800.c **** 
 717:Generated_Source\PSoC5/UART_460800.c ****         /* We can only know if there is data in the fifo. */
 718:Generated_Source\PSoC5/UART_460800.c ****         size = ((UART_460800_RXSTATUS_REG & UART_460800_RX_STS_FIFO_NOTEMPTY) != 0u) ? 1u : 0u;
 625              		.loc 1 718 0
 626 0006 084B     		ldr	r3, .L39
 627 0008 1B78     		ldrb	r3, [r3]
 628 000a DBB2     		uxtb	r3, r3
 629 000c 03F02003 		and	r3, r3, #32
 630 0010 002B     		cmp	r3, #0
 631 0012 01D0     		beq	.L36
 632              		.loc 1 718 0 is_stmt 0 discriminator 1
 633 0014 0123     		movs	r3, #1
 634 0016 00E0     		b	.L37
 635              	.L36:
 636              		.loc 1 718 0 discriminator 2
 637 0018 0023     		movs	r3, #0
 638              	.L37:
 639              		.loc 1 718 0 discriminator 4
 640 001a FB71     		strb	r3, [r7, #7]
 719:Generated_Source\PSoC5/UART_460800.c **** 
 720:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_RX_INTERRUPT_ENABLED) */
 721:Generated_Source\PSoC5/UART_460800.c **** 
 722:Generated_Source\PSoC5/UART_460800.c ****         return(size);
 641              		.loc 1 722 0 is_stmt 1 discriminator 4
 642 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 723:Generated_Source\PSoC5/UART_460800.c ****     }
 643              		.loc 1 723 0 discriminator 4
 644 001e 1846     		mov	r0, r3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 25


 645 0020 0C37     		adds	r7, r7, #12
 646              		.cfi_def_cfa_offset 4
 647 0022 BD46     		mov	sp, r7
 648              		.cfi_def_cfa_register 13
 649              		@ sp needed
 650 0024 80BC     		pop	{r7}
 651              		.cfi_restore 7
 652              		.cfi_def_cfa_offset 0
 653 0026 7047     		bx	lr
 654              	.L40:
 655              		.align	2
 656              	.L39:
 657 0028 69640040 		.word	1073767529
 658              		.cfi_endproc
 659              	.LFE11:
 660              		.size	UART_460800_GetRxBufferSize, .-UART_460800_GetRxBufferSize
 661              		.section	.text.UART_460800_ClearRxBuffer,"ax",%progbits
 662              		.align	2
 663              		.global	UART_460800_ClearRxBuffer
 664              		.thumb
 665              		.thumb_func
 666              		.type	UART_460800_ClearRxBuffer, %function
 667              	UART_460800_ClearRxBuffer:
 668              	.LFB12:
 724:Generated_Source\PSoC5/UART_460800.c **** 
 725:Generated_Source\PSoC5/UART_460800.c **** 
 726:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 727:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_ClearRxBuffer
 728:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 729:Generated_Source\PSoC5/UART_460800.c ****     *
 730:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 731:Generated_Source\PSoC5/UART_460800.c ****     *  Clears the receiver memory buffer and hardware RX FIFO of all received data.
 732:Generated_Source\PSoC5/UART_460800.c ****     *
 733:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 734:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 735:Generated_Source\PSoC5/UART_460800.c ****     *
 736:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 737:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 738:Generated_Source\PSoC5/UART_460800.c ****     *
 739:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
 740:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferWrite - cleared to zero.
 741:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferRead - cleared to zero.
 742:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferLoopDetect - cleared to zero.
 743:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxBufferOverflow - cleared to zero.
 744:Generated_Source\PSoC5/UART_460800.c ****     *
 745:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
 746:Generated_Source\PSoC5/UART_460800.c ****     *  No.
 747:Generated_Source\PSoC5/UART_460800.c ****     *
 748:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
 749:Generated_Source\PSoC5/UART_460800.c ****     *  Setting the pointers to zero makes the system believe there is no data to
 750:Generated_Source\PSoC5/UART_460800.c ****     *  read and writing will resume at address 0 overwriting any data that may
 751:Generated_Source\PSoC5/UART_460800.c ****     *  have remained in the RAM.
 752:Generated_Source\PSoC5/UART_460800.c ****     *
 753:Generated_Source\PSoC5/UART_460800.c ****     * Side Effects:
 754:Generated_Source\PSoC5/UART_460800.c ****     *  Any received data not read from the RAM or FIFO buffer will be lost.
 755:Generated_Source\PSoC5/UART_460800.c ****     *
 756:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 26


 757:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_ClearRxBuffer(void) 
 758:Generated_Source\PSoC5/UART_460800.c ****     {
 669              		.loc 1 758 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 8
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673 0000 80B5     		push	{r7, lr}
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 7, -8
 676              		.cfi_offset 14, -4
 677 0002 82B0     		sub	sp, sp, #8
 678              		.cfi_def_cfa_offset 16
 679 0004 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 759:Generated_Source\PSoC5/UART_460800.c ****         uint8 enableInterrupts;
 760:Generated_Source\PSoC5/UART_460800.c **** 
 761:Generated_Source\PSoC5/UART_460800.c ****         /* Clear the HW FIFO */
 762:Generated_Source\PSoC5/UART_460800.c ****         enableInterrupts = CyEnterCriticalSection();
 681              		.loc 1 762 0
 682 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 683 000a 0346     		mov	r3, r0
 684 000c FB71     		strb	r3, [r7, #7]
 763:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXDATA_AUX_CTL_REG |= (uint8)  UART_460800_RX_FIFO_CLR;
 685              		.loc 1 763 0
 686 000e 0C4A     		ldr	r2, .L42
 687 0010 0B4B     		ldr	r3, .L42
 688 0012 1B78     		ldrb	r3, [r3]
 689 0014 DBB2     		uxtb	r3, r3
 690 0016 43F00103 		orr	r3, r3, #1
 691 001a DBB2     		uxtb	r3, r3
 692 001c 1370     		strb	r3, [r2]
 764:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXDATA_AUX_CTL_REG &= (uint8) ~UART_460800_RX_FIFO_CLR;
 693              		.loc 1 764 0
 694 001e 084A     		ldr	r2, .L42
 695 0020 074B     		ldr	r3, .L42
 696 0022 1B78     		ldrb	r3, [r3]
 697 0024 DBB2     		uxtb	r3, r3
 698 0026 23F00103 		bic	r3, r3, #1
 699 002a DBB2     		uxtb	r3, r3
 700 002c 1370     		strb	r3, [r2]
 765:Generated_Source\PSoC5/UART_460800.c ****         CyExitCriticalSection(enableInterrupts);
 701              		.loc 1 765 0
 702 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 703 0030 1846     		mov	r0, r3
 704 0032 FFF7FEFF 		bl	CyExitCriticalSection
 766:Generated_Source\PSoC5/UART_460800.c **** 
 767:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_RX_INTERRUPT_ENABLED)
 768:Generated_Source\PSoC5/UART_460800.c **** 
 769:Generated_Source\PSoC5/UART_460800.c ****         /* Protect variables that could change on interrupt. */
 770:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_DisableRxInt();
 771:Generated_Source\PSoC5/UART_460800.c **** 
 772:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_rxBufferRead = 0u;
 773:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_rxBufferWrite = 0u;
 774:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_rxBufferLoopDetect = 0u;
 775:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_rxBufferOverflow = 0u;
 776:Generated_Source\PSoC5/UART_460800.c **** 
 777:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_EnableRxInt();
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 27


 778:Generated_Source\PSoC5/UART_460800.c **** 
 779:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_RX_INTERRUPT_ENABLED) */
 780:Generated_Source\PSoC5/UART_460800.c **** 
 781:Generated_Source\PSoC5/UART_460800.c ****     }
 705              		.loc 1 781 0
 706 0036 00BF     		nop
 707 0038 0837     		adds	r7, r7, #8
 708              		.cfi_def_cfa_offset 8
 709 003a BD46     		mov	sp, r7
 710              		.cfi_def_cfa_register 13
 711              		@ sp needed
 712 003c 80BD     		pop	{r7, pc}
 713              	.L43:
 714 003e 00BF     		.align	2
 715              	.L42:
 716 0040 99650040 		.word	1073767833
 717              		.cfi_endproc
 718              	.LFE12:
 719              		.size	UART_460800_ClearRxBuffer, .-UART_460800_ClearRxBuffer
 720              		.section	.text.UART_460800_SetRxAddressMode,"ax",%progbits
 721              		.align	2
 722              		.global	UART_460800_SetRxAddressMode
 723              		.thumb
 724              		.thumb_func
 725              		.type	UART_460800_SetRxAddressMode, %function
 726              	UART_460800_SetRxAddressMode:
 727              	.LFB13:
 782:Generated_Source\PSoC5/UART_460800.c **** 
 783:Generated_Source\PSoC5/UART_460800.c **** 
 784:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 785:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_SetRxAddressMode
 786:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 787:Generated_Source\PSoC5/UART_460800.c ****     *
 788:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 789:Generated_Source\PSoC5/UART_460800.c ****     *  Sets the software controlled Addressing mode used by the RX portion of the
 790:Generated_Source\PSoC5/UART_460800.c ****     *  UART.
 791:Generated_Source\PSoC5/UART_460800.c ****     *
 792:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 793:Generated_Source\PSoC5/UART_460800.c ****     *  addressMode: Enumerated value indicating the mode of RX addressing
 794:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800__B_UART__AM_SW_BYTE_BYTE -  Software Byte-by-Byte address
 795:Generated_Source\PSoC5/UART_460800.c ****     *                                               detection
 796:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800__B_UART__AM_SW_DETECT_TO_BUFFER - Software Detect to Buffer
 797:Generated_Source\PSoC5/UART_460800.c ****     *                                               address detection
 798:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800__B_UART__AM_HW_BYTE_BY_BYTE - Hardware Byte-by-Byte address
 799:Generated_Source\PSoC5/UART_460800.c ****     *                                               detection
 800:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800__B_UART__AM_HW_DETECT_TO_BUFFER - Hardware Detect to Buffer
 801:Generated_Source\PSoC5/UART_460800.c ****     *                                               address detection
 802:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800__B_UART__AM_NONE - No address detection
 803:Generated_Source\PSoC5/UART_460800.c ****     *
 804:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 805:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 806:Generated_Source\PSoC5/UART_460800.c ****     *
 807:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
 808:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxAddressMode - the parameter stored in this variable for
 809:Generated_Source\PSoC5/UART_460800.c ****     *   the farther usage in RX ISR.
 810:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_rxAddressDetected - set to initial state (0).
 811:Generated_Source\PSoC5/UART_460800.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 28


 812:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 813:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_SetRxAddressMode(uint8 addressMode)
 814:Generated_Source\PSoC5/UART_460800.c ****                                                         
 815:Generated_Source\PSoC5/UART_460800.c ****     {
 728              		.loc 1 815 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 8
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733 0000 80B4     		push	{r7}
 734              		.cfi_def_cfa_offset 4
 735              		.cfi_offset 7, -4
 736 0002 83B0     		sub	sp, sp, #12
 737              		.cfi_def_cfa_offset 16
 738 0004 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 740 0006 0346     		mov	r3, r0
 741 0008 FB71     		strb	r3, [r7, #7]
 816:Generated_Source\PSoC5/UART_460800.c ****         #if(UART_460800_RXHW_ADDRESS_ENABLED)
 817:Generated_Source\PSoC5/UART_460800.c ****             #if(UART_460800_CONTROL_REG_REMOVED)
 818:Generated_Source\PSoC5/UART_460800.c ****                 if(0u != addressMode)
 819:Generated_Source\PSoC5/UART_460800.c ****                 {
 820:Generated_Source\PSoC5/UART_460800.c ****                     /* Suppress compiler warning */
 821:Generated_Source\PSoC5/UART_460800.c ****                 }
 822:Generated_Source\PSoC5/UART_460800.c ****             #else /* UART_460800_CONTROL_REG_REMOVED */
 823:Generated_Source\PSoC5/UART_460800.c ****                 uint8 tmpCtrl;
 824:Generated_Source\PSoC5/UART_460800.c ****                 tmpCtrl = UART_460800_CONTROL_REG & (uint8)~UART_460800_CTRL_RXADDR_MODE_MASK;
 825:Generated_Source\PSoC5/UART_460800.c ****                 tmpCtrl |= (uint8)(addressMode << UART_460800_CTRL_RXADDR_MODE0_SHIFT);
 826:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_CONTROL_REG = tmpCtrl;
 827:Generated_Source\PSoC5/UART_460800.c **** 
 828:Generated_Source\PSoC5/UART_460800.c ****                 #if(UART_460800_RX_INTERRUPT_ENABLED && \
 829:Generated_Source\PSoC5/UART_460800.c ****                    (UART_460800_RXBUFFERSIZE > UART_460800_FIFO_LENGTH) )
 830:Generated_Source\PSoC5/UART_460800.c ****                     UART_460800_rxAddressMode = addressMode;
 831:Generated_Source\PSoC5/UART_460800.c ****                     UART_460800_rxAddressDetected = 0u;
 832:Generated_Source\PSoC5/UART_460800.c ****                 #endif /* End UART_460800_RXBUFFERSIZE > UART_460800_FIFO_LENGTH*/
 833:Generated_Source\PSoC5/UART_460800.c ****             #endif /* End UART_460800_CONTROL_REG_REMOVED */
 834:Generated_Source\PSoC5/UART_460800.c ****         #else /* UART_460800_RXHW_ADDRESS_ENABLED */
 835:Generated_Source\PSoC5/UART_460800.c ****             if(0u != addressMode)
 836:Generated_Source\PSoC5/UART_460800.c ****             {
 837:Generated_Source\PSoC5/UART_460800.c ****                 /* Suppress compiler warning */
 838:Generated_Source\PSoC5/UART_460800.c ****             }
 839:Generated_Source\PSoC5/UART_460800.c ****         #endif /* End UART_460800_RXHW_ADDRESS_ENABLED */
 840:Generated_Source\PSoC5/UART_460800.c ****     }
 742              		.loc 1 840 0
 743 000a 00BF     		nop
 744 000c 0C37     		adds	r7, r7, #12
 745              		.cfi_def_cfa_offset 4
 746 000e BD46     		mov	sp, r7
 747              		.cfi_def_cfa_register 13
 748              		@ sp needed
 749 0010 80BC     		pop	{r7}
 750              		.cfi_restore 7
 751              		.cfi_def_cfa_offset 0
 752 0012 7047     		bx	lr
 753              		.cfi_endproc
 754              	.LFE13:
 755              		.size	UART_460800_SetRxAddressMode, .-UART_460800_SetRxAddressMode
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 29


 756              		.section	.text.UART_460800_SetRxAddress1,"ax",%progbits
 757              		.align	2
 758              		.global	UART_460800_SetRxAddress1
 759              		.thumb
 760              		.thumb_func
 761              		.type	UART_460800_SetRxAddress1, %function
 762              	UART_460800_SetRxAddress1:
 763              	.LFB14:
 841:Generated_Source\PSoC5/UART_460800.c **** 
 842:Generated_Source\PSoC5/UART_460800.c **** 
 843:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 844:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_SetRxAddress1
 845:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 846:Generated_Source\PSoC5/UART_460800.c ****     *
 847:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 848:Generated_Source\PSoC5/UART_460800.c ****     *  Sets the first of two hardware-detectable receiver addresses.
 849:Generated_Source\PSoC5/UART_460800.c ****     *
 850:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 851:Generated_Source\PSoC5/UART_460800.c ****     *  address: Address #1 for hardware address detection.
 852:Generated_Source\PSoC5/UART_460800.c ****     *
 853:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 854:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 855:Generated_Source\PSoC5/UART_460800.c ****     *
 856:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 857:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_SetRxAddress1(uint8 address) 
 858:Generated_Source\PSoC5/UART_460800.c ****     {
 764              		.loc 1 858 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 8
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768              		@ link register save eliminated.
 769 0000 80B4     		push	{r7}
 770              		.cfi_def_cfa_offset 4
 771              		.cfi_offset 7, -4
 772 0002 83B0     		sub	sp, sp, #12
 773              		.cfi_def_cfa_offset 16
 774 0004 00AF     		add	r7, sp, #0
 775              		.cfi_def_cfa_register 7
 776 0006 0346     		mov	r3, r0
 777 0008 FB71     		strb	r3, [r7, #7]
 859:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXADDRESS1_REG = address;
 778              		.loc 1 859 0
 779 000a 044A     		ldr	r2, .L46
 780 000c FB79     		ldrb	r3, [r7, #7]
 781 000e 1370     		strb	r3, [r2]
 860:Generated_Source\PSoC5/UART_460800.c ****     }
 782              		.loc 1 860 0
 783 0010 00BF     		nop
 784 0012 0C37     		adds	r7, r7, #12
 785              		.cfi_def_cfa_offset 4
 786 0014 BD46     		mov	sp, r7
 787              		.cfi_def_cfa_register 13
 788              		@ sp needed
 789 0016 80BC     		pop	{r7}
 790              		.cfi_restore 7
 791              		.cfi_def_cfa_offset 0
 792 0018 7047     		bx	lr
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 30


 793              	.L47:
 794 001a 00BF     		.align	2
 795              	.L46:
 796 001c 29650040 		.word	1073767721
 797              		.cfi_endproc
 798              	.LFE14:
 799              		.size	UART_460800_SetRxAddress1, .-UART_460800_SetRxAddress1
 800              		.section	.text.UART_460800_SetRxAddress2,"ax",%progbits
 801              		.align	2
 802              		.global	UART_460800_SetRxAddress2
 803              		.thumb
 804              		.thumb_func
 805              		.type	UART_460800_SetRxAddress2, %function
 806              	UART_460800_SetRxAddress2:
 807              	.LFB15:
 861:Generated_Source\PSoC5/UART_460800.c **** 
 862:Generated_Source\PSoC5/UART_460800.c **** 
 863:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 864:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_SetRxAddress2
 865:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 866:Generated_Source\PSoC5/UART_460800.c ****     *
 867:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 868:Generated_Source\PSoC5/UART_460800.c ****     *  Sets the second of two hardware-detectable receiver addresses.
 869:Generated_Source\PSoC5/UART_460800.c ****     *
 870:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 871:Generated_Source\PSoC5/UART_460800.c ****     *  address: Address #2 for hardware address detection.
 872:Generated_Source\PSoC5/UART_460800.c ****     *
 873:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 874:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 875:Generated_Source\PSoC5/UART_460800.c ****     *
 876:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 877:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_SetRxAddress2(uint8 address) 
 878:Generated_Source\PSoC5/UART_460800.c ****     {
 808              		.loc 1 878 0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 8
 811              		@ frame_needed = 1, uses_anonymous_args = 0
 812              		@ link register save eliminated.
 813 0000 80B4     		push	{r7}
 814              		.cfi_def_cfa_offset 4
 815              		.cfi_offset 7, -4
 816 0002 83B0     		sub	sp, sp, #12
 817              		.cfi_def_cfa_offset 16
 818 0004 00AF     		add	r7, sp, #0
 819              		.cfi_def_cfa_register 7
 820 0006 0346     		mov	r3, r0
 821 0008 FB71     		strb	r3, [r7, #7]
 879:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_RXADDRESS2_REG = address;
 822              		.loc 1 879 0
 823 000a 044A     		ldr	r2, .L49
 824 000c FB79     		ldrb	r3, [r7, #7]
 825 000e 1370     		strb	r3, [r2]
 880:Generated_Source\PSoC5/UART_460800.c ****     }
 826              		.loc 1 880 0
 827 0010 00BF     		nop
 828 0012 0C37     		adds	r7, r7, #12
 829              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 31


 830 0014 BD46     		mov	sp, r7
 831              		.cfi_def_cfa_register 13
 832              		@ sp needed
 833 0016 80BC     		pop	{r7}
 834              		.cfi_restore 7
 835              		.cfi_def_cfa_offset 0
 836 0018 7047     		bx	lr
 837              	.L50:
 838 001a 00BF     		.align	2
 839              	.L49:
 840 001c 39650040 		.word	1073767737
 841              		.cfi_endproc
 842              	.LFE15:
 843              		.size	UART_460800_SetRxAddress2, .-UART_460800_SetRxAddress2
 844              		.section	.text.UART_460800_SetTxInterruptMode,"ax",%progbits
 845              		.align	2
 846              		.global	UART_460800_SetTxInterruptMode
 847              		.thumb
 848              		.thumb_func
 849              		.type	UART_460800_SetTxInterruptMode, %function
 850              	UART_460800_SetTxInterruptMode:
 851              	.LFB16:
 881:Generated_Source\PSoC5/UART_460800.c **** 
 882:Generated_Source\PSoC5/UART_460800.c **** #endif  /* UART_460800_RX_ENABLED || UART_460800_HD_ENABLED*/
 883:Generated_Source\PSoC5/UART_460800.c **** 
 884:Generated_Source\PSoC5/UART_460800.c **** 
 885:Generated_Source\PSoC5/UART_460800.c **** #if( (UART_460800_TX_ENABLED) || (UART_460800_HD_ENABLED) )
 886:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 887:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_SetTxInterruptMode
 888:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 889:Generated_Source\PSoC5/UART_460800.c ****     *
 890:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 891:Generated_Source\PSoC5/UART_460800.c ****     *  Configures the TX interrupt sources to be enabled, but does not enable the
 892:Generated_Source\PSoC5/UART_460800.c ****     *  interrupt.
 893:Generated_Source\PSoC5/UART_460800.c ****     *
 894:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 895:Generated_Source\PSoC5/UART_460800.c ****     *  intSrc: Bit field containing the TX interrupt sources to enable
 896:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_TX_STS_COMPLETE        Interrupt on TX byte complete
 897:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_TX_STS_FIFO_EMPTY      Interrupt when TX FIFO is empty
 898:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_TX_STS_FIFO_FULL       Interrupt when TX FIFO is full
 899:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_TX_STS_FIFO_NOT_FULL   Interrupt when TX FIFO is not full
 900:Generated_Source\PSoC5/UART_460800.c ****     *
 901:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 902:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 903:Generated_Source\PSoC5/UART_460800.c ****     *
 904:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
 905:Generated_Source\PSoC5/UART_460800.c ****     *  Enables the output of specific status bits to the interrupt controller
 906:Generated_Source\PSoC5/UART_460800.c ****     *
 907:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 908:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_SetTxInterruptMode(uint8 intSrc) 
 909:Generated_Source\PSoC5/UART_460800.c ****     {
 852              		.loc 1 909 0
 853              		.cfi_startproc
 854              		@ args = 0, pretend = 0, frame = 8
 855              		@ frame_needed = 1, uses_anonymous_args = 0
 856              		@ link register save eliminated.
 857 0000 80B4     		push	{r7}
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 32


 858              		.cfi_def_cfa_offset 4
 859              		.cfi_offset 7, -4
 860 0002 83B0     		sub	sp, sp, #12
 861              		.cfi_def_cfa_offset 16
 862 0004 00AF     		add	r7, sp, #0
 863              		.cfi_def_cfa_register 7
 864 0006 0346     		mov	r3, r0
 865 0008 FB71     		strb	r3, [r7, #7]
 910:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_TXSTATUS_MASK_REG = intSrc;
 866              		.loc 1 910 0
 867 000a 044A     		ldr	r2, .L52
 868 000c FB79     		ldrb	r3, [r7, #7]
 869 000e 1370     		strb	r3, [r2]
 911:Generated_Source\PSoC5/UART_460800.c ****     }
 870              		.loc 1 911 0
 871 0010 00BF     		nop
 872 0012 0C37     		adds	r7, r7, #12
 873              		.cfi_def_cfa_offset 4
 874 0014 BD46     		mov	sp, r7
 875              		.cfi_def_cfa_register 13
 876              		@ sp needed
 877 0016 80BC     		pop	{r7}
 878              		.cfi_restore 7
 879              		.cfi_def_cfa_offset 0
 880 0018 7047     		bx	lr
 881              	.L53:
 882 001a 00BF     		.align	2
 883              	.L52:
 884 001c 84640040 		.word	1073767556
 885              		.cfi_endproc
 886              	.LFE16:
 887              		.size	UART_460800_SetTxInterruptMode, .-UART_460800_SetTxInterruptMode
 888              		.section	.text.UART_460800_WriteTxData,"ax",%progbits
 889              		.align	2
 890              		.global	UART_460800_WriteTxData
 891              		.thumb
 892              		.thumb_func
 893              		.type	UART_460800_WriteTxData, %function
 894              	UART_460800_WriteTxData:
 895              	.LFB17:
 912:Generated_Source\PSoC5/UART_460800.c **** 
 913:Generated_Source\PSoC5/UART_460800.c **** 
 914:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 915:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_WriteTxData
 916:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 917:Generated_Source\PSoC5/UART_460800.c ****     *
 918:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 919:Generated_Source\PSoC5/UART_460800.c ****     *  Places a byte of data into the transmit buffer to be sent when the bus is
 920:Generated_Source\PSoC5/UART_460800.c ****     *  available without checking the TX status register. You must check status
 921:Generated_Source\PSoC5/UART_460800.c ****     *  separately.
 922:Generated_Source\PSoC5/UART_460800.c ****     *
 923:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
 924:Generated_Source\PSoC5/UART_460800.c ****     *  txDataByte: data byte
 925:Generated_Source\PSoC5/UART_460800.c ****     *
 926:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 927:Generated_Source\PSoC5/UART_460800.c ****     * None.
 928:Generated_Source\PSoC5/UART_460800.c ****     *
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 33


 929:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
 930:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBuffer - RAM buffer pointer for save data for transmission
 931:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBufferWrite - cyclic index for write to txBuffer,
 932:Generated_Source\PSoC5/UART_460800.c ****     *    incremented after each byte saved to buffer.
 933:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBufferRead - cyclic index for read from txBuffer,
 934:Generated_Source\PSoC5/UART_460800.c ****     *    checked to identify the condition to write to FIFO directly or to TX buffer
 935:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_initVar - checked to identify that the component has been
 936:Generated_Source\PSoC5/UART_460800.c ****     *    initialized.
 937:Generated_Source\PSoC5/UART_460800.c ****     *
 938:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
 939:Generated_Source\PSoC5/UART_460800.c ****     *  No.
 940:Generated_Source\PSoC5/UART_460800.c ****     *
 941:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
 942:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_WriteTxData(uint8 txDataByte) 
 943:Generated_Source\PSoC5/UART_460800.c ****     {
 896              		.loc 1 943 0
 897              		.cfi_startproc
 898              		@ args = 0, pretend = 0, frame = 8
 899              		@ frame_needed = 1, uses_anonymous_args = 0
 900              		@ link register save eliminated.
 901 0000 80B4     		push	{r7}
 902              		.cfi_def_cfa_offset 4
 903              		.cfi_offset 7, -4
 904 0002 83B0     		sub	sp, sp, #12
 905              		.cfi_def_cfa_offset 16
 906 0004 00AF     		add	r7, sp, #0
 907              		.cfi_def_cfa_register 7
 908 0006 0346     		mov	r3, r0
 909 0008 FB71     		strb	r3, [r7, #7]
 944:Generated_Source\PSoC5/UART_460800.c ****         /* If not Initialized then skip this function*/
 945:Generated_Source\PSoC5/UART_460800.c ****         if(UART_460800_initVar != 0u)
 910              		.loc 1 945 0
 911 000a 1A4B     		ldr	r3, .L60
 912 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 913 000e 002B     		cmp	r3, #0
 914 0010 2BD0     		beq	.L59
 946:Generated_Source\PSoC5/UART_460800.c ****         {
 947:Generated_Source\PSoC5/UART_460800.c ****         #if (UART_460800_TX_INTERRUPT_ENABLED)
 948:Generated_Source\PSoC5/UART_460800.c **** 
 949:Generated_Source\PSoC5/UART_460800.c ****             /* Protect variables that could change on interrupt. */
 950:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_DisableTxInt();
 915              		.loc 1 950 0
 916 0012 194B     		ldr	r3, .L60+4
 917 0014 0822     		movs	r2, #8
 918 0016 1A60     		str	r2, [r3]
 951:Generated_Source\PSoC5/UART_460800.c **** 
 952:Generated_Source\PSoC5/UART_460800.c ****             if( (UART_460800_txBufferRead == UART_460800_txBufferWrite) &&
 919              		.loc 1 952 0
 920 0018 184B     		ldr	r3, .L60+8
 921 001a 1B88     		ldrh	r3, [r3]	@ movhi
 922 001c 9AB2     		uxth	r2, r3
 923 001e 184B     		ldr	r3, .L60+12
 924 0020 1B88     		ldrh	r3, [r3]
 925 0022 9A42     		cmp	r2, r3
 926 0024 0AD1     		bne	.L56
 953:Generated_Source\PSoC5/UART_460800.c ****                 ((UART_460800_TXSTATUS_REG & UART_460800_TX_STS_FIFO_FULL) == 0u) )
 927              		.loc 1 953 0 discriminator 1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 34


 928 0026 174B     		ldr	r3, .L60+16
 929 0028 1B78     		ldrb	r3, [r3]
 930 002a DBB2     		uxtb	r3, r3
 931 002c 03F00403 		and	r3, r3, #4
 952:Generated_Source\PSoC5/UART_460800.c ****                 ((UART_460800_TXSTATUS_REG & UART_460800_TX_STS_FIFO_FULL) == 0u) )
 932              		.loc 1 952 0 discriminator 1
 933 0030 002B     		cmp	r3, #0
 934 0032 03D1     		bne	.L56
 954:Generated_Source\PSoC5/UART_460800.c ****             {
 955:Generated_Source\PSoC5/UART_460800.c ****                 /* Add directly to the FIFO. */
 956:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_TXDATA_REG = txDataByte;
 935              		.loc 1 956 0
 936 0034 144A     		ldr	r2, .L60+20
 937 0036 FB79     		ldrb	r3, [r7, #7]
 938 0038 1370     		strb	r3, [r2]
 939 003a 13E0     		b	.L57
 940              	.L56:
 957:Generated_Source\PSoC5/UART_460800.c ****             }
 958:Generated_Source\PSoC5/UART_460800.c ****             else
 959:Generated_Source\PSoC5/UART_460800.c ****             {
 960:Generated_Source\PSoC5/UART_460800.c ****                 if(UART_460800_txBufferWrite >= UART_460800_TX_BUFFER_SIZE)
 941              		.loc 1 960 0
 942 003c 104B     		ldr	r3, .L60+12
 943 003e 1B88     		ldrh	r3, [r3]
 944 0040 B3F5006F 		cmp	r3, #2048
 945 0044 02D3     		bcc	.L58
 961:Generated_Source\PSoC5/UART_460800.c ****                 {
 962:Generated_Source\PSoC5/UART_460800.c ****                     UART_460800_txBufferWrite = 0u;
 946              		.loc 1 962 0
 947 0046 0E4B     		ldr	r3, .L60+12
 948 0048 0022     		movs	r2, #0
 949 004a 1A80     		strh	r2, [r3]	@ movhi
 950              	.L58:
 963:Generated_Source\PSoC5/UART_460800.c ****                 }
 964:Generated_Source\PSoC5/UART_460800.c **** 
 965:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_txBuffer[UART_460800_txBufferWrite] = txDataByte;
 951              		.loc 1 965 0
 952 004c 0C4B     		ldr	r3, .L60+12
 953 004e 1B88     		ldrh	r3, [r3]
 954 0050 1946     		mov	r1, r3
 955 0052 0E4A     		ldr	r2, .L60+24
 956 0054 FB79     		ldrb	r3, [r7, #7]
 957 0056 5354     		strb	r3, [r2, r1]
 966:Generated_Source\PSoC5/UART_460800.c **** 
 967:Generated_Source\PSoC5/UART_460800.c ****                 /* Add to the software buffer. */
 968:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_txBufferWrite++;
 958              		.loc 1 968 0
 959 0058 094B     		ldr	r3, .L60+12
 960 005a 1B88     		ldrh	r3, [r3]
 961 005c 0133     		adds	r3, r3, #1
 962 005e 9AB2     		uxth	r2, r3
 963 0060 074B     		ldr	r3, .L60+12
 964 0062 1A80     		strh	r2, [r3]	@ movhi
 965              	.L57:
 969:Generated_Source\PSoC5/UART_460800.c ****             }
 970:Generated_Source\PSoC5/UART_460800.c **** 
 971:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_EnableTxInt();
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 35


 966              		.loc 1 971 0
 967 0064 0A4B     		ldr	r3, .L60+28
 968 0066 0822     		movs	r2, #8
 969 0068 1A60     		str	r2, [r3]
 970              	.L59:
 972:Generated_Source\PSoC5/UART_460800.c **** 
 973:Generated_Source\PSoC5/UART_460800.c ****         #else
 974:Generated_Source\PSoC5/UART_460800.c **** 
 975:Generated_Source\PSoC5/UART_460800.c ****             /* Add directly to the FIFO. */
 976:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_TXDATA_REG = txDataByte;
 977:Generated_Source\PSoC5/UART_460800.c **** 
 978:Generated_Source\PSoC5/UART_460800.c ****         #endif /*(UART_460800_TX_INTERRUPT_ENABLED) */
 979:Generated_Source\PSoC5/UART_460800.c ****         }
 980:Generated_Source\PSoC5/UART_460800.c ****     }
 971              		.loc 1 980 0
 972 006a 00BF     		nop
 973 006c 0C37     		adds	r7, r7, #12
 974              		.cfi_def_cfa_offset 4
 975 006e BD46     		mov	sp, r7
 976              		.cfi_def_cfa_register 13
 977              		@ sp needed
 978 0070 80BC     		pop	{r7}
 979              		.cfi_restore 7
 980              		.cfi_def_cfa_offset 0
 981 0072 7047     		bx	lr
 982              	.L61:
 983              		.align	2
 984              	.L60:
 985 0074 00000000 		.word	UART_460800_initVar
 986 0078 80E100E0 		.word	-536813184
 987 007c 00000000 		.word	UART_460800_txBufferRead
 988 0080 00000000 		.word	UART_460800_txBufferWrite
 989 0084 64640040 		.word	1073767524
 990 0088 44640040 		.word	1073767492
 991 008c 00000000 		.word	UART_460800_txBuffer
 992 0090 00E100E0 		.word	-536813312
 993              		.cfi_endproc
 994              	.LFE17:
 995              		.size	UART_460800_WriteTxData, .-UART_460800_WriteTxData
 996              		.section	.text.UART_460800_ReadTxStatus,"ax",%progbits
 997              		.align	2
 998              		.global	UART_460800_ReadTxStatus
 999              		.thumb
 1000              		.thumb_func
 1001              		.type	UART_460800_ReadTxStatus, %function
 1002              	UART_460800_ReadTxStatus:
 1003              	.LFB18:
 981:Generated_Source\PSoC5/UART_460800.c **** 
 982:Generated_Source\PSoC5/UART_460800.c **** 
 983:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
 984:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_ReadTxStatus
 985:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
 986:Generated_Source\PSoC5/UART_460800.c ****     *
 987:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
 988:Generated_Source\PSoC5/UART_460800.c ****     *  Reads the status register for the TX portion of the UART.
 989:Generated_Source\PSoC5/UART_460800.c ****     *
 990:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 36


 991:Generated_Source\PSoC5/UART_460800.c ****     *  None.
 992:Generated_Source\PSoC5/UART_460800.c ****     *
 993:Generated_Source\PSoC5/UART_460800.c ****     * Return:
 994:Generated_Source\PSoC5/UART_460800.c ****     *  Contents of the status register
 995:Generated_Source\PSoC5/UART_460800.c ****     *
 996:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
 997:Generated_Source\PSoC5/UART_460800.c ****     *  This function reads the TX status register, which is cleared on read.
 998:Generated_Source\PSoC5/UART_460800.c ****     *  It is up to the user to handle all bits in this return value accordingly,
 999:Generated_Source\PSoC5/UART_460800.c ****     *  even if the bit was not enabled as an interrupt source the event happened
1000:Generated_Source\PSoC5/UART_460800.c ****     *  and must be handled accordingly.
1001:Generated_Source\PSoC5/UART_460800.c ****     *
1002:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
1003:Generated_Source\PSoC5/UART_460800.c ****     uint8 UART_460800_ReadTxStatus(void) 
1004:Generated_Source\PSoC5/UART_460800.c ****     {
 1004              		.loc 1 1004 0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 1, uses_anonymous_args = 0
 1008              		@ link register save eliminated.
 1009 0000 80B4     		push	{r7}
 1010              		.cfi_def_cfa_offset 4
 1011              		.cfi_offset 7, -4
 1012 0002 00AF     		add	r7, sp, #0
 1013              		.cfi_def_cfa_register 7
1005:Generated_Source\PSoC5/UART_460800.c ****         return(UART_460800_TXSTATUS_REG);
 1014              		.loc 1 1005 0
 1015 0004 034B     		ldr	r3, .L64
 1016 0006 1B78     		ldrb	r3, [r3]
 1017 0008 DBB2     		uxtb	r3, r3
1006:Generated_Source\PSoC5/UART_460800.c ****     }
 1018              		.loc 1 1006 0
 1019 000a 1846     		mov	r0, r3
 1020 000c BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 000e 80BC     		pop	{r7}
 1024              		.cfi_restore 7
 1025              		.cfi_def_cfa_offset 0
 1026 0010 7047     		bx	lr
 1027              	.L65:
 1028 0012 00BF     		.align	2
 1029              	.L64:
 1030 0014 64640040 		.word	1073767524
 1031              		.cfi_endproc
 1032              	.LFE18:
 1033              		.size	UART_460800_ReadTxStatus, .-UART_460800_ReadTxStatus
 1034              		.section	.text.UART_460800_PutChar,"ax",%progbits
 1035              		.align	2
 1036              		.global	UART_460800_PutChar
 1037              		.thumb
 1038              		.thumb_func
 1039              		.type	UART_460800_PutChar, %function
 1040              	UART_460800_PutChar:
 1041              	.LFB19:
1007:Generated_Source\PSoC5/UART_460800.c **** 
1008:Generated_Source\PSoC5/UART_460800.c **** 
1009:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 37


1010:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_PutChar
1011:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
1012:Generated_Source\PSoC5/UART_460800.c ****     *
1013:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
1014:Generated_Source\PSoC5/UART_460800.c ****     *  Puts a byte of data into the transmit buffer to be sent when the bus is
1015:Generated_Source\PSoC5/UART_460800.c ****     *  available. This is a blocking API that waits until the TX buffer has room to
1016:Generated_Source\PSoC5/UART_460800.c ****     *  hold the data.
1017:Generated_Source\PSoC5/UART_460800.c ****     *
1018:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
1019:Generated_Source\PSoC5/UART_460800.c ****     *  txDataByte: Byte containing the data to transmit
1020:Generated_Source\PSoC5/UART_460800.c ****     *
1021:Generated_Source\PSoC5/UART_460800.c ****     * Return:
1022:Generated_Source\PSoC5/UART_460800.c ****     *  None.
1023:Generated_Source\PSoC5/UART_460800.c ****     *
1024:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
1025:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBuffer - RAM buffer pointer for save data for transmission
1026:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBufferWrite - cyclic index for write to txBuffer,
1027:Generated_Source\PSoC5/UART_460800.c ****     *     checked to identify free space in txBuffer and incremented after each byte
1028:Generated_Source\PSoC5/UART_460800.c ****     *     saved to buffer.
1029:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBufferRead - cyclic index for read from txBuffer,
1030:Generated_Source\PSoC5/UART_460800.c ****     *     checked to identify free space in txBuffer.
1031:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_initVar - checked to identify that the component has been
1032:Generated_Source\PSoC5/UART_460800.c ****     *     initialized.
1033:Generated_Source\PSoC5/UART_460800.c ****     *
1034:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
1035:Generated_Source\PSoC5/UART_460800.c ****     *  No.
1036:Generated_Source\PSoC5/UART_460800.c ****     *
1037:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
1038:Generated_Source\PSoC5/UART_460800.c ****     *  Allows the user to transmit any byte of data in a single transfer
1039:Generated_Source\PSoC5/UART_460800.c ****     *
1040:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
1041:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_PutChar(uint8 txDataByte) 
1042:Generated_Source\PSoC5/UART_460800.c ****     {
 1042              		.loc 1 1042 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 16
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047 0000 80B4     		push	{r7}
 1048              		.cfi_def_cfa_offset 4
 1049              		.cfi_offset 7, -4
 1050 0002 85B0     		sub	sp, sp, #20
 1051              		.cfi_def_cfa_offset 24
 1052 0004 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 1054 0006 0346     		mov	r3, r0
 1055 0008 FB71     		strb	r3, [r7, #7]
 1056              	.L69:
1043:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_TX_INTERRUPT_ENABLED)
1044:Generated_Source\PSoC5/UART_460800.c ****         /* The temporary output pointer is used since it takes two instructions
1045:Generated_Source\PSoC5/UART_460800.c ****         *  to increment with a wrap, and we can't risk doing that with the real
1046:Generated_Source\PSoC5/UART_460800.c ****         *  pointer and getting an interrupt in between instructions.
1047:Generated_Source\PSoC5/UART_460800.c ****         */
1048:Generated_Source\PSoC5/UART_460800.c ****         uint16 locTxBufferWrite;
1049:Generated_Source\PSoC5/UART_460800.c ****         uint16 locTxBufferRead;
1050:Generated_Source\PSoC5/UART_460800.c **** 
1051:Generated_Source\PSoC5/UART_460800.c ****         do
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 38


1052:Generated_Source\PSoC5/UART_460800.c ****         { /* Block if software buffer is full, so we don't overwrite. */
1053:Generated_Source\PSoC5/UART_460800.c **** 
1054:Generated_Source\PSoC5/UART_460800.c ****         #if ((UART_460800_TX_BUFFER_SIZE > UART_460800_MAX_BYTE_VALUE) && (CY_PSOC3))
1055:Generated_Source\PSoC5/UART_460800.c ****             /* Disable TX interrupt to protect variables from modification */
1056:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_DisableTxInt();
1057:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_TX_BUFFER_SIZE > UART_460800_MAX_BYTE_VALUE) && (CY_PSOC3) */
1058:Generated_Source\PSoC5/UART_460800.c **** 
1059:Generated_Source\PSoC5/UART_460800.c ****             locTxBufferWrite = UART_460800_txBufferWrite;
 1057              		.loc 1 1059 0
 1058 000a 264B     		ldr	r3, .L74
 1059 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1060 000e FB81     		strh	r3, [r7, #14]	@ movhi
1060:Generated_Source\PSoC5/UART_460800.c ****             locTxBufferRead  = UART_460800_txBufferRead;
 1061              		.loc 1 1060 0
 1062 0010 254B     		ldr	r3, .L74+4
 1063 0012 1B88     		ldrh	r3, [r3]	@ movhi
 1064 0014 BB81     		strh	r3, [r7, #12]	@ movhi
1061:Generated_Source\PSoC5/UART_460800.c **** 
1062:Generated_Source\PSoC5/UART_460800.c ****         #if ((UART_460800_TX_BUFFER_SIZE > UART_460800_MAX_BYTE_VALUE) && (CY_PSOC3))
1063:Generated_Source\PSoC5/UART_460800.c ****             /* Enable interrupt to continue transmission */
1064:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_EnableTxInt();
1065:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_TX_BUFFER_SIZE > UART_460800_MAX_BYTE_VALUE) && (CY_PSOC3) */
1066:Generated_Source\PSoC5/UART_460800.c ****         }
1067:Generated_Source\PSoC5/UART_460800.c ****         while( (locTxBufferWrite < locTxBufferRead) ? (locTxBufferWrite == (locTxBufferRead - 1u)) 
 1065              		.loc 1 1067 0
 1066 0016 FA89     		ldrh	r2, [r7, #14]
 1067 0018 BB89     		ldrh	r3, [r7, #12]
 1068 001a 9A42     		cmp	r2, r3
 1069 001c 08D2     		bcs	.L67
 1070              		.loc 1 1067 0 is_stmt 0 discriminator 1
 1071 001e FA89     		ldrh	r2, [r7, #14]
 1072 0020 BB89     		ldrh	r3, [r7, #12]
 1073 0022 013B     		subs	r3, r3, #1
 1074 0024 9A42     		cmp	r2, r3
 1075 0026 0CBF     		ite	eq
 1076 0028 0123     		moveq	r3, #1
 1077 002a 0023     		movne	r3, #0
 1078 002c DBB2     		uxtb	r3, r3
 1079 002e 09E0     		b	.L68
 1080              	.L67:
1068:Generated_Source\PSoC5/UART_460800.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1081              		.loc 1 1068 0 is_stmt 1 discriminator 2
 1082 0030 FA89     		ldrh	r2, [r7, #14]
 1083 0032 BB89     		ldrh	r3, [r7, #12]
 1084 0034 D31A     		subs	r3, r2, r3
1067:Generated_Source\PSoC5/UART_460800.c ****                                 ((locTxBufferWrite - locTxBufferRead) ==
 1085              		.loc 1 1067 0 discriminator 2
 1086 0036 40F2FF72 		movw	r2, #2047
 1087 003a 9342     		cmp	r3, r2
 1088 003c 0CBF     		ite	eq
 1089 003e 0123     		moveq	r3, #1
 1090 0040 0023     		movne	r3, #0
 1091 0042 DBB2     		uxtb	r3, r3
 1092              	.L68:
1069:Generated_Source\PSoC5/UART_460800.c ****                                 (uint16)(UART_460800_TX_BUFFER_SIZE - 1u)) );
 1093              		.loc 1 1069 0
 1094 0044 002B     		cmp	r3, #0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 39


 1095 0046 E0D1     		bne	.L69
1070:Generated_Source\PSoC5/UART_460800.c **** 
1071:Generated_Source\PSoC5/UART_460800.c ****         if( (locTxBufferRead == locTxBufferWrite) &&
 1096              		.loc 1 1071 0
 1097 0048 BA89     		ldrh	r2, [r7, #12]
 1098 004a FB89     		ldrh	r3, [r7, #14]
 1099 004c 9A42     		cmp	r2, r3
 1100 004e 0AD1     		bne	.L70
1072:Generated_Source\PSoC5/UART_460800.c ****             ((UART_460800_TXSTATUS_REG & UART_460800_TX_STS_FIFO_FULL) == 0u) )
 1101              		.loc 1 1072 0 discriminator 1
 1102 0050 164B     		ldr	r3, .L74+8
 1103 0052 1B78     		ldrb	r3, [r3]
 1104 0054 DBB2     		uxtb	r3, r3
 1105 0056 03F00403 		and	r3, r3, #4
1071:Generated_Source\PSoC5/UART_460800.c ****             ((UART_460800_TXSTATUS_REG & UART_460800_TX_STS_FIFO_FULL) == 0u) )
 1106              		.loc 1 1071 0 discriminator 1
 1107 005a 002B     		cmp	r3, #0
 1108 005c 03D1     		bne	.L70
1073:Generated_Source\PSoC5/UART_460800.c ****         {
1074:Generated_Source\PSoC5/UART_460800.c ****             /* Add directly to the FIFO */
1075:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_TXDATA_REG = txDataByte;
 1109              		.loc 1 1075 0
 1110 005e 144A     		ldr	r2, .L74+12
 1111 0060 FB79     		ldrb	r3, [r7, #7]
 1112 0062 1370     		strb	r3, [r2]
1076:Generated_Source\PSoC5/UART_460800.c ****         }
1077:Generated_Source\PSoC5/UART_460800.c ****         else
1078:Generated_Source\PSoC5/UART_460800.c ****         {
1079:Generated_Source\PSoC5/UART_460800.c ****             if(locTxBufferWrite >= UART_460800_TX_BUFFER_SIZE)
1080:Generated_Source\PSoC5/UART_460800.c ****             {
1081:Generated_Source\PSoC5/UART_460800.c ****                 locTxBufferWrite = 0u;
1082:Generated_Source\PSoC5/UART_460800.c ****             }
1083:Generated_Source\PSoC5/UART_460800.c ****             /* Add to the software buffer. */
1084:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_txBuffer[locTxBufferWrite] = txDataByte;
1085:Generated_Source\PSoC5/UART_460800.c ****             locTxBufferWrite++;
1086:Generated_Source\PSoC5/UART_460800.c **** 
1087:Generated_Source\PSoC5/UART_460800.c ****             /* Finally, update the real output pointer */
1088:Generated_Source\PSoC5/UART_460800.c ****         #if ((UART_460800_TX_BUFFER_SIZE > UART_460800_MAX_BYTE_VALUE) && (CY_PSOC3))
1089:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_DisableTxInt();
1090:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_TX_BUFFER_SIZE > UART_460800_MAX_BYTE_VALUE) && (CY_PSOC3) */
1091:Generated_Source\PSoC5/UART_460800.c **** 
1092:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_txBufferWrite = locTxBufferWrite;
1093:Generated_Source\PSoC5/UART_460800.c **** 
1094:Generated_Source\PSoC5/UART_460800.c ****         #if ((UART_460800_TX_BUFFER_SIZE > UART_460800_MAX_BYTE_VALUE) && (CY_PSOC3))
1095:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_EnableTxInt();
1096:Generated_Source\PSoC5/UART_460800.c ****         #endif /* (UART_460800_TX_BUFFER_SIZE > UART_460800_MAX_BYTE_VALUE) && (CY_PSOC3) */
1097:Generated_Source\PSoC5/UART_460800.c **** 
1098:Generated_Source\PSoC5/UART_460800.c ****             if(0u != (UART_460800_TXSTATUS_REG & UART_460800_TX_STS_FIFO_EMPTY))
1099:Generated_Source\PSoC5/UART_460800.c ****             {
1100:Generated_Source\PSoC5/UART_460800.c ****                 /* Trigger TX interrupt to send software buffer */
1101:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_SetPendingTxInt();
1102:Generated_Source\PSoC5/UART_460800.c ****             }
1103:Generated_Source\PSoC5/UART_460800.c ****         }
1104:Generated_Source\PSoC5/UART_460800.c **** 
1105:Generated_Source\PSoC5/UART_460800.c ****     #else
1106:Generated_Source\PSoC5/UART_460800.c **** 
1107:Generated_Source\PSoC5/UART_460800.c ****         while((UART_460800_TXSTATUS_REG & UART_460800_TX_STS_FIFO_FULL) != 0u)
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 40


1108:Generated_Source\PSoC5/UART_460800.c ****         {
1109:Generated_Source\PSoC5/UART_460800.c ****             /* Wait for room in the FIFO */
1110:Generated_Source\PSoC5/UART_460800.c ****         }
1111:Generated_Source\PSoC5/UART_460800.c **** 
1112:Generated_Source\PSoC5/UART_460800.c ****         /* Add directly to the FIFO */
1113:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_TXDATA_REG = txDataByte;
1114:Generated_Source\PSoC5/UART_460800.c **** 
1115:Generated_Source\PSoC5/UART_460800.c ****     #endif /* UART_460800_TX_INTERRUPT_ENABLED */
1116:Generated_Source\PSoC5/UART_460800.c ****     }
 1113              		.loc 1 1116 0
 1114 0064 19E0     		b	.L73
 1115              	.L70:
1079:Generated_Source\PSoC5/UART_460800.c ****             {
 1116              		.loc 1 1079 0
 1117 0066 FB89     		ldrh	r3, [r7, #14]
 1118 0068 B3F5006F 		cmp	r3, #2048
 1119 006c 01D3     		bcc	.L72
1081:Generated_Source\PSoC5/UART_460800.c ****             }
 1120              		.loc 1 1081 0
 1121 006e 0023     		movs	r3, #0
 1122 0070 FB81     		strh	r3, [r7, #14]	@ movhi
 1123              	.L72:
1084:Generated_Source\PSoC5/UART_460800.c ****             locTxBufferWrite++;
 1124              		.loc 1 1084 0
 1125 0072 FB89     		ldrh	r3, [r7, #14]
 1126 0074 0F49     		ldr	r1, .L74+16
 1127 0076 FA79     		ldrb	r2, [r7, #7]
 1128 0078 CA54     		strb	r2, [r1, r3]
1085:Generated_Source\PSoC5/UART_460800.c **** 
 1129              		.loc 1 1085 0
 1130 007a FB89     		ldrh	r3, [r7, #14]
 1131 007c 0133     		adds	r3, r3, #1
 1132 007e FB81     		strh	r3, [r7, #14]	@ movhi
1092:Generated_Source\PSoC5/UART_460800.c **** 
 1133              		.loc 1 1092 0
 1134 0080 084A     		ldr	r2, .L74
 1135 0082 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1136 0084 1380     		strh	r3, [r2]	@ movhi
1098:Generated_Source\PSoC5/UART_460800.c ****             {
 1137              		.loc 1 1098 0
 1138 0086 094B     		ldr	r3, .L74+8
 1139 0088 1B78     		ldrb	r3, [r3]
 1140 008a DBB2     		uxtb	r3, r3
 1141 008c 03F00203 		and	r3, r3, #2
 1142 0090 002B     		cmp	r3, #0
 1143 0092 02D0     		beq	.L73
1101:Generated_Source\PSoC5/UART_460800.c ****             }
 1144              		.loc 1 1101 0
 1145 0094 084B     		ldr	r3, .L74+20
 1146 0096 0822     		movs	r2, #8
 1147 0098 1A60     		str	r2, [r3]
 1148              	.L73:
 1149              		.loc 1 1116 0
 1150 009a 00BF     		nop
 1151 009c 1437     		adds	r7, r7, #20
 1152              		.cfi_def_cfa_offset 4
 1153 009e BD46     		mov	sp, r7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 41


 1154              		.cfi_def_cfa_register 13
 1155              		@ sp needed
 1156 00a0 80BC     		pop	{r7}
 1157              		.cfi_restore 7
 1158              		.cfi_def_cfa_offset 0
 1159 00a2 7047     		bx	lr
 1160              	.L75:
 1161              		.align	2
 1162              	.L74:
 1163 00a4 00000000 		.word	UART_460800_txBufferWrite
 1164 00a8 00000000 		.word	UART_460800_txBufferRead
 1165 00ac 64640040 		.word	1073767524
 1166 00b0 44640040 		.word	1073767492
 1167 00b4 00000000 		.word	UART_460800_txBuffer
 1168 00b8 00E200E0 		.word	-536813056
 1169              		.cfi_endproc
 1170              	.LFE19:
 1171              		.size	UART_460800_PutChar, .-UART_460800_PutChar
 1172              		.section	.text.UART_460800_PutString,"ax",%progbits
 1173              		.align	2
 1174              		.global	UART_460800_PutString
 1175              		.thumb
 1176              		.thumb_func
 1177              		.type	UART_460800_PutString, %function
 1178              	UART_460800_PutString:
 1179              	.LFB20:
1117:Generated_Source\PSoC5/UART_460800.c **** 
1118:Generated_Source\PSoC5/UART_460800.c **** 
1119:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
1120:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_PutString
1121:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
1122:Generated_Source\PSoC5/UART_460800.c ****     *
1123:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
1124:Generated_Source\PSoC5/UART_460800.c ****     *  Sends a NULL terminated string to the TX buffer for transmission.
1125:Generated_Source\PSoC5/UART_460800.c ****     *
1126:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
1127:Generated_Source\PSoC5/UART_460800.c ****     *  string[]: Pointer to the null terminated string array residing in RAM or ROM
1128:Generated_Source\PSoC5/UART_460800.c ****     *
1129:Generated_Source\PSoC5/UART_460800.c ****     * Return:
1130:Generated_Source\PSoC5/UART_460800.c ****     *  None.
1131:Generated_Source\PSoC5/UART_460800.c ****     *
1132:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
1133:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_initVar - checked to identify that the component has been
1134:Generated_Source\PSoC5/UART_460800.c ****     *     initialized.
1135:Generated_Source\PSoC5/UART_460800.c ****     *
1136:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
1137:Generated_Source\PSoC5/UART_460800.c ****     *  No.
1138:Generated_Source\PSoC5/UART_460800.c ****     *
1139:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
1140:Generated_Source\PSoC5/UART_460800.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1141:Generated_Source\PSoC5/UART_460800.c ****     *  function blocks until the last character of the string is loaded into the
1142:Generated_Source\PSoC5/UART_460800.c ****     *  TX buffer.
1143:Generated_Source\PSoC5/UART_460800.c ****     *
1144:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
1145:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_PutString(const char8 string[]) 
1146:Generated_Source\PSoC5/UART_460800.c ****     {
 1180              		.loc 1 1146 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 42


 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 16
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184 0000 80B5     		push	{r7, lr}
 1185              		.cfi_def_cfa_offset 8
 1186              		.cfi_offset 7, -8
 1187              		.cfi_offset 14, -4
 1188 0002 84B0     		sub	sp, sp, #16
 1189              		.cfi_def_cfa_offset 24
 1190 0004 00AF     		add	r7, sp, #0
 1191              		.cfi_def_cfa_register 7
 1192 0006 7860     		str	r0, [r7, #4]
1147:Generated_Source\PSoC5/UART_460800.c ****         uint16 bufIndex = 0u;
 1193              		.loc 1 1147 0
 1194 0008 0023     		movs	r3, #0
 1195 000a FB81     		strh	r3, [r7, #14]	@ movhi
1148:Generated_Source\PSoC5/UART_460800.c **** 
1149:Generated_Source\PSoC5/UART_460800.c ****         /* If not Initialized then skip this function */
1150:Generated_Source\PSoC5/UART_460800.c ****         if(UART_460800_initVar != 0u)
 1196              		.loc 1 1150 0
 1197 000c 0C4B     		ldr	r3, .L81
 1198 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1199 0010 002B     		cmp	r3, #0
 1200 0012 10D0     		beq	.L80
1151:Generated_Source\PSoC5/UART_460800.c ****         {
1152:Generated_Source\PSoC5/UART_460800.c ****             /* This is a blocking function, it will not exit until all data is sent */
1153:Generated_Source\PSoC5/UART_460800.c ****             while(string[bufIndex] != (char8) 0)
 1201              		.loc 1 1153 0
 1202 0014 09E0     		b	.L78
 1203              	.L79:
1154:Generated_Source\PSoC5/UART_460800.c ****             {
1155:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_PutChar((uint8)string[bufIndex]);
 1204              		.loc 1 1155 0
 1205 0016 FB89     		ldrh	r3, [r7, #14]
 1206 0018 7A68     		ldr	r2, [r7, #4]
 1207 001a 1344     		add	r3, r3, r2
 1208 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1209 001e 1846     		mov	r0, r3
 1210 0020 FFF7FEFF 		bl	UART_460800_PutChar
1156:Generated_Source\PSoC5/UART_460800.c ****                 bufIndex++;
 1211              		.loc 1 1156 0
 1212 0024 FB89     		ldrh	r3, [r7, #14]
 1213 0026 0133     		adds	r3, r3, #1
 1214 0028 FB81     		strh	r3, [r7, #14]	@ movhi
 1215              	.L78:
1153:Generated_Source\PSoC5/UART_460800.c ****             {
 1216              		.loc 1 1153 0
 1217 002a FB89     		ldrh	r3, [r7, #14]
 1218 002c 7A68     		ldr	r2, [r7, #4]
 1219 002e 1344     		add	r3, r3, r2
 1220 0030 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1221 0032 002B     		cmp	r3, #0
 1222 0034 EFD1     		bne	.L79
 1223              	.L80:
1157:Generated_Source\PSoC5/UART_460800.c ****             }
1158:Generated_Source\PSoC5/UART_460800.c ****         }
1159:Generated_Source\PSoC5/UART_460800.c ****     }
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 43


 1224              		.loc 1 1159 0
 1225 0036 00BF     		nop
 1226 0038 1037     		adds	r7, r7, #16
 1227              		.cfi_def_cfa_offset 8
 1228 003a BD46     		mov	sp, r7
 1229              		.cfi_def_cfa_register 13
 1230              		@ sp needed
 1231 003c 80BD     		pop	{r7, pc}
 1232              	.L82:
 1233 003e 00BF     		.align	2
 1234              	.L81:
 1235 0040 00000000 		.word	UART_460800_initVar
 1236              		.cfi_endproc
 1237              	.LFE20:
 1238              		.size	UART_460800_PutString, .-UART_460800_PutString
 1239              		.section	.text.UART_460800_PutArray,"ax",%progbits
 1240              		.align	2
 1241              		.global	UART_460800_PutArray
 1242              		.thumb
 1243              		.thumb_func
 1244              		.type	UART_460800_PutArray, %function
 1245              	UART_460800_PutArray:
 1246              	.LFB21:
1160:Generated_Source\PSoC5/UART_460800.c **** 
1161:Generated_Source\PSoC5/UART_460800.c **** 
1162:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
1163:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_PutArray
1164:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
1165:Generated_Source\PSoC5/UART_460800.c ****     *
1166:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
1167:Generated_Source\PSoC5/UART_460800.c ****     *  Places N bytes of data from a memory array into the TX buffer for
1168:Generated_Source\PSoC5/UART_460800.c ****     *  transmission.
1169:Generated_Source\PSoC5/UART_460800.c ****     *
1170:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
1171:Generated_Source\PSoC5/UART_460800.c ****     *  string[]: Address of the memory array residing in RAM or ROM.
1172:Generated_Source\PSoC5/UART_460800.c ****     *  byteCount: Number of bytes to be transmitted. The type depends on TX Buffer
1173:Generated_Source\PSoC5/UART_460800.c ****     *             Size parameter.
1174:Generated_Source\PSoC5/UART_460800.c ****     *
1175:Generated_Source\PSoC5/UART_460800.c ****     * Return:
1176:Generated_Source\PSoC5/UART_460800.c ****     *  None.
1177:Generated_Source\PSoC5/UART_460800.c ****     *
1178:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
1179:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_initVar - checked to identify that the component has been
1180:Generated_Source\PSoC5/UART_460800.c ****     *     initialized.
1181:Generated_Source\PSoC5/UART_460800.c ****     *
1182:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
1183:Generated_Source\PSoC5/UART_460800.c ****     *  No.
1184:Generated_Source\PSoC5/UART_460800.c ****     *
1185:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
1186:Generated_Source\PSoC5/UART_460800.c ****     *  If there is not enough memory in the TX buffer for the entire string, this
1187:Generated_Source\PSoC5/UART_460800.c ****     *  function blocks until the last character of the string is loaded into the
1188:Generated_Source\PSoC5/UART_460800.c ****     *  TX buffer.
1189:Generated_Source\PSoC5/UART_460800.c ****     *
1190:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
1191:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_PutArray(const uint8 string[], uint16 byteCount)
1192:Generated_Source\PSoC5/UART_460800.c ****                                                                     
1193:Generated_Source\PSoC5/UART_460800.c ****     {
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 44


 1247              		.loc 1 1193 0
 1248              		.cfi_startproc
 1249              		@ args = 0, pretend = 0, frame = 16
 1250              		@ frame_needed = 1, uses_anonymous_args = 0
 1251 0000 80B5     		push	{r7, lr}
 1252              		.cfi_def_cfa_offset 8
 1253              		.cfi_offset 7, -8
 1254              		.cfi_offset 14, -4
 1255 0002 84B0     		sub	sp, sp, #16
 1256              		.cfi_def_cfa_offset 24
 1257 0004 00AF     		add	r7, sp, #0
 1258              		.cfi_def_cfa_register 7
 1259 0006 7860     		str	r0, [r7, #4]
 1260 0008 0B46     		mov	r3, r1
 1261 000a 7B80     		strh	r3, [r7, #2]	@ movhi
1194:Generated_Source\PSoC5/UART_460800.c ****         uint16 bufIndex = 0u;
 1262              		.loc 1 1194 0
 1263 000c 0023     		movs	r3, #0
 1264 000e FB81     		strh	r3, [r7, #14]	@ movhi
1195:Generated_Source\PSoC5/UART_460800.c **** 
1196:Generated_Source\PSoC5/UART_460800.c ****         /* If not Initialized then skip this function */
1197:Generated_Source\PSoC5/UART_460800.c ****         if(UART_460800_initVar != 0u)
 1265              		.loc 1 1197 0
 1266 0010 0B4B     		ldr	r3, .L88
 1267 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1268 0014 002B     		cmp	r3, #0
 1269 0016 0ED0     		beq	.L87
1198:Generated_Source\PSoC5/UART_460800.c ****         {
1199:Generated_Source\PSoC5/UART_460800.c ****             while(bufIndex < byteCount)
 1270              		.loc 1 1199 0
 1271 0018 09E0     		b	.L85
 1272              	.L86:
1200:Generated_Source\PSoC5/UART_460800.c ****             {
1201:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_PutChar(string[bufIndex]);
 1273              		.loc 1 1201 0
 1274 001a FB89     		ldrh	r3, [r7, #14]
 1275 001c 7A68     		ldr	r2, [r7, #4]
 1276 001e 1344     		add	r3, r3, r2
 1277 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1278 0022 1846     		mov	r0, r3
 1279 0024 FFF7FEFF 		bl	UART_460800_PutChar
1202:Generated_Source\PSoC5/UART_460800.c ****                 bufIndex++;
 1280              		.loc 1 1202 0
 1281 0028 FB89     		ldrh	r3, [r7, #14]
 1282 002a 0133     		adds	r3, r3, #1
 1283 002c FB81     		strh	r3, [r7, #14]	@ movhi
 1284              	.L85:
1199:Generated_Source\PSoC5/UART_460800.c ****             {
 1285              		.loc 1 1199 0
 1286 002e FA89     		ldrh	r2, [r7, #14]
 1287 0030 7B88     		ldrh	r3, [r7, #2]
 1288 0032 9A42     		cmp	r2, r3
 1289 0034 F1D3     		bcc	.L86
 1290              	.L87:
1203:Generated_Source\PSoC5/UART_460800.c ****             }
1204:Generated_Source\PSoC5/UART_460800.c ****         }
1205:Generated_Source\PSoC5/UART_460800.c ****     }
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 45


 1291              		.loc 1 1205 0
 1292 0036 00BF     		nop
 1293 0038 1037     		adds	r7, r7, #16
 1294              		.cfi_def_cfa_offset 8
 1295 003a BD46     		mov	sp, r7
 1296              		.cfi_def_cfa_register 13
 1297              		@ sp needed
 1298 003c 80BD     		pop	{r7, pc}
 1299              	.L89:
 1300 003e 00BF     		.align	2
 1301              	.L88:
 1302 0040 00000000 		.word	UART_460800_initVar
 1303              		.cfi_endproc
 1304              	.LFE21:
 1305              		.size	UART_460800_PutArray, .-UART_460800_PutArray
 1306              		.section	.text.UART_460800_PutCRLF,"ax",%progbits
 1307              		.align	2
 1308              		.global	UART_460800_PutCRLF
 1309              		.thumb
 1310              		.thumb_func
 1311              		.type	UART_460800_PutCRLF, %function
 1312              	UART_460800_PutCRLF:
 1313              	.LFB22:
1206:Generated_Source\PSoC5/UART_460800.c **** 
1207:Generated_Source\PSoC5/UART_460800.c **** 
1208:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
1209:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_PutCRLF
1210:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
1211:Generated_Source\PSoC5/UART_460800.c ****     *
1212:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
1213:Generated_Source\PSoC5/UART_460800.c ****     *  Writes a byte of data followed by a carriage return (0x0D) and line feed
1214:Generated_Source\PSoC5/UART_460800.c ****     *  (0x0A) to the transmit buffer.
1215:Generated_Source\PSoC5/UART_460800.c ****     *
1216:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
1217:Generated_Source\PSoC5/UART_460800.c ****     *  txDataByte: Data byte to transmit before the carriage return and line feed.
1218:Generated_Source\PSoC5/UART_460800.c ****     *
1219:Generated_Source\PSoC5/UART_460800.c ****     * Return:
1220:Generated_Source\PSoC5/UART_460800.c ****     *  None.
1221:Generated_Source\PSoC5/UART_460800.c ****     *
1222:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
1223:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_initVar - checked to identify that the component has been
1224:Generated_Source\PSoC5/UART_460800.c ****     *     initialized.
1225:Generated_Source\PSoC5/UART_460800.c ****     *
1226:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
1227:Generated_Source\PSoC5/UART_460800.c ****     *  No.
1228:Generated_Source\PSoC5/UART_460800.c ****     *
1229:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
1230:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_PutCRLF(uint8 txDataByte) 
1231:Generated_Source\PSoC5/UART_460800.c ****     {
 1314              		.loc 1 1231 0
 1315              		.cfi_startproc
 1316              		@ args = 0, pretend = 0, frame = 8
 1317              		@ frame_needed = 1, uses_anonymous_args = 0
 1318 0000 80B5     		push	{r7, lr}
 1319              		.cfi_def_cfa_offset 8
 1320              		.cfi_offset 7, -8
 1321              		.cfi_offset 14, -4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 46


 1322 0002 82B0     		sub	sp, sp, #8
 1323              		.cfi_def_cfa_offset 16
 1324 0004 00AF     		add	r7, sp, #0
 1325              		.cfi_def_cfa_register 7
 1326 0006 0346     		mov	r3, r0
 1327 0008 FB71     		strb	r3, [r7, #7]
1232:Generated_Source\PSoC5/UART_460800.c ****         /* If not Initialized then skip this function */
1233:Generated_Source\PSoC5/UART_460800.c ****         if(UART_460800_initVar != 0u)
 1328              		.loc 1 1233 0
 1329 000a 094B     		ldr	r3, .L93
 1330 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1331 000e 002B     		cmp	r3, #0
 1332 0010 09D0     		beq	.L92
1234:Generated_Source\PSoC5/UART_460800.c ****         {
1235:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_PutChar(txDataByte);
 1333              		.loc 1 1235 0
 1334 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1335 0014 1846     		mov	r0, r3
 1336 0016 FFF7FEFF 		bl	UART_460800_PutChar
1236:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_PutChar(0x0Du);
 1337              		.loc 1 1236 0
 1338 001a 0D20     		movs	r0, #13
 1339 001c FFF7FEFF 		bl	UART_460800_PutChar
1237:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_PutChar(0x0Au);
 1340              		.loc 1 1237 0
 1341 0020 0A20     		movs	r0, #10
 1342 0022 FFF7FEFF 		bl	UART_460800_PutChar
 1343              	.L92:
1238:Generated_Source\PSoC5/UART_460800.c ****         }
1239:Generated_Source\PSoC5/UART_460800.c ****     }
 1344              		.loc 1 1239 0
 1345 0026 00BF     		nop
 1346 0028 0837     		adds	r7, r7, #8
 1347              		.cfi_def_cfa_offset 8
 1348 002a BD46     		mov	sp, r7
 1349              		.cfi_def_cfa_register 13
 1350              		@ sp needed
 1351 002c 80BD     		pop	{r7, pc}
 1352              	.L94:
 1353 002e 00BF     		.align	2
 1354              	.L93:
 1355 0030 00000000 		.word	UART_460800_initVar
 1356              		.cfi_endproc
 1357              	.LFE22:
 1358              		.size	UART_460800_PutCRLF, .-UART_460800_PutCRLF
 1359              		.section	.text.UART_460800_GetTxBufferSize,"ax",%progbits
 1360              		.align	2
 1361              		.global	UART_460800_GetTxBufferSize
 1362              		.thumb
 1363              		.thumb_func
 1364              		.type	UART_460800_GetTxBufferSize, %function
 1365              	UART_460800_GetTxBufferSize:
 1366              	.LFB23:
1240:Generated_Source\PSoC5/UART_460800.c **** 
1241:Generated_Source\PSoC5/UART_460800.c **** 
1242:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
1243:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_GetTxBufferSize
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 47


1244:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
1245:Generated_Source\PSoC5/UART_460800.c ****     *
1246:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
1247:Generated_Source\PSoC5/UART_460800.c ****     *  Returns the number of bytes in the TX buffer which are waiting to be 
1248:Generated_Source\PSoC5/UART_460800.c ****     *  transmitted.
1249:Generated_Source\PSoC5/UART_460800.c ****     *  * TX software buffer is disabled (TX Buffer Size parameter is equal to 4): 
1250:Generated_Source\PSoC5/UART_460800.c ****     *    returns 0 for empty TX FIFO, 1 for not full TX FIFO or 4 for full TX FIFO.
1251:Generated_Source\PSoC5/UART_460800.c ****     *  * TX software buffer is enabled: returns the number of bytes in the TX 
1252:Generated_Source\PSoC5/UART_460800.c ****     *    software buffer which are waiting to be transmitted. Bytes available in the
1253:Generated_Source\PSoC5/UART_460800.c ****     *    TX FIFO do not count.
1254:Generated_Source\PSoC5/UART_460800.c ****     *
1255:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
1256:Generated_Source\PSoC5/UART_460800.c ****     *  None.
1257:Generated_Source\PSoC5/UART_460800.c ****     *
1258:Generated_Source\PSoC5/UART_460800.c ****     * Return:
1259:Generated_Source\PSoC5/UART_460800.c ****     *  Number of bytes used in the TX buffer. Return value type depends on the TX 
1260:Generated_Source\PSoC5/UART_460800.c ****     *  Buffer Size parameter.
1261:Generated_Source\PSoC5/UART_460800.c ****     *
1262:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
1263:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBufferWrite - used to calculate left space.
1264:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBufferRead - used to calculate left space.
1265:Generated_Source\PSoC5/UART_460800.c ****     *
1266:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
1267:Generated_Source\PSoC5/UART_460800.c ****     *  No.
1268:Generated_Source\PSoC5/UART_460800.c ****     *
1269:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
1270:Generated_Source\PSoC5/UART_460800.c ****     *  Allows the user to find out how full the TX Buffer is.
1271:Generated_Source\PSoC5/UART_460800.c ****     *
1272:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
1273:Generated_Source\PSoC5/UART_460800.c ****     uint16 UART_460800_GetTxBufferSize(void)
1274:Generated_Source\PSoC5/UART_460800.c ****                                                             
1275:Generated_Source\PSoC5/UART_460800.c ****     {
 1367              		.loc 1 1275 0
 1368              		.cfi_startproc
 1369              		@ args = 0, pretend = 0, frame = 8
 1370              		@ frame_needed = 1, uses_anonymous_args = 0
 1371              		@ link register save eliminated.
 1372 0000 80B4     		push	{r7}
 1373              		.cfi_def_cfa_offset 4
 1374              		.cfi_offset 7, -4
 1375 0002 83B0     		sub	sp, sp, #12
 1376              		.cfi_def_cfa_offset 16
 1377 0004 00AF     		add	r7, sp, #0
 1378              		.cfi_def_cfa_register 7
1276:Generated_Source\PSoC5/UART_460800.c ****         uint16 size;
1277:Generated_Source\PSoC5/UART_460800.c **** 
1278:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_TX_INTERRUPT_ENABLED)
1279:Generated_Source\PSoC5/UART_460800.c **** 
1280:Generated_Source\PSoC5/UART_460800.c ****         /* Protect variables that could change on interrupt. */
1281:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_DisableTxInt();
 1379              		.loc 1 1281 0
 1380 0006 174B     		ldr	r3, .L100
 1381 0008 0822     		movs	r2, #8
 1382 000a 1A60     		str	r2, [r3]
1282:Generated_Source\PSoC5/UART_460800.c **** 
1283:Generated_Source\PSoC5/UART_460800.c ****         if(UART_460800_txBufferRead == UART_460800_txBufferWrite)
 1383              		.loc 1 1283 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 48


 1384 000c 164B     		ldr	r3, .L100+4
 1385 000e 1B88     		ldrh	r3, [r3]	@ movhi
 1386 0010 9AB2     		uxth	r2, r3
 1387 0012 164B     		ldr	r3, .L100+8
 1388 0014 1B88     		ldrh	r3, [r3]
 1389 0016 9A42     		cmp	r2, r3
 1390 0018 02D1     		bne	.L96
1284:Generated_Source\PSoC5/UART_460800.c ****         {
1285:Generated_Source\PSoC5/UART_460800.c ****             size = 0u;
 1391              		.loc 1 1285 0
 1392 001a 0023     		movs	r3, #0
 1393 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1394 001e 18E0     		b	.L97
 1395              	.L96:
1286:Generated_Source\PSoC5/UART_460800.c ****         }
1287:Generated_Source\PSoC5/UART_460800.c ****         else if(UART_460800_txBufferRead < UART_460800_txBufferWrite)
 1396              		.loc 1 1287 0
 1397 0020 114B     		ldr	r3, .L100+4
 1398 0022 1B88     		ldrh	r3, [r3]	@ movhi
 1399 0024 9AB2     		uxth	r2, r3
 1400 0026 114B     		ldr	r3, .L100+8
 1401 0028 1B88     		ldrh	r3, [r3]
 1402 002a 9A42     		cmp	r2, r3
 1403 002c 07D2     		bcs	.L98
1288:Generated_Source\PSoC5/UART_460800.c ****         {
1289:Generated_Source\PSoC5/UART_460800.c ****             size = (UART_460800_txBufferWrite - UART_460800_txBufferRead);
 1404              		.loc 1 1289 0
 1405 002e 0F4B     		ldr	r3, .L100+8
 1406 0030 1A88     		ldrh	r2, [r3]
 1407 0032 0D4B     		ldr	r3, .L100+4
 1408 0034 1B88     		ldrh	r3, [r3]	@ movhi
 1409 0036 9BB2     		uxth	r3, r3
 1410 0038 D31A     		subs	r3, r2, r3
 1411 003a FB80     		strh	r3, [r7, #6]	@ movhi
 1412 003c 09E0     		b	.L97
 1413              	.L98:
1290:Generated_Source\PSoC5/UART_460800.c ****         }
1291:Generated_Source\PSoC5/UART_460800.c ****         else
1292:Generated_Source\PSoC5/UART_460800.c ****         {
1293:Generated_Source\PSoC5/UART_460800.c ****             size = (UART_460800_TX_BUFFER_SIZE - UART_460800_txBufferRead) +
 1414              		.loc 1 1293 0
 1415 003e 0B4B     		ldr	r3, .L100+8
 1416 0040 1A88     		ldrh	r2, [r3]
 1417 0042 094B     		ldr	r3, .L100+4
 1418 0044 1B88     		ldrh	r3, [r3]	@ movhi
 1419 0046 9BB2     		uxth	r3, r3
 1420 0048 D31A     		subs	r3, r2, r3
 1421 004a 9BB2     		uxth	r3, r3
 1422 004c 03F50063 		add	r3, r3, #2048
 1423 0050 FB80     		strh	r3, [r7, #6]	@ movhi
 1424              	.L97:
1294:Generated_Source\PSoC5/UART_460800.c ****                     UART_460800_txBufferWrite;
1295:Generated_Source\PSoC5/UART_460800.c ****         }
1296:Generated_Source\PSoC5/UART_460800.c **** 
1297:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_EnableTxInt();
 1425              		.loc 1 1297 0
 1426 0052 074B     		ldr	r3, .L100+12
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 49


 1427 0054 0822     		movs	r2, #8
 1428 0056 1A60     		str	r2, [r3]
1298:Generated_Source\PSoC5/UART_460800.c **** 
1299:Generated_Source\PSoC5/UART_460800.c ****     #else
1300:Generated_Source\PSoC5/UART_460800.c **** 
1301:Generated_Source\PSoC5/UART_460800.c ****         size = UART_460800_TXSTATUS_REG;
1302:Generated_Source\PSoC5/UART_460800.c **** 
1303:Generated_Source\PSoC5/UART_460800.c ****         /* Is the fifo is full. */
1304:Generated_Source\PSoC5/UART_460800.c ****         if((size & UART_460800_TX_STS_FIFO_FULL) != 0u)
1305:Generated_Source\PSoC5/UART_460800.c ****         {
1306:Generated_Source\PSoC5/UART_460800.c ****             size = UART_460800_FIFO_LENGTH;
1307:Generated_Source\PSoC5/UART_460800.c ****         }
1308:Generated_Source\PSoC5/UART_460800.c ****         else if((size & UART_460800_TX_STS_FIFO_EMPTY) != 0u)
1309:Generated_Source\PSoC5/UART_460800.c ****         {
1310:Generated_Source\PSoC5/UART_460800.c ****             size = 0u;
1311:Generated_Source\PSoC5/UART_460800.c ****         }
1312:Generated_Source\PSoC5/UART_460800.c ****         else
1313:Generated_Source\PSoC5/UART_460800.c ****         {
1314:Generated_Source\PSoC5/UART_460800.c ****             /* We only know there is data in the fifo. */
1315:Generated_Source\PSoC5/UART_460800.c ****             size = 1u;
1316:Generated_Source\PSoC5/UART_460800.c ****         }
1317:Generated_Source\PSoC5/UART_460800.c **** 
1318:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_TX_INTERRUPT_ENABLED) */
1319:Generated_Source\PSoC5/UART_460800.c **** 
1320:Generated_Source\PSoC5/UART_460800.c ****     return(size);
 1429              		.loc 1 1320 0
 1430 0058 FB88     		ldrh	r3, [r7, #6]
1321:Generated_Source\PSoC5/UART_460800.c ****     }
 1431              		.loc 1 1321 0
 1432 005a 1846     		mov	r0, r3
 1433 005c 0C37     		adds	r7, r7, #12
 1434              		.cfi_def_cfa_offset 4
 1435 005e BD46     		mov	sp, r7
 1436              		.cfi_def_cfa_register 13
 1437              		@ sp needed
 1438 0060 80BC     		pop	{r7}
 1439              		.cfi_restore 7
 1440              		.cfi_def_cfa_offset 0
 1441 0062 7047     		bx	lr
 1442              	.L101:
 1443              		.align	2
 1444              	.L100:
 1445 0064 80E100E0 		.word	-536813184
 1446 0068 00000000 		.word	UART_460800_txBufferRead
 1447 006c 00000000 		.word	UART_460800_txBufferWrite
 1448 0070 00E100E0 		.word	-536813312
 1449              		.cfi_endproc
 1450              	.LFE23:
 1451              		.size	UART_460800_GetTxBufferSize, .-UART_460800_GetTxBufferSize
 1452              		.section	.text.UART_460800_ClearTxBuffer,"ax",%progbits
 1453              		.align	2
 1454              		.global	UART_460800_ClearTxBuffer
 1455              		.thumb
 1456              		.thumb_func
 1457              		.type	UART_460800_ClearTxBuffer, %function
 1458              	UART_460800_ClearTxBuffer:
 1459              	.LFB24:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 50


1322:Generated_Source\PSoC5/UART_460800.c **** 
1323:Generated_Source\PSoC5/UART_460800.c **** 
1324:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
1325:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_ClearTxBuffer
1326:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
1327:Generated_Source\PSoC5/UART_460800.c ****     *
1328:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
1329:Generated_Source\PSoC5/UART_460800.c ****     *  Clears all data from the TX buffer and hardware TX FIFO.
1330:Generated_Source\PSoC5/UART_460800.c ****     *
1331:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
1332:Generated_Source\PSoC5/UART_460800.c ****     *  None.
1333:Generated_Source\PSoC5/UART_460800.c ****     *
1334:Generated_Source\PSoC5/UART_460800.c ****     * Return:
1335:Generated_Source\PSoC5/UART_460800.c ****     *  None.
1336:Generated_Source\PSoC5/UART_460800.c ****     *
1337:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
1338:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBufferWrite - cleared to zero.
1339:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_txBufferRead - cleared to zero.
1340:Generated_Source\PSoC5/UART_460800.c ****     *
1341:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
1342:Generated_Source\PSoC5/UART_460800.c ****     *  No.
1343:Generated_Source\PSoC5/UART_460800.c ****     *
1344:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
1345:Generated_Source\PSoC5/UART_460800.c ****     *  Setting the pointers to zero makes the system believe there is no data to
1346:Generated_Source\PSoC5/UART_460800.c ****     *  read and writing will resume at address 0 overwriting any data that may have
1347:Generated_Source\PSoC5/UART_460800.c ****     *  remained in the RAM.
1348:Generated_Source\PSoC5/UART_460800.c ****     *
1349:Generated_Source\PSoC5/UART_460800.c ****     * Side Effects:
1350:Generated_Source\PSoC5/UART_460800.c ****     *  Data waiting in the transmit buffer is not sent; a byte that is currently
1351:Generated_Source\PSoC5/UART_460800.c ****     *  transmitting finishes transmitting.
1352:Generated_Source\PSoC5/UART_460800.c ****     *
1353:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
1354:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_ClearTxBuffer(void) 
1355:Generated_Source\PSoC5/UART_460800.c ****     {
 1460              		.loc 1 1355 0
 1461              		.cfi_startproc
 1462              		@ args = 0, pretend = 0, frame = 8
 1463              		@ frame_needed = 1, uses_anonymous_args = 0
 1464 0000 80B5     		push	{r7, lr}
 1465              		.cfi_def_cfa_offset 8
 1466              		.cfi_offset 7, -8
 1467              		.cfi_offset 14, -4
 1468 0002 82B0     		sub	sp, sp, #8
 1469              		.cfi_def_cfa_offset 16
 1470 0004 00AF     		add	r7, sp, #0
 1471              		.cfi_def_cfa_register 7
1356:Generated_Source\PSoC5/UART_460800.c ****         uint8 enableInterrupts;
1357:Generated_Source\PSoC5/UART_460800.c **** 
1358:Generated_Source\PSoC5/UART_460800.c ****         enableInterrupts = CyEnterCriticalSection();
 1472              		.loc 1 1358 0
 1473 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 1474 000a 0346     		mov	r3, r0
 1475 000c FB71     		strb	r3, [r7, #7]
1359:Generated_Source\PSoC5/UART_460800.c ****         /* Clear the HW FIFO */
1360:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_TXDATA_AUX_CTL_REG |= (uint8)  UART_460800_TX_FIFO_CLR;
 1476              		.loc 1 1360 0
 1477 000e 124A     		ldr	r2, .L103
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 51


 1478 0010 114B     		ldr	r3, .L103
 1479 0012 1B78     		ldrb	r3, [r3]
 1480 0014 DBB2     		uxtb	r3, r3
 1481 0016 43F00103 		orr	r3, r3, #1
 1482 001a DBB2     		uxtb	r3, r3
 1483 001c 1370     		strb	r3, [r2]
1361:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_TXDATA_AUX_CTL_REG &= (uint8) ~UART_460800_TX_FIFO_CLR;
 1484              		.loc 1 1361 0
 1485 001e 0E4A     		ldr	r2, .L103
 1486 0020 0D4B     		ldr	r3, .L103
 1487 0022 1B78     		ldrb	r3, [r3]
 1488 0024 DBB2     		uxtb	r3, r3
 1489 0026 23F00103 		bic	r3, r3, #1
 1490 002a DBB2     		uxtb	r3, r3
 1491 002c 1370     		strb	r3, [r2]
1362:Generated_Source\PSoC5/UART_460800.c ****         CyExitCriticalSection(enableInterrupts);
 1492              		.loc 1 1362 0
 1493 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1494 0030 1846     		mov	r0, r3
 1495 0032 FFF7FEFF 		bl	CyExitCriticalSection
1363:Generated_Source\PSoC5/UART_460800.c **** 
1364:Generated_Source\PSoC5/UART_460800.c ****     #if (UART_460800_TX_INTERRUPT_ENABLED)
1365:Generated_Source\PSoC5/UART_460800.c **** 
1366:Generated_Source\PSoC5/UART_460800.c ****         /* Protect variables that could change on interrupt. */
1367:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_DisableTxInt();
 1496              		.loc 1 1367 0
 1497 0036 094B     		ldr	r3, .L103+4
 1498 0038 0822     		movs	r2, #8
 1499 003a 1A60     		str	r2, [r3]
1368:Generated_Source\PSoC5/UART_460800.c **** 
1369:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_txBufferRead = 0u;
 1500              		.loc 1 1369 0
 1501 003c 084B     		ldr	r3, .L103+8
 1502 003e 0022     		movs	r2, #0
 1503 0040 1A80     		strh	r2, [r3]	@ movhi
1370:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_txBufferWrite = 0u;
 1504              		.loc 1 1370 0
 1505 0042 084B     		ldr	r3, .L103+12
 1506 0044 0022     		movs	r2, #0
 1507 0046 1A80     		strh	r2, [r3]	@ movhi
1371:Generated_Source\PSoC5/UART_460800.c **** 
1372:Generated_Source\PSoC5/UART_460800.c ****         /* Enable Tx interrupt. */
1373:Generated_Source\PSoC5/UART_460800.c ****         UART_460800_EnableTxInt();
 1508              		.loc 1 1373 0
 1509 0048 074B     		ldr	r3, .L103+16
 1510 004a 0822     		movs	r2, #8
 1511 004c 1A60     		str	r2, [r3]
1374:Generated_Source\PSoC5/UART_460800.c **** 
1375:Generated_Source\PSoC5/UART_460800.c ****     #endif /* (UART_460800_TX_INTERRUPT_ENABLED) */
1376:Generated_Source\PSoC5/UART_460800.c ****     }
 1512              		.loc 1 1376 0
 1513 004e 00BF     		nop
 1514 0050 0837     		adds	r7, r7, #8
 1515              		.cfi_def_cfa_offset 8
 1516 0052 BD46     		mov	sp, r7
 1517              		.cfi_def_cfa_register 13
 1518              		@ sp needed
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 52


 1519 0054 80BD     		pop	{r7, pc}
 1520              	.L104:
 1521 0056 00BF     		.align	2
 1522              	.L103:
 1523 0058 94640040 		.word	1073767572
 1524 005c 80E100E0 		.word	-536813184
 1525 0060 00000000 		.word	UART_460800_txBufferRead
 1526 0064 00000000 		.word	UART_460800_txBufferWrite
 1527 0068 00E100E0 		.word	-536813312
 1528              		.cfi_endproc
 1529              	.LFE24:
 1530              		.size	UART_460800_ClearTxBuffer, .-UART_460800_ClearTxBuffer
 1531              		.section	.text.UART_460800_SendBreak,"ax",%progbits
 1532              		.align	2
 1533              		.global	UART_460800_SendBreak
 1534              		.thumb
 1535              		.thumb_func
 1536              		.type	UART_460800_SendBreak, %function
 1537              	UART_460800_SendBreak:
 1538              	.LFB25:
1377:Generated_Source\PSoC5/UART_460800.c **** 
1378:Generated_Source\PSoC5/UART_460800.c **** 
1379:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
1380:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_SendBreak
1381:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
1382:Generated_Source\PSoC5/UART_460800.c ****     *
1383:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
1384:Generated_Source\PSoC5/UART_460800.c ****     *  Transmits a break signal on the bus.
1385:Generated_Source\PSoC5/UART_460800.c ****     *
1386:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
1387:Generated_Source\PSoC5/UART_460800.c ****     *  uint8 retMode:  Send Break return mode. See the following table for options.
1388:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_SEND_BREAK - Initialize registers for break, send the Break
1389:Generated_Source\PSoC5/UART_460800.c ****     *       signal and return immediately.
1390:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_WAIT_FOR_COMPLETE_REINIT - Wait until break transmission is
1391:Generated_Source\PSoC5/UART_460800.c ****     *       complete, reinitialize registers to normal transmission mode then return
1392:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_REINIT - Reinitialize registers to normal transmission mode
1393:Generated_Source\PSoC5/UART_460800.c ****     *       then return.
1394:Generated_Source\PSoC5/UART_460800.c ****     *   UART_460800_SEND_WAIT_REINIT - Performs both options: 
1395:Generated_Source\PSoC5/UART_460800.c ****     *      UART_460800_SEND_BREAK and UART_460800_WAIT_FOR_COMPLETE_REINIT.
1396:Generated_Source\PSoC5/UART_460800.c ****     *      This option is recommended for most cases.
1397:Generated_Source\PSoC5/UART_460800.c ****     *
1398:Generated_Source\PSoC5/UART_460800.c ****     * Return:
1399:Generated_Source\PSoC5/UART_460800.c ****     *  None.
1400:Generated_Source\PSoC5/UART_460800.c ****     *
1401:Generated_Source\PSoC5/UART_460800.c ****     * Global Variables:
1402:Generated_Source\PSoC5/UART_460800.c ****     *  UART_460800_initVar - checked to identify that the component has been
1403:Generated_Source\PSoC5/UART_460800.c ****     *     initialized.
1404:Generated_Source\PSoC5/UART_460800.c ****     *  txPeriod - static variable, used for keeping TX period configuration.
1405:Generated_Source\PSoC5/UART_460800.c ****     *
1406:Generated_Source\PSoC5/UART_460800.c ****     * Reentrant:
1407:Generated_Source\PSoC5/UART_460800.c ****     *  No.
1408:Generated_Source\PSoC5/UART_460800.c ****     *
1409:Generated_Source\PSoC5/UART_460800.c ****     * Theory:
1410:Generated_Source\PSoC5/UART_460800.c ****     *  SendBreak function initializes registers to send 13-bit break signal. It is
1411:Generated_Source\PSoC5/UART_460800.c ****     *  important to return the registers configuration to normal for continue 8-bit
1412:Generated_Source\PSoC5/UART_460800.c ****     *  operation.
1413:Generated_Source\PSoC5/UART_460800.c ****     *  There are 3 variants for this API usage:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 53


1414:Generated_Source\PSoC5/UART_460800.c ****     *  1) SendBreak(3) - function will send the Break signal and take care on the
1415:Generated_Source\PSoC5/UART_460800.c ****     *     configuration returning. Function will block CPU until transmission
1416:Generated_Source\PSoC5/UART_460800.c ****     *     complete.
1417:Generated_Source\PSoC5/UART_460800.c ****     *  2) User may want to use blocking time if UART configured to the low speed
1418:Generated_Source\PSoC5/UART_460800.c ****     *     operation
1419:Generated_Source\PSoC5/UART_460800.c ****     *     Example for this case:
1420:Generated_Source\PSoC5/UART_460800.c ****     *     SendBreak(0);     - initialize Break signal transmission
1421:Generated_Source\PSoC5/UART_460800.c ****     *         Add your code here to use CPU time
1422:Generated_Source\PSoC5/UART_460800.c ****     *     SendBreak(1);     - complete Break operation
1423:Generated_Source\PSoC5/UART_460800.c ****     *  3) Same to 2) but user may want to initialize and use the interrupt to
1424:Generated_Source\PSoC5/UART_460800.c ****     *     complete break operation.
1425:Generated_Source\PSoC5/UART_460800.c ****     *     Example for this case:
1426:Generated_Source\PSoC5/UART_460800.c ****     *     Initialize TX interrupt with "TX - On TX Complete" parameter
1427:Generated_Source\PSoC5/UART_460800.c ****     *     SendBreak(0);     - initialize Break signal transmission
1428:Generated_Source\PSoC5/UART_460800.c ****     *         Add your code here to use CPU time
1429:Generated_Source\PSoC5/UART_460800.c ****     *     When interrupt appear with UART_460800_TX_STS_COMPLETE status:
1430:Generated_Source\PSoC5/UART_460800.c ****     *     SendBreak(2);     - complete Break operation
1431:Generated_Source\PSoC5/UART_460800.c ****     *
1432:Generated_Source\PSoC5/UART_460800.c ****     * Side Effects:
1433:Generated_Source\PSoC5/UART_460800.c ****     *  The UART_460800_SendBreak() function initializes registers to send a
1434:Generated_Source\PSoC5/UART_460800.c ****     *  break signal.
1435:Generated_Source\PSoC5/UART_460800.c ****     *  Break signal length depends on the break signal bits configuration.
1436:Generated_Source\PSoC5/UART_460800.c ****     *  The register configuration should be reinitialized before normal 8-bit
1437:Generated_Source\PSoC5/UART_460800.c ****     *  communication can continue.
1438:Generated_Source\PSoC5/UART_460800.c ****     *
1439:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
1440:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_SendBreak(uint8 retMode) 
1441:Generated_Source\PSoC5/UART_460800.c ****     {
 1539              		.loc 1 1441 0
 1540              		.cfi_startproc
 1541              		@ args = 0, pretend = 0, frame = 16
 1542              		@ frame_needed = 1, uses_anonymous_args = 0
 1543              		@ link register save eliminated.
 1544 0000 80B4     		push	{r7}
 1545              		.cfi_def_cfa_offset 4
 1546              		.cfi_offset 7, -4
 1547 0002 85B0     		sub	sp, sp, #20
 1548              		.cfi_def_cfa_offset 24
 1549 0004 00AF     		add	r7, sp, #0
 1550              		.cfi_def_cfa_register 7
 1551 0006 0346     		mov	r3, r0
 1552 0008 FB71     		strb	r3, [r7, #7]
1442:Generated_Source\PSoC5/UART_460800.c **** 
1443:Generated_Source\PSoC5/UART_460800.c ****         /* If not Initialized then skip this function*/
1444:Generated_Source\PSoC5/UART_460800.c ****         if(UART_460800_initVar != 0u)
 1553              		.loc 1 1444 0
 1554 000a 1F4B     		ldr	r3, .L114
 1555 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1556 000e 002B     		cmp	r3, #0
 1557 0010 35D0     		beq	.L113
 1558              	.LBB2:
1445:Generated_Source\PSoC5/UART_460800.c ****         {
1446:Generated_Source\PSoC5/UART_460800.c ****             /* Set the Counter to 13-bits and transmit a 00 byte */
1447:Generated_Source\PSoC5/UART_460800.c ****             /* When that is done then reset the counter value back */
1448:Generated_Source\PSoC5/UART_460800.c ****             uint8 tmpStat;
1449:Generated_Source\PSoC5/UART_460800.c **** 
1450:Generated_Source\PSoC5/UART_460800.c ****         #if(UART_460800_HD_ENABLED) /* Half Duplex mode*/
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 54


1451:Generated_Source\PSoC5/UART_460800.c **** 
1452:Generated_Source\PSoC5/UART_460800.c ****             if( (retMode == UART_460800_SEND_BREAK) ||
1453:Generated_Source\PSoC5/UART_460800.c ****                 (retMode == UART_460800_SEND_WAIT_REINIT ) )
1454:Generated_Source\PSoC5/UART_460800.c ****             {
1455:Generated_Source\PSoC5/UART_460800.c ****                 /* CTRL_HD_SEND_BREAK - sends break bits in HD mode */
1456:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_WriteControlRegister(UART_460800_ReadControlRegister() |
1457:Generated_Source\PSoC5/UART_460800.c ****                                                       UART_460800_CTRL_HD_SEND_BREAK);
1458:Generated_Source\PSoC5/UART_460800.c ****                 /* Send zeros */
1459:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_TXDATA_REG = 0u;
1460:Generated_Source\PSoC5/UART_460800.c **** 
1461:Generated_Source\PSoC5/UART_460800.c ****                 do /* Wait until transmit starts */
1462:Generated_Source\PSoC5/UART_460800.c ****                 {
1463:Generated_Source\PSoC5/UART_460800.c ****                     tmpStat = UART_460800_TXSTATUS_REG;
1464:Generated_Source\PSoC5/UART_460800.c ****                 }
1465:Generated_Source\PSoC5/UART_460800.c ****                 while((tmpStat & UART_460800_TX_STS_FIFO_EMPTY) != 0u);
1466:Generated_Source\PSoC5/UART_460800.c ****             }
1467:Generated_Source\PSoC5/UART_460800.c **** 
1468:Generated_Source\PSoC5/UART_460800.c ****             if( (retMode == UART_460800_WAIT_FOR_COMPLETE_REINIT) ||
1469:Generated_Source\PSoC5/UART_460800.c ****                 (retMode == UART_460800_SEND_WAIT_REINIT) )
1470:Generated_Source\PSoC5/UART_460800.c ****             {
1471:Generated_Source\PSoC5/UART_460800.c ****                 do /* Wait until transmit complete */
1472:Generated_Source\PSoC5/UART_460800.c ****                 {
1473:Generated_Source\PSoC5/UART_460800.c ****                     tmpStat = UART_460800_TXSTATUS_REG;
1474:Generated_Source\PSoC5/UART_460800.c ****                 }
1475:Generated_Source\PSoC5/UART_460800.c ****                 while(((uint8)~tmpStat & UART_460800_TX_STS_COMPLETE) != 0u);
1476:Generated_Source\PSoC5/UART_460800.c ****             }
1477:Generated_Source\PSoC5/UART_460800.c **** 
1478:Generated_Source\PSoC5/UART_460800.c ****             if( (retMode == UART_460800_WAIT_FOR_COMPLETE_REINIT) ||
1479:Generated_Source\PSoC5/UART_460800.c ****                 (retMode == UART_460800_REINIT) ||
1480:Generated_Source\PSoC5/UART_460800.c ****                 (retMode == UART_460800_SEND_WAIT_REINIT) )
1481:Generated_Source\PSoC5/UART_460800.c ****             {
1482:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_WriteControlRegister(UART_460800_ReadControlRegister() &
1483:Generated_Source\PSoC5/UART_460800.c ****                                               (uint8)~UART_460800_CTRL_HD_SEND_BREAK);
1484:Generated_Source\PSoC5/UART_460800.c ****             }
1485:Generated_Source\PSoC5/UART_460800.c **** 
1486:Generated_Source\PSoC5/UART_460800.c ****         #else /* UART_460800_HD_ENABLED Full Duplex mode */
1487:Generated_Source\PSoC5/UART_460800.c **** 
1488:Generated_Source\PSoC5/UART_460800.c ****             static uint8 txPeriod;
1489:Generated_Source\PSoC5/UART_460800.c **** 
1490:Generated_Source\PSoC5/UART_460800.c ****             if( (retMode == UART_460800_SEND_BREAK) ||
 1559              		.loc 1 1490 0
 1560 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1561 0014 002B     		cmp	r3, #0
 1562 0016 02D0     		beq	.L107
 1563              		.loc 1 1490 0 is_stmt 0 discriminator 1
 1564 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1565 001a 032B     		cmp	r3, #3
 1566 001c 12D1     		bne	.L108
 1567              	.L107:
1491:Generated_Source\PSoC5/UART_460800.c ****                 (retMode == UART_460800_SEND_WAIT_REINIT) )
1492:Generated_Source\PSoC5/UART_460800.c ****             {
1493:Generated_Source\PSoC5/UART_460800.c ****                 /* CTRL_HD_SEND_BREAK - skip to send parity bit at Break signal in Full Duplex mode
1494:Generated_Source\PSoC5/UART_460800.c ****                 #if( (UART_460800_PARITY_TYPE != UART_460800__B_UART__NONE_REVB) || \
1495:Generated_Source\PSoC5/UART_460800.c ****                                     (UART_460800_PARITY_TYPE_SW != 0u) )
1496:Generated_Source\PSoC5/UART_460800.c ****                     UART_460800_WriteControlRegister(UART_460800_ReadControlRegister() |
1497:Generated_Source\PSoC5/UART_460800.c ****                                                           UART_460800_CTRL_HD_SEND_BREAK);
1498:Generated_Source\PSoC5/UART_460800.c ****                 #endif /* End UART_460800_PARITY_TYPE != UART_460800__B_UART__NONE_REVB  */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 55


1499:Generated_Source\PSoC5/UART_460800.c **** 
1500:Generated_Source\PSoC5/UART_460800.c ****                 #if(UART_460800_TXCLKGEN_DP)
1501:Generated_Source\PSoC5/UART_460800.c ****                     txPeriod = UART_460800_TXBITCLKTX_COMPLETE_REG;
 1568              		.loc 1 1501 0 is_stmt 1
 1569 001e 1B4B     		ldr	r3, .L114+4
 1570 0020 1B78     		ldrb	r3, [r3]
 1571 0022 DAB2     		uxtb	r2, r3
 1572 0024 1A4B     		ldr	r3, .L114+8
 1573 0026 1A70     		strb	r2, [r3]
1502:Generated_Source\PSoC5/UART_460800.c ****                     UART_460800_TXBITCLKTX_COMPLETE_REG = UART_460800_TXBITCTR_BREAKBITS;
 1574              		.loc 1 1502 0
 1575 0028 184B     		ldr	r3, .L114+4
 1576 002a 6722     		movs	r2, #103
 1577 002c 1A70     		strb	r2, [r3]
1503:Generated_Source\PSoC5/UART_460800.c ****                 #else
1504:Generated_Source\PSoC5/UART_460800.c ****                     txPeriod = UART_460800_TXBITCTR_PERIOD_REG;
1505:Generated_Source\PSoC5/UART_460800.c ****                     UART_460800_TXBITCTR_PERIOD_REG = UART_460800_TXBITCTR_BREAKBITS8X;
1506:Generated_Source\PSoC5/UART_460800.c ****                 #endif /* End UART_460800_TXCLKGEN_DP */
1507:Generated_Source\PSoC5/UART_460800.c **** 
1508:Generated_Source\PSoC5/UART_460800.c ****                 /* Send zeros */
1509:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_TXDATA_REG = 0u;
 1578              		.loc 1 1509 0
 1579 002e 194B     		ldr	r3, .L114+12
 1580 0030 0022     		movs	r2, #0
 1581 0032 1A70     		strb	r2, [r3]
 1582              	.L109:
1510:Generated_Source\PSoC5/UART_460800.c **** 
1511:Generated_Source\PSoC5/UART_460800.c ****                 do /* Wait until transmit starts */
1512:Generated_Source\PSoC5/UART_460800.c ****                 {
1513:Generated_Source\PSoC5/UART_460800.c ****                     tmpStat = UART_460800_TXSTATUS_REG;
 1583              		.loc 1 1513 0 discriminator 1
 1584 0034 184B     		ldr	r3, .L114+16
 1585 0036 1B78     		ldrb	r3, [r3]
 1586 0038 FB73     		strb	r3, [r7, #15]
1514:Generated_Source\PSoC5/UART_460800.c ****                 }
1515:Generated_Source\PSoC5/UART_460800.c ****                 while((tmpStat & UART_460800_TX_STS_FIFO_EMPTY) != 0u);
 1587              		.loc 1 1515 0 discriminator 1
 1588 003a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1589 003c 03F00203 		and	r3, r3, #2
 1590 0040 002B     		cmp	r3, #0
 1591 0042 F7D1     		bne	.L109
 1592              	.L108:
1516:Generated_Source\PSoC5/UART_460800.c ****             }
1517:Generated_Source\PSoC5/UART_460800.c **** 
1518:Generated_Source\PSoC5/UART_460800.c ****             if( (retMode == UART_460800_WAIT_FOR_COMPLETE_REINIT) ||
 1593              		.loc 1 1518 0
 1594 0044 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1595 0046 012B     		cmp	r3, #1
 1596 0048 02D0     		beq	.L110
 1597              		.loc 1 1518 0 is_stmt 0 discriminator 1
 1598 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1599 004c 032B     		cmp	r3, #3
 1600 004e 09D1     		bne	.L111
 1601              	.L110:
1519:Generated_Source\PSoC5/UART_460800.c ****                 (retMode == UART_460800_SEND_WAIT_REINIT) )
1520:Generated_Source\PSoC5/UART_460800.c ****             {
1521:Generated_Source\PSoC5/UART_460800.c ****                 do /* Wait until transmit complete */
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 56


1522:Generated_Source\PSoC5/UART_460800.c ****                 {
1523:Generated_Source\PSoC5/UART_460800.c ****                     tmpStat = UART_460800_TXSTATUS_REG;
 1602              		.loc 1 1523 0 is_stmt 1 discriminator 1
 1603 0050 114B     		ldr	r3, .L114+16
 1604 0052 1B78     		ldrb	r3, [r3]
 1605 0054 FB73     		strb	r3, [r7, #15]
1524:Generated_Source\PSoC5/UART_460800.c ****                 }
1525:Generated_Source\PSoC5/UART_460800.c ****                 while(((uint8)~tmpStat & UART_460800_TX_STS_COMPLETE) != 0u);
 1606              		.loc 1 1525 0 discriminator 1
 1607 0056 FB7B     		ldrb	r3, [r7, #15]
 1608 0058 DB43     		mvns	r3, r3
 1609 005a DBB2     		uxtb	r3, r3
 1610 005c 03F00103 		and	r3, r3, #1
 1611 0060 002B     		cmp	r3, #0
 1612 0062 F5D1     		bne	.L110
 1613              	.L111:
1526:Generated_Source\PSoC5/UART_460800.c ****             }
1527:Generated_Source\PSoC5/UART_460800.c **** 
1528:Generated_Source\PSoC5/UART_460800.c ****             if( (retMode == UART_460800_WAIT_FOR_COMPLETE_REINIT) ||
 1614              		.loc 1 1528 0
 1615 0064 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1616 0066 012B     		cmp	r3, #1
 1617 0068 05D0     		beq	.L112
 1618              		.loc 1 1528 0 is_stmt 0 discriminator 1
 1619 006a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1620 006c 022B     		cmp	r3, #2
 1621 006e 02D0     		beq	.L112
1529:Generated_Source\PSoC5/UART_460800.c ****                 (retMode == UART_460800_REINIT) ||
 1622              		.loc 1 1529 0 is_stmt 1
 1623 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1624 0072 032B     		cmp	r3, #3
 1625 0074 03D1     		bne	.L113
 1626              	.L112:
1530:Generated_Source\PSoC5/UART_460800.c ****                 (retMode == UART_460800_SEND_WAIT_REINIT) )
1531:Generated_Source\PSoC5/UART_460800.c ****             {
1532:Generated_Source\PSoC5/UART_460800.c **** 
1533:Generated_Source\PSoC5/UART_460800.c ****             #if(UART_460800_TXCLKGEN_DP)
1534:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_TXBITCLKTX_COMPLETE_REG = txPeriod;
 1627              		.loc 1 1534 0
 1628 0076 054B     		ldr	r3, .L114+4
 1629 0078 054A     		ldr	r2, .L114+8
 1630 007a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1631 007c 1A70     		strb	r2, [r3]
 1632              	.L113:
 1633              	.LBE2:
1535:Generated_Source\PSoC5/UART_460800.c ****             #else
1536:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_TXBITCTR_PERIOD_REG = txPeriod;
1537:Generated_Source\PSoC5/UART_460800.c ****             #endif /* End UART_460800_TXCLKGEN_DP */
1538:Generated_Source\PSoC5/UART_460800.c **** 
1539:Generated_Source\PSoC5/UART_460800.c ****             #if( (UART_460800_PARITY_TYPE != UART_460800__B_UART__NONE_REVB) || \
1540:Generated_Source\PSoC5/UART_460800.c ****                  (UART_460800_PARITY_TYPE_SW != 0u) )
1541:Generated_Source\PSoC5/UART_460800.c ****                 UART_460800_WriteControlRegister(UART_460800_ReadControlRegister() &
1542:Generated_Source\PSoC5/UART_460800.c ****                                                       (uint8) ~UART_460800_CTRL_HD_SEND_BREAK);
1543:Generated_Source\PSoC5/UART_460800.c ****             #endif /* End UART_460800_PARITY_TYPE != NONE */
1544:Generated_Source\PSoC5/UART_460800.c ****             }
1545:Generated_Source\PSoC5/UART_460800.c ****         #endif    /* End UART_460800_HD_ENABLED */
1546:Generated_Source\PSoC5/UART_460800.c ****         }
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 57


1547:Generated_Source\PSoC5/UART_460800.c ****     }
 1634              		.loc 1 1547 0
 1635 007e 00BF     		nop
 1636 0080 1437     		adds	r7, r7, #20
 1637              		.cfi_def_cfa_offset 4
 1638 0082 BD46     		mov	sp, r7
 1639              		.cfi_def_cfa_register 13
 1640              		@ sp needed
 1641 0084 80BC     		pop	{r7}
 1642              		.cfi_restore 7
 1643              		.cfi_def_cfa_offset 0
 1644 0086 7047     		bx	lr
 1645              	.L115:
 1646              		.align	2
 1647              	.L114:
 1648 0088 00000000 		.word	UART_460800_initVar
 1649 008c 38640040 		.word	1073767480
 1650 0090 06000000 		.word	txPeriod.5131
 1651 0094 44640040 		.word	1073767492
 1652 0098 64640040 		.word	1073767524
 1653              		.cfi_endproc
 1654              	.LFE25:
 1655              		.size	UART_460800_SendBreak, .-UART_460800_SendBreak
 1656              		.section	.text.UART_460800_SetTxAddressMode,"ax",%progbits
 1657              		.align	2
 1658              		.global	UART_460800_SetTxAddressMode
 1659              		.thumb
 1660              		.thumb_func
 1661              		.type	UART_460800_SetTxAddressMode, %function
 1662              	UART_460800_SetTxAddressMode:
 1663              	.LFB26:
1548:Generated_Source\PSoC5/UART_460800.c **** 
1549:Generated_Source\PSoC5/UART_460800.c **** 
1550:Generated_Source\PSoC5/UART_460800.c ****     /*******************************************************************************
1551:Generated_Source\PSoC5/UART_460800.c ****     * Function Name: UART_460800_SetTxAddressMode
1552:Generated_Source\PSoC5/UART_460800.c ****     ********************************************************************************
1553:Generated_Source\PSoC5/UART_460800.c ****     *
1554:Generated_Source\PSoC5/UART_460800.c ****     * Summary:
1555:Generated_Source\PSoC5/UART_460800.c ****     *  Configures the transmitter to signal the next bytes is address or data.
1556:Generated_Source\PSoC5/UART_460800.c ****     *
1557:Generated_Source\PSoC5/UART_460800.c ****     * Parameters:
1558:Generated_Source\PSoC5/UART_460800.c ****     *  addressMode: 
1559:Generated_Source\PSoC5/UART_460800.c ****     *       UART_460800_SET_SPACE - Configure the transmitter to send the next
1560:Generated_Source\PSoC5/UART_460800.c ****     *                                    byte as a data.
1561:Generated_Source\PSoC5/UART_460800.c ****     *       UART_460800_SET_MARK  - Configure the transmitter to send the next
1562:Generated_Source\PSoC5/UART_460800.c ****     *                                    byte as an address.
1563:Generated_Source\PSoC5/UART_460800.c ****     *
1564:Generated_Source\PSoC5/UART_460800.c ****     * Return:
1565:Generated_Source\PSoC5/UART_460800.c ****     *  None.
1566:Generated_Source\PSoC5/UART_460800.c ****     *
1567:Generated_Source\PSoC5/UART_460800.c ****     * Side Effects:
1568:Generated_Source\PSoC5/UART_460800.c ****     *  This function sets and clears UART_460800_CTRL_MARK bit in the Control
1569:Generated_Source\PSoC5/UART_460800.c ****     *  register.
1570:Generated_Source\PSoC5/UART_460800.c ****     *
1571:Generated_Source\PSoC5/UART_460800.c ****     *******************************************************************************/
1572:Generated_Source\PSoC5/UART_460800.c ****     void UART_460800_SetTxAddressMode(uint8 addressMode) 
1573:Generated_Source\PSoC5/UART_460800.c ****     {
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 58


 1664              		.loc 1 1573 0
 1665              		.cfi_startproc
 1666              		@ args = 0, pretend = 0, frame = 8
 1667              		@ frame_needed = 1, uses_anonymous_args = 0
 1668              		@ link register save eliminated.
 1669 0000 80B4     		push	{r7}
 1670              		.cfi_def_cfa_offset 4
 1671              		.cfi_offset 7, -4
 1672 0002 83B0     		sub	sp, sp, #12
 1673              		.cfi_def_cfa_offset 16
 1674 0004 00AF     		add	r7, sp, #0
 1675              		.cfi_def_cfa_register 7
 1676 0006 0346     		mov	r3, r0
 1677 0008 FB71     		strb	r3, [r7, #7]
1574:Generated_Source\PSoC5/UART_460800.c ****         /* Mark/Space sending enable */
1575:Generated_Source\PSoC5/UART_460800.c ****         if(addressMode != 0u)
1576:Generated_Source\PSoC5/UART_460800.c ****         {
1577:Generated_Source\PSoC5/UART_460800.c ****         #if( UART_460800_CONTROL_REG_REMOVED == 0u )
1578:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_WriteControlRegister(UART_460800_ReadControlRegister() |
1579:Generated_Source\PSoC5/UART_460800.c ****                                                   UART_460800_CTRL_MARK);
1580:Generated_Source\PSoC5/UART_460800.c ****         #endif /* End UART_460800_CONTROL_REG_REMOVED == 0u */
1581:Generated_Source\PSoC5/UART_460800.c ****         }
1582:Generated_Source\PSoC5/UART_460800.c ****         else
1583:Generated_Source\PSoC5/UART_460800.c ****         {
1584:Generated_Source\PSoC5/UART_460800.c ****         #if( UART_460800_CONTROL_REG_REMOVED == 0u )
1585:Generated_Source\PSoC5/UART_460800.c ****             UART_460800_WriteControlRegister(UART_460800_ReadControlRegister() &
1586:Generated_Source\PSoC5/UART_460800.c ****                                                   (uint8) ~UART_460800_CTRL_MARK);
1587:Generated_Source\PSoC5/UART_460800.c ****         #endif /* End UART_460800_CONTROL_REG_REMOVED == 0u */
1588:Generated_Source\PSoC5/UART_460800.c ****         }
1589:Generated_Source\PSoC5/UART_460800.c ****     }
 1678              		.loc 1 1589 0
 1679 000a 00BF     		nop
 1680 000c 0C37     		adds	r7, r7, #12
 1681              		.cfi_def_cfa_offset 4
 1682 000e BD46     		mov	sp, r7
 1683              		.cfi_def_cfa_register 13
 1684              		@ sp needed
 1685 0010 80BC     		pop	{r7}
 1686              		.cfi_restore 7
 1687              		.cfi_def_cfa_offset 0
 1688 0012 7047     		bx	lr
 1689              		.cfi_endproc
 1690              	.LFE26:
 1691              		.size	UART_460800_SetTxAddressMode, .-UART_460800_SetTxAddressMode
 1692              		.bss
 1693              	txPeriod.5131:
 1694 0006 00       		.space	1
 1695              		.text
 1696              	.Letext0:
 1697              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1698              		.section	.debug_info,"",%progbits
 1699              	.Ldebug_info0:
 1700 0000 8F050000 		.4byte	0x58f
 1701 0004 0400     		.2byte	0x4
 1702 0006 00000000 		.4byte	.Ldebug_abbrev0
 1703 000a 04       		.byte	0x4
 1704 000b 01       		.uleb128 0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 59


 1705 000c 19000000 		.4byte	.LASF69
 1706 0010 0C       		.byte	0xc
 1707 0011 A7030000 		.4byte	.LASF70
 1708 0015 06050000 		.4byte	.LASF71
 1709 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1710 001d 00000000 		.4byte	0
 1711 0021 00000000 		.4byte	.Ldebug_line0
 1712 0025 02       		.uleb128 0x2
 1713 0026 01       		.byte	0x1
 1714 0027 06       		.byte	0x6
 1715 0028 6A010000 		.4byte	.LASF0
 1716 002c 02       		.uleb128 0x2
 1717 002d 01       		.byte	0x1
 1718 002e 08       		.byte	0x8
 1719 002f 72030000 		.4byte	.LASF1
 1720 0033 02       		.uleb128 0x2
 1721 0034 02       		.byte	0x2
 1722 0035 05       		.byte	0x5
 1723 0036 93030000 		.4byte	.LASF2
 1724 003a 02       		.uleb128 0x2
 1725 003b 02       		.byte	0x2
 1726 003c 07       		.byte	0x7
 1727 003d 78020000 		.4byte	.LASF3
 1728 0041 02       		.uleb128 0x2
 1729 0042 04       		.byte	0x4
 1730 0043 05       		.byte	0x5
 1731 0044 B5010000 		.4byte	.LASF4
 1732 0048 02       		.uleb128 0x2
 1733 0049 04       		.byte	0x4
 1734 004a 07       		.byte	0x7
 1735 004b 3C020000 		.4byte	.LASF5
 1736 004f 02       		.uleb128 0x2
 1737 0050 08       		.byte	0x8
 1738 0051 05       		.byte	0x5
 1739 0052 5C010000 		.4byte	.LASF6
 1740 0056 02       		.uleb128 0x2
 1741 0057 08       		.byte	0x8
 1742 0058 07       		.byte	0x7
 1743 0059 C0000000 		.4byte	.LASF7
 1744 005d 03       		.uleb128 0x3
 1745 005e 04       		.byte	0x4
 1746 005f 05       		.byte	0x5
 1747 0060 696E7400 		.ascii	"int\000"
 1748 0064 02       		.uleb128 0x2
 1749 0065 04       		.byte	0x4
 1750 0066 07       		.byte	0x7
 1751 0067 2F020000 		.4byte	.LASF8
 1752 006b 04       		.uleb128 0x4
 1753 006c EF010000 		.4byte	.LASF9
 1754 0070 02       		.byte	0x2
 1755 0071 E401     		.2byte	0x1e4
 1756 0073 2C000000 		.4byte	0x2c
 1757 0077 04       		.uleb128 0x4
 1758 0078 00000000 		.4byte	.LASF10
 1759 007c 02       		.byte	0x2
 1760 007d E501     		.2byte	0x1e5
 1761 007f 3A000000 		.4byte	0x3a
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 60


 1762 0083 04       		.uleb128 0x4
 1763 0084 08020000 		.4byte	.LASF11
 1764 0088 02       		.byte	0x2
 1765 0089 E601     		.2byte	0x1e6
 1766 008b 48000000 		.4byte	0x48
 1767 008f 02       		.uleb128 0x2
 1768 0090 04       		.byte	0x4
 1769 0091 04       		.byte	0x4
 1770 0092 53030000 		.4byte	.LASF12
 1771 0096 02       		.uleb128 0x2
 1772 0097 08       		.byte	0x8
 1773 0098 04       		.byte	0x4
 1774 0099 F5010000 		.4byte	.LASF13
 1775 009d 04       		.uleb128 0x4
 1776 009e 62040000 		.4byte	.LASF14
 1777 00a2 02       		.byte	0x2
 1778 00a3 F501     		.2byte	0x1f5
 1779 00a5 A9000000 		.4byte	0xa9
 1780 00a9 02       		.uleb128 0x2
 1781 00aa 01       		.byte	0x1
 1782 00ab 08       		.byte	0x8
 1783 00ac F4030000 		.4byte	.LASF15
 1784 00b0 04       		.uleb128 0x4
 1785 00b1 59030000 		.4byte	.LASF16
 1786 00b5 02       		.byte	0x2
 1787 00b6 8E02     		.2byte	0x28e
 1788 00b8 BC000000 		.4byte	0xbc
 1789 00bc 05       		.uleb128 0x5
 1790 00bd 6B000000 		.4byte	0x6b
 1791 00c1 05       		.uleb128 0x5
 1792 00c2 77000000 		.4byte	0x77
 1793 00c6 04       		.uleb128 0x4
 1794 00c7 AF020000 		.4byte	.LASF17
 1795 00cb 02       		.byte	0x2
 1796 00cc 9002     		.2byte	0x290
 1797 00ce D2000000 		.4byte	0xd2
 1798 00d2 05       		.uleb128 0x5
 1799 00d3 83000000 		.4byte	0x83
 1800 00d7 02       		.uleb128 0x2
 1801 00d8 08       		.byte	0x8
 1802 00d9 04       		.byte	0x4
 1803 00da DA020000 		.4byte	.LASF18
 1804 00de 02       		.uleb128 0x2
 1805 00df 04       		.byte	0x4
 1806 00e0 07       		.byte	0x7
 1807 00e1 D1020000 		.4byte	.LASF19
 1808 00e5 06       		.uleb128 0x6
 1809 00e6 35010000 		.4byte	.LASF20
 1810 00ea 01       		.byte	0x1
 1811 00eb 4C       		.byte	0x4c
 1812 00ec 00000000 		.4byte	.LFB0
 1813 00f0 24000000 		.4byte	.LFE0-.LFB0
 1814 00f4 01       		.uleb128 0x1
 1815 00f5 9C       		.byte	0x9c
 1816 00f6 06       		.uleb128 0x6
 1817 00f7 02030000 		.4byte	.LASF21
 1818 00fb 01       		.byte	0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 61


 1819 00fc 6A       		.byte	0x6a
 1820 00fd 00000000 		.4byte	.LFB1
 1821 0101 50000000 		.4byte	.LFE1-.LFB1
 1822 0105 01       		.uleb128 0x1
 1823 0106 9C       		.byte	0x9c
 1824 0107 07       		.uleb128 0x7
 1825 0108 80030000 		.4byte	.LASF22
 1826 010c 01       		.byte	0x1
 1827 010d B7       		.byte	0xb7
 1828 010e 00000000 		.4byte	.LFB2
 1829 0112 74000000 		.4byte	.LFE2-.LFB2
 1830 0116 01       		.uleb128 0x1
 1831 0117 9C       		.byte	0x9c
 1832 0118 2B010000 		.4byte	0x12b
 1833 011c 08       		.uleb128 0x8
 1834 011d 88040000 		.4byte	.LASF24
 1835 0121 01       		.byte	0x1
 1836 0122 B9       		.byte	0xb9
 1837 0123 6B000000 		.4byte	0x6b
 1838 0127 02       		.uleb128 0x2
 1839 0128 91       		.byte	0x91
 1840 0129 77       		.sleb128 -9
 1841 012a 00       		.byte	0
 1842 012b 07       		.uleb128 0x7
 1843 012c 24010000 		.4byte	.LASF23
 1844 0130 01       		.byte	0x1
 1845 0131 F0       		.byte	0xf0
 1846 0132 00000000 		.4byte	.LFB3
 1847 0136 68000000 		.4byte	.LFE3-.LFB3
 1848 013a 01       		.uleb128 0x1
 1849 013b 9C       		.byte	0x9c
 1850 013c 4F010000 		.4byte	0x14f
 1851 0140 08       		.uleb128 0x8
 1852 0141 88040000 		.4byte	.LASF24
 1853 0145 01       		.byte	0x1
 1854 0146 F2       		.byte	0xf2
 1855 0147 6B000000 		.4byte	0x6b
 1856 014b 02       		.uleb128 0x2
 1857 014c 91       		.byte	0x91
 1858 014d 77       		.sleb128 -9
 1859 014e 00       		.byte	0
 1860 014f 09       		.uleb128 0x9
 1861 0150 68040000 		.4byte	.LASF35
 1862 0154 01       		.byte	0x1
 1863 0155 2701     		.2byte	0x127
 1864 0157 6B000000 		.4byte	0x6b
 1865 015b 00000000 		.4byte	.LFB4
 1866 015f 0E000000 		.4byte	.LFE4-.LFB4
 1867 0163 01       		.uleb128 0x1
 1868 0164 9C       		.byte	0x9c
 1869 0165 0A       		.uleb128 0xa
 1870 0166 D3030000 		.4byte	.LASF25
 1871 016a 01       		.byte	0x1
 1872 016b 3F01     		.2byte	0x13f
 1873 016d 00000000 		.4byte	.LFB5
 1874 0171 14000000 		.4byte	.LFE5-.LFB5
 1875 0175 01       		.uleb128 0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 62


 1876 0176 9C       		.byte	0x9c
 1877 0177 8B010000 		.4byte	0x18b
 1878 017b 0B       		.uleb128 0xb
 1879 017c 0F020000 		.4byte	.LASF27
 1880 0180 01       		.byte	0x1
 1881 0181 3F01     		.2byte	0x13f
 1882 0183 6B000000 		.4byte	0x6b
 1883 0187 02       		.uleb128 0x2
 1884 0188 91       		.byte	0x91
 1885 0189 77       		.sleb128 -9
 1886 018a 00       		.byte	0
 1887 018b 0A       		.uleb128 0xa
 1888 018c B6040000 		.4byte	.LASF26
 1889 0190 01       		.byte	0x1
 1890 0191 6701     		.2byte	0x167
 1891 0193 00000000 		.4byte	.LFB6
 1892 0197 20000000 		.4byte	.LFE6-.LFB6
 1893 019b 01       		.uleb128 0x1
 1894 019c 9C       		.byte	0x9c
 1895 019d B1010000 		.4byte	0x1b1
 1896 01a1 0B       		.uleb128 0xb
 1897 01a2 A8020000 		.4byte	.LASF28
 1898 01a6 01       		.byte	0x1
 1899 01a7 6701     		.2byte	0x167
 1900 01a9 6B000000 		.4byte	0x6b
 1901 01ad 02       		.uleb128 0x2
 1902 01ae 91       		.byte	0x91
 1903 01af 77       		.sleb128 -9
 1904 01b0 00       		.byte	0
 1905 01b1 0C       		.uleb128 0xc
 1906 01b2 9E010000 		.4byte	.LASF30
 1907 01b6 01       		.byte	0x1
 1908 01b7 8801     		.2byte	0x188
 1909 01b9 6B000000 		.4byte	0x6b
 1910 01bd 00000000 		.4byte	.LFB7
 1911 01c1 1C000000 		.4byte	.LFE7-.LFB7
 1912 01c5 01       		.uleb128 0x1
 1913 01c6 9C       		.byte	0x9c
 1914 01c7 DB010000 		.4byte	0x1db
 1915 01cb 0D       		.uleb128 0xd
 1916 01cc CC030000 		.4byte	.LASF29
 1917 01d0 01       		.byte	0x1
 1918 01d1 8A01     		.2byte	0x18a
 1919 01d3 6B000000 		.4byte	0x6b
 1920 01d7 02       		.uleb128 0x2
 1921 01d8 91       		.byte	0x91
 1922 01d9 77       		.sleb128 -9
 1923 01da 00       		.byte	0
 1924 01db 0C       		.uleb128 0xc
 1925 01dc 5F020000 		.4byte	.LASF31
 1926 01e0 01       		.byte	0x1
 1927 01e1 E501     		.2byte	0x1e5
 1928 01e3 6B000000 		.4byte	0x6b
 1929 01e7 00000000 		.4byte	.LFB8
 1930 01eb 24000000 		.4byte	.LFE8-.LFB8
 1931 01ef 01       		.uleb128 0x1
 1932 01f0 9C       		.byte	0x9c
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 63


 1933 01f1 05020000 		.4byte	0x205
 1934 01f5 0D       		.uleb128 0xd
 1935 01f6 99040000 		.4byte	.LASF32
 1936 01fa 01       		.byte	0x1
 1937 01fb E701     		.2byte	0x1e7
 1938 01fd 6B000000 		.4byte	0x6b
 1939 0201 02       		.uleb128 0x2
 1940 0202 91       		.byte	0x91
 1941 0203 77       		.sleb128 -9
 1942 0204 00       		.byte	0
 1943 0205 0C       		.uleb128 0xc
 1944 0206 94020000 		.4byte	.LASF33
 1945 020a 01       		.byte	0x1
 1946 020b 1402     		.2byte	0x214
 1947 020d 6B000000 		.4byte	0x6b
 1948 0211 00000000 		.4byte	.LFB9
 1949 0215 44000000 		.4byte	.LFE9-.LFB9
 1950 0219 01       		.uleb128 0x1
 1951 021a 9C       		.byte	0x9c
 1952 021b 3E020000 		.4byte	0x23e
 1953 021f 0D       		.uleb128 0xd
 1954 0220 CC030000 		.4byte	.LASF29
 1955 0224 01       		.byte	0x1
 1956 0225 1602     		.2byte	0x216
 1957 0227 6B000000 		.4byte	0x6b
 1958 022b 02       		.uleb128 0x2
 1959 022c 91       		.byte	0x91
 1960 022d 77       		.sleb128 -9
 1961 022e 0D       		.uleb128 0xd
 1962 022f 30030000 		.4byte	.LASF34
 1963 0233 01       		.byte	0x1
 1964 0234 1702     		.2byte	0x217
 1965 0236 6B000000 		.4byte	0x6b
 1966 023a 02       		.uleb128 0x2
 1967 023b 91       		.byte	0x91
 1968 023c 76       		.sleb128 -10
 1969 023d 00       		.byte	0
 1970 023e 0E       		.uleb128 0xe
 1971 023f F2040000 		.4byte	.LASF36
 1972 0243 01       		.byte	0x1
 1973 0244 7A02     		.2byte	0x27a
 1974 0246 77000000 		.4byte	0x77
 1975 024a 00000000 		.4byte	.LFB10
 1976 024e 20000000 		.4byte	.LFE10-.LFB10
 1977 0252 01       		.uleb128 0x1
 1978 0253 9C       		.byte	0x9c
 1979 0254 0C       		.uleb128 0xc
 1980 0255 46040000 		.4byte	.LASF37
 1981 0259 01       		.byte	0x1
 1982 025a AB02     		.2byte	0x2ab
 1983 025c 6B000000 		.4byte	0x6b
 1984 0260 00000000 		.4byte	.LFB11
 1985 0264 2C000000 		.4byte	.LFE11-.LFB11
 1986 0268 01       		.uleb128 0x1
 1987 0269 9C       		.byte	0x9c
 1988 026a 7E020000 		.4byte	0x27e
 1989 026e 0D       		.uleb128 0xd
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 64


 1990 026f 7F010000 		.4byte	.LASF38
 1991 0273 01       		.byte	0x1
 1992 0274 AE02     		.2byte	0x2ae
 1993 0276 6B000000 		.4byte	0x6b
 1994 027a 02       		.uleb128 0x2
 1995 027b 91       		.byte	0x91
 1996 027c 77       		.sleb128 -9
 1997 027d 00       		.byte	0
 1998 027e 0F       		.uleb128 0xf
 1999 027f 84010000 		.4byte	.LASF39
 2000 0283 01       		.byte	0x1
 2001 0284 F502     		.2byte	0x2f5
 2002 0286 00000000 		.4byte	.LFB12
 2003 028a 44000000 		.4byte	.LFE12-.LFB12
 2004 028e 01       		.uleb128 0x1
 2005 028f 9C       		.byte	0x9c
 2006 0290 A4020000 		.4byte	0x2a4
 2007 0294 0D       		.uleb128 0xd
 2008 0295 88040000 		.4byte	.LASF24
 2009 0299 01       		.byte	0x1
 2010 029a F702     		.2byte	0x2f7
 2011 029c 6B000000 		.4byte	0x6b
 2012 02a0 02       		.uleb128 0x2
 2013 02a1 91       		.byte	0x91
 2014 02a2 77       		.sleb128 -9
 2015 02a3 00       		.byte	0
 2016 02a4 0A       		.uleb128 0xa
 2017 02a5 D5040000 		.4byte	.LASF40
 2018 02a9 01       		.byte	0x1
 2019 02aa 2D03     		.2byte	0x32d
 2020 02ac 00000000 		.4byte	.LFB13
 2021 02b0 14000000 		.4byte	.LFE13-.LFB13
 2022 02b4 01       		.uleb128 0x1
 2023 02b5 9C       		.byte	0x9c
 2024 02b6 CA020000 		.4byte	0x2ca
 2025 02ba 0B       		.uleb128 0xb
 2026 02bb FC010000 		.4byte	.LASF41
 2027 02bf 01       		.byte	0x1
 2028 02c0 2D03     		.2byte	0x32d
 2029 02c2 6B000000 		.4byte	0x6b
 2030 02c6 02       		.uleb128 0x2
 2031 02c7 91       		.byte	0x91
 2032 02c8 77       		.sleb128 -9
 2033 02c9 00       		.byte	0
 2034 02ca 0A       		.uleb128 0xa
 2035 02cb F9030000 		.4byte	.LASF42
 2036 02cf 01       		.byte	0x1
 2037 02d0 5903     		.2byte	0x359
 2038 02d2 00000000 		.4byte	.LFB14
 2039 02d6 20000000 		.4byte	.LFE14-.LFB14
 2040 02da 01       		.uleb128 0x1
 2041 02db 9C       		.byte	0x9c
 2042 02dc F0020000 		.4byte	0x2f0
 2043 02e0 0B       		.uleb128 0xb
 2044 02e1 FA020000 		.4byte	.LASF43
 2045 02e5 01       		.byte	0x1
 2046 02e6 5903     		.2byte	0x359
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 65


 2047 02e8 6B000000 		.4byte	0x6b
 2048 02ec 02       		.uleb128 0x2
 2049 02ed 91       		.byte	0x91
 2050 02ee 77       		.sleb128 -9
 2051 02ef 00       		.byte	0
 2052 02f0 0A       		.uleb128 0xa
 2053 02f1 13040000 		.4byte	.LASF44
 2054 02f5 01       		.byte	0x1
 2055 02f6 6D03     		.2byte	0x36d
 2056 02f8 00000000 		.4byte	.LFB15
 2057 02fc 20000000 		.4byte	.LFE15-.LFB15
 2058 0300 01       		.uleb128 0x1
 2059 0301 9C       		.byte	0x9c
 2060 0302 16030000 		.4byte	0x316
 2061 0306 0B       		.uleb128 0xb
 2062 0307 FA020000 		.4byte	.LASF43
 2063 030b 01       		.byte	0x1
 2064 030c 6D03     		.2byte	0x36d
 2065 030e 6B000000 		.4byte	0x6b
 2066 0312 02       		.uleb128 0x2
 2067 0313 91       		.byte	0x91
 2068 0314 77       		.sleb128 -9
 2069 0315 00       		.byte	0
 2070 0316 0A       		.uleb128 0xa
 2071 0317 D7000000 		.4byte	.LASF45
 2072 031b 01       		.byte	0x1
 2073 031c 8C03     		.2byte	0x38c
 2074 031e 00000000 		.4byte	.LFB16
 2075 0322 20000000 		.4byte	.LFE16-.LFB16
 2076 0326 01       		.uleb128 0x1
 2077 0327 9C       		.byte	0x9c
 2078 0328 3C030000 		.4byte	0x33c
 2079 032c 0B       		.uleb128 0xb
 2080 032d A8020000 		.4byte	.LASF28
 2081 0331 01       		.byte	0x1
 2082 0332 8C03     		.2byte	0x38c
 2083 0334 6B000000 		.4byte	0x6b
 2084 0338 02       		.uleb128 0x2
 2085 0339 91       		.byte	0x91
 2086 033a 77       		.sleb128 -9
 2087 033b 00       		.byte	0
 2088 033c 0A       		.uleb128 0xa
 2089 033d F6000000 		.4byte	.LASF46
 2090 0341 01       		.byte	0x1
 2091 0342 AE03     		.2byte	0x3ae
 2092 0344 00000000 		.4byte	.LFB17
 2093 0348 94000000 		.4byte	.LFE17-.LFB17
 2094 034c 01       		.uleb128 0x1
 2095 034d 9C       		.byte	0x9c
 2096 034e 62030000 		.4byte	0x362
 2097 0352 0B       		.uleb128 0xb
 2098 0353 07000000 		.4byte	.LASF47
 2099 0357 01       		.byte	0x1
 2100 0358 AE03     		.2byte	0x3ae
 2101 035a 6B000000 		.4byte	0x6b
 2102 035e 02       		.uleb128 0x2
 2103 035f 91       		.byte	0x91
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 66


 2104 0360 77       		.sleb128 -9
 2105 0361 00       		.byte	0
 2106 0362 09       		.uleb128 0x9
 2107 0363 A7000000 		.4byte	.LASF48
 2108 0367 01       		.byte	0x1
 2109 0368 EB03     		.2byte	0x3eb
 2110 036a 6B000000 		.4byte	0x6b
 2111 036e 00000000 		.4byte	.LFB18
 2112 0372 18000000 		.4byte	.LFE18-.LFB18
 2113 0376 01       		.uleb128 0x1
 2114 0377 9C       		.byte	0x9c
 2115 0378 0A       		.uleb128 0xa
 2116 0379 E6020000 		.4byte	.LASF49
 2117 037d 01       		.byte	0x1
 2118 037e 1104     		.2byte	0x411
 2119 0380 00000000 		.4byte	.LFB19
 2120 0384 BC000000 		.4byte	.LFE19-.LFB19
 2121 0388 01       		.uleb128 0x1
 2122 0389 9C       		.byte	0x9c
 2123 038a BC030000 		.4byte	0x3bc
 2124 038e 0B       		.uleb128 0xb
 2125 038f 07000000 		.4byte	.LASF47
 2126 0393 01       		.byte	0x1
 2127 0394 1104     		.2byte	0x411
 2128 0396 6B000000 		.4byte	0x6b
 2129 039a 02       		.uleb128 0x2
 2130 039b 91       		.byte	0x91
 2131 039c 6F       		.sleb128 -17
 2132 039d 0D       		.uleb128 0xd
 2133 039e 4E020000 		.4byte	.LASF50
 2134 03a2 01       		.byte	0x1
 2135 03a3 1804     		.2byte	0x418
 2136 03a5 77000000 		.4byte	0x77
 2137 03a9 02       		.uleb128 0x2
 2138 03aa 91       		.byte	0x91
 2139 03ab 76       		.sleb128 -10
 2140 03ac 0D       		.uleb128 0xd
 2141 03ad 17020000 		.4byte	.LASF51
 2142 03b1 01       		.byte	0x1
 2143 03b2 1904     		.2byte	0x419
 2144 03b4 77000000 		.4byte	0x77
 2145 03b8 02       		.uleb128 0x2
 2146 03b9 91       		.byte	0x91
 2147 03ba 74       		.sleb128 -12
 2148 03bb 00       		.byte	0
 2149 03bc 0F       		.uleb128 0xf
 2150 03bd 0E010000 		.4byte	.LASF52
 2151 03c1 01       		.byte	0x1
 2152 03c2 7904     		.2byte	0x479
 2153 03c4 00000000 		.4byte	.LFB20
 2154 03c8 44000000 		.4byte	.LFE20-.LFB20
 2155 03cc 01       		.uleb128 0x1
 2156 03cd 9C       		.byte	0x9c
 2157 03ce F1030000 		.4byte	0x3f1
 2158 03d2 0B       		.uleb128 0xb
 2159 03d3 12000000 		.4byte	.LASF53
 2160 03d7 01       		.byte	0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 67


 2161 03d8 7904     		.2byte	0x479
 2162 03da F1030000 		.4byte	0x3f1
 2163 03de 02       		.uleb128 0x2
 2164 03df 91       		.byte	0x91
 2165 03e0 6C       		.sleb128 -20
 2166 03e1 0D       		.uleb128 0xd
 2167 03e2 8B020000 		.4byte	.LASF54
 2168 03e6 01       		.byte	0x1
 2169 03e7 7B04     		.2byte	0x47b
 2170 03e9 77000000 		.4byte	0x77
 2171 03ed 02       		.uleb128 0x2
 2172 03ee 91       		.byte	0x91
 2173 03ef 76       		.sleb128 -10
 2174 03f0 00       		.byte	0
 2175 03f1 10       		.uleb128 0x10
 2176 03f2 04       		.byte	0x4
 2177 03f3 F7030000 		.4byte	0x3f7
 2178 03f7 11       		.uleb128 0x11
 2179 03f8 9D000000 		.4byte	0x9d
 2180 03fc 0F       		.uleb128 0xf
 2181 03fd BE010000 		.4byte	.LASF55
 2182 0401 01       		.byte	0x1
 2183 0402 A704     		.2byte	0x4a7
 2184 0404 00000000 		.4byte	.LFB21
 2185 0408 44000000 		.4byte	.LFE21-.LFB21
 2186 040c 01       		.uleb128 0x1
 2187 040d 9C       		.byte	0x9c
 2188 040e 40040000 		.4byte	0x440
 2189 0412 0B       		.uleb128 0xb
 2190 0413 12000000 		.4byte	.LASF53
 2191 0417 01       		.byte	0x1
 2192 0418 A704     		.2byte	0x4a7
 2193 041a 40040000 		.4byte	0x440
 2194 041e 02       		.uleb128 0x2
 2195 041f 91       		.byte	0x91
 2196 0420 6C       		.sleb128 -20
 2197 0421 0B       		.uleb128 0xb
 2198 0422 9D030000 		.4byte	.LASF56
 2199 0426 01       		.byte	0x1
 2200 0427 A704     		.2byte	0x4a7
 2201 0429 77000000 		.4byte	0x77
 2202 042d 02       		.uleb128 0x2
 2203 042e 91       		.byte	0x91
 2204 042f 6A       		.sleb128 -22
 2205 0430 0D       		.uleb128 0xd
 2206 0431 8B020000 		.4byte	.LASF54
 2207 0435 01       		.byte	0x1
 2208 0436 AA04     		.2byte	0x4aa
 2209 0438 77000000 		.4byte	0x77
 2210 043c 02       		.uleb128 0x2
 2211 043d 91       		.byte	0x91
 2212 043e 76       		.sleb128 -10
 2213 043f 00       		.byte	0
 2214 0440 10       		.uleb128 0x10
 2215 0441 04       		.byte	0x4
 2216 0442 46040000 		.4byte	0x446
 2217 0446 11       		.uleb128 0x11
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 68


 2218 0447 6B000000 		.4byte	0x6b
 2219 044b 0F       		.uleb128 0xf
 2220 044c 5E030000 		.4byte	.LASF57
 2221 0450 01       		.byte	0x1
 2222 0451 CE04     		.2byte	0x4ce
 2223 0453 00000000 		.4byte	.LFB22
 2224 0457 34000000 		.4byte	.LFE22-.LFB22
 2225 045b 01       		.uleb128 0x1
 2226 045c 9C       		.byte	0x9c
 2227 045d 71040000 		.4byte	0x471
 2228 0461 0B       		.uleb128 0xb
 2229 0462 07000000 		.4byte	.LASF47
 2230 0466 01       		.byte	0x1
 2231 0467 CE04     		.2byte	0x4ce
 2232 0469 6B000000 		.4byte	0x6b
 2233 046d 02       		.uleb128 0x2
 2234 046e 91       		.byte	0x91
 2235 046f 77       		.sleb128 -9
 2236 0470 00       		.byte	0
 2237 0471 0C       		.uleb128 0xc
 2238 0472 D3010000 		.4byte	.LASF58
 2239 0476 01       		.byte	0x1
 2240 0477 F904     		.2byte	0x4f9
 2241 0479 77000000 		.4byte	0x77
 2242 047d 00000000 		.4byte	.LFB23
 2243 0481 74000000 		.4byte	.LFE23-.LFB23
 2244 0485 01       		.uleb128 0x1
 2245 0486 9C       		.byte	0x9c
 2246 0487 9B040000 		.4byte	0x49b
 2247 048b 0D       		.uleb128 0xd
 2248 048c 7F010000 		.4byte	.LASF38
 2249 0490 01       		.byte	0x1
 2250 0491 FC04     		.2byte	0x4fc
 2251 0493 77000000 		.4byte	0x77
 2252 0497 02       		.uleb128 0x2
 2253 0498 91       		.byte	0x91
 2254 0499 76       		.sleb128 -10
 2255 049a 00       		.byte	0
 2256 049b 0F       		.uleb128 0xf
 2257 049c 39030000 		.4byte	.LASF59
 2258 04a0 01       		.byte	0x1
 2259 04a1 4A05     		.2byte	0x54a
 2260 04a3 00000000 		.4byte	.LFB24
 2261 04a7 6C000000 		.4byte	.LFE24-.LFB24
 2262 04ab 01       		.uleb128 0x1
 2263 04ac 9C       		.byte	0x9c
 2264 04ad C1040000 		.4byte	0x4c1
 2265 04b1 0D       		.uleb128 0xd
 2266 04b2 88040000 		.4byte	.LASF24
 2267 04b6 01       		.byte	0x1
 2268 04b7 4C05     		.2byte	0x54c
 2269 04b9 6B000000 		.4byte	0x6b
 2270 04bd 02       		.uleb128 0x2
 2271 04be 91       		.byte	0x91
 2272 04bf 77       		.sleb128 -9
 2273 04c0 00       		.byte	0
 2274 04c1 0A       		.uleb128 0xa
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 69


 2275 04c2 A0040000 		.4byte	.LASF60
 2276 04c6 01       		.byte	0x1
 2277 04c7 A005     		.2byte	0x5a0
 2278 04c9 00000000 		.4byte	.LFB25
 2279 04cd 9C000000 		.4byte	.LFE25-.LFB25
 2280 04d1 01       		.uleb128 0x1
 2281 04d2 9C       		.byte	0x9c
 2282 04d3 12050000 		.4byte	0x512
 2283 04d7 0B       		.uleb128 0xb
 2284 04d8 27020000 		.4byte	.LASF61
 2285 04dc 01       		.byte	0x1
 2286 04dd A005     		.2byte	0x5a0
 2287 04df 6B000000 		.4byte	0x6b
 2288 04e3 02       		.uleb128 0x2
 2289 04e4 91       		.byte	0x91
 2290 04e5 6F       		.sleb128 -17
 2291 04e6 12       		.uleb128 0x12
 2292 04e7 12000000 		.4byte	.LBB2
 2293 04eb 6C000000 		.4byte	.LBE2-.LBB2
 2294 04ef 0D       		.uleb128 0xd
 2295 04f0 C9020000 		.4byte	.LASF62
 2296 04f4 01       		.byte	0x1
 2297 04f5 A805     		.2byte	0x5a8
 2298 04f7 6B000000 		.4byte	0x6b
 2299 04fb 02       		.uleb128 0x2
 2300 04fc 91       		.byte	0x91
 2301 04fd 77       		.sleb128 -9
 2302 04fe 0D       		.uleb128 0xd
 2303 04ff 76010000 		.4byte	.LASF63
 2304 0503 01       		.byte	0x1
 2305 0504 D005     		.2byte	0x5d0
 2306 0506 6B000000 		.4byte	0x6b
 2307 050a 05       		.uleb128 0x5
 2308 050b 03       		.byte	0x3
 2309 050c 06000000 		.4byte	txPeriod.5131
 2310 0510 00       		.byte	0
 2311 0511 00       		.byte	0
 2312 0512 0A       		.uleb128 0xa
 2313 0513 13030000 		.4byte	.LASF64
 2314 0517 01       		.byte	0x1
 2315 0518 2406     		.2byte	0x624
 2316 051a 00000000 		.4byte	.LFB26
 2317 051e 14000000 		.4byte	.LFE26-.LFB26
 2318 0522 01       		.uleb128 0x1
 2319 0523 9C       		.byte	0x9c
 2320 0524 38050000 		.4byte	0x538
 2321 0528 0B       		.uleb128 0xb
 2322 0529 FC010000 		.4byte	.LASF41
 2323 052d 01       		.byte	0x1
 2324 052e 2406     		.2byte	0x624
 2325 0530 6B000000 		.4byte	0x6b
 2326 0534 02       		.uleb128 0x2
 2327 0535 91       		.byte	0x91
 2328 0536 77       		.sleb128 -9
 2329 0537 00       		.byte	0
 2330 0538 13       		.uleb128 0x13
 2331 0539 B5020000 		.4byte	.LASF65
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 70


 2332 053d 01       		.byte	0x1
 2333 053e 1B       		.byte	0x1b
 2334 053f 6B000000 		.4byte	0x6b
 2335 0543 05       		.uleb128 0x5
 2336 0544 03       		.byte	0x3
 2337 0545 00000000 		.4byte	UART_460800_initVar
 2338 0549 14       		.uleb128 0x14
 2339 054a BC000000 		.4byte	0xbc
 2340 054e 5A050000 		.4byte	0x55a
 2341 0552 15       		.uleb128 0x15
 2342 0553 DE000000 		.4byte	0xde
 2343 0557 FF07     		.2byte	0x7ff
 2344 0559 00       		.byte	0
 2345 055a 13       		.uleb128 0x13
 2346 055b 47010000 		.4byte	.LASF66
 2347 055f 01       		.byte	0x1
 2348 0560 1E       		.byte	0x1e
 2349 0561 6B050000 		.4byte	0x56b
 2350 0565 05       		.uleb128 0x5
 2351 0566 03       		.byte	0x3
 2352 0567 00000000 		.4byte	UART_460800_txBuffer
 2353 056b 05       		.uleb128 0x5
 2354 056c 49050000 		.4byte	0x549
 2355 0570 13       		.uleb128 0x13
 2356 0571 2D040000 		.4byte	.LASF67
 2357 0575 01       		.byte	0x1
 2358 0576 1F       		.byte	0x1f
 2359 0577 C1000000 		.4byte	0xc1
 2360 057b 05       		.uleb128 0x5
 2361 057c 03       		.byte	0x3
 2362 057d 00000000 		.4byte	UART_460800_txBufferRead
 2363 0581 13       		.uleb128 0x13
 2364 0582 4A050000 		.4byte	.LASF68
 2365 0586 01       		.byte	0x1
 2366 0587 20       		.byte	0x20
 2367 0588 77000000 		.4byte	0x77
 2368 058c 05       		.uleb128 0x5
 2369 058d 03       		.byte	0x3
 2370 058e 00000000 		.4byte	UART_460800_txBufferWrite
 2371 0592 00       		.byte	0
 2372              		.section	.debug_abbrev,"",%progbits
 2373              	.Ldebug_abbrev0:
 2374 0000 01       		.uleb128 0x1
 2375 0001 11       		.uleb128 0x11
 2376 0002 01       		.byte	0x1
 2377 0003 25       		.uleb128 0x25
 2378 0004 0E       		.uleb128 0xe
 2379 0005 13       		.uleb128 0x13
 2380 0006 0B       		.uleb128 0xb
 2381 0007 03       		.uleb128 0x3
 2382 0008 0E       		.uleb128 0xe
 2383 0009 1B       		.uleb128 0x1b
 2384 000a 0E       		.uleb128 0xe
 2385 000b 55       		.uleb128 0x55
 2386 000c 17       		.uleb128 0x17
 2387 000d 11       		.uleb128 0x11
 2388 000e 01       		.uleb128 0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 71


 2389 000f 10       		.uleb128 0x10
 2390 0010 17       		.uleb128 0x17
 2391 0011 00       		.byte	0
 2392 0012 00       		.byte	0
 2393 0013 02       		.uleb128 0x2
 2394 0014 24       		.uleb128 0x24
 2395 0015 00       		.byte	0
 2396 0016 0B       		.uleb128 0xb
 2397 0017 0B       		.uleb128 0xb
 2398 0018 3E       		.uleb128 0x3e
 2399 0019 0B       		.uleb128 0xb
 2400 001a 03       		.uleb128 0x3
 2401 001b 0E       		.uleb128 0xe
 2402 001c 00       		.byte	0
 2403 001d 00       		.byte	0
 2404 001e 03       		.uleb128 0x3
 2405 001f 24       		.uleb128 0x24
 2406 0020 00       		.byte	0
 2407 0021 0B       		.uleb128 0xb
 2408 0022 0B       		.uleb128 0xb
 2409 0023 3E       		.uleb128 0x3e
 2410 0024 0B       		.uleb128 0xb
 2411 0025 03       		.uleb128 0x3
 2412 0026 08       		.uleb128 0x8
 2413 0027 00       		.byte	0
 2414 0028 00       		.byte	0
 2415 0029 04       		.uleb128 0x4
 2416 002a 16       		.uleb128 0x16
 2417 002b 00       		.byte	0
 2418 002c 03       		.uleb128 0x3
 2419 002d 0E       		.uleb128 0xe
 2420 002e 3A       		.uleb128 0x3a
 2421 002f 0B       		.uleb128 0xb
 2422 0030 3B       		.uleb128 0x3b
 2423 0031 05       		.uleb128 0x5
 2424 0032 49       		.uleb128 0x49
 2425 0033 13       		.uleb128 0x13
 2426 0034 00       		.byte	0
 2427 0035 00       		.byte	0
 2428 0036 05       		.uleb128 0x5
 2429 0037 35       		.uleb128 0x35
 2430 0038 00       		.byte	0
 2431 0039 49       		.uleb128 0x49
 2432 003a 13       		.uleb128 0x13
 2433 003b 00       		.byte	0
 2434 003c 00       		.byte	0
 2435 003d 06       		.uleb128 0x6
 2436 003e 2E       		.uleb128 0x2e
 2437 003f 00       		.byte	0
 2438 0040 3F       		.uleb128 0x3f
 2439 0041 19       		.uleb128 0x19
 2440 0042 03       		.uleb128 0x3
 2441 0043 0E       		.uleb128 0xe
 2442 0044 3A       		.uleb128 0x3a
 2443 0045 0B       		.uleb128 0xb
 2444 0046 3B       		.uleb128 0x3b
 2445 0047 0B       		.uleb128 0xb
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 72


 2446 0048 27       		.uleb128 0x27
 2447 0049 19       		.uleb128 0x19
 2448 004a 11       		.uleb128 0x11
 2449 004b 01       		.uleb128 0x1
 2450 004c 12       		.uleb128 0x12
 2451 004d 06       		.uleb128 0x6
 2452 004e 40       		.uleb128 0x40
 2453 004f 18       		.uleb128 0x18
 2454 0050 9642     		.uleb128 0x2116
 2455 0052 19       		.uleb128 0x19
 2456 0053 00       		.byte	0
 2457 0054 00       		.byte	0
 2458 0055 07       		.uleb128 0x7
 2459 0056 2E       		.uleb128 0x2e
 2460 0057 01       		.byte	0x1
 2461 0058 3F       		.uleb128 0x3f
 2462 0059 19       		.uleb128 0x19
 2463 005a 03       		.uleb128 0x3
 2464 005b 0E       		.uleb128 0xe
 2465 005c 3A       		.uleb128 0x3a
 2466 005d 0B       		.uleb128 0xb
 2467 005e 3B       		.uleb128 0x3b
 2468 005f 0B       		.uleb128 0xb
 2469 0060 27       		.uleb128 0x27
 2470 0061 19       		.uleb128 0x19
 2471 0062 11       		.uleb128 0x11
 2472 0063 01       		.uleb128 0x1
 2473 0064 12       		.uleb128 0x12
 2474 0065 06       		.uleb128 0x6
 2475 0066 40       		.uleb128 0x40
 2476 0067 18       		.uleb128 0x18
 2477 0068 9642     		.uleb128 0x2116
 2478 006a 19       		.uleb128 0x19
 2479 006b 01       		.uleb128 0x1
 2480 006c 13       		.uleb128 0x13
 2481 006d 00       		.byte	0
 2482 006e 00       		.byte	0
 2483 006f 08       		.uleb128 0x8
 2484 0070 34       		.uleb128 0x34
 2485 0071 00       		.byte	0
 2486 0072 03       		.uleb128 0x3
 2487 0073 0E       		.uleb128 0xe
 2488 0074 3A       		.uleb128 0x3a
 2489 0075 0B       		.uleb128 0xb
 2490 0076 3B       		.uleb128 0x3b
 2491 0077 0B       		.uleb128 0xb
 2492 0078 49       		.uleb128 0x49
 2493 0079 13       		.uleb128 0x13
 2494 007a 02       		.uleb128 0x2
 2495 007b 18       		.uleb128 0x18
 2496 007c 00       		.byte	0
 2497 007d 00       		.byte	0
 2498 007e 09       		.uleb128 0x9
 2499 007f 2E       		.uleb128 0x2e
 2500 0080 00       		.byte	0
 2501 0081 3F       		.uleb128 0x3f
 2502 0082 19       		.uleb128 0x19
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 73


 2503 0083 03       		.uleb128 0x3
 2504 0084 0E       		.uleb128 0xe
 2505 0085 3A       		.uleb128 0x3a
 2506 0086 0B       		.uleb128 0xb
 2507 0087 3B       		.uleb128 0x3b
 2508 0088 05       		.uleb128 0x5
 2509 0089 27       		.uleb128 0x27
 2510 008a 19       		.uleb128 0x19
 2511 008b 49       		.uleb128 0x49
 2512 008c 13       		.uleb128 0x13
 2513 008d 11       		.uleb128 0x11
 2514 008e 01       		.uleb128 0x1
 2515 008f 12       		.uleb128 0x12
 2516 0090 06       		.uleb128 0x6
 2517 0091 40       		.uleb128 0x40
 2518 0092 18       		.uleb128 0x18
 2519 0093 9742     		.uleb128 0x2117
 2520 0095 19       		.uleb128 0x19
 2521 0096 00       		.byte	0
 2522 0097 00       		.byte	0
 2523 0098 0A       		.uleb128 0xa
 2524 0099 2E       		.uleb128 0x2e
 2525 009a 01       		.byte	0x1
 2526 009b 3F       		.uleb128 0x3f
 2527 009c 19       		.uleb128 0x19
 2528 009d 03       		.uleb128 0x3
 2529 009e 0E       		.uleb128 0xe
 2530 009f 3A       		.uleb128 0x3a
 2531 00a0 0B       		.uleb128 0xb
 2532 00a1 3B       		.uleb128 0x3b
 2533 00a2 05       		.uleb128 0x5
 2534 00a3 27       		.uleb128 0x27
 2535 00a4 19       		.uleb128 0x19
 2536 00a5 11       		.uleb128 0x11
 2537 00a6 01       		.uleb128 0x1
 2538 00a7 12       		.uleb128 0x12
 2539 00a8 06       		.uleb128 0x6
 2540 00a9 40       		.uleb128 0x40
 2541 00aa 18       		.uleb128 0x18
 2542 00ab 9742     		.uleb128 0x2117
 2543 00ad 19       		.uleb128 0x19
 2544 00ae 01       		.uleb128 0x1
 2545 00af 13       		.uleb128 0x13
 2546 00b0 00       		.byte	0
 2547 00b1 00       		.byte	0
 2548 00b2 0B       		.uleb128 0xb
 2549 00b3 05       		.uleb128 0x5
 2550 00b4 00       		.byte	0
 2551 00b5 03       		.uleb128 0x3
 2552 00b6 0E       		.uleb128 0xe
 2553 00b7 3A       		.uleb128 0x3a
 2554 00b8 0B       		.uleb128 0xb
 2555 00b9 3B       		.uleb128 0x3b
 2556 00ba 05       		.uleb128 0x5
 2557 00bb 49       		.uleb128 0x49
 2558 00bc 13       		.uleb128 0x13
 2559 00bd 02       		.uleb128 0x2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 74


 2560 00be 18       		.uleb128 0x18
 2561 00bf 00       		.byte	0
 2562 00c0 00       		.byte	0
 2563 00c1 0C       		.uleb128 0xc
 2564 00c2 2E       		.uleb128 0x2e
 2565 00c3 01       		.byte	0x1
 2566 00c4 3F       		.uleb128 0x3f
 2567 00c5 19       		.uleb128 0x19
 2568 00c6 03       		.uleb128 0x3
 2569 00c7 0E       		.uleb128 0xe
 2570 00c8 3A       		.uleb128 0x3a
 2571 00c9 0B       		.uleb128 0xb
 2572 00ca 3B       		.uleb128 0x3b
 2573 00cb 05       		.uleb128 0x5
 2574 00cc 27       		.uleb128 0x27
 2575 00cd 19       		.uleb128 0x19
 2576 00ce 49       		.uleb128 0x49
 2577 00cf 13       		.uleb128 0x13
 2578 00d0 11       		.uleb128 0x11
 2579 00d1 01       		.uleb128 0x1
 2580 00d2 12       		.uleb128 0x12
 2581 00d3 06       		.uleb128 0x6
 2582 00d4 40       		.uleb128 0x40
 2583 00d5 18       		.uleb128 0x18
 2584 00d6 9742     		.uleb128 0x2117
 2585 00d8 19       		.uleb128 0x19
 2586 00d9 01       		.uleb128 0x1
 2587 00da 13       		.uleb128 0x13
 2588 00db 00       		.byte	0
 2589 00dc 00       		.byte	0
 2590 00dd 0D       		.uleb128 0xd
 2591 00de 34       		.uleb128 0x34
 2592 00df 00       		.byte	0
 2593 00e0 03       		.uleb128 0x3
 2594 00e1 0E       		.uleb128 0xe
 2595 00e2 3A       		.uleb128 0x3a
 2596 00e3 0B       		.uleb128 0xb
 2597 00e4 3B       		.uleb128 0x3b
 2598 00e5 05       		.uleb128 0x5
 2599 00e6 49       		.uleb128 0x49
 2600 00e7 13       		.uleb128 0x13
 2601 00e8 02       		.uleb128 0x2
 2602 00e9 18       		.uleb128 0x18
 2603 00ea 00       		.byte	0
 2604 00eb 00       		.byte	0
 2605 00ec 0E       		.uleb128 0xe
 2606 00ed 2E       		.uleb128 0x2e
 2607 00ee 00       		.byte	0
 2608 00ef 3F       		.uleb128 0x3f
 2609 00f0 19       		.uleb128 0x19
 2610 00f1 03       		.uleb128 0x3
 2611 00f2 0E       		.uleb128 0xe
 2612 00f3 3A       		.uleb128 0x3a
 2613 00f4 0B       		.uleb128 0xb
 2614 00f5 3B       		.uleb128 0x3b
 2615 00f6 05       		.uleb128 0x5
 2616 00f7 27       		.uleb128 0x27
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 75


 2617 00f8 19       		.uleb128 0x19
 2618 00f9 49       		.uleb128 0x49
 2619 00fa 13       		.uleb128 0x13
 2620 00fb 11       		.uleb128 0x11
 2621 00fc 01       		.uleb128 0x1
 2622 00fd 12       		.uleb128 0x12
 2623 00fe 06       		.uleb128 0x6
 2624 00ff 40       		.uleb128 0x40
 2625 0100 18       		.uleb128 0x18
 2626 0101 9642     		.uleb128 0x2116
 2627 0103 19       		.uleb128 0x19
 2628 0104 00       		.byte	0
 2629 0105 00       		.byte	0
 2630 0106 0F       		.uleb128 0xf
 2631 0107 2E       		.uleb128 0x2e
 2632 0108 01       		.byte	0x1
 2633 0109 3F       		.uleb128 0x3f
 2634 010a 19       		.uleb128 0x19
 2635 010b 03       		.uleb128 0x3
 2636 010c 0E       		.uleb128 0xe
 2637 010d 3A       		.uleb128 0x3a
 2638 010e 0B       		.uleb128 0xb
 2639 010f 3B       		.uleb128 0x3b
 2640 0110 05       		.uleb128 0x5
 2641 0111 27       		.uleb128 0x27
 2642 0112 19       		.uleb128 0x19
 2643 0113 11       		.uleb128 0x11
 2644 0114 01       		.uleb128 0x1
 2645 0115 12       		.uleb128 0x12
 2646 0116 06       		.uleb128 0x6
 2647 0117 40       		.uleb128 0x40
 2648 0118 18       		.uleb128 0x18
 2649 0119 9642     		.uleb128 0x2116
 2650 011b 19       		.uleb128 0x19
 2651 011c 01       		.uleb128 0x1
 2652 011d 13       		.uleb128 0x13
 2653 011e 00       		.byte	0
 2654 011f 00       		.byte	0
 2655 0120 10       		.uleb128 0x10
 2656 0121 0F       		.uleb128 0xf
 2657 0122 00       		.byte	0
 2658 0123 0B       		.uleb128 0xb
 2659 0124 0B       		.uleb128 0xb
 2660 0125 49       		.uleb128 0x49
 2661 0126 13       		.uleb128 0x13
 2662 0127 00       		.byte	0
 2663 0128 00       		.byte	0
 2664 0129 11       		.uleb128 0x11
 2665 012a 26       		.uleb128 0x26
 2666 012b 00       		.byte	0
 2667 012c 49       		.uleb128 0x49
 2668 012d 13       		.uleb128 0x13
 2669 012e 00       		.byte	0
 2670 012f 00       		.byte	0
 2671 0130 12       		.uleb128 0x12
 2672 0131 0B       		.uleb128 0xb
 2673 0132 01       		.byte	0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 76


 2674 0133 11       		.uleb128 0x11
 2675 0134 01       		.uleb128 0x1
 2676 0135 12       		.uleb128 0x12
 2677 0136 06       		.uleb128 0x6
 2678 0137 00       		.byte	0
 2679 0138 00       		.byte	0
 2680 0139 13       		.uleb128 0x13
 2681 013a 34       		.uleb128 0x34
 2682 013b 00       		.byte	0
 2683 013c 03       		.uleb128 0x3
 2684 013d 0E       		.uleb128 0xe
 2685 013e 3A       		.uleb128 0x3a
 2686 013f 0B       		.uleb128 0xb
 2687 0140 3B       		.uleb128 0x3b
 2688 0141 0B       		.uleb128 0xb
 2689 0142 49       		.uleb128 0x49
 2690 0143 13       		.uleb128 0x13
 2691 0144 3F       		.uleb128 0x3f
 2692 0145 19       		.uleb128 0x19
 2693 0146 02       		.uleb128 0x2
 2694 0147 18       		.uleb128 0x18
 2695 0148 00       		.byte	0
 2696 0149 00       		.byte	0
 2697 014a 14       		.uleb128 0x14
 2698 014b 01       		.uleb128 0x1
 2699 014c 01       		.byte	0x1
 2700 014d 49       		.uleb128 0x49
 2701 014e 13       		.uleb128 0x13
 2702 014f 01       		.uleb128 0x1
 2703 0150 13       		.uleb128 0x13
 2704 0151 00       		.byte	0
 2705 0152 00       		.byte	0
 2706 0153 15       		.uleb128 0x15
 2707 0154 21       		.uleb128 0x21
 2708 0155 00       		.byte	0
 2709 0156 49       		.uleb128 0x49
 2710 0157 13       		.uleb128 0x13
 2711 0158 2F       		.uleb128 0x2f
 2712 0159 05       		.uleb128 0x5
 2713 015a 00       		.byte	0
 2714 015b 00       		.byte	0
 2715 015c 00       		.byte	0
 2716              		.section	.debug_aranges,"",%progbits
 2717 0000 EC000000 		.4byte	0xec
 2718 0004 0200     		.2byte	0x2
 2719 0006 00000000 		.4byte	.Ldebug_info0
 2720 000a 04       		.byte	0x4
 2721 000b 00       		.byte	0
 2722 000c 0000     		.2byte	0
 2723 000e 0000     		.2byte	0
 2724 0010 00000000 		.4byte	.LFB0
 2725 0014 24000000 		.4byte	.LFE0-.LFB0
 2726 0018 00000000 		.4byte	.LFB1
 2727 001c 50000000 		.4byte	.LFE1-.LFB1
 2728 0020 00000000 		.4byte	.LFB2
 2729 0024 74000000 		.4byte	.LFE2-.LFB2
 2730 0028 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 77


 2731 002c 68000000 		.4byte	.LFE3-.LFB3
 2732 0030 00000000 		.4byte	.LFB4
 2733 0034 0E000000 		.4byte	.LFE4-.LFB4
 2734 0038 00000000 		.4byte	.LFB5
 2735 003c 14000000 		.4byte	.LFE5-.LFB5
 2736 0040 00000000 		.4byte	.LFB6
 2737 0044 20000000 		.4byte	.LFE6-.LFB6
 2738 0048 00000000 		.4byte	.LFB7
 2739 004c 1C000000 		.4byte	.LFE7-.LFB7
 2740 0050 00000000 		.4byte	.LFB8
 2741 0054 24000000 		.4byte	.LFE8-.LFB8
 2742 0058 00000000 		.4byte	.LFB9
 2743 005c 44000000 		.4byte	.LFE9-.LFB9
 2744 0060 00000000 		.4byte	.LFB10
 2745 0064 20000000 		.4byte	.LFE10-.LFB10
 2746 0068 00000000 		.4byte	.LFB11
 2747 006c 2C000000 		.4byte	.LFE11-.LFB11
 2748 0070 00000000 		.4byte	.LFB12
 2749 0074 44000000 		.4byte	.LFE12-.LFB12
 2750 0078 00000000 		.4byte	.LFB13
 2751 007c 14000000 		.4byte	.LFE13-.LFB13
 2752 0080 00000000 		.4byte	.LFB14
 2753 0084 20000000 		.4byte	.LFE14-.LFB14
 2754 0088 00000000 		.4byte	.LFB15
 2755 008c 20000000 		.4byte	.LFE15-.LFB15
 2756 0090 00000000 		.4byte	.LFB16
 2757 0094 20000000 		.4byte	.LFE16-.LFB16
 2758 0098 00000000 		.4byte	.LFB17
 2759 009c 94000000 		.4byte	.LFE17-.LFB17
 2760 00a0 00000000 		.4byte	.LFB18
 2761 00a4 18000000 		.4byte	.LFE18-.LFB18
 2762 00a8 00000000 		.4byte	.LFB19
 2763 00ac BC000000 		.4byte	.LFE19-.LFB19
 2764 00b0 00000000 		.4byte	.LFB20
 2765 00b4 44000000 		.4byte	.LFE20-.LFB20
 2766 00b8 00000000 		.4byte	.LFB21
 2767 00bc 44000000 		.4byte	.LFE21-.LFB21
 2768 00c0 00000000 		.4byte	.LFB22
 2769 00c4 34000000 		.4byte	.LFE22-.LFB22
 2770 00c8 00000000 		.4byte	.LFB23
 2771 00cc 74000000 		.4byte	.LFE23-.LFB23
 2772 00d0 00000000 		.4byte	.LFB24
 2773 00d4 6C000000 		.4byte	.LFE24-.LFB24
 2774 00d8 00000000 		.4byte	.LFB25
 2775 00dc 9C000000 		.4byte	.LFE25-.LFB25
 2776 00e0 00000000 		.4byte	.LFB26
 2777 00e4 14000000 		.4byte	.LFE26-.LFB26
 2778 00e8 00000000 		.4byte	0
 2779 00ec 00000000 		.4byte	0
 2780              		.section	.debug_ranges,"",%progbits
 2781              	.Ldebug_ranges0:
 2782 0000 00000000 		.4byte	.LFB0
 2783 0004 24000000 		.4byte	.LFE0
 2784 0008 00000000 		.4byte	.LFB1
 2785 000c 50000000 		.4byte	.LFE1
 2786 0010 00000000 		.4byte	.LFB2
 2787 0014 74000000 		.4byte	.LFE2
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 78


 2788 0018 00000000 		.4byte	.LFB3
 2789 001c 68000000 		.4byte	.LFE3
 2790 0020 00000000 		.4byte	.LFB4
 2791 0024 0E000000 		.4byte	.LFE4
 2792 0028 00000000 		.4byte	.LFB5
 2793 002c 14000000 		.4byte	.LFE5
 2794 0030 00000000 		.4byte	.LFB6
 2795 0034 20000000 		.4byte	.LFE6
 2796 0038 00000000 		.4byte	.LFB7
 2797 003c 1C000000 		.4byte	.LFE7
 2798 0040 00000000 		.4byte	.LFB8
 2799 0044 24000000 		.4byte	.LFE8
 2800 0048 00000000 		.4byte	.LFB9
 2801 004c 44000000 		.4byte	.LFE9
 2802 0050 00000000 		.4byte	.LFB10
 2803 0054 20000000 		.4byte	.LFE10
 2804 0058 00000000 		.4byte	.LFB11
 2805 005c 2C000000 		.4byte	.LFE11
 2806 0060 00000000 		.4byte	.LFB12
 2807 0064 44000000 		.4byte	.LFE12
 2808 0068 00000000 		.4byte	.LFB13
 2809 006c 14000000 		.4byte	.LFE13
 2810 0070 00000000 		.4byte	.LFB14
 2811 0074 20000000 		.4byte	.LFE14
 2812 0078 00000000 		.4byte	.LFB15
 2813 007c 20000000 		.4byte	.LFE15
 2814 0080 00000000 		.4byte	.LFB16
 2815 0084 20000000 		.4byte	.LFE16
 2816 0088 00000000 		.4byte	.LFB17
 2817 008c 94000000 		.4byte	.LFE17
 2818 0090 00000000 		.4byte	.LFB18
 2819 0094 18000000 		.4byte	.LFE18
 2820 0098 00000000 		.4byte	.LFB19
 2821 009c BC000000 		.4byte	.LFE19
 2822 00a0 00000000 		.4byte	.LFB20
 2823 00a4 44000000 		.4byte	.LFE20
 2824 00a8 00000000 		.4byte	.LFB21
 2825 00ac 44000000 		.4byte	.LFE21
 2826 00b0 00000000 		.4byte	.LFB22
 2827 00b4 34000000 		.4byte	.LFE22
 2828 00b8 00000000 		.4byte	.LFB23
 2829 00bc 74000000 		.4byte	.LFE23
 2830 00c0 00000000 		.4byte	.LFB24
 2831 00c4 6C000000 		.4byte	.LFE24
 2832 00c8 00000000 		.4byte	.LFB25
 2833 00cc 9C000000 		.4byte	.LFE25
 2834 00d0 00000000 		.4byte	.LFB26
 2835 00d4 14000000 		.4byte	.LFE26
 2836 00d8 00000000 		.4byte	0
 2837 00dc 00000000 		.4byte	0
 2838              		.section	.debug_line,"",%progbits
 2839              	.Ldebug_line0:
 2840 0000 20030000 		.section	.debug_str,"MS",%progbits,1
 2840      02004800 
 2840      00000201 
 2840      FB0E0D00 
 2840      01010101 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 79


 2841              	.LASF10:
 2842 0000 75696E74 		.ascii	"uint16\000"
 2842      313600
 2843              	.LASF47:
 2844 0007 74784461 		.ascii	"txDataByte\000"
 2844      74614279 
 2844      746500
 2845              	.LASF53:
 2846 0012 73747269 		.ascii	"string\000"
 2846      6E6700
 2847              	.LASF69:
 2848 0019 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2848      43313120 
 2848      352E342E 
 2848      31203230 
 2848      31363036 
 2849 004c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2849      20726576 
 2849      6973696F 
 2849      6E203233 
 2849      37373135 
 2850 007f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2850      66756E63 
 2850      74696F6E 
 2850      2D736563 
 2850      74696F6E 
 2851              	.LASF48:
 2852 00a7 55415254 		.ascii	"UART_460800_ReadTxStatus\000"
 2852      5F343630 
 2852      3830305F 
 2852      52656164 
 2852      54785374 
 2853              	.LASF7:
 2854 00c0 6C6F6E67 		.ascii	"long long unsigned int\000"
 2854      206C6F6E 
 2854      6720756E 
 2854      7369676E 
 2854      65642069 
 2855              	.LASF45:
 2856 00d7 55415254 		.ascii	"UART_460800_SetTxInterruptMode\000"
 2856      5F343630 
 2856      3830305F 
 2856      53657454 
 2856      78496E74 
 2857              	.LASF46:
 2858 00f6 55415254 		.ascii	"UART_460800_WriteTxData\000"
 2858      5F343630 
 2858      3830305F 
 2858      57726974 
 2858      65547844 
 2859              	.LASF52:
 2860 010e 55415254 		.ascii	"UART_460800_PutString\000"
 2860      5F343630 
 2860      3830305F 
 2860      50757453 
 2860      7472696E 
 2861              	.LASF23:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 80


 2862 0124 55415254 		.ascii	"UART_460800_Stop\000"
 2862      5F343630 
 2862      3830305F 
 2862      53746F70 
 2862      00
 2863              	.LASF20:
 2864 0135 55415254 		.ascii	"UART_460800_Start\000"
 2864      5F343630 
 2864      3830305F 
 2864      53746172 
 2864      7400
 2865              	.LASF66:
 2866 0147 55415254 		.ascii	"UART_460800_txBuffer\000"
 2866      5F343630 
 2866      3830305F 
 2866      74784275 
 2866      66666572 
 2867              	.LASF6:
 2868 015c 6C6F6E67 		.ascii	"long long int\000"
 2868      206C6F6E 
 2868      6720696E 
 2868      7400
 2869              	.LASF0:
 2870 016a 7369676E 		.ascii	"signed char\000"
 2870      65642063 
 2870      68617200 
 2871              	.LASF63:
 2872 0176 74785065 		.ascii	"txPeriod\000"
 2872      72696F64 
 2872      00
 2873              	.LASF38:
 2874 017f 73697A65 		.ascii	"size\000"
 2874      00
 2875              	.LASF39:
 2876 0184 55415254 		.ascii	"UART_460800_ClearRxBuffer\000"
 2876      5F343630 
 2876      3830305F 
 2876      436C6561 
 2876      72527842 
 2877              	.LASF30:
 2878 019e 55415254 		.ascii	"UART_460800_ReadRxData\000"
 2878      5F343630 
 2878      3830305F 
 2878      52656164 
 2878      52784461 
 2879              	.LASF4:
 2880 01b5 6C6F6E67 		.ascii	"long int\000"
 2880      20696E74 
 2880      00
 2881              	.LASF55:
 2882 01be 55415254 		.ascii	"UART_460800_PutArray\000"
 2882      5F343630 
 2882      3830305F 
 2882      50757441 
 2882      72726179 
 2883              	.LASF58:
 2884 01d3 55415254 		.ascii	"UART_460800_GetTxBufferSize\000"
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 81


 2884      5F343630 
 2884      3830305F 
 2884      47657454 
 2884      78427566 
 2885              	.LASF9:
 2886 01ef 75696E74 		.ascii	"uint8\000"
 2886      3800
 2887              	.LASF13:
 2888 01f5 646F7562 		.ascii	"double\000"
 2888      6C6500
 2889              	.LASF41:
 2890 01fc 61646472 		.ascii	"addressMode\000"
 2890      6573734D 
 2890      6F646500 
 2891              	.LASF11:
 2892 0208 75696E74 		.ascii	"uint32\000"
 2892      333200
 2893              	.LASF27:
 2894 020f 636F6E74 		.ascii	"control\000"
 2894      726F6C00 
 2895              	.LASF51:
 2896 0217 6C6F6354 		.ascii	"locTxBufferRead\000"
 2896      78427566 
 2896      66657252 
 2896      65616400 
 2897              	.LASF61:
 2898 0227 7265744D 		.ascii	"retMode\000"
 2898      6F646500 
 2899              	.LASF8:
 2900 022f 756E7369 		.ascii	"unsigned int\000"
 2900      676E6564 
 2900      20696E74 
 2900      00
 2901              	.LASF5:
 2902 023c 6C6F6E67 		.ascii	"long unsigned int\000"
 2902      20756E73 
 2902      69676E65 
 2902      6420696E 
 2902      7400
 2903              	.LASF50:
 2904 024e 6C6F6354 		.ascii	"locTxBufferWrite\000"
 2904      78427566 
 2904      66657257 
 2904      72697465 
 2904      00
 2905              	.LASF31:
 2906 025f 55415254 		.ascii	"UART_460800_ReadRxStatus\000"
 2906      5F343630 
 2906      3830305F 
 2906      52656164 
 2906      52785374 
 2907              	.LASF3:
 2908 0278 73686F72 		.ascii	"short unsigned int\000"
 2908      7420756E 
 2908      7369676E 
 2908      65642069 
 2908      6E7400
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 82


 2909              	.LASF54:
 2910 028b 62756649 		.ascii	"bufIndex\000"
 2910      6E646578 
 2910      00
 2911              	.LASF33:
 2912 0294 55415254 		.ascii	"UART_460800_GetChar\000"
 2912      5F343630 
 2912      3830305F 
 2912      47657443 
 2912      68617200 
 2913              	.LASF28:
 2914 02a8 696E7453 		.ascii	"intSrc\000"
 2914      726300
 2915              	.LASF17:
 2916 02af 72656733 		.ascii	"reg32\000"
 2916      3200
 2917              	.LASF65:
 2918 02b5 55415254 		.ascii	"UART_460800_initVar\000"
 2918      5F343630 
 2918      3830305F 
 2918      696E6974 
 2918      56617200 
 2919              	.LASF62:
 2920 02c9 746D7053 		.ascii	"tmpStat\000"
 2920      74617400 
 2921              	.LASF19:
 2922 02d1 73697A65 		.ascii	"sizetype\000"
 2922      74797065 
 2922      00
 2923              	.LASF18:
 2924 02da 6C6F6E67 		.ascii	"long double\000"
 2924      20646F75 
 2924      626C6500 
 2925              	.LASF49:
 2926 02e6 55415254 		.ascii	"UART_460800_PutChar\000"
 2926      5F343630 
 2926      3830305F 
 2926      50757443 
 2926      68617200 
 2927              	.LASF43:
 2928 02fa 61646472 		.ascii	"address\000"
 2928      65737300 
 2929              	.LASF21:
 2930 0302 55415254 		.ascii	"UART_460800_Init\000"
 2930      5F343630 
 2930      3830305F 
 2930      496E6974 
 2930      00
 2931              	.LASF64:
 2932 0313 55415254 		.ascii	"UART_460800_SetTxAddressMode\000"
 2932      5F343630 
 2932      3830305F 
 2932      53657454 
 2932      78416464 
 2933              	.LASF34:
 2934 0330 72785374 		.ascii	"rxStatus\000"
 2934      61747573 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 83


 2934      00
 2935              	.LASF59:
 2936 0339 55415254 		.ascii	"UART_460800_ClearTxBuffer\000"
 2936      5F343630 
 2936      3830305F 
 2936      436C6561 
 2936      72547842 
 2937              	.LASF12:
 2938 0353 666C6F61 		.ascii	"float\000"
 2938      7400
 2939              	.LASF16:
 2940 0359 72656738 		.ascii	"reg8\000"
 2940      00
 2941              	.LASF57:
 2942 035e 55415254 		.ascii	"UART_460800_PutCRLF\000"
 2942      5F343630 
 2942      3830305F 
 2942      50757443 
 2942      524C4600 
 2943              	.LASF1:
 2944 0372 756E7369 		.ascii	"unsigned char\000"
 2944      676E6564 
 2944      20636861 
 2944      7200
 2945              	.LASF22:
 2946 0380 55415254 		.ascii	"UART_460800_Enable\000"
 2946      5F343630 
 2946      3830305F 
 2946      456E6162 
 2946      6C6500
 2947              	.LASF2:
 2948 0393 73686F72 		.ascii	"short int\000"
 2948      7420696E 
 2948      7400
 2949              	.LASF56:
 2950 039d 62797465 		.ascii	"byteCount\000"
 2950      436F756E 
 2950      7400
 2951              	.LASF70:
 2952 03a7 47656E65 		.ascii	"Generated_Source\\PSoC5\\UART_460800.c\000"
 2952      72617465 
 2952      645F536F 
 2952      75726365 
 2952      5C50536F 
 2953              	.LASF29:
 2954 03cc 72784461 		.ascii	"rxData\000"
 2954      746100
 2955              	.LASF25:
 2956 03d3 55415254 		.ascii	"UART_460800_WriteControlRegister\000"
 2956      5F343630 
 2956      3830305F 
 2956      57726974 
 2956      65436F6E 
 2957              	.LASF15:
 2958 03f4 63686172 		.ascii	"char\000"
 2958      00
 2959              	.LASF42:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 84


 2960 03f9 55415254 		.ascii	"UART_460800_SetRxAddress1\000"
 2960      5F343630 
 2960      3830305F 
 2960      53657452 
 2960      78416464 
 2961              	.LASF44:
 2962 0413 55415254 		.ascii	"UART_460800_SetRxAddress2\000"
 2962      5F343630 
 2962      3830305F 
 2962      53657452 
 2962      78416464 
 2963              	.LASF67:
 2964 042d 55415254 		.ascii	"UART_460800_txBufferRead\000"
 2964      5F343630 
 2964      3830305F 
 2964      74784275 
 2964      66666572 
 2965              	.LASF37:
 2966 0446 55415254 		.ascii	"UART_460800_GetRxBufferSize\000"
 2966      5F343630 
 2966      3830305F 
 2966      47657452 
 2966      78427566 
 2967              	.LASF14:
 2968 0462 63686172 		.ascii	"char8\000"
 2968      3800
 2969              	.LASF35:
 2970 0468 55415254 		.ascii	"UART_460800_ReadControlRegister\000"
 2970      5F343630 
 2970      3830305F 
 2970      52656164 
 2970      436F6E74 
 2971              	.LASF24:
 2972 0488 656E6162 		.ascii	"enableInterrupts\000"
 2972      6C65496E 
 2972      74657272 
 2972      75707473 
 2972      00
 2973              	.LASF32:
 2974 0499 73746174 		.ascii	"status\000"
 2974      757300
 2975              	.LASF60:
 2976 04a0 55415254 		.ascii	"UART_460800_SendBreak\000"
 2976      5F343630 
 2976      3830305F 
 2976      53656E64 
 2976      42726561 
 2977              	.LASF26:
 2978 04b6 55415254 		.ascii	"UART_460800_SetRxInterruptMode\000"
 2978      5F343630 
 2978      3830305F 
 2978      53657452 
 2978      78496E74 
 2979              	.LASF40:
 2980 04d5 55415254 		.ascii	"UART_460800_SetRxAddressMode\000"
 2980      5F343630 
 2980      3830305F 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\cchzxy8R.s 			page 85


 2980      53657452 
 2980      78416464 
 2981              	.LASF36:
 2982 04f2 55415254 		.ascii	"UART_460800_GetByte\000"
 2982      5F343630 
 2982      3830305F 
 2982      47657442 
 2982      79746500 
 2983              	.LASF71:
 2984 0506 433A5C55 		.ascii	"C:\\Users\\marthnick\\Desktop\\firm_F1-TestFixture\\"
 2984      73657273 
 2984      5C6D6172 
 2984      74686E69 
 2984      636B5C44 
 2985 0535 46312D54 		.ascii	"F1-TestFixture.cydsn\000"
 2985      65737446 
 2985      69787475 
 2985      72652E63 
 2985      7964736E 
 2986              	.LASF68:
 2987 054a 55415254 		.ascii	"UART_460800_txBufferWrite\000"
 2987      5F343630 
 2987      3830305F 
 2987      74784275 
 2987      66666572 
 2988              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
