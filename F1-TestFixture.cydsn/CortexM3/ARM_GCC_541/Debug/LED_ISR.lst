ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"LED_ISR.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.LED_ISR_Start,"ax",%progbits
  20              		.align	2
  21              		.global	LED_ISR_Start
  22              		.thumb
  23              		.thumb_func
  24              		.type	LED_ISR_Start, %function
  25              	LED_ISR_Start:
  26              	.LFB0:
  27              		.file 1 "Generated_Source\\PSoC5\\LED_ISR.c"
   1:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/LED_ISR.c **** * File Name: LED_ISR.c  
   3:Generated_Source\PSoC5/LED_ISR.c **** * Version 1.70
   4:Generated_Source\PSoC5/LED_ISR.c **** *
   5:Generated_Source\PSoC5/LED_ISR.c **** *  Description:
   6:Generated_Source\PSoC5/LED_ISR.c **** *   API for controlling the state of an interrupt.
   7:Generated_Source\PSoC5/LED_ISR.c **** *
   8:Generated_Source\PSoC5/LED_ISR.c **** *
   9:Generated_Source\PSoC5/LED_ISR.c **** *  Note:
  10:Generated_Source\PSoC5/LED_ISR.c **** *
  11:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
  12:Generated_Source\PSoC5/LED_ISR.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/LED_ISR.c **** * You may use this file only in accordance with the license, terms, conditions, 
  14:Generated_Source\PSoC5/LED_ISR.c **** * disclaimers, and limitations in the end user license agreement accompanying 
  15:Generated_Source\PSoC5/LED_ISR.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/LED_ISR.c **** 
  18:Generated_Source\PSoC5/LED_ISR.c **** 
  19:Generated_Source\PSoC5/LED_ISR.c **** #include <cydevice_trm.h>
  20:Generated_Source\PSoC5/LED_ISR.c **** #include <CyLib.h>
  21:Generated_Source\PSoC5/LED_ISR.c **** #include <LED_ISR.h>
  22:Generated_Source\PSoC5/LED_ISR.c **** #include "cyapicallbacks.h"
  23:Generated_Source\PSoC5/LED_ISR.c **** 
  24:Generated_Source\PSoC5/LED_ISR.c **** #if !defined(LED_ISR__REMOVED) /* Check for removal by optimization */
  25:Generated_Source\PSoC5/LED_ISR.c **** 
  26:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
  27:Generated_Source\PSoC5/LED_ISR.c **** *  Place your includes, defines and code here 
  28:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************/
  29:Generated_Source\PSoC5/LED_ISR.c **** /* `#START LED_ISR_intc` */
  30:Generated_Source\PSoC5/LED_ISR.c **** //#include "CommManager.h"
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 2


  31:Generated_Source\PSoC5/LED_ISR.c **** /* `#END` */
  32:Generated_Source\PSoC5/LED_ISR.c **** 
  33:Generated_Source\PSoC5/LED_ISR.c **** #ifndef CYINT_IRQ_BASE
  34:Generated_Source\PSoC5/LED_ISR.c **** #define CYINT_IRQ_BASE      16
  35:Generated_Source\PSoC5/LED_ISR.c **** #endif /* CYINT_IRQ_BASE */
  36:Generated_Source\PSoC5/LED_ISR.c **** #ifndef CYINT_VECT_TABLE
  37:Generated_Source\PSoC5/LED_ISR.c **** #define CYINT_VECT_TABLE    ((cyisraddress **) CYREG_NVIC_VECT_OFFSET)
  38:Generated_Source\PSoC5/LED_ISR.c **** #endif /* CYINT_VECT_TABLE */
  39:Generated_Source\PSoC5/LED_ISR.c **** 
  40:Generated_Source\PSoC5/LED_ISR.c **** /* Declared in startup, used to set unused interrupts to. */
  41:Generated_Source\PSoC5/LED_ISR.c **** CY_ISR_PROTO(IntDefaultHandler);
  42:Generated_Source\PSoC5/LED_ISR.c **** 
  43:Generated_Source\PSoC5/LED_ISR.c **** 
  44:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
  45:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_Start
  46:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
  47:Generated_Source\PSoC5/LED_ISR.c **** *
  48:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
  49:Generated_Source\PSoC5/LED_ISR.c **** *  Set up the interrupt and enable it. This function disables the interrupt, 
  50:Generated_Source\PSoC5/LED_ISR.c **** *  sets the default interrupt vector, sets the priority from the value in the
  51:Generated_Source\PSoC5/LED_ISR.c **** *  Design Wide Resources Interrupt Editor, then enables the interrupt to the 
  52:Generated_Source\PSoC5/LED_ISR.c **** *  interrupt controller.
  53:Generated_Source\PSoC5/LED_ISR.c **** *
  54:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:  
  55:Generated_Source\PSoC5/LED_ISR.c **** *   None
  56:Generated_Source\PSoC5/LED_ISR.c **** *
  57:Generated_Source\PSoC5/LED_ISR.c **** * Return:
  58:Generated_Source\PSoC5/LED_ISR.c **** *   None
  59:Generated_Source\PSoC5/LED_ISR.c **** *
  60:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
  61:Generated_Source\PSoC5/LED_ISR.c **** void LED_ISR_Start(void)
  62:Generated_Source\PSoC5/LED_ISR.c **** {
  28              		.loc 1 62 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              		.cfi_def_cfa_register 7
  63:Generated_Source\PSoC5/LED_ISR.c ****     /* For all we know the interrupt is active. */
  64:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_Disable();
  38              		.loc 1 64 0
  39 0004 FFF7FEFF 		bl	LED_ISR_Disable
  65:Generated_Source\PSoC5/LED_ISR.c **** 
  66:Generated_Source\PSoC5/LED_ISR.c ****     /* Set the ISR to point to the LED_ISR Interrupt. */
  67:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_SetVector(&LED_ISR_Interrupt);
  40              		.loc 1 67 0
  41 0008 0448     		ldr	r0, .L2
  42 000a FFF7FEFF 		bl	LED_ISR_SetVector
  68:Generated_Source\PSoC5/LED_ISR.c **** 
  69:Generated_Source\PSoC5/LED_ISR.c ****     /* Set the priority. */
  70:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_SetPriority((uint8)LED_ISR_INTC_PRIOR_NUMBER);
  43              		.loc 1 70 0
  44 000e 0720     		movs	r0, #7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 3


  45 0010 FFF7FEFF 		bl	LED_ISR_SetPriority
  71:Generated_Source\PSoC5/LED_ISR.c **** 
  72:Generated_Source\PSoC5/LED_ISR.c ****     /* Enable it. */
  73:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_Enable();
  46              		.loc 1 73 0
  47 0014 FFF7FEFF 		bl	LED_ISR_Enable
  74:Generated_Source\PSoC5/LED_ISR.c **** }
  48              		.loc 1 74 0
  49 0018 00BF     		nop
  50 001a 80BD     		pop	{r7, pc}
  51              	.L3:
  52              		.align	2
  53              	.L2:
  54 001c 00000000 		.word	LED_ISR_Interrupt
  55              		.cfi_endproc
  56              	.LFE0:
  57              		.size	LED_ISR_Start, .-LED_ISR_Start
  58              		.section	.text.LED_ISR_StartEx,"ax",%progbits
  59              		.align	2
  60              		.global	LED_ISR_StartEx
  61              		.thumb
  62              		.thumb_func
  63              		.type	LED_ISR_StartEx, %function
  64              	LED_ISR_StartEx:
  65              	.LFB1:
  75:Generated_Source\PSoC5/LED_ISR.c **** 
  76:Generated_Source\PSoC5/LED_ISR.c **** 
  77:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
  78:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_StartEx
  79:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
  80:Generated_Source\PSoC5/LED_ISR.c **** *
  81:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
  82:Generated_Source\PSoC5/LED_ISR.c **** *  Sets up the interrupt and enables it. This function disables the interrupt,
  83:Generated_Source\PSoC5/LED_ISR.c **** *  sets the interrupt vector based on the address passed in, sets the priority 
  84:Generated_Source\PSoC5/LED_ISR.c **** *  from the value in the Design Wide Resources Interrupt Editor, then enables 
  85:Generated_Source\PSoC5/LED_ISR.c **** *  the interrupt to the interrupt controller.
  86:Generated_Source\PSoC5/LED_ISR.c **** *  
  87:Generated_Source\PSoC5/LED_ISR.c **** *  When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
  88:Generated_Source\PSoC5/LED_ISR.c **** *  used to provide consistent definition across compilers:
  89:Generated_Source\PSoC5/LED_ISR.c **** *  
  90:Generated_Source\PSoC5/LED_ISR.c **** *  Function definition example:
  91:Generated_Source\PSoC5/LED_ISR.c **** *   CY_ISR(MyISR)
  92:Generated_Source\PSoC5/LED_ISR.c **** *   {
  93:Generated_Source\PSoC5/LED_ISR.c **** *   }
  94:Generated_Source\PSoC5/LED_ISR.c **** *   Function prototype example:
  95:Generated_Source\PSoC5/LED_ISR.c **** *   CY_ISR_PROTO(MyISR);
  96:Generated_Source\PSoC5/LED_ISR.c **** *
  97:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:  
  98:Generated_Source\PSoC5/LED_ISR.c **** *   address: Address of the ISR to set in the interrupt vector table.
  99:Generated_Source\PSoC5/LED_ISR.c **** *
 100:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 101:Generated_Source\PSoC5/LED_ISR.c **** *   None
 102:Generated_Source\PSoC5/LED_ISR.c **** *
 103:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 104:Generated_Source\PSoC5/LED_ISR.c **** void LED_ISR_StartEx(cyisraddress address)
 105:Generated_Source\PSoC5/LED_ISR.c **** {
  66              		.loc 1 105 0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 4


  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 8
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0004 00AF     		add	r7, sp, #0
  77              		.cfi_def_cfa_register 7
  78 0006 7860     		str	r0, [r7, #4]
 106:Generated_Source\PSoC5/LED_ISR.c ****     /* For all we know the interrupt is active. */
 107:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_Disable();
  79              		.loc 1 107 0
  80 0008 FFF7FEFF 		bl	LED_ISR_Disable
 108:Generated_Source\PSoC5/LED_ISR.c **** 
 109:Generated_Source\PSoC5/LED_ISR.c ****     /* Set the ISR to point to the LED_ISR Interrupt. */
 110:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_SetVector(address);
  81              		.loc 1 110 0
  82 000c 7868     		ldr	r0, [r7, #4]
  83 000e FFF7FEFF 		bl	LED_ISR_SetVector
 111:Generated_Source\PSoC5/LED_ISR.c **** 
 112:Generated_Source\PSoC5/LED_ISR.c ****     /* Set the priority. */
 113:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_SetPriority((uint8)LED_ISR_INTC_PRIOR_NUMBER);
  84              		.loc 1 113 0
  85 0012 0720     		movs	r0, #7
  86 0014 FFF7FEFF 		bl	LED_ISR_SetPriority
 114:Generated_Source\PSoC5/LED_ISR.c **** 
 115:Generated_Source\PSoC5/LED_ISR.c ****     /* Enable it. */
 116:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_Enable();
  87              		.loc 1 116 0
  88 0018 FFF7FEFF 		bl	LED_ISR_Enable
 117:Generated_Source\PSoC5/LED_ISR.c **** }
  89              		.loc 1 117 0
  90 001c 00BF     		nop
  91 001e 0837     		adds	r7, r7, #8
  92              		.cfi_def_cfa_offset 8
  93 0020 BD46     		mov	sp, r7
  94              		.cfi_def_cfa_register 13
  95              		@ sp needed
  96 0022 80BD     		pop	{r7, pc}
  97              		.cfi_endproc
  98              	.LFE1:
  99              		.size	LED_ISR_StartEx, .-LED_ISR_StartEx
 100              		.section	.text.LED_ISR_Stop,"ax",%progbits
 101              		.align	2
 102              		.global	LED_ISR_Stop
 103              		.thumb
 104              		.thumb_func
 105              		.type	LED_ISR_Stop, %function
 106              	LED_ISR_Stop:
 107              	.LFB2:
 118:Generated_Source\PSoC5/LED_ISR.c **** 
 119:Generated_Source\PSoC5/LED_ISR.c **** 
 120:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 121:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_Stop
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 5


 122:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 123:Generated_Source\PSoC5/LED_ISR.c **** *
 124:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 125:Generated_Source\PSoC5/LED_ISR.c **** *   Disables and removes the interrupt.
 126:Generated_Source\PSoC5/LED_ISR.c **** *
 127:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:  
 128:Generated_Source\PSoC5/LED_ISR.c **** *   None
 129:Generated_Source\PSoC5/LED_ISR.c **** *
 130:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 131:Generated_Source\PSoC5/LED_ISR.c **** *   None
 132:Generated_Source\PSoC5/LED_ISR.c **** *
 133:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 134:Generated_Source\PSoC5/LED_ISR.c **** void LED_ISR_Stop(void)
 135:Generated_Source\PSoC5/LED_ISR.c **** {
 108              		.loc 1 135 0
 109              		.cfi_startproc
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 1, uses_anonymous_args = 0
 112 0000 80B5     		push	{r7, lr}
 113              		.cfi_def_cfa_offset 8
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 00AF     		add	r7, sp, #0
 117              		.cfi_def_cfa_register 7
 136:Generated_Source\PSoC5/LED_ISR.c ****     /* Disable this interrupt. */
 137:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_Disable();
 118              		.loc 1 137 0
 119 0004 FFF7FEFF 		bl	LED_ISR_Disable
 138:Generated_Source\PSoC5/LED_ISR.c **** 
 139:Generated_Source\PSoC5/LED_ISR.c ****     /* Set the ISR to point to the passive one. */
 140:Generated_Source\PSoC5/LED_ISR.c ****     LED_ISR_SetVector(&IntDefaultHandler);
 120              		.loc 1 140 0
 121 0008 0248     		ldr	r0, .L6
 122 000a FFF7FEFF 		bl	LED_ISR_SetVector
 141:Generated_Source\PSoC5/LED_ISR.c **** }
 123              		.loc 1 141 0
 124 000e 00BF     		nop
 125 0010 80BD     		pop	{r7, pc}
 126              	.L7:
 127 0012 00BF     		.align	2
 128              	.L6:
 129 0014 00000000 		.word	IntDefaultHandler
 130              		.cfi_endproc
 131              	.LFE2:
 132              		.size	LED_ISR_Stop, .-LED_ISR_Stop
 133              		.section	.text.LED_ISR_Interrupt,"ax",%progbits
 134              		.align	2
 135              		.global	LED_ISR_Interrupt
 136              		.thumb
 137              		.thumb_func
 138              		.type	LED_ISR_Interrupt, %function
 139              	LED_ISR_Interrupt:
 140              	.LFB3:
 142:Generated_Source\PSoC5/LED_ISR.c **** 
 143:Generated_Source\PSoC5/LED_ISR.c **** 
 144:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 145:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_Interrupt
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 6


 146:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 147:Generated_Source\PSoC5/LED_ISR.c **** *
 148:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 149:Generated_Source\PSoC5/LED_ISR.c **** *   The default Interrupt Service Routine for LED_ISR.
 150:Generated_Source\PSoC5/LED_ISR.c **** *
 151:Generated_Source\PSoC5/LED_ISR.c **** *   Add custom code between the coments to keep the next version of this file
 152:Generated_Source\PSoC5/LED_ISR.c **** *   from over writting your code.
 153:Generated_Source\PSoC5/LED_ISR.c **** *
 154:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:  
 155:Generated_Source\PSoC5/LED_ISR.c **** *
 156:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 157:Generated_Source\PSoC5/LED_ISR.c **** *   None
 158:Generated_Source\PSoC5/LED_ISR.c **** *
 159:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 160:Generated_Source\PSoC5/LED_ISR.c **** CY_ISR(LED_ISR_Interrupt)
 161:Generated_Source\PSoC5/LED_ISR.c **** {
 141              		.loc 1 161 0
 142              		.cfi_startproc
 143              		@ args = 0, pretend = 0, frame = 0
 144              		@ frame_needed = 1, uses_anonymous_args = 0
 145 0000 80B5     		push	{r7, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 00AF     		add	r7, sp, #0
 150              		.cfi_def_cfa_register 7
 162:Generated_Source\PSoC5/LED_ISR.c ****     #ifdef LED_ISR_INTERRUPT_INTERRUPT_CALLBACK
 163:Generated_Source\PSoC5/LED_ISR.c ****         LED_ISR_Interrupt_InterruptCallback();
 164:Generated_Source\PSoC5/LED_ISR.c ****     #endif /* LED_ISR_INTERRUPT_INTERRUPT_CALLBACK */ 
 165:Generated_Source\PSoC5/LED_ISR.c **** 
 166:Generated_Source\PSoC5/LED_ISR.c ****     /*  Place your Interrupt code here. */
 167:Generated_Source\PSoC5/LED_ISR.c ****     /* `#START LED_ISR_Interrupt` */
 168:Generated_Source\PSoC5/LED_ISR.c ****     
 169:Generated_Source\PSoC5/LED_ISR.c ****     processLED_TimerRoutine();
 151              		.loc 1 169 0
 152 0004 FFF7FEFF 		bl	processLED_TimerRoutine
 170:Generated_Source\PSoC5/LED_ISR.c ****     sendVersionPacket();
 153              		.loc 1 170 0
 154 0008 FFF7FEFF 		bl	sendVersionPacket
 171:Generated_Source\PSoC5/LED_ISR.c ****     
 172:Generated_Source\PSoC5/LED_ISR.c ****     /* `#END` */
 173:Generated_Source\PSoC5/LED_ISR.c **** }
 155              		.loc 1 173 0
 156 000c 00BF     		nop
 157 000e 80BD     		pop	{r7, pc}
 158              		.cfi_endproc
 159              	.LFE3:
 160              		.size	LED_ISR_Interrupt, .-LED_ISR_Interrupt
 161              		.section	.text.LED_ISR_SetVector,"ax",%progbits
 162              		.align	2
 163              		.global	LED_ISR_SetVector
 164              		.thumb
 165              		.thumb_func
 166              		.type	LED_ISR_SetVector, %function
 167              	LED_ISR_SetVector:
 168              	.LFB4:
 174:Generated_Source\PSoC5/LED_ISR.c **** 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 7


 175:Generated_Source\PSoC5/LED_ISR.c **** 
 176:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 177:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_SetVector
 178:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 179:Generated_Source\PSoC5/LED_ISR.c **** *
 180:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 181:Generated_Source\PSoC5/LED_ISR.c **** *   Change the ISR vector for the Interrupt. Note calling LED_ISR_Start
 182:Generated_Source\PSoC5/LED_ISR.c **** *   will override any effect this method would have had. To set the vector 
 183:Generated_Source\PSoC5/LED_ISR.c **** *   before the component has been started use LED_ISR_StartEx instead.
 184:Generated_Source\PSoC5/LED_ISR.c **** * 
 185:Generated_Source\PSoC5/LED_ISR.c **** *   When defining ISR functions, the CY_ISR and CY_ISR_PROTO macros should be 
 186:Generated_Source\PSoC5/LED_ISR.c **** *   used to provide consistent definition across compilers:
 187:Generated_Source\PSoC5/LED_ISR.c **** *
 188:Generated_Source\PSoC5/LED_ISR.c **** *   Function definition example:
 189:Generated_Source\PSoC5/LED_ISR.c **** *   CY_ISR(MyISR)
 190:Generated_Source\PSoC5/LED_ISR.c **** *   {
 191:Generated_Source\PSoC5/LED_ISR.c **** *   }
 192:Generated_Source\PSoC5/LED_ISR.c **** *
 193:Generated_Source\PSoC5/LED_ISR.c **** *   Function prototype example:
 194:Generated_Source\PSoC5/LED_ISR.c **** *     CY_ISR_PROTO(MyISR);
 195:Generated_Source\PSoC5/LED_ISR.c **** *
 196:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:
 197:Generated_Source\PSoC5/LED_ISR.c **** *   address: Address of the ISR to set in the interrupt vector table.
 198:Generated_Source\PSoC5/LED_ISR.c **** *
 199:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 200:Generated_Source\PSoC5/LED_ISR.c **** *   None
 201:Generated_Source\PSoC5/LED_ISR.c **** *
 202:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 203:Generated_Source\PSoC5/LED_ISR.c **** void LED_ISR_SetVector(cyisraddress address)
 204:Generated_Source\PSoC5/LED_ISR.c **** {
 169              		.loc 1 204 0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 16
 172              		@ frame_needed = 1, uses_anonymous_args = 0
 173              		@ link register save eliminated.
 174 0000 80B4     		push	{r7}
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 7, -4
 177 0002 85B0     		sub	sp, sp, #20
 178              		.cfi_def_cfa_offset 24
 179 0004 00AF     		add	r7, sp, #0
 180              		.cfi_def_cfa_register 7
 181 0006 7860     		str	r0, [r7, #4]
 205:Generated_Source\PSoC5/LED_ISR.c ****     cyisraddress * ramVectorTable;
 206:Generated_Source\PSoC5/LED_ISR.c **** 
 207:Generated_Source\PSoC5/LED_ISR.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 182              		.loc 1 207 0
 183 0008 054B     		ldr	r3, .L10
 184 000a 1B68     		ldr	r3, [r3]
 185 000c FB60     		str	r3, [r7, #12]
 208:Generated_Source\PSoC5/LED_ISR.c **** 
 209:Generated_Source\PSoC5/LED_ISR.c ****     ramVectorTable[CYINT_IRQ_BASE + (uint32)LED_ISR__INTC_NUMBER] = address;
 186              		.loc 1 209 0
 187 000e FB68     		ldr	r3, [r7, #12]
 188 0010 4033     		adds	r3, r3, #64
 189 0012 7A68     		ldr	r2, [r7, #4]
 190 0014 1A60     		str	r2, [r3]
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 8


 210:Generated_Source\PSoC5/LED_ISR.c **** }
 191              		.loc 1 210 0
 192 0016 00BF     		nop
 193 0018 1437     		adds	r7, r7, #20
 194              		.cfi_def_cfa_offset 4
 195 001a BD46     		mov	sp, r7
 196              		.cfi_def_cfa_register 13
 197              		@ sp needed
 198 001c 80BC     		pop	{r7}
 199              		.cfi_restore 7
 200              		.cfi_def_cfa_offset 0
 201 001e 7047     		bx	lr
 202              	.L11:
 203              		.align	2
 204              	.L10:
 205 0020 08ED00E0 		.word	-536810232
 206              		.cfi_endproc
 207              	.LFE4:
 208              		.size	LED_ISR_SetVector, .-LED_ISR_SetVector
 209              		.section	.text.LED_ISR_GetVector,"ax",%progbits
 210              		.align	2
 211              		.global	LED_ISR_GetVector
 212              		.thumb
 213              		.thumb_func
 214              		.type	LED_ISR_GetVector, %function
 215              	LED_ISR_GetVector:
 216              	.LFB5:
 211:Generated_Source\PSoC5/LED_ISR.c **** 
 212:Generated_Source\PSoC5/LED_ISR.c **** 
 213:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 214:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_GetVector
 215:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 216:Generated_Source\PSoC5/LED_ISR.c **** *
 217:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 218:Generated_Source\PSoC5/LED_ISR.c **** *   Gets the "address" of the current ISR vector for the Interrupt.
 219:Generated_Source\PSoC5/LED_ISR.c **** *
 220:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:
 221:Generated_Source\PSoC5/LED_ISR.c **** *   None
 222:Generated_Source\PSoC5/LED_ISR.c **** *
 223:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 224:Generated_Source\PSoC5/LED_ISR.c **** *   Address of the ISR in the interrupt vector table.
 225:Generated_Source\PSoC5/LED_ISR.c **** *
 226:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 227:Generated_Source\PSoC5/LED_ISR.c **** cyisraddress LED_ISR_GetVector(void)
 228:Generated_Source\PSoC5/LED_ISR.c **** {
 217              		.loc 1 228 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222 0000 80B4     		push	{r7}
 223              		.cfi_def_cfa_offset 4
 224              		.cfi_offset 7, -4
 225 0002 83B0     		sub	sp, sp, #12
 226              		.cfi_def_cfa_offset 16
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 9


 229:Generated_Source\PSoC5/LED_ISR.c ****     cyisraddress * ramVectorTable;
 230:Generated_Source\PSoC5/LED_ISR.c **** 
 231:Generated_Source\PSoC5/LED_ISR.c ****     ramVectorTable = (cyisraddress *) *CYINT_VECT_TABLE;
 229              		.loc 1 231 0
 230 0006 054B     		ldr	r3, .L14
 231 0008 1B68     		ldr	r3, [r3]
 232 000a 7B60     		str	r3, [r7, #4]
 232:Generated_Source\PSoC5/LED_ISR.c **** 
 233:Generated_Source\PSoC5/LED_ISR.c ****     return ramVectorTable[CYINT_IRQ_BASE + (uint32)LED_ISR__INTC_NUMBER];
 233              		.loc 1 233 0
 234 000c 7B68     		ldr	r3, [r7, #4]
 235 000e 1B6C     		ldr	r3, [r3, #64]
 234:Generated_Source\PSoC5/LED_ISR.c **** }
 236              		.loc 1 234 0
 237 0010 1846     		mov	r0, r3
 238 0012 0C37     		adds	r7, r7, #12
 239              		.cfi_def_cfa_offset 4
 240 0014 BD46     		mov	sp, r7
 241              		.cfi_def_cfa_register 13
 242              		@ sp needed
 243 0016 80BC     		pop	{r7}
 244              		.cfi_restore 7
 245              		.cfi_def_cfa_offset 0
 246 0018 7047     		bx	lr
 247              	.L15:
 248 001a 00BF     		.align	2
 249              	.L14:
 250 001c 08ED00E0 		.word	-536810232
 251              		.cfi_endproc
 252              	.LFE5:
 253              		.size	LED_ISR_GetVector, .-LED_ISR_GetVector
 254              		.section	.text.LED_ISR_SetPriority,"ax",%progbits
 255              		.align	2
 256              		.global	LED_ISR_SetPriority
 257              		.thumb
 258              		.thumb_func
 259              		.type	LED_ISR_SetPriority, %function
 260              	LED_ISR_SetPriority:
 261              	.LFB6:
 235:Generated_Source\PSoC5/LED_ISR.c **** 
 236:Generated_Source\PSoC5/LED_ISR.c **** 
 237:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 238:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_SetPriority
 239:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 240:Generated_Source\PSoC5/LED_ISR.c **** *
 241:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 242:Generated_Source\PSoC5/LED_ISR.c **** *   Sets the Priority of the Interrupt. 
 243:Generated_Source\PSoC5/LED_ISR.c **** *
 244:Generated_Source\PSoC5/LED_ISR.c **** *   Note calling LED_ISR_Start or LED_ISR_StartEx will 
 245:Generated_Source\PSoC5/LED_ISR.c **** *   override any effect this API would have had. This API should only be called
 246:Generated_Source\PSoC5/LED_ISR.c **** *   after LED_ISR_Start or LED_ISR_StartEx has been called. 
 247:Generated_Source\PSoC5/LED_ISR.c **** *   To set the initial priority for the component, use the Design-Wide Resources
 248:Generated_Source\PSoC5/LED_ISR.c **** *   Interrupt Editor.
 249:Generated_Source\PSoC5/LED_ISR.c **** *
 250:Generated_Source\PSoC5/LED_ISR.c **** *   Note This API has no effect on Non-maskable interrupt NMI).
 251:Generated_Source\PSoC5/LED_ISR.c **** *
 252:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 10


 253:Generated_Source\PSoC5/LED_ISR.c **** *   priority: Priority of the interrupt, 0 being the highest priority
 254:Generated_Source\PSoC5/LED_ISR.c **** *             PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 255:Generated_Source\PSoC5/LED_ISR.c **** *             PSoC 4: Priority is from 0 to 3.
 256:Generated_Source\PSoC5/LED_ISR.c **** *
 257:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 258:Generated_Source\PSoC5/LED_ISR.c **** *   None
 259:Generated_Source\PSoC5/LED_ISR.c **** *
 260:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 261:Generated_Source\PSoC5/LED_ISR.c **** void LED_ISR_SetPriority(uint8 priority)
 262:Generated_Source\PSoC5/LED_ISR.c **** {
 262              		.loc 1 262 0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 8
 265              		@ frame_needed = 1, uses_anonymous_args = 0
 266              		@ link register save eliminated.
 267 0000 80B4     		push	{r7}
 268              		.cfi_def_cfa_offset 4
 269              		.cfi_offset 7, -4
 270 0002 83B0     		sub	sp, sp, #12
 271              		.cfi_def_cfa_offset 16
 272 0004 00AF     		add	r7, sp, #0
 273              		.cfi_def_cfa_register 7
 274 0006 0346     		mov	r3, r0
 275 0008 FB71     		strb	r3, [r7, #7]
 263:Generated_Source\PSoC5/LED_ISR.c ****     *LED_ISR_INTC_PRIOR = priority << 5;
 276              		.loc 1 263 0
 277 000a 054A     		ldr	r2, .L17
 278 000c FB79     		ldrb	r3, [r7, #7]
 279 000e 5B01     		lsls	r3, r3, #5
 280 0010 DBB2     		uxtb	r3, r3
 281 0012 1370     		strb	r3, [r2]
 264:Generated_Source\PSoC5/LED_ISR.c **** }
 282              		.loc 1 264 0
 283 0014 00BF     		nop
 284 0016 0C37     		adds	r7, r7, #12
 285              		.cfi_def_cfa_offset 4
 286 0018 BD46     		mov	sp, r7
 287              		.cfi_def_cfa_register 13
 288              		@ sp needed
 289 001a 80BC     		pop	{r7}
 290              		.cfi_restore 7
 291              		.cfi_def_cfa_offset 0
 292 001c 7047     		bx	lr
 293              	.L18:
 294 001e 00BF     		.align	2
 295              	.L17:
 296 0020 00E400E0 		.word	-536812544
 297              		.cfi_endproc
 298              	.LFE6:
 299              		.size	LED_ISR_SetPriority, .-LED_ISR_SetPriority
 300              		.section	.text.LED_ISR_GetPriority,"ax",%progbits
 301              		.align	2
 302              		.global	LED_ISR_GetPriority
 303              		.thumb
 304              		.thumb_func
 305              		.type	LED_ISR_GetPriority, %function
 306              	LED_ISR_GetPriority:
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 11


 307              	.LFB7:
 265:Generated_Source\PSoC5/LED_ISR.c **** 
 266:Generated_Source\PSoC5/LED_ISR.c **** 
 267:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 268:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_GetPriority
 269:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 270:Generated_Source\PSoC5/LED_ISR.c **** *
 271:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 272:Generated_Source\PSoC5/LED_ISR.c **** *   Gets the Priority of the Interrupt.
 273:Generated_Source\PSoC5/LED_ISR.c **** *
 274:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:
 275:Generated_Source\PSoC5/LED_ISR.c **** *   None
 276:Generated_Source\PSoC5/LED_ISR.c **** *
 277:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 278:Generated_Source\PSoC5/LED_ISR.c **** *   Priority of the interrupt, 0 being the highest priority
 279:Generated_Source\PSoC5/LED_ISR.c **** *    PSoC 3 and PSoC 5LP: Priority is from 0 to 7.
 280:Generated_Source\PSoC5/LED_ISR.c **** *    PSoC 4: Priority is from 0 to 3.
 281:Generated_Source\PSoC5/LED_ISR.c **** *
 282:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 283:Generated_Source\PSoC5/LED_ISR.c **** uint8 LED_ISR_GetPriority(void)
 284:Generated_Source\PSoC5/LED_ISR.c **** {
 308              		.loc 1 284 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312              		@ link register save eliminated.
 313 0000 80B4     		push	{r7}
 314              		.cfi_def_cfa_offset 4
 315              		.cfi_offset 7, -4
 316 0002 83B0     		sub	sp, sp, #12
 317              		.cfi_def_cfa_offset 16
 318 0004 00AF     		add	r7, sp, #0
 319              		.cfi_def_cfa_register 7
 285:Generated_Source\PSoC5/LED_ISR.c ****     uint8 priority;
 286:Generated_Source\PSoC5/LED_ISR.c **** 
 287:Generated_Source\PSoC5/LED_ISR.c **** 
 288:Generated_Source\PSoC5/LED_ISR.c ****     priority = *LED_ISR_INTC_PRIOR >> 5;
 320              		.loc 1 288 0
 321 0006 054B     		ldr	r3, .L21
 322 0008 1B78     		ldrb	r3, [r3]
 323 000a DBB2     		uxtb	r3, r3
 324 000c 5B09     		lsrs	r3, r3, #5
 325 000e FB71     		strb	r3, [r7, #7]
 289:Generated_Source\PSoC5/LED_ISR.c **** 
 290:Generated_Source\PSoC5/LED_ISR.c ****     return priority;
 326              		.loc 1 290 0
 327 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 291:Generated_Source\PSoC5/LED_ISR.c **** }
 328              		.loc 1 291 0
 329 0012 1846     		mov	r0, r3
 330 0014 0C37     		adds	r7, r7, #12
 331              		.cfi_def_cfa_offset 4
 332 0016 BD46     		mov	sp, r7
 333              		.cfi_def_cfa_register 13
 334              		@ sp needed
 335 0018 80BC     		pop	{r7}
 336              		.cfi_restore 7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 12


 337              		.cfi_def_cfa_offset 0
 338 001a 7047     		bx	lr
 339              	.L22:
 340              		.align	2
 341              	.L21:
 342 001c 00E400E0 		.word	-536812544
 343              		.cfi_endproc
 344              	.LFE7:
 345              		.size	LED_ISR_GetPriority, .-LED_ISR_GetPriority
 346              		.section	.text.LED_ISR_Enable,"ax",%progbits
 347              		.align	2
 348              		.global	LED_ISR_Enable
 349              		.thumb
 350              		.thumb_func
 351              		.type	LED_ISR_Enable, %function
 352              	LED_ISR_Enable:
 353              	.LFB8:
 292:Generated_Source\PSoC5/LED_ISR.c **** 
 293:Generated_Source\PSoC5/LED_ISR.c **** 
 294:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 295:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_Enable
 296:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 297:Generated_Source\PSoC5/LED_ISR.c **** *
 298:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 299:Generated_Source\PSoC5/LED_ISR.c **** *   Enables the interrupt to the interrupt controller. Do not call this function
 300:Generated_Source\PSoC5/LED_ISR.c **** *   unless ISR_Start() has been called or the functionality of the ISR_Start() 
 301:Generated_Source\PSoC5/LED_ISR.c **** *   function, which sets the vector and the priority, has been called.
 302:Generated_Source\PSoC5/LED_ISR.c **** *
 303:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:
 304:Generated_Source\PSoC5/LED_ISR.c **** *   None
 305:Generated_Source\PSoC5/LED_ISR.c **** *
 306:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 307:Generated_Source\PSoC5/LED_ISR.c **** *   None
 308:Generated_Source\PSoC5/LED_ISR.c **** *
 309:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 310:Generated_Source\PSoC5/LED_ISR.c **** void LED_ISR_Enable(void)
 311:Generated_Source\PSoC5/LED_ISR.c **** {
 354              		.loc 1 311 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 0
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358              		@ link register save eliminated.
 359 0000 80B4     		push	{r7}
 360              		.cfi_def_cfa_offset 4
 361              		.cfi_offset 7, -4
 362 0002 00AF     		add	r7, sp, #0
 363              		.cfi_def_cfa_register 7
 312:Generated_Source\PSoC5/LED_ISR.c ****     /* Enable the general interrupt. */
 313:Generated_Source\PSoC5/LED_ISR.c ****     *LED_ISR_INTC_SET_EN = LED_ISR__INTC_MASK;
 364              		.loc 1 313 0
 365 0004 034B     		ldr	r3, .L24
 366 0006 0122     		movs	r2, #1
 367 0008 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC5/LED_ISR.c **** }
 368              		.loc 1 314 0
 369 000a 00BF     		nop
 370 000c BD46     		mov	sp, r7
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 13


 371              		.cfi_def_cfa_register 13
 372              		@ sp needed
 373 000e 80BC     		pop	{r7}
 374              		.cfi_restore 7
 375              		.cfi_def_cfa_offset 0
 376 0010 7047     		bx	lr
 377              	.L25:
 378 0012 00BF     		.align	2
 379              	.L24:
 380 0014 00E100E0 		.word	-536813312
 381              		.cfi_endproc
 382              	.LFE8:
 383              		.size	LED_ISR_Enable, .-LED_ISR_Enable
 384              		.section	.text.LED_ISR_GetState,"ax",%progbits
 385              		.align	2
 386              		.global	LED_ISR_GetState
 387              		.thumb
 388              		.thumb_func
 389              		.type	LED_ISR_GetState, %function
 390              	LED_ISR_GetState:
 391              	.LFB9:
 315:Generated_Source\PSoC5/LED_ISR.c **** 
 316:Generated_Source\PSoC5/LED_ISR.c **** 
 317:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 318:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_GetState
 319:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 320:Generated_Source\PSoC5/LED_ISR.c **** *
 321:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 322:Generated_Source\PSoC5/LED_ISR.c **** *   Gets the state (enabled, disabled) of the Interrupt.
 323:Generated_Source\PSoC5/LED_ISR.c **** *
 324:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:
 325:Generated_Source\PSoC5/LED_ISR.c **** *   None
 326:Generated_Source\PSoC5/LED_ISR.c **** *
 327:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 328:Generated_Source\PSoC5/LED_ISR.c **** *   1 if enabled, 0 if disabled.
 329:Generated_Source\PSoC5/LED_ISR.c **** *
 330:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 331:Generated_Source\PSoC5/LED_ISR.c **** uint8 LED_ISR_GetState(void)
 332:Generated_Source\PSoC5/LED_ISR.c **** {
 392              		.loc 1 332 0
 393              		.cfi_startproc
 394              		@ args = 0, pretend = 0, frame = 0
 395              		@ frame_needed = 1, uses_anonymous_args = 0
 396              		@ link register save eliminated.
 397 0000 80B4     		push	{r7}
 398              		.cfi_def_cfa_offset 4
 399              		.cfi_offset 7, -4
 400 0002 00AF     		add	r7, sp, #0
 401              		.cfi_def_cfa_register 7
 333:Generated_Source\PSoC5/LED_ISR.c ****     /* Get the state of the general interrupt. */
 334:Generated_Source\PSoC5/LED_ISR.c ****     return ((*LED_ISR_INTC_SET_EN & (uint32)LED_ISR__INTC_MASK) != 0u) ? 1u:0u;
 402              		.loc 1 334 0
 403 0004 044B     		ldr	r3, .L28
 404 0006 1B68     		ldr	r3, [r3]
 405 0008 DBB2     		uxtb	r3, r3
 406 000a 03F00103 		and	r3, r3, #1
 407 000e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 14


 335:Generated_Source\PSoC5/LED_ISR.c **** }
 408              		.loc 1 335 0
 409 0010 1846     		mov	r0, r3
 410 0012 BD46     		mov	sp, r7
 411              		.cfi_def_cfa_register 13
 412              		@ sp needed
 413 0014 80BC     		pop	{r7}
 414              		.cfi_restore 7
 415              		.cfi_def_cfa_offset 0
 416 0016 7047     		bx	lr
 417              	.L29:
 418              		.align	2
 419              	.L28:
 420 0018 00E100E0 		.word	-536813312
 421              		.cfi_endproc
 422              	.LFE9:
 423              		.size	LED_ISR_GetState, .-LED_ISR_GetState
 424              		.section	.text.LED_ISR_Disable,"ax",%progbits
 425              		.align	2
 426              		.global	LED_ISR_Disable
 427              		.thumb
 428              		.thumb_func
 429              		.type	LED_ISR_Disable, %function
 430              	LED_ISR_Disable:
 431              	.LFB10:
 336:Generated_Source\PSoC5/LED_ISR.c **** 
 337:Generated_Source\PSoC5/LED_ISR.c **** 
 338:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 339:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_Disable
 340:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 341:Generated_Source\PSoC5/LED_ISR.c **** *
 342:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 343:Generated_Source\PSoC5/LED_ISR.c **** *   Disables the Interrupt in the interrupt controller.
 344:Generated_Source\PSoC5/LED_ISR.c **** *
 345:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:
 346:Generated_Source\PSoC5/LED_ISR.c **** *   None
 347:Generated_Source\PSoC5/LED_ISR.c **** *
 348:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 349:Generated_Source\PSoC5/LED_ISR.c **** *   None
 350:Generated_Source\PSoC5/LED_ISR.c **** *
 351:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 352:Generated_Source\PSoC5/LED_ISR.c **** void LED_ISR_Disable(void)
 353:Generated_Source\PSoC5/LED_ISR.c **** {
 432              		.loc 1 353 0
 433              		.cfi_startproc
 434              		@ args = 0, pretend = 0, frame = 0
 435              		@ frame_needed = 1, uses_anonymous_args = 0
 436              		@ link register save eliminated.
 437 0000 80B4     		push	{r7}
 438              		.cfi_def_cfa_offset 4
 439              		.cfi_offset 7, -4
 440 0002 00AF     		add	r7, sp, #0
 441              		.cfi_def_cfa_register 7
 354:Generated_Source\PSoC5/LED_ISR.c ****     /* Disable the general interrupt. */
 355:Generated_Source\PSoC5/LED_ISR.c ****     *LED_ISR_INTC_CLR_EN = LED_ISR__INTC_MASK;
 442              		.loc 1 355 0
 443 0004 034B     		ldr	r3, .L31
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 15


 444 0006 0122     		movs	r2, #1
 445 0008 1A60     		str	r2, [r3]
 356:Generated_Source\PSoC5/LED_ISR.c **** }
 446              		.loc 1 356 0
 447 000a 00BF     		nop
 448 000c BD46     		mov	sp, r7
 449              		.cfi_def_cfa_register 13
 450              		@ sp needed
 451 000e 80BC     		pop	{r7}
 452              		.cfi_restore 7
 453              		.cfi_def_cfa_offset 0
 454 0010 7047     		bx	lr
 455              	.L32:
 456 0012 00BF     		.align	2
 457              	.L31:
 458 0014 80E100E0 		.word	-536813184
 459              		.cfi_endproc
 460              	.LFE10:
 461              		.size	LED_ISR_Disable, .-LED_ISR_Disable
 462              		.section	.text.LED_ISR_SetPending,"ax",%progbits
 463              		.align	2
 464              		.global	LED_ISR_SetPending
 465              		.thumb
 466              		.thumb_func
 467              		.type	LED_ISR_SetPending, %function
 468              	LED_ISR_SetPending:
 469              	.LFB11:
 357:Generated_Source\PSoC5/LED_ISR.c **** 
 358:Generated_Source\PSoC5/LED_ISR.c **** 
 359:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 360:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_SetPending
 361:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 362:Generated_Source\PSoC5/LED_ISR.c **** *
 363:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 364:Generated_Source\PSoC5/LED_ISR.c **** *   Causes the Interrupt to enter the pending state, a software method of
 365:Generated_Source\PSoC5/LED_ISR.c **** *   generating the interrupt.
 366:Generated_Source\PSoC5/LED_ISR.c **** *
 367:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:
 368:Generated_Source\PSoC5/LED_ISR.c **** *   None
 369:Generated_Source\PSoC5/LED_ISR.c **** *
 370:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 371:Generated_Source\PSoC5/LED_ISR.c **** *   None
 372:Generated_Source\PSoC5/LED_ISR.c **** *
 373:Generated_Source\PSoC5/LED_ISR.c **** * Side Effects:
 374:Generated_Source\PSoC5/LED_ISR.c **** *   If interrupts are enabled and the interrupt is set up properly, the ISR is
 375:Generated_Source\PSoC5/LED_ISR.c **** *   entered (depending on the priority of this interrupt and other pending 
 376:Generated_Source\PSoC5/LED_ISR.c **** *   interrupts).
 377:Generated_Source\PSoC5/LED_ISR.c **** *
 378:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 379:Generated_Source\PSoC5/LED_ISR.c **** void LED_ISR_SetPending(void)
 380:Generated_Source\PSoC5/LED_ISR.c **** {
 470              		.loc 1 380 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 1, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475 0000 80B4     		push	{r7}
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 16


 476              		.cfi_def_cfa_offset 4
 477              		.cfi_offset 7, -4
 478 0002 00AF     		add	r7, sp, #0
 479              		.cfi_def_cfa_register 7
 381:Generated_Source\PSoC5/LED_ISR.c ****     *LED_ISR_INTC_SET_PD = LED_ISR__INTC_MASK;
 480              		.loc 1 381 0
 481 0004 034B     		ldr	r3, .L34
 482 0006 0122     		movs	r2, #1
 483 0008 1A60     		str	r2, [r3]
 382:Generated_Source\PSoC5/LED_ISR.c **** }
 484              		.loc 1 382 0
 485 000a 00BF     		nop
 486 000c BD46     		mov	sp, r7
 487              		.cfi_def_cfa_register 13
 488              		@ sp needed
 489 000e 80BC     		pop	{r7}
 490              		.cfi_restore 7
 491              		.cfi_def_cfa_offset 0
 492 0010 7047     		bx	lr
 493              	.L35:
 494 0012 00BF     		.align	2
 495              	.L34:
 496 0014 00E200E0 		.word	-536813056
 497              		.cfi_endproc
 498              	.LFE11:
 499              		.size	LED_ISR_SetPending, .-LED_ISR_SetPending
 500              		.section	.text.LED_ISR_ClearPending,"ax",%progbits
 501              		.align	2
 502              		.global	LED_ISR_ClearPending
 503              		.thumb
 504              		.thumb_func
 505              		.type	LED_ISR_ClearPending, %function
 506              	LED_ISR_ClearPending:
 507              	.LFB12:
 383:Generated_Source\PSoC5/LED_ISR.c **** 
 384:Generated_Source\PSoC5/LED_ISR.c **** 
 385:Generated_Source\PSoC5/LED_ISR.c **** /*******************************************************************************
 386:Generated_Source\PSoC5/LED_ISR.c **** * Function Name: LED_ISR_ClearPending
 387:Generated_Source\PSoC5/LED_ISR.c **** ********************************************************************************
 388:Generated_Source\PSoC5/LED_ISR.c **** *
 389:Generated_Source\PSoC5/LED_ISR.c **** * Summary:
 390:Generated_Source\PSoC5/LED_ISR.c **** *   Clears a pending interrupt in the interrupt controller.
 391:Generated_Source\PSoC5/LED_ISR.c **** *
 392:Generated_Source\PSoC5/LED_ISR.c **** *   Note Some interrupt sources are clear-on-read and require the block 
 393:Generated_Source\PSoC5/LED_ISR.c **** *   interrupt/status register to be read/cleared with the appropriate block API 
 394:Generated_Source\PSoC5/LED_ISR.c **** *   (GPIO, UART, and so on). Otherwise the ISR will continue to remain in 
 395:Generated_Source\PSoC5/LED_ISR.c **** *   pending state even though the interrupt itself is cleared using this API.
 396:Generated_Source\PSoC5/LED_ISR.c **** *
 397:Generated_Source\PSoC5/LED_ISR.c **** * Parameters:
 398:Generated_Source\PSoC5/LED_ISR.c **** *   None
 399:Generated_Source\PSoC5/LED_ISR.c **** *
 400:Generated_Source\PSoC5/LED_ISR.c **** * Return:
 401:Generated_Source\PSoC5/LED_ISR.c **** *   None
 402:Generated_Source\PSoC5/LED_ISR.c **** *
 403:Generated_Source\PSoC5/LED_ISR.c **** *******************************************************************************/
 404:Generated_Source\PSoC5/LED_ISR.c **** void LED_ISR_ClearPending(void)
 405:Generated_Source\PSoC5/LED_ISR.c **** {
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 17


 508              		.loc 1 405 0
 509              		.cfi_startproc
 510              		@ args = 0, pretend = 0, frame = 0
 511              		@ frame_needed = 1, uses_anonymous_args = 0
 512              		@ link register save eliminated.
 513 0000 80B4     		push	{r7}
 514              		.cfi_def_cfa_offset 4
 515              		.cfi_offset 7, -4
 516 0002 00AF     		add	r7, sp, #0
 517              		.cfi_def_cfa_register 7
 406:Generated_Source\PSoC5/LED_ISR.c ****     *LED_ISR_INTC_CLR_PD = LED_ISR__INTC_MASK;
 518              		.loc 1 406 0
 519 0004 034B     		ldr	r3, .L37
 520 0006 0122     		movs	r2, #1
 521 0008 1A60     		str	r2, [r3]
 407:Generated_Source\PSoC5/LED_ISR.c **** }
 522              		.loc 1 407 0
 523 000a 00BF     		nop
 524 000c BD46     		mov	sp, r7
 525              		.cfi_def_cfa_register 13
 526              		@ sp needed
 527 000e 80BC     		pop	{r7}
 528              		.cfi_restore 7
 529              		.cfi_def_cfa_offset 0
 530 0010 7047     		bx	lr
 531              	.L38:
 532 0012 00BF     		.align	2
 533              	.L37:
 534 0014 80E200E0 		.word	-536812928
 535              		.cfi_endproc
 536              	.LFE12:
 537              		.size	LED_ISR_ClearPending, .-LED_ISR_ClearPending
 538              		.text
 539              	.Letext0:
 540              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 541              		.section	.debug_info,"",%progbits
 542              	.Ldebug_info0:
 543 0000 60020000 		.4byte	0x260
 544 0004 0400     		.2byte	0x4
 545 0006 00000000 		.4byte	.Ldebug_abbrev0
 546 000a 04       		.byte	0x4
 547 000b 01       		.uleb128 0x1
 548 000c 06000000 		.4byte	.LASF34
 549 0010 0C       		.byte	0xc
 550 0011 D1020000 		.4byte	.LASF35
 551 0015 A8000000 		.4byte	.LASF36
 552 0019 00000000 		.4byte	.Ldebug_ranges0+0
 553 001d 00000000 		.4byte	0
 554 0021 00000000 		.4byte	.Ldebug_line0
 555 0025 02       		.uleb128 0x2
 556 0026 04       		.byte	0x4
 557 0027 05       		.byte	0x5
 558 0028 696E7400 		.ascii	"int\000"
 559 002c 03       		.uleb128 0x3
 560 002d 04       		.byte	0x4
 561 002e 07       		.byte	0x7
 562 002f DA010000 		.4byte	.LASF0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 18


 563 0033 03       		.uleb128 0x3
 564 0034 08       		.byte	0x8
 565 0035 05       		.byte	0x5
 566 0036 2E020000 		.4byte	.LASF1
 567 003a 03       		.uleb128 0x3
 568 003b 08       		.byte	0x8
 569 003c 04       		.byte	0x4
 570 003d B9020000 		.4byte	.LASF2
 571 0041 03       		.uleb128 0x3
 572 0042 01       		.byte	0x1
 573 0043 06       		.byte	0x6
 574 0044 C5020000 		.4byte	.LASF3
 575 0048 03       		.uleb128 0x3
 576 0049 01       		.byte	0x1
 577 004a 08       		.byte	0x8
 578 004b 38010000 		.4byte	.LASF4
 579 004f 03       		.uleb128 0x3
 580 0050 02       		.byte	0x2
 581 0051 05       		.byte	0x5
 582 0052 75020000 		.4byte	.LASF5
 583 0056 03       		.uleb128 0x3
 584 0057 02       		.byte	0x2
 585 0058 07       		.byte	0x7
 586 0059 00010000 		.4byte	.LASF6
 587 005d 03       		.uleb128 0x3
 588 005e 04       		.byte	0x4
 589 005f 05       		.byte	0x5
 590 0060 9E020000 		.4byte	.LASF7
 591 0064 03       		.uleb128 0x3
 592 0065 04       		.byte	0x4
 593 0066 07       		.byte	0x7
 594 0067 60010000 		.4byte	.LASF8
 595 006b 03       		.uleb128 0x3
 596 006c 08       		.byte	0x8
 597 006d 07       		.byte	0x7
 598 006e EF010000 		.4byte	.LASF9
 599 0072 03       		.uleb128 0x3
 600 0073 04       		.byte	0x4
 601 0074 07       		.byte	0x7
 602 0075 25020000 		.4byte	.LASF10
 603 0079 03       		.uleb128 0x3
 604 007a 01       		.byte	0x1
 605 007b 08       		.byte	0x8
 606 007c 3C020000 		.4byte	.LASF11
 607 0080 04       		.uleb128 0x4
 608 0081 04       		.byte	0x4
 609 0082 86000000 		.4byte	0x86
 610 0086 05       		.uleb128 0x5
 611 0087 06       		.uleb128 0x6
 612 0088 72010000 		.4byte	.LASF12
 613 008c 02       		.byte	0x2
 614 008d E401     		.2byte	0x1e4
 615 008f 48000000 		.4byte	0x48
 616 0093 06       		.uleb128 0x6
 617 0094 D3010000 		.4byte	.LASF13
 618 0098 02       		.byte	0x2
 619 0099 E601     		.2byte	0x1e6
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 19


 620 009b 64000000 		.4byte	0x64
 621 009f 03       		.uleb128 0x3
 622 00a0 04       		.byte	0x4
 623 00a1 04       		.byte	0x4
 624 00a2 22010000 		.4byte	.LASF14
 625 00a6 03       		.uleb128 0x3
 626 00a7 08       		.byte	0x8
 627 00a8 04       		.byte	0x4
 628 00a9 A2010000 		.4byte	.LASF15
 629 00ad 06       		.uleb128 0x6
 630 00ae 46010000 		.4byte	.LASF16
 631 00b2 02       		.byte	0x2
 632 00b3 8E02     		.2byte	0x28e
 633 00b5 B9000000 		.4byte	0xb9
 634 00b9 07       		.uleb128 0x7
 635 00ba 87000000 		.4byte	0x87
 636 00be 06       		.uleb128 0x6
 637 00bf 00000000 		.4byte	.LASF17
 638 00c3 02       		.byte	0x2
 639 00c4 9002     		.2byte	0x290
 640 00c6 CA000000 		.4byte	0xca
 641 00ca 07       		.uleb128 0x7
 642 00cb 93000000 		.4byte	0x93
 643 00cf 06       		.uleb128 0x6
 644 00d0 06020000 		.4byte	.LASF18
 645 00d4 02       		.byte	0x2
 646 00d5 A002     		.2byte	0x2a0
 647 00d7 80000000 		.4byte	0x80
 648 00db 08       		.uleb128 0x8
 649 00dc 94010000 		.4byte	.LASF19
 650 00e0 01       		.byte	0x1
 651 00e1 3D       		.byte	0x3d
 652 00e2 00000000 		.4byte	.LFB0
 653 00e6 20000000 		.4byte	.LFE0-.LFB0
 654 00ea 01       		.uleb128 0x1
 655 00eb 9C       		.byte	0x9c
 656 00ec 09       		.uleb128 0x9
 657 00ed F0000000 		.4byte	.LASF21
 658 00f1 01       		.byte	0x1
 659 00f2 68       		.byte	0x68
 660 00f3 00000000 		.4byte	.LFB1
 661 00f7 24000000 		.4byte	.LFE1-.LFB1
 662 00fb 01       		.uleb128 0x1
 663 00fc 9C       		.byte	0x9c
 664 00fd 10010000 		.4byte	0x110
 665 0101 0A       		.uleb128 0xa
 666 0102 E7010000 		.4byte	.LASF24
 667 0106 01       		.byte	0x1
 668 0107 68       		.byte	0x68
 669 0108 CF000000 		.4byte	0xcf
 670 010c 02       		.uleb128 0x2
 671 010d 91       		.byte	0x91
 672 010e 74       		.sleb128 -12
 673 010f 00       		.byte	0
 674 0110 08       		.uleb128 0x8
 675 0111 7F020000 		.4byte	.LASF20
 676 0115 01       		.byte	0x1
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 20


 677 0116 86       		.byte	0x86
 678 0117 00000000 		.4byte	.LFB2
 679 011b 18000000 		.4byte	.LFE2-.LFB2
 680 011f 01       		.uleb128 0x1
 681 0120 9C       		.byte	0x9c
 682 0121 09       		.uleb128 0x9
 683 0122 A7020000 		.4byte	.LASF22
 684 0126 01       		.byte	0x1
 685 0127 A0       		.byte	0xa0
 686 0128 00000000 		.4byte	.LFB3
 687 012c 10000000 		.4byte	.LFE3-.LFB3
 688 0130 01       		.uleb128 0x1
 689 0131 9C       		.byte	0x9c
 690 0132 55010000 		.4byte	0x155
 691 0136 0B       		.uleb128 0xb
 692 0137 A9010000 		.4byte	.LASF37
 693 013b 01       		.byte	0x1
 694 013c A9       		.byte	0xa9
 695 013d 25000000 		.4byte	0x25
 696 0141 47010000 		.4byte	0x147
 697 0145 0C       		.uleb128 0xc
 698 0146 00       		.byte	0
 699 0147 0D       		.uleb128 0xd
 700 0148 13020000 		.4byte	.LASF38
 701 014c 01       		.byte	0x1
 702 014d AA       		.byte	0xaa
 703 014e 25000000 		.4byte	0x25
 704 0152 0C       		.uleb128 0xc
 705 0153 00       		.byte	0
 706 0154 00       		.byte	0
 707 0155 0E       		.uleb128 0xe
 708 0156 C1010000 		.4byte	.LASF23
 709 015a 01       		.byte	0x1
 710 015b CB       		.byte	0xcb
 711 015c 00000000 		.4byte	.LFB4
 712 0160 24000000 		.4byte	.LFE4-.LFB4
 713 0164 01       		.uleb128 0x1
 714 0165 9C       		.byte	0x9c
 715 0166 87010000 		.4byte	0x187
 716 016a 0A       		.uleb128 0xa
 717 016b E7010000 		.4byte	.LASF24
 718 016f 01       		.byte	0x1
 719 0170 CB       		.byte	0xcb
 720 0171 CF000000 		.4byte	0xcf
 721 0175 02       		.uleb128 0x2
 722 0176 91       		.byte	0x91
 723 0177 6C       		.sleb128 -20
 724 0178 0F       		.uleb128 0xf
 725 0179 41020000 		.4byte	.LASF25
 726 017d 01       		.byte	0x1
 727 017e CD       		.byte	0xcd
 728 017f 87010000 		.4byte	0x187
 729 0183 02       		.uleb128 0x2
 730 0184 91       		.byte	0x91
 731 0185 74       		.sleb128 -12
 732 0186 00       		.byte	0
 733 0187 04       		.uleb128 0x4
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 21


 734 0188 04       		.byte	0x4
 735 0189 CF000000 		.4byte	0xcf
 736 018d 10       		.uleb128 0x10
 737 018e 8C020000 		.4byte	.LASF28
 738 0192 01       		.byte	0x1
 739 0193 E3       		.byte	0xe3
 740 0194 CF000000 		.4byte	0xcf
 741 0198 00000000 		.4byte	.LFB5
 742 019c 20000000 		.4byte	.LFE5-.LFB5
 743 01a0 01       		.uleb128 0x1
 744 01a1 9C       		.byte	0x9c
 745 01a2 B5010000 		.4byte	0x1b5
 746 01a6 0F       		.uleb128 0xf
 747 01a7 41020000 		.4byte	.LASF25
 748 01ab 01       		.byte	0x1
 749 01ac E5       		.byte	0xe5
 750 01ad 87010000 		.4byte	0x187
 751 01b1 02       		.uleb128 0x2
 752 01b2 91       		.byte	0x91
 753 01b3 74       		.sleb128 -12
 754 01b4 00       		.byte	0
 755 01b5 11       		.uleb128 0x11
 756 01b6 94000000 		.4byte	.LASF26
 757 01ba 01       		.byte	0x1
 758 01bb 0501     		.2byte	0x105
 759 01bd 00000000 		.4byte	.LFB6
 760 01c1 24000000 		.4byte	.LFE6-.LFB6
 761 01c5 01       		.uleb128 0x1
 762 01c6 9C       		.byte	0x9c
 763 01c7 DB010000 		.4byte	0x1db
 764 01cb 12       		.uleb128 0x12
 765 01cc 8B010000 		.4byte	.LASF27
 766 01d0 01       		.byte	0x1
 767 01d1 0501     		.2byte	0x105
 768 01d3 87000000 		.4byte	0x87
 769 01d7 02       		.uleb128 0x2
 770 01d8 91       		.byte	0x91
 771 01d9 77       		.sleb128 -9
 772 01da 00       		.byte	0
 773 01db 13       		.uleb128 0x13
 774 01dc 61020000 		.4byte	.LASF29
 775 01e0 01       		.byte	0x1
 776 01e1 1B01     		.2byte	0x11b
 777 01e3 87000000 		.4byte	0x87
 778 01e7 00000000 		.4byte	.LFB7
 779 01eb 20000000 		.4byte	.LFE7-.LFB7
 780 01ef 01       		.uleb128 0x1
 781 01f0 9C       		.byte	0x9c
 782 01f1 05020000 		.4byte	0x205
 783 01f5 14       		.uleb128 0x14
 784 01f6 8B010000 		.4byte	.LASF27
 785 01fa 01       		.byte	0x1
 786 01fb 1D01     		.2byte	0x11d
 787 01fd 87000000 		.4byte	0x87
 788 0201 02       		.uleb128 0x2
 789 0202 91       		.byte	0x91
 790 0203 77       		.sleb128 -9
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 22


 791 0204 00       		.byte	0
 792 0205 15       		.uleb128 0x15
 793 0206 13010000 		.4byte	.LASF30
 794 020a 01       		.byte	0x1
 795 020b 3601     		.2byte	0x136
 796 020d 00000000 		.4byte	.LFB8
 797 0211 18000000 		.4byte	.LFE8-.LFB8
 798 0215 01       		.uleb128 0x1
 799 0216 9C       		.byte	0x9c
 800 0217 16       		.uleb128 0x16
 801 0218 50020000 		.4byte	.LASF39
 802 021c 01       		.byte	0x1
 803 021d 4B01     		.2byte	0x14b
 804 021f 87000000 		.4byte	0x87
 805 0223 00000000 		.4byte	.LFB9
 806 0227 1C000000 		.4byte	.LFE9-.LFB9
 807 022b 01       		.uleb128 0x1
 808 022c 9C       		.byte	0x9c
 809 022d 15       		.uleb128 0x15
 810 022e 28010000 		.4byte	.LASF31
 811 0232 01       		.byte	0x1
 812 0233 6001     		.2byte	0x160
 813 0235 00000000 		.4byte	.LFB10
 814 0239 18000000 		.4byte	.LFE10-.LFB10
 815 023d 01       		.uleb128 0x1
 816 023e 9C       		.byte	0x9c
 817 023f 15       		.uleb128 0x15
 818 0240 78010000 		.4byte	.LASF32
 819 0244 01       		.byte	0x1
 820 0245 7B01     		.2byte	0x17b
 821 0247 00000000 		.4byte	.LFB11
 822 024b 18000000 		.4byte	.LFE11-.LFB11
 823 024f 01       		.uleb128 0x1
 824 0250 9C       		.byte	0x9c
 825 0251 15       		.uleb128 0x15
 826 0252 4B010000 		.4byte	.LASF33
 827 0256 01       		.byte	0x1
 828 0257 9401     		.2byte	0x194
 829 0259 00000000 		.4byte	.LFB12
 830 025d 18000000 		.4byte	.LFE12-.LFB12
 831 0261 01       		.uleb128 0x1
 832 0262 9C       		.byte	0x9c
 833 0263 00       		.byte	0
 834              		.section	.debug_abbrev,"",%progbits
 835              	.Ldebug_abbrev0:
 836 0000 01       		.uleb128 0x1
 837 0001 11       		.uleb128 0x11
 838 0002 01       		.byte	0x1
 839 0003 25       		.uleb128 0x25
 840 0004 0E       		.uleb128 0xe
 841 0005 13       		.uleb128 0x13
 842 0006 0B       		.uleb128 0xb
 843 0007 03       		.uleb128 0x3
 844 0008 0E       		.uleb128 0xe
 845 0009 1B       		.uleb128 0x1b
 846 000a 0E       		.uleb128 0xe
 847 000b 55       		.uleb128 0x55
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 23


 848 000c 17       		.uleb128 0x17
 849 000d 11       		.uleb128 0x11
 850 000e 01       		.uleb128 0x1
 851 000f 10       		.uleb128 0x10
 852 0010 17       		.uleb128 0x17
 853 0011 00       		.byte	0
 854 0012 00       		.byte	0
 855 0013 02       		.uleb128 0x2
 856 0014 24       		.uleb128 0x24
 857 0015 00       		.byte	0
 858 0016 0B       		.uleb128 0xb
 859 0017 0B       		.uleb128 0xb
 860 0018 3E       		.uleb128 0x3e
 861 0019 0B       		.uleb128 0xb
 862 001a 03       		.uleb128 0x3
 863 001b 08       		.uleb128 0x8
 864 001c 00       		.byte	0
 865 001d 00       		.byte	0
 866 001e 03       		.uleb128 0x3
 867 001f 24       		.uleb128 0x24
 868 0020 00       		.byte	0
 869 0021 0B       		.uleb128 0xb
 870 0022 0B       		.uleb128 0xb
 871 0023 3E       		.uleb128 0x3e
 872 0024 0B       		.uleb128 0xb
 873 0025 03       		.uleb128 0x3
 874 0026 0E       		.uleb128 0xe
 875 0027 00       		.byte	0
 876 0028 00       		.byte	0
 877 0029 04       		.uleb128 0x4
 878 002a 0F       		.uleb128 0xf
 879 002b 00       		.byte	0
 880 002c 0B       		.uleb128 0xb
 881 002d 0B       		.uleb128 0xb
 882 002e 49       		.uleb128 0x49
 883 002f 13       		.uleb128 0x13
 884 0030 00       		.byte	0
 885 0031 00       		.byte	0
 886 0032 05       		.uleb128 0x5
 887 0033 15       		.uleb128 0x15
 888 0034 00       		.byte	0
 889 0035 27       		.uleb128 0x27
 890 0036 19       		.uleb128 0x19
 891 0037 00       		.byte	0
 892 0038 00       		.byte	0
 893 0039 06       		.uleb128 0x6
 894 003a 16       		.uleb128 0x16
 895 003b 00       		.byte	0
 896 003c 03       		.uleb128 0x3
 897 003d 0E       		.uleb128 0xe
 898 003e 3A       		.uleb128 0x3a
 899 003f 0B       		.uleb128 0xb
 900 0040 3B       		.uleb128 0x3b
 901 0041 05       		.uleb128 0x5
 902 0042 49       		.uleb128 0x49
 903 0043 13       		.uleb128 0x13
 904 0044 00       		.byte	0
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 24


 905 0045 00       		.byte	0
 906 0046 07       		.uleb128 0x7
 907 0047 35       		.uleb128 0x35
 908 0048 00       		.byte	0
 909 0049 49       		.uleb128 0x49
 910 004a 13       		.uleb128 0x13
 911 004b 00       		.byte	0
 912 004c 00       		.byte	0
 913 004d 08       		.uleb128 0x8
 914 004e 2E       		.uleb128 0x2e
 915 004f 00       		.byte	0
 916 0050 3F       		.uleb128 0x3f
 917 0051 19       		.uleb128 0x19
 918 0052 03       		.uleb128 0x3
 919 0053 0E       		.uleb128 0xe
 920 0054 3A       		.uleb128 0x3a
 921 0055 0B       		.uleb128 0xb
 922 0056 3B       		.uleb128 0x3b
 923 0057 0B       		.uleb128 0xb
 924 0058 27       		.uleb128 0x27
 925 0059 19       		.uleb128 0x19
 926 005a 11       		.uleb128 0x11
 927 005b 01       		.uleb128 0x1
 928 005c 12       		.uleb128 0x12
 929 005d 06       		.uleb128 0x6
 930 005e 40       		.uleb128 0x40
 931 005f 18       		.uleb128 0x18
 932 0060 9642     		.uleb128 0x2116
 933 0062 19       		.uleb128 0x19
 934 0063 00       		.byte	0
 935 0064 00       		.byte	0
 936 0065 09       		.uleb128 0x9
 937 0066 2E       		.uleb128 0x2e
 938 0067 01       		.byte	0x1
 939 0068 3F       		.uleb128 0x3f
 940 0069 19       		.uleb128 0x19
 941 006a 03       		.uleb128 0x3
 942 006b 0E       		.uleb128 0xe
 943 006c 3A       		.uleb128 0x3a
 944 006d 0B       		.uleb128 0xb
 945 006e 3B       		.uleb128 0x3b
 946 006f 0B       		.uleb128 0xb
 947 0070 27       		.uleb128 0x27
 948 0071 19       		.uleb128 0x19
 949 0072 11       		.uleb128 0x11
 950 0073 01       		.uleb128 0x1
 951 0074 12       		.uleb128 0x12
 952 0075 06       		.uleb128 0x6
 953 0076 40       		.uleb128 0x40
 954 0077 18       		.uleb128 0x18
 955 0078 9642     		.uleb128 0x2116
 956 007a 19       		.uleb128 0x19
 957 007b 01       		.uleb128 0x1
 958 007c 13       		.uleb128 0x13
 959 007d 00       		.byte	0
 960 007e 00       		.byte	0
 961 007f 0A       		.uleb128 0xa
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 25


 962 0080 05       		.uleb128 0x5
 963 0081 00       		.byte	0
 964 0082 03       		.uleb128 0x3
 965 0083 0E       		.uleb128 0xe
 966 0084 3A       		.uleb128 0x3a
 967 0085 0B       		.uleb128 0xb
 968 0086 3B       		.uleb128 0x3b
 969 0087 0B       		.uleb128 0xb
 970 0088 49       		.uleb128 0x49
 971 0089 13       		.uleb128 0x13
 972 008a 02       		.uleb128 0x2
 973 008b 18       		.uleb128 0x18
 974 008c 00       		.byte	0
 975 008d 00       		.byte	0
 976 008e 0B       		.uleb128 0xb
 977 008f 2E       		.uleb128 0x2e
 978 0090 01       		.byte	0x1
 979 0091 3F       		.uleb128 0x3f
 980 0092 19       		.uleb128 0x19
 981 0093 03       		.uleb128 0x3
 982 0094 0E       		.uleb128 0xe
 983 0095 3A       		.uleb128 0x3a
 984 0096 0B       		.uleb128 0xb
 985 0097 3B       		.uleb128 0x3b
 986 0098 0B       		.uleb128 0xb
 987 0099 49       		.uleb128 0x49
 988 009a 13       		.uleb128 0x13
 989 009b 3C       		.uleb128 0x3c
 990 009c 19       		.uleb128 0x19
 991 009d 01       		.uleb128 0x1
 992 009e 13       		.uleb128 0x13
 993 009f 00       		.byte	0
 994 00a0 00       		.byte	0
 995 00a1 0C       		.uleb128 0xc
 996 00a2 18       		.uleb128 0x18
 997 00a3 00       		.byte	0
 998 00a4 00       		.byte	0
 999 00a5 00       		.byte	0
 1000 00a6 0D       		.uleb128 0xd
 1001 00a7 2E       		.uleb128 0x2e
 1002 00a8 01       		.byte	0x1
 1003 00a9 3F       		.uleb128 0x3f
 1004 00aa 19       		.uleb128 0x19
 1005 00ab 03       		.uleb128 0x3
 1006 00ac 0E       		.uleb128 0xe
 1007 00ad 3A       		.uleb128 0x3a
 1008 00ae 0B       		.uleb128 0xb
 1009 00af 3B       		.uleb128 0x3b
 1010 00b0 0B       		.uleb128 0xb
 1011 00b1 49       		.uleb128 0x49
 1012 00b2 13       		.uleb128 0x13
 1013 00b3 3C       		.uleb128 0x3c
 1014 00b4 19       		.uleb128 0x19
 1015 00b5 00       		.byte	0
 1016 00b6 00       		.byte	0
 1017 00b7 0E       		.uleb128 0xe
 1018 00b8 2E       		.uleb128 0x2e
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 26


 1019 00b9 01       		.byte	0x1
 1020 00ba 3F       		.uleb128 0x3f
 1021 00bb 19       		.uleb128 0x19
 1022 00bc 03       		.uleb128 0x3
 1023 00bd 0E       		.uleb128 0xe
 1024 00be 3A       		.uleb128 0x3a
 1025 00bf 0B       		.uleb128 0xb
 1026 00c0 3B       		.uleb128 0x3b
 1027 00c1 0B       		.uleb128 0xb
 1028 00c2 27       		.uleb128 0x27
 1029 00c3 19       		.uleb128 0x19
 1030 00c4 11       		.uleb128 0x11
 1031 00c5 01       		.uleb128 0x1
 1032 00c6 12       		.uleb128 0x12
 1033 00c7 06       		.uleb128 0x6
 1034 00c8 40       		.uleb128 0x40
 1035 00c9 18       		.uleb128 0x18
 1036 00ca 9742     		.uleb128 0x2117
 1037 00cc 19       		.uleb128 0x19
 1038 00cd 01       		.uleb128 0x1
 1039 00ce 13       		.uleb128 0x13
 1040 00cf 00       		.byte	0
 1041 00d0 00       		.byte	0
 1042 00d1 0F       		.uleb128 0xf
 1043 00d2 34       		.uleb128 0x34
 1044 00d3 00       		.byte	0
 1045 00d4 03       		.uleb128 0x3
 1046 00d5 0E       		.uleb128 0xe
 1047 00d6 3A       		.uleb128 0x3a
 1048 00d7 0B       		.uleb128 0xb
 1049 00d8 3B       		.uleb128 0x3b
 1050 00d9 0B       		.uleb128 0xb
 1051 00da 49       		.uleb128 0x49
 1052 00db 13       		.uleb128 0x13
 1053 00dc 02       		.uleb128 0x2
 1054 00dd 18       		.uleb128 0x18
 1055 00de 00       		.byte	0
 1056 00df 00       		.byte	0
 1057 00e0 10       		.uleb128 0x10
 1058 00e1 2E       		.uleb128 0x2e
 1059 00e2 01       		.byte	0x1
 1060 00e3 3F       		.uleb128 0x3f
 1061 00e4 19       		.uleb128 0x19
 1062 00e5 03       		.uleb128 0x3
 1063 00e6 0E       		.uleb128 0xe
 1064 00e7 3A       		.uleb128 0x3a
 1065 00e8 0B       		.uleb128 0xb
 1066 00e9 3B       		.uleb128 0x3b
 1067 00ea 0B       		.uleb128 0xb
 1068 00eb 27       		.uleb128 0x27
 1069 00ec 19       		.uleb128 0x19
 1070 00ed 49       		.uleb128 0x49
 1071 00ee 13       		.uleb128 0x13
 1072 00ef 11       		.uleb128 0x11
 1073 00f0 01       		.uleb128 0x1
 1074 00f1 12       		.uleb128 0x12
 1075 00f2 06       		.uleb128 0x6
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 27


 1076 00f3 40       		.uleb128 0x40
 1077 00f4 18       		.uleb128 0x18
 1078 00f5 9742     		.uleb128 0x2117
 1079 00f7 19       		.uleb128 0x19
 1080 00f8 01       		.uleb128 0x1
 1081 00f9 13       		.uleb128 0x13
 1082 00fa 00       		.byte	0
 1083 00fb 00       		.byte	0
 1084 00fc 11       		.uleb128 0x11
 1085 00fd 2E       		.uleb128 0x2e
 1086 00fe 01       		.byte	0x1
 1087 00ff 3F       		.uleb128 0x3f
 1088 0100 19       		.uleb128 0x19
 1089 0101 03       		.uleb128 0x3
 1090 0102 0E       		.uleb128 0xe
 1091 0103 3A       		.uleb128 0x3a
 1092 0104 0B       		.uleb128 0xb
 1093 0105 3B       		.uleb128 0x3b
 1094 0106 05       		.uleb128 0x5
 1095 0107 27       		.uleb128 0x27
 1096 0108 19       		.uleb128 0x19
 1097 0109 11       		.uleb128 0x11
 1098 010a 01       		.uleb128 0x1
 1099 010b 12       		.uleb128 0x12
 1100 010c 06       		.uleb128 0x6
 1101 010d 40       		.uleb128 0x40
 1102 010e 18       		.uleb128 0x18
 1103 010f 9742     		.uleb128 0x2117
 1104 0111 19       		.uleb128 0x19
 1105 0112 01       		.uleb128 0x1
 1106 0113 13       		.uleb128 0x13
 1107 0114 00       		.byte	0
 1108 0115 00       		.byte	0
 1109 0116 12       		.uleb128 0x12
 1110 0117 05       		.uleb128 0x5
 1111 0118 00       		.byte	0
 1112 0119 03       		.uleb128 0x3
 1113 011a 0E       		.uleb128 0xe
 1114 011b 3A       		.uleb128 0x3a
 1115 011c 0B       		.uleb128 0xb
 1116 011d 3B       		.uleb128 0x3b
 1117 011e 05       		.uleb128 0x5
 1118 011f 49       		.uleb128 0x49
 1119 0120 13       		.uleb128 0x13
 1120 0121 02       		.uleb128 0x2
 1121 0122 18       		.uleb128 0x18
 1122 0123 00       		.byte	0
 1123 0124 00       		.byte	0
 1124 0125 13       		.uleb128 0x13
 1125 0126 2E       		.uleb128 0x2e
 1126 0127 01       		.byte	0x1
 1127 0128 3F       		.uleb128 0x3f
 1128 0129 19       		.uleb128 0x19
 1129 012a 03       		.uleb128 0x3
 1130 012b 0E       		.uleb128 0xe
 1131 012c 3A       		.uleb128 0x3a
 1132 012d 0B       		.uleb128 0xb
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 28


 1133 012e 3B       		.uleb128 0x3b
 1134 012f 05       		.uleb128 0x5
 1135 0130 27       		.uleb128 0x27
 1136 0131 19       		.uleb128 0x19
 1137 0132 49       		.uleb128 0x49
 1138 0133 13       		.uleb128 0x13
 1139 0134 11       		.uleb128 0x11
 1140 0135 01       		.uleb128 0x1
 1141 0136 12       		.uleb128 0x12
 1142 0137 06       		.uleb128 0x6
 1143 0138 40       		.uleb128 0x40
 1144 0139 18       		.uleb128 0x18
 1145 013a 9742     		.uleb128 0x2117
 1146 013c 19       		.uleb128 0x19
 1147 013d 01       		.uleb128 0x1
 1148 013e 13       		.uleb128 0x13
 1149 013f 00       		.byte	0
 1150 0140 00       		.byte	0
 1151 0141 14       		.uleb128 0x14
 1152 0142 34       		.uleb128 0x34
 1153 0143 00       		.byte	0
 1154 0144 03       		.uleb128 0x3
 1155 0145 0E       		.uleb128 0xe
 1156 0146 3A       		.uleb128 0x3a
 1157 0147 0B       		.uleb128 0xb
 1158 0148 3B       		.uleb128 0x3b
 1159 0149 05       		.uleb128 0x5
 1160 014a 49       		.uleb128 0x49
 1161 014b 13       		.uleb128 0x13
 1162 014c 02       		.uleb128 0x2
 1163 014d 18       		.uleb128 0x18
 1164 014e 00       		.byte	0
 1165 014f 00       		.byte	0
 1166 0150 15       		.uleb128 0x15
 1167 0151 2E       		.uleb128 0x2e
 1168 0152 00       		.byte	0
 1169 0153 3F       		.uleb128 0x3f
 1170 0154 19       		.uleb128 0x19
 1171 0155 03       		.uleb128 0x3
 1172 0156 0E       		.uleb128 0xe
 1173 0157 3A       		.uleb128 0x3a
 1174 0158 0B       		.uleb128 0xb
 1175 0159 3B       		.uleb128 0x3b
 1176 015a 05       		.uleb128 0x5
 1177 015b 27       		.uleb128 0x27
 1178 015c 19       		.uleb128 0x19
 1179 015d 11       		.uleb128 0x11
 1180 015e 01       		.uleb128 0x1
 1181 015f 12       		.uleb128 0x12
 1182 0160 06       		.uleb128 0x6
 1183 0161 40       		.uleb128 0x40
 1184 0162 18       		.uleb128 0x18
 1185 0163 9742     		.uleb128 0x2117
 1186 0165 19       		.uleb128 0x19
 1187 0166 00       		.byte	0
 1188 0167 00       		.byte	0
 1189 0168 16       		.uleb128 0x16
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 29


 1190 0169 2E       		.uleb128 0x2e
 1191 016a 00       		.byte	0
 1192 016b 3F       		.uleb128 0x3f
 1193 016c 19       		.uleb128 0x19
 1194 016d 03       		.uleb128 0x3
 1195 016e 0E       		.uleb128 0xe
 1196 016f 3A       		.uleb128 0x3a
 1197 0170 0B       		.uleb128 0xb
 1198 0171 3B       		.uleb128 0x3b
 1199 0172 05       		.uleb128 0x5
 1200 0173 27       		.uleb128 0x27
 1201 0174 19       		.uleb128 0x19
 1202 0175 49       		.uleb128 0x49
 1203 0176 13       		.uleb128 0x13
 1204 0177 11       		.uleb128 0x11
 1205 0178 01       		.uleb128 0x1
 1206 0179 12       		.uleb128 0x12
 1207 017a 06       		.uleb128 0x6
 1208 017b 40       		.uleb128 0x40
 1209 017c 18       		.uleb128 0x18
 1210 017d 9742     		.uleb128 0x2117
 1211 017f 19       		.uleb128 0x19
 1212 0180 00       		.byte	0
 1213 0181 00       		.byte	0
 1214 0182 00       		.byte	0
 1215              		.section	.debug_aranges,"",%progbits
 1216 0000 7C000000 		.4byte	0x7c
 1217 0004 0200     		.2byte	0x2
 1218 0006 00000000 		.4byte	.Ldebug_info0
 1219 000a 04       		.byte	0x4
 1220 000b 00       		.byte	0
 1221 000c 0000     		.2byte	0
 1222 000e 0000     		.2byte	0
 1223 0010 00000000 		.4byte	.LFB0
 1224 0014 20000000 		.4byte	.LFE0-.LFB0
 1225 0018 00000000 		.4byte	.LFB1
 1226 001c 24000000 		.4byte	.LFE1-.LFB1
 1227 0020 00000000 		.4byte	.LFB2
 1228 0024 18000000 		.4byte	.LFE2-.LFB2
 1229 0028 00000000 		.4byte	.LFB3
 1230 002c 10000000 		.4byte	.LFE3-.LFB3
 1231 0030 00000000 		.4byte	.LFB4
 1232 0034 24000000 		.4byte	.LFE4-.LFB4
 1233 0038 00000000 		.4byte	.LFB5
 1234 003c 20000000 		.4byte	.LFE5-.LFB5
 1235 0040 00000000 		.4byte	.LFB6
 1236 0044 24000000 		.4byte	.LFE6-.LFB6
 1237 0048 00000000 		.4byte	.LFB7
 1238 004c 20000000 		.4byte	.LFE7-.LFB7
 1239 0050 00000000 		.4byte	.LFB8
 1240 0054 18000000 		.4byte	.LFE8-.LFB8
 1241 0058 00000000 		.4byte	.LFB9
 1242 005c 1C000000 		.4byte	.LFE9-.LFB9
 1243 0060 00000000 		.4byte	.LFB10
 1244 0064 18000000 		.4byte	.LFE10-.LFB10
 1245 0068 00000000 		.4byte	.LFB11
 1246 006c 18000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 30


 1247 0070 00000000 		.4byte	.LFB12
 1248 0074 18000000 		.4byte	.LFE12-.LFB12
 1249 0078 00000000 		.4byte	0
 1250 007c 00000000 		.4byte	0
 1251              		.section	.debug_ranges,"",%progbits
 1252              	.Ldebug_ranges0:
 1253 0000 00000000 		.4byte	.LFB0
 1254 0004 20000000 		.4byte	.LFE0
 1255 0008 00000000 		.4byte	.LFB1
 1256 000c 24000000 		.4byte	.LFE1
 1257 0010 00000000 		.4byte	.LFB2
 1258 0014 18000000 		.4byte	.LFE2
 1259 0018 00000000 		.4byte	.LFB3
 1260 001c 10000000 		.4byte	.LFE3
 1261 0020 00000000 		.4byte	.LFB4
 1262 0024 24000000 		.4byte	.LFE4
 1263 0028 00000000 		.4byte	.LFB5
 1264 002c 20000000 		.4byte	.LFE5
 1265 0030 00000000 		.4byte	.LFB6
 1266 0034 24000000 		.4byte	.LFE6
 1267 0038 00000000 		.4byte	.LFB7
 1268 003c 20000000 		.4byte	.LFE7
 1269 0040 00000000 		.4byte	.LFB8
 1270 0044 18000000 		.4byte	.LFE8
 1271 0048 00000000 		.4byte	.LFB9
 1272 004c 1C000000 		.4byte	.LFE9
 1273 0050 00000000 		.4byte	.LFB10
 1274 0054 18000000 		.4byte	.LFE10
 1275 0058 00000000 		.4byte	.LFB11
 1276 005c 18000000 		.4byte	.LFE11
 1277 0060 00000000 		.4byte	.LFB12
 1278 0064 18000000 		.4byte	.LFE12
 1279 0068 00000000 		.4byte	0
 1280 006c 00000000 		.4byte	0
 1281              		.section	.debug_line,"",%progbits
 1282              	.Ldebug_line0:
 1283 0000 3E010000 		.section	.debug_str,"MS",%progbits,1
 1283      02004400 
 1283      00000201 
 1283      FB0E0D00 
 1283      01010101 
 1284              	.LASF17:
 1285 0000 72656733 		.ascii	"reg32\000"
 1285      3200
 1286              	.LASF34:
 1287 0006 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1287      43313120 
 1287      352E342E 
 1287      31203230 
 1287      31363036 
 1288 0039 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1288      20726576 
 1288      6973696F 
 1288      6E203233 
 1288      37373135 
 1289 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1289      66756E63 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 31


 1289      74696F6E 
 1289      2D736563 
 1289      74696F6E 
 1290              	.LASF26:
 1291 0094 4C45445F 		.ascii	"LED_ISR_SetPriority\000"
 1291      4953525F 
 1291      53657450 
 1291      72696F72 
 1291      69747900 
 1292              	.LASF36:
 1293 00a8 433A5C55 		.ascii	"C:\\Users\\marthnick\\Desktop\\F1-TestFixture _Sand"
 1293      73657273 
 1293      5C6D6172 
 1293      74686E69 
 1293      636B5C44 
 1294 00d7 626F785C 		.ascii	"box\\F1-TestFixture.cydsn\000"
 1294      46312D54 
 1294      65737446 
 1294      69787475 
 1294      72652E63 
 1295              	.LASF21:
 1296 00f0 4C45445F 		.ascii	"LED_ISR_StartEx\000"
 1296      4953525F 
 1296      53746172 
 1296      74457800 
 1297              	.LASF6:
 1298 0100 73686F72 		.ascii	"short unsigned int\000"
 1298      7420756E 
 1298      7369676E 
 1298      65642069 
 1298      6E7400
 1299              	.LASF30:
 1300 0113 4C45445F 		.ascii	"LED_ISR_Enable\000"
 1300      4953525F 
 1300      456E6162 
 1300      6C6500
 1301              	.LASF14:
 1302 0122 666C6F61 		.ascii	"float\000"
 1302      7400
 1303              	.LASF31:
 1304 0128 4C45445F 		.ascii	"LED_ISR_Disable\000"
 1304      4953525F 
 1304      44697361 
 1304      626C6500 
 1305              	.LASF4:
 1306 0138 756E7369 		.ascii	"unsigned char\000"
 1306      676E6564 
 1306      20636861 
 1306      7200
 1307              	.LASF16:
 1308 0146 72656738 		.ascii	"reg8\000"
 1308      00
 1309              	.LASF33:
 1310 014b 4C45445F 		.ascii	"LED_ISR_ClearPending\000"
 1310      4953525F 
 1310      436C6561 
 1310      7250656E 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 32


 1310      64696E67 
 1311              	.LASF8:
 1312 0160 6C6F6E67 		.ascii	"long unsigned int\000"
 1312      20756E73 
 1312      69676E65 
 1312      6420696E 
 1312      7400
 1313              	.LASF12:
 1314 0172 75696E74 		.ascii	"uint8\000"
 1314      3800
 1315              	.LASF32:
 1316 0178 4C45445F 		.ascii	"LED_ISR_SetPending\000"
 1316      4953525F 
 1316      53657450 
 1316      656E6469 
 1316      6E6700
 1317              	.LASF27:
 1318 018b 7072696F 		.ascii	"priority\000"
 1318      72697479 
 1318      00
 1319              	.LASF19:
 1320 0194 4C45445F 		.ascii	"LED_ISR_Start\000"
 1320      4953525F 
 1320      53746172 
 1320      7400
 1321              	.LASF15:
 1322 01a2 646F7562 		.ascii	"double\000"
 1322      6C6500
 1323              	.LASF37:
 1324 01a9 70726F63 		.ascii	"processLED_TimerRoutine\000"
 1324      6573734C 
 1324      45445F54 
 1324      696D6572 
 1324      526F7574 
 1325              	.LASF23:
 1326 01c1 4C45445F 		.ascii	"LED_ISR_SetVector\000"
 1326      4953525F 
 1326      53657456 
 1326      6563746F 
 1326      7200
 1327              	.LASF13:
 1328 01d3 75696E74 		.ascii	"uint32\000"
 1328      333200
 1329              	.LASF0:
 1330 01da 756E7369 		.ascii	"unsigned int\000"
 1330      676E6564 
 1330      20696E74 
 1330      00
 1331              	.LASF24:
 1332 01e7 61646472 		.ascii	"address\000"
 1332      65737300 
 1333              	.LASF9:
 1334 01ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 1334      206C6F6E 
 1334      6720756E 
 1334      7369676E 
 1334      65642069 
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 33


 1335              	.LASF18:
 1336 0206 63796973 		.ascii	"cyisraddress\000"
 1336      72616464 
 1336      72657373 
 1336      00
 1337              	.LASF38:
 1338 0213 73656E64 		.ascii	"sendVersionPacket\000"
 1338      56657273 
 1338      696F6E50 
 1338      61636B65 
 1338      7400
 1339              	.LASF10:
 1340 0225 73697A65 		.ascii	"sizetype\000"
 1340      74797065 
 1340      00
 1341              	.LASF1:
 1342 022e 6C6F6E67 		.ascii	"long long int\000"
 1342      206C6F6E 
 1342      6720696E 
 1342      7400
 1343              	.LASF11:
 1344 023c 63686172 		.ascii	"char\000"
 1344      00
 1345              	.LASF25:
 1346 0241 72616D56 		.ascii	"ramVectorTable\000"
 1346      6563746F 
 1346      72546162 
 1346      6C6500
 1347              	.LASF39:
 1348 0250 4C45445F 		.ascii	"LED_ISR_GetState\000"
 1348      4953525F 
 1348      47657453 
 1348      74617465 
 1348      00
 1349              	.LASF29:
 1350 0261 4C45445F 		.ascii	"LED_ISR_GetPriority\000"
 1350      4953525F 
 1350      47657450 
 1350      72696F72 
 1350      69747900 
 1351              	.LASF5:
 1352 0275 73686F72 		.ascii	"short int\000"
 1352      7420696E 
 1352      7400
 1353              	.LASF20:
 1354 027f 4C45445F 		.ascii	"LED_ISR_Stop\000"
 1354      4953525F 
 1354      53746F70 
 1354      00
 1355              	.LASF28:
 1356 028c 4C45445F 		.ascii	"LED_ISR_GetVector\000"
 1356      4953525F 
 1356      47657456 
 1356      6563746F 
 1356      7200
 1357              	.LASF7:
 1358 029e 6C6F6E67 		.ascii	"long int\000"
ARM GAS  C:\Users\MARTHN~1\AppData\Local\Temp\ccjmYZlA.s 			page 34


 1358      20696E74 
 1358      00
 1359              	.LASF22:
 1360 02a7 4C45445F 		.ascii	"LED_ISR_Interrupt\000"
 1360      4953525F 
 1360      496E7465 
 1360      72727570 
 1360      7400
 1361              	.LASF2:
 1362 02b9 6C6F6E67 		.ascii	"long double\000"
 1362      20646F75 
 1362      626C6500 
 1363              	.LASF3:
 1364 02c5 7369676E 		.ascii	"signed char\000"
 1364      65642063 
 1364      68617200 
 1365              	.LASF35:
 1366 02d1 47656E65 		.ascii	"Generated_Source\\PSoC5\\LED_ISR.c\000"
 1366      72617465 
 1366      645F536F 
 1366      75726365 
 1366      5C50536F 
 1367              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
